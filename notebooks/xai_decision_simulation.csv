network_load,relay_reputation,budget_utilization,recent_win_rate,prob_p_win,explanation
0.1,0.4,0.05,0.0,0.009978099900219,"{'timestamp': 1760866780.1659882, 'inputs': {'network_load': np.float64(0.1), 'relay_reputation': np.float64(0.4), 'budget_utilization': np.float64(0.05), 'recent_win_rate': 1e-09}, 'base_prob': 0.01, 'final_prob': np.float64(0.009978099900219), 'steps': [{'feature': 'network_load', 'value': np.float64(0.1), 'effect': 'multiply prob by 0.940 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.4), 'effect': 'multiply prob by 1.100 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.05), 'effect': 'multiply prob by 0.965 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': 1e-09, 'effect': 'multiply prob by 1.000 (higher recent wins -> lower prob)'}]}"
0.1,0.4,0.05,0.05,0.004989050000000001,"{'timestamp': 1760866780.1660223, 'inputs': {'network_load': np.float64(0.1), 'relay_reputation': np.float64(0.4), 'budget_utilization': np.float64(0.05), 'recent_win_rate': np.float64(0.05)}, 'base_prob': 0.01, 'final_prob': np.float64(0.004989050000000001), 'steps': [{'feature': 'network_load', 'value': np.float64(0.1), 'effect': 'multiply prob by 0.940 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.4), 'effect': 'multiply prob by 1.100 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.05), 'effect': 'multiply prob by 0.965 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.05), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.1,0.4,0.05,0.1,0.004989050000000001,"{'timestamp': 1760866780.1660516, 'inputs': {'network_load': np.float64(0.1), 'relay_reputation': np.float64(0.4), 'budget_utilization': np.float64(0.05), 'recent_win_rate': np.float64(0.1)}, 'base_prob': 0.01, 'final_prob': np.float64(0.004989050000000001), 'steps': [{'feature': 'network_load', 'value': np.float64(0.1), 'effect': 'multiply prob by 0.940 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.4), 'effect': 'multiply prob by 1.100 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.05), 'effect': 'multiply prob by 0.965 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.1), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.1,0.4,0.05,0.15,0.004989050000000001,"{'timestamp': 1760866780.1660786, 'inputs': {'network_load': np.float64(0.1), 'relay_reputation': np.float64(0.4), 'budget_utilization': np.float64(0.05), 'recent_win_rate': np.float64(0.15)}, 'base_prob': 0.01, 'final_prob': np.float64(0.004989050000000001), 'steps': [{'feature': 'network_load', 'value': np.float64(0.1), 'effect': 'multiply prob by 0.940 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.4), 'effect': 'multiply prob by 1.100 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.05), 'effect': 'multiply prob by 0.965 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.15), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.1,0.4,0.05,0.2,0.004989050000000001,"{'timestamp': 1760866780.166145, 'inputs': {'network_load': np.float64(0.1), 'relay_reputation': np.float64(0.4), 'budget_utilization': np.float64(0.05), 'recent_win_rate': np.float64(0.2)}, 'base_prob': 0.01, 'final_prob': np.float64(0.004989050000000001), 'steps': [{'feature': 'network_load', 'value': np.float64(0.1), 'effect': 'multiply prob by 0.940 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.4), 'effect': 'multiply prob by 1.100 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.05), 'effect': 'multiply prob by 0.965 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.2), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.1,0.4,0.05,0.25,0.004989050000000001,"{'timestamp': 1760866780.16627, 'inputs': {'network_load': np.float64(0.1), 'relay_reputation': np.float64(0.4), 'budget_utilization': np.float64(0.05), 'recent_win_rate': np.float64(0.25)}, 'base_prob': 0.01, 'final_prob': np.float64(0.004989050000000001), 'steps': [{'feature': 'network_load', 'value': np.float64(0.1), 'effect': 'multiply prob by 0.940 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.4), 'effect': 'multiply prob by 1.100 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.05), 'effect': 'multiply prob by 0.965 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.25), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.1,0.4,0.05,0.3,0.004989050000000001,"{'timestamp': 1760866780.166311, 'inputs': {'network_load': np.float64(0.1), 'relay_reputation': np.float64(0.4), 'budget_utilization': np.float64(0.05), 'recent_win_rate': np.float64(0.3)}, 'base_prob': 0.01, 'final_prob': np.float64(0.004989050000000001), 'steps': [{'feature': 'network_load', 'value': np.float64(0.1), 'effect': 'multiply prob by 0.940 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.4), 'effect': 'multiply prob by 1.100 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.05), 'effect': 'multiply prob by 0.965 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.3), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.1,0.4,0.16,0.0,0.009181919908180802,"{'timestamp': 1760866780.1663482, 'inputs': {'network_load': np.float64(0.1), 'relay_reputation': np.float64(0.4), 'budget_utilization': np.float64(0.16), 'recent_win_rate': 1e-09}, 'base_prob': 0.01, 'final_prob': np.float64(0.009181919908180802), 'steps': [{'feature': 'network_load', 'value': np.float64(0.1), 'effect': 'multiply prob by 0.940 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.4), 'effect': 'multiply prob by 1.100 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.16), 'effect': 'multiply prob by 0.888 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': 1e-09, 'effect': 'multiply prob by 1.000 (higher recent wins -> lower prob)'}]}"
0.1,0.4,0.16,0.05,0.004590960000000001,"{'timestamp': 1760866780.166375, 'inputs': {'network_load': np.float64(0.1), 'relay_reputation': np.float64(0.4), 'budget_utilization': np.float64(0.16), 'recent_win_rate': np.float64(0.05)}, 'base_prob': 0.01, 'final_prob': np.float64(0.004590960000000001), 'steps': [{'feature': 'network_load', 'value': np.float64(0.1), 'effect': 'multiply prob by 0.940 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.4), 'effect': 'multiply prob by 1.100 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.16), 'effect': 'multiply prob by 0.888 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.05), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.1,0.4,0.16,0.1,0.004590960000000001,"{'timestamp': 1760866780.1664014, 'inputs': {'network_load': np.float64(0.1), 'relay_reputation': np.float64(0.4), 'budget_utilization': np.float64(0.16), 'recent_win_rate': np.float64(0.1)}, 'base_prob': 0.01, 'final_prob': np.float64(0.004590960000000001), 'steps': [{'feature': 'network_load', 'value': np.float64(0.1), 'effect': 'multiply prob by 0.940 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.4), 'effect': 'multiply prob by 1.100 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.16), 'effect': 'multiply prob by 0.888 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.1), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.1,0.4,0.16,0.15,0.004590960000000001,"{'timestamp': 1760866780.1664276, 'inputs': {'network_load': np.float64(0.1), 'relay_reputation': np.float64(0.4), 'budget_utilization': np.float64(0.16), 'recent_win_rate': np.float64(0.15)}, 'base_prob': 0.01, 'final_prob': np.float64(0.004590960000000001), 'steps': [{'feature': 'network_load', 'value': np.float64(0.1), 'effect': 'multiply prob by 0.940 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.4), 'effect': 'multiply prob by 1.100 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.16), 'effect': 'multiply prob by 0.888 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.15), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.1,0.4,0.16,0.2,0.004590960000000001,"{'timestamp': 1760866780.1664586, 'inputs': {'network_load': np.float64(0.1), 'relay_reputation': np.float64(0.4), 'budget_utilization': np.float64(0.16), 'recent_win_rate': np.float64(0.2)}, 'base_prob': 0.01, 'final_prob': np.float64(0.004590960000000001), 'steps': [{'feature': 'network_load', 'value': np.float64(0.1), 'effect': 'multiply prob by 0.940 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.4), 'effect': 'multiply prob by 1.100 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.16), 'effect': 'multiply prob by 0.888 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.2), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.1,0.4,0.16,0.25,0.004590960000000001,"{'timestamp': 1760866780.1664855, 'inputs': {'network_load': np.float64(0.1), 'relay_reputation': np.float64(0.4), 'budget_utilization': np.float64(0.16), 'recent_win_rate': np.float64(0.25)}, 'base_prob': 0.01, 'final_prob': np.float64(0.004590960000000001), 'steps': [{'feature': 'network_load', 'value': np.float64(0.1), 'effect': 'multiply prob by 0.940 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.4), 'effect': 'multiply prob by 1.100 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.16), 'effect': 'multiply prob by 0.888 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.25), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.1,0.4,0.16,0.3,0.004590960000000001,"{'timestamp': 1760866780.1665125, 'inputs': {'network_load': np.float64(0.1), 'relay_reputation': np.float64(0.4), 'budget_utilization': np.float64(0.16), 'recent_win_rate': np.float64(0.3)}, 'base_prob': 0.01, 'final_prob': np.float64(0.004590960000000001), 'steps': [{'feature': 'network_load', 'value': np.float64(0.1), 'effect': 'multiply prob by 0.940 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.4), 'effect': 'multiply prob by 1.100 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.16), 'effect': 'multiply prob by 0.888 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.3), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.1,0.4,0.26,0.0,0.008458119915418803,"{'timestamp': 1760866780.1665425, 'inputs': {'network_load': np.float64(0.1), 'relay_reputation': np.float64(0.4), 'budget_utilization': np.float64(0.26), 'recent_win_rate': 1e-09}, 'base_prob': 0.01, 'final_prob': np.float64(0.008458119915418803), 'steps': [{'feature': 'network_load', 'value': np.float64(0.1), 'effect': 'multiply prob by 0.940 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.4), 'effect': 'multiply prob by 1.100 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.26), 'effect': 'multiply prob by 0.818 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': 1e-09, 'effect': 'multiply prob by 1.000 (higher recent wins -> lower prob)'}]}"
0.1,0.4,0.26,0.05,0.0042290600000000015,"{'timestamp': 1760866780.1665688, 'inputs': {'network_load': np.float64(0.1), 'relay_reputation': np.float64(0.4), 'budget_utilization': np.float64(0.26), 'recent_win_rate': np.float64(0.05)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0042290600000000015), 'steps': [{'feature': 'network_load', 'value': np.float64(0.1), 'effect': 'multiply prob by 0.940 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.4), 'effect': 'multiply prob by 1.100 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.26), 'effect': 'multiply prob by 0.818 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.05), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.1,0.4,0.26,0.1,0.0042290600000000015,"{'timestamp': 1760866780.1666842, 'inputs': {'network_load': np.float64(0.1), 'relay_reputation': np.float64(0.4), 'budget_utilization': np.float64(0.26), 'recent_win_rate': np.float64(0.1)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0042290600000000015), 'steps': [{'feature': 'network_load', 'value': np.float64(0.1), 'effect': 'multiply prob by 0.940 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.4), 'effect': 'multiply prob by 1.100 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.26), 'effect': 'multiply prob by 0.818 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.1), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.1,0.4,0.26,0.15,0.0042290600000000015,"{'timestamp': 1760866780.1667268, 'inputs': {'network_load': np.float64(0.1), 'relay_reputation': np.float64(0.4), 'budget_utilization': np.float64(0.26), 'recent_win_rate': np.float64(0.15)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0042290600000000015), 'steps': [{'feature': 'network_load', 'value': np.float64(0.1), 'effect': 'multiply prob by 0.940 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.4), 'effect': 'multiply prob by 1.100 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.26), 'effect': 'multiply prob by 0.818 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.15), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.1,0.4,0.26,0.2,0.0042290600000000015,"{'timestamp': 1760866780.166754, 'inputs': {'network_load': np.float64(0.1), 'relay_reputation': np.float64(0.4), 'budget_utilization': np.float64(0.26), 'recent_win_rate': np.float64(0.2)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0042290600000000015), 'steps': [{'feature': 'network_load', 'value': np.float64(0.1), 'effect': 'multiply prob by 0.940 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.4), 'effect': 'multiply prob by 1.100 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.26), 'effect': 'multiply prob by 0.818 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.2), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.1,0.4,0.26,0.25,0.0042290600000000015,"{'timestamp': 1760866780.1667802, 'inputs': {'network_load': np.float64(0.1), 'relay_reputation': np.float64(0.4), 'budget_utilization': np.float64(0.26), 'recent_win_rate': np.float64(0.25)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0042290600000000015), 'steps': [{'feature': 'network_load', 'value': np.float64(0.1), 'effect': 'multiply prob by 0.940 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.4), 'effect': 'multiply prob by 1.100 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.26), 'effect': 'multiply prob by 0.818 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.25), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.1,0.4,0.26,0.3,0.0042290600000000015,"{'timestamp': 1760866780.166806, 'inputs': {'network_load': np.float64(0.1), 'relay_reputation': np.float64(0.4), 'budget_utilization': np.float64(0.26), 'recent_win_rate': np.float64(0.3)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0042290600000000015), 'steps': [{'feature': 'network_load', 'value': np.float64(0.1), 'effect': 'multiply prob by 0.940 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.4), 'effect': 'multiply prob by 1.100 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.26), 'effect': 'multiply prob by 0.818 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.3), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.1,0.4,0.37,0.0,0.007661939923380602,"{'timestamp': 1760866780.1668365, 'inputs': {'network_load': np.float64(0.1), 'relay_reputation': np.float64(0.4), 'budget_utilization': np.float64(0.37), 'recent_win_rate': 1e-09}, 'base_prob': 0.01, 'final_prob': np.float64(0.007661939923380602), 'steps': [{'feature': 'network_load', 'value': np.float64(0.1), 'effect': 'multiply prob by 0.940 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.4), 'effect': 'multiply prob by 1.100 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.37), 'effect': 'multiply prob by 0.741 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': 1e-09, 'effect': 'multiply prob by 1.000 (higher recent wins -> lower prob)'}]}"
0.1,0.4,0.37,0.05,0.003830970000000001,"{'timestamp': 1760866780.1668649, 'inputs': {'network_load': np.float64(0.1), 'relay_reputation': np.float64(0.4), 'budget_utilization': np.float64(0.37), 'recent_win_rate': np.float64(0.05)}, 'base_prob': 0.01, 'final_prob': np.float64(0.003830970000000001), 'steps': [{'feature': 'network_load', 'value': np.float64(0.1), 'effect': 'multiply prob by 0.940 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.4), 'effect': 'multiply prob by 1.100 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.37), 'effect': 'multiply prob by 0.741 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.05), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.1,0.4,0.37,0.1,0.003830970000000001,"{'timestamp': 1760866780.166891, 'inputs': {'network_load': np.float64(0.1), 'relay_reputation': np.float64(0.4), 'budget_utilization': np.float64(0.37), 'recent_win_rate': np.float64(0.1)}, 'base_prob': 0.01, 'final_prob': np.float64(0.003830970000000001), 'steps': [{'feature': 'network_load', 'value': np.float64(0.1), 'effect': 'multiply prob by 0.940 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.4), 'effect': 'multiply prob by 1.100 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.37), 'effect': 'multiply prob by 0.741 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.1), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.1,0.4,0.37,0.15,0.003830970000000001,"{'timestamp': 1760866780.1669168, 'inputs': {'network_load': np.float64(0.1), 'relay_reputation': np.float64(0.4), 'budget_utilization': np.float64(0.37), 'recent_win_rate': np.float64(0.15)}, 'base_prob': 0.01, 'final_prob': np.float64(0.003830970000000001), 'steps': [{'feature': 'network_load', 'value': np.float64(0.1), 'effect': 'multiply prob by 0.940 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.4), 'effect': 'multiply prob by 1.100 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.37), 'effect': 'multiply prob by 0.741 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.15), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.1,0.4,0.37,0.2,0.003830970000000001,"{'timestamp': 1760866780.1669452, 'inputs': {'network_load': np.float64(0.1), 'relay_reputation': np.float64(0.4), 'budget_utilization': np.float64(0.37), 'recent_win_rate': np.float64(0.2)}, 'base_prob': 0.01, 'final_prob': np.float64(0.003830970000000001), 'steps': [{'feature': 'network_load', 'value': np.float64(0.1), 'effect': 'multiply prob by 0.940 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.4), 'effect': 'multiply prob by 1.100 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.37), 'effect': 'multiply prob by 0.741 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.2), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.1,0.4,0.37,0.25,0.003830970000000001,"{'timestamp': 1760866780.1669724, 'inputs': {'network_load': np.float64(0.1), 'relay_reputation': np.float64(0.4), 'budget_utilization': np.float64(0.37), 'recent_win_rate': np.float64(0.25)}, 'base_prob': 0.01, 'final_prob': np.float64(0.003830970000000001), 'steps': [{'feature': 'network_load', 'value': np.float64(0.1), 'effect': 'multiply prob by 0.940 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.4), 'effect': 'multiply prob by 1.100 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.37), 'effect': 'multiply prob by 0.741 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.25), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.1,0.4,0.37,0.3,0.003830970000000001,"{'timestamp': 1760866780.167002, 'inputs': {'network_load': np.float64(0.1), 'relay_reputation': np.float64(0.4), 'budget_utilization': np.float64(0.37), 'recent_win_rate': np.float64(0.3)}, 'base_prob': 0.01, 'final_prob': np.float64(0.003830970000000001), 'steps': [{'feature': 'network_load', 'value': np.float64(0.1), 'effect': 'multiply prob by 0.940 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.4), 'effect': 'multiply prob by 1.100 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.37), 'effect': 'multiply prob by 0.741 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.3), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.1,0.4,0.48,0.0,0.0068657599313424016,"{'timestamp': 1760866780.1670296, 'inputs': {'network_load': np.float64(0.1), 'relay_reputation': np.float64(0.4), 'budget_utilization': np.float64(0.48), 'recent_win_rate': 1e-09}, 'base_prob': 0.01, 'final_prob': np.float64(0.0068657599313424016), 'steps': [{'feature': 'network_load', 'value': np.float64(0.1), 'effect': 'multiply prob by 0.940 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.4), 'effect': 'multiply prob by 1.100 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.48), 'effect': 'multiply prob by 0.664 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': 1e-09, 'effect': 'multiply prob by 1.000 (higher recent wins -> lower prob)'}]}"
0.1,0.4,0.48,0.05,0.003432880000000001,"{'timestamp': 1760866780.1670554, 'inputs': {'network_load': np.float64(0.1), 'relay_reputation': np.float64(0.4), 'budget_utilization': np.float64(0.48), 'recent_win_rate': np.float64(0.05)}, 'base_prob': 0.01, 'final_prob': np.float64(0.003432880000000001), 'steps': [{'feature': 'network_load', 'value': np.float64(0.1), 'effect': 'multiply prob by 0.940 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.4), 'effect': 'multiply prob by 1.100 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.48), 'effect': 'multiply prob by 0.664 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.05), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.1,0.4,0.48,0.1,0.003432880000000001,"{'timestamp': 1760866780.1670809, 'inputs': {'network_load': np.float64(0.1), 'relay_reputation': np.float64(0.4), 'budget_utilization': np.float64(0.48), 'recent_win_rate': np.float64(0.1)}, 'base_prob': 0.01, 'final_prob': np.float64(0.003432880000000001), 'steps': [{'feature': 'network_load', 'value': np.float64(0.1), 'effect': 'multiply prob by 0.940 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.4), 'effect': 'multiply prob by 1.100 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.48), 'effect': 'multiply prob by 0.664 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.1), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.1,0.4,0.48,0.15,0.003432880000000001,"{'timestamp': 1760866780.1671073, 'inputs': {'network_load': np.float64(0.1), 'relay_reputation': np.float64(0.4), 'budget_utilization': np.float64(0.48), 'recent_win_rate': np.float64(0.15)}, 'base_prob': 0.01, 'final_prob': np.float64(0.003432880000000001), 'steps': [{'feature': 'network_load', 'value': np.float64(0.1), 'effect': 'multiply prob by 0.940 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.4), 'effect': 'multiply prob by 1.100 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.48), 'effect': 'multiply prob by 0.664 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.15), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.1,0.4,0.48,0.2,0.003432880000000001,"{'timestamp': 1760866780.1671355, 'inputs': {'network_load': np.float64(0.1), 'relay_reputation': np.float64(0.4), 'budget_utilization': np.float64(0.48), 'recent_win_rate': np.float64(0.2)}, 'base_prob': 0.01, 'final_prob': np.float64(0.003432880000000001), 'steps': [{'feature': 'network_load', 'value': np.float64(0.1), 'effect': 'multiply prob by 0.940 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.4), 'effect': 'multiply prob by 1.100 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.48), 'effect': 'multiply prob by 0.664 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.2), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.1,0.4,0.48,0.25,0.003432880000000001,"{'timestamp': 1760866780.167168, 'inputs': {'network_load': np.float64(0.1), 'relay_reputation': np.float64(0.4), 'budget_utilization': np.float64(0.48), 'recent_win_rate': np.float64(0.25)}, 'base_prob': 0.01, 'final_prob': np.float64(0.003432880000000001), 'steps': [{'feature': 'network_load', 'value': np.float64(0.1), 'effect': 'multiply prob by 0.940 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.4), 'effect': 'multiply prob by 1.100 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.48), 'effect': 'multiply prob by 0.664 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.25), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.1,0.4,0.48,0.3,0.003432880000000001,"{'timestamp': 1760866780.1671953, 'inputs': {'network_load': np.float64(0.1), 'relay_reputation': np.float64(0.4), 'budget_utilization': np.float64(0.48), 'recent_win_rate': np.float64(0.3)}, 'base_prob': 0.01, 'final_prob': np.float64(0.003432880000000001), 'steps': [{'feature': 'network_load', 'value': np.float64(0.1), 'effect': 'multiply prob by 0.940 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.4), 'effect': 'multiply prob by 1.100 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.48), 'effect': 'multiply prob by 0.664 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.3), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.1,0.4,0.59,0.0,0.006069579939304201,"{'timestamp': 1760866780.1672232, 'inputs': {'network_load': np.float64(0.1), 'relay_reputation': np.float64(0.4), 'budget_utilization': np.float64(0.59), 'recent_win_rate': 1e-09}, 'base_prob': 0.01, 'final_prob': np.float64(0.006069579939304201), 'steps': [{'feature': 'network_load', 'value': np.float64(0.1), 'effect': 'multiply prob by 0.940 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.4), 'effect': 'multiply prob by 1.100 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.59), 'effect': 'multiply prob by 0.587 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': 1e-09, 'effect': 'multiply prob by 1.000 (higher recent wins -> lower prob)'}]}"
0.1,0.4,0.59,0.05,0.0030347900000000003,"{'timestamp': 1760866780.1672528, 'inputs': {'network_load': np.float64(0.1), 'relay_reputation': np.float64(0.4), 'budget_utilization': np.float64(0.59), 'recent_win_rate': np.float64(0.05)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0030347900000000003), 'steps': [{'feature': 'network_load', 'value': np.float64(0.1), 'effect': 'multiply prob by 0.940 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.4), 'effect': 'multiply prob by 1.100 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.59), 'effect': 'multiply prob by 0.587 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.05), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.1,0.4,0.59,0.1,0.0030347900000000003,"{'timestamp': 1760866780.167278, 'inputs': {'network_load': np.float64(0.1), 'relay_reputation': np.float64(0.4), 'budget_utilization': np.float64(0.59), 'recent_win_rate': np.float64(0.1)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0030347900000000003), 'steps': [{'feature': 'network_load', 'value': np.float64(0.1), 'effect': 'multiply prob by 0.940 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.4), 'effect': 'multiply prob by 1.100 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.59), 'effect': 'multiply prob by 0.587 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.1), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.1,0.4,0.59,0.15,0.0030347900000000003,"{'timestamp': 1760866780.167309, 'inputs': {'network_load': np.float64(0.1), 'relay_reputation': np.float64(0.4), 'budget_utilization': np.float64(0.59), 'recent_win_rate': np.float64(0.15)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0030347900000000003), 'steps': [{'feature': 'network_load', 'value': np.float64(0.1), 'effect': 'multiply prob by 0.940 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.4), 'effect': 'multiply prob by 1.100 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.59), 'effect': 'multiply prob by 0.587 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.15), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.1,0.4,0.59,0.2,0.0030347900000000003,"{'timestamp': 1760866780.1673348, 'inputs': {'network_load': np.float64(0.1), 'relay_reputation': np.float64(0.4), 'budget_utilization': np.float64(0.59), 'recent_win_rate': np.float64(0.2)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0030347900000000003), 'steps': [{'feature': 'network_load', 'value': np.float64(0.1), 'effect': 'multiply prob by 0.940 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.4), 'effect': 'multiply prob by 1.100 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.59), 'effect': 'multiply prob by 0.587 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.2), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.1,0.4,0.59,0.25,0.0030347900000000003,"{'timestamp': 1760866780.1673605, 'inputs': {'network_load': np.float64(0.1), 'relay_reputation': np.float64(0.4), 'budget_utilization': np.float64(0.59), 'recent_win_rate': np.float64(0.25)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0030347900000000003), 'steps': [{'feature': 'network_load', 'value': np.float64(0.1), 'effect': 'multiply prob by 0.940 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.4), 'effect': 'multiply prob by 1.100 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.59), 'effect': 'multiply prob by 0.587 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.25), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.1,0.4,0.59,0.3,0.0030347900000000003,"{'timestamp': 1760866780.1673887, 'inputs': {'network_load': np.float64(0.1), 'relay_reputation': np.float64(0.4), 'budget_utilization': np.float64(0.59), 'recent_win_rate': np.float64(0.3)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0030347900000000003), 'steps': [{'feature': 'network_load', 'value': np.float64(0.1), 'effect': 'multiply prob by 0.940 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.4), 'effect': 'multiply prob by 1.100 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.59), 'effect': 'multiply prob by 0.587 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.3), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.1,0.4,0.69,0.0,0.0053457799465422015,"{'timestamp': 1760866780.167449, 'inputs': {'network_load': np.float64(0.1), 'relay_reputation': np.float64(0.4), 'budget_utilization': np.float64(0.69), 'recent_win_rate': 1e-09}, 'base_prob': 0.01, 'final_prob': np.float64(0.0053457799465422015), 'steps': [{'feature': 'network_load', 'value': np.float64(0.1), 'effect': 'multiply prob by 0.940 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.4), 'effect': 'multiply prob by 1.100 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.69), 'effect': 'multiply prob by 0.517 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': 1e-09, 'effect': 'multiply prob by 1.000 (higher recent wins -> lower prob)'}]}"
0.1,0.4,0.69,0.05,0.002672890000000001,"{'timestamp': 1760866780.167483, 'inputs': {'network_load': np.float64(0.1), 'relay_reputation': np.float64(0.4), 'budget_utilization': np.float64(0.69), 'recent_win_rate': np.float64(0.05)}, 'base_prob': 0.01, 'final_prob': np.float64(0.002672890000000001), 'steps': [{'feature': 'network_load', 'value': np.float64(0.1), 'effect': 'multiply prob by 0.940 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.4), 'effect': 'multiply prob by 1.100 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.69), 'effect': 'multiply prob by 0.517 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.05), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.1,0.4,0.69,0.1,0.002672890000000001,"{'timestamp': 1760866780.167509, 'inputs': {'network_load': np.float64(0.1), 'relay_reputation': np.float64(0.4), 'budget_utilization': np.float64(0.69), 'recent_win_rate': np.float64(0.1)}, 'base_prob': 0.01, 'final_prob': np.float64(0.002672890000000001), 'steps': [{'feature': 'network_load', 'value': np.float64(0.1), 'effect': 'multiply prob by 0.940 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.4), 'effect': 'multiply prob by 1.100 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.69), 'effect': 'multiply prob by 0.517 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.1), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.1,0.4,0.69,0.15,0.002672890000000001,"{'timestamp': 1760866780.1675344, 'inputs': {'network_load': np.float64(0.1), 'relay_reputation': np.float64(0.4), 'budget_utilization': np.float64(0.69), 'recent_win_rate': np.float64(0.15)}, 'base_prob': 0.01, 'final_prob': np.float64(0.002672890000000001), 'steps': [{'feature': 'network_load', 'value': np.float64(0.1), 'effect': 'multiply prob by 0.940 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.4), 'effect': 'multiply prob by 1.100 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.69), 'effect': 'multiply prob by 0.517 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.15), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.1,0.4,0.69,0.2,0.002672890000000001,"{'timestamp': 1760866780.1675596, 'inputs': {'network_load': np.float64(0.1), 'relay_reputation': np.float64(0.4), 'budget_utilization': np.float64(0.69), 'recent_win_rate': np.float64(0.2)}, 'base_prob': 0.01, 'final_prob': np.float64(0.002672890000000001), 'steps': [{'feature': 'network_load', 'value': np.float64(0.1), 'effect': 'multiply prob by 0.940 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.4), 'effect': 'multiply prob by 1.100 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.69), 'effect': 'multiply prob by 0.517 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.2), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.1,0.4,0.69,0.25,0.002672890000000001,"{'timestamp': 1760866780.1675847, 'inputs': {'network_load': np.float64(0.1), 'relay_reputation': np.float64(0.4), 'budget_utilization': np.float64(0.69), 'recent_win_rate': np.float64(0.25)}, 'base_prob': 0.01, 'final_prob': np.float64(0.002672890000000001), 'steps': [{'feature': 'network_load', 'value': np.float64(0.1), 'effect': 'multiply prob by 0.940 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.4), 'effect': 'multiply prob by 1.100 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.69), 'effect': 'multiply prob by 0.517 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.25), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.1,0.4,0.69,0.3,0.002672890000000001,"{'timestamp': 1760866780.1676097, 'inputs': {'network_load': np.float64(0.1), 'relay_reputation': np.float64(0.4), 'budget_utilization': np.float64(0.69), 'recent_win_rate': np.float64(0.3)}, 'base_prob': 0.01, 'final_prob': np.float64(0.002672890000000001), 'steps': [{'feature': 'network_load', 'value': np.float64(0.1), 'effect': 'multiply prob by 0.940 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.4), 'effect': 'multiply prob by 1.100 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.69), 'effect': 'multiply prob by 0.517 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.3), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.1,0.4,0.8,0.0,0.0045495999545040015,"{'timestamp': 1760866780.1677005, 'inputs': {'network_load': np.float64(0.1), 'relay_reputation': np.float64(0.4), 'budget_utilization': np.float64(0.8), 'recent_win_rate': 1e-09}, 'base_prob': 0.01, 'final_prob': np.float64(0.0045495999545040015), 'steps': [{'feature': 'network_load', 'value': np.float64(0.1), 'effect': 'multiply prob by 0.940 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.4), 'effect': 'multiply prob by 1.100 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.8), 'effect': 'multiply prob by 0.440 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': 1e-09, 'effect': 'multiply prob by 1.000 (higher recent wins -> lower prob)'}]}"
0.1,0.4,0.8,0.05,0.002274800000000001,"{'timestamp': 1760866780.1677275, 'inputs': {'network_load': np.float64(0.1), 'relay_reputation': np.float64(0.4), 'budget_utilization': np.float64(0.8), 'recent_win_rate': np.float64(0.05)}, 'base_prob': 0.01, 'final_prob': np.float64(0.002274800000000001), 'steps': [{'feature': 'network_load', 'value': np.float64(0.1), 'effect': 'multiply prob by 0.940 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.4), 'effect': 'multiply prob by 1.100 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.8), 'effect': 'multiply prob by 0.440 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.05), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.1,0.4,0.8,0.1,0.002274800000000001,"{'timestamp': 1760866780.1677527, 'inputs': {'network_load': np.float64(0.1), 'relay_reputation': np.float64(0.4), 'budget_utilization': np.float64(0.8), 'recent_win_rate': np.float64(0.1)}, 'base_prob': 0.01, 'final_prob': np.float64(0.002274800000000001), 'steps': [{'feature': 'network_load', 'value': np.float64(0.1), 'effect': 'multiply prob by 0.940 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.4), 'effect': 'multiply prob by 1.100 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.8), 'effect': 'multiply prob by 0.440 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.1), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.1,0.4,0.8,0.15,0.002274800000000001,"{'timestamp': 1760866780.1677823, 'inputs': {'network_load': np.float64(0.1), 'relay_reputation': np.float64(0.4), 'budget_utilization': np.float64(0.8), 'recent_win_rate': np.float64(0.15)}, 'base_prob': 0.01, 'final_prob': np.float64(0.002274800000000001), 'steps': [{'feature': 'network_load', 'value': np.float64(0.1), 'effect': 'multiply prob by 0.940 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.4), 'effect': 'multiply prob by 1.100 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.8), 'effect': 'multiply prob by 0.440 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.15), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.1,0.4,0.8,0.2,0.002274800000000001,"{'timestamp': 1760866780.1678083, 'inputs': {'network_load': np.float64(0.1), 'relay_reputation': np.float64(0.4), 'budget_utilization': np.float64(0.8), 'recent_win_rate': np.float64(0.2)}, 'base_prob': 0.01, 'final_prob': np.float64(0.002274800000000001), 'steps': [{'feature': 'network_load', 'value': np.float64(0.1), 'effect': 'multiply prob by 0.940 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.4), 'effect': 'multiply prob by 1.100 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.8), 'effect': 'multiply prob by 0.440 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.2), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.1,0.4,0.8,0.25,0.002274800000000001,"{'timestamp': 1760866780.1678355, 'inputs': {'network_load': np.float64(0.1), 'relay_reputation': np.float64(0.4), 'budget_utilization': np.float64(0.8), 'recent_win_rate': np.float64(0.25)}, 'base_prob': 0.01, 'final_prob': np.float64(0.002274800000000001), 'steps': [{'feature': 'network_load', 'value': np.float64(0.1), 'effect': 'multiply prob by 0.940 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.4), 'effect': 'multiply prob by 1.100 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.8), 'effect': 'multiply prob by 0.440 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.25), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.1,0.4,0.8,0.3,0.002274800000000001,"{'timestamp': 1760866780.1678607, 'inputs': {'network_load': np.float64(0.1), 'relay_reputation': np.float64(0.4), 'budget_utilization': np.float64(0.8), 'recent_win_rate': np.float64(0.3)}, 'base_prob': 0.01, 'final_prob': np.float64(0.002274800000000001), 'steps': [{'feature': 'network_load', 'value': np.float64(0.1), 'effect': 'multiply prob by 0.940 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.4), 'effect': 'multiply prob by 1.100 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.8), 'effect': 'multiply prob by 0.440 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.3), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.1,0.51,0.05,0.0,0.01147481488525185,"{'timestamp': 1760866780.1678889, 'inputs': {'network_load': np.float64(0.1), 'relay_reputation': np.float64(0.51), 'budget_utilization': np.float64(0.05), 'recent_win_rate': 1e-09}, 'base_prob': 0.01, 'final_prob': np.float64(0.01147481488525185), 'steps': [{'feature': 'network_load', 'value': np.float64(0.1), 'effect': 'multiply prob by 0.940 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.51), 'effect': 'multiply prob by 1.265 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.05), 'effect': 'multiply prob by 0.965 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': 1e-09, 'effect': 'multiply prob by 1.000 (higher recent wins -> lower prob)'}]}"
0.1,0.51,0.05,0.05,0.0057374075000000005,"{'timestamp': 1760866780.1679187, 'inputs': {'network_load': np.float64(0.1), 'relay_reputation': np.float64(0.51), 'budget_utilization': np.float64(0.05), 'recent_win_rate': np.float64(0.05)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0057374075000000005), 'steps': [{'feature': 'network_load', 'value': np.float64(0.1), 'effect': 'multiply prob by 0.940 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.51), 'effect': 'multiply prob by 1.265 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.05), 'effect': 'multiply prob by 0.965 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.05), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.1,0.51,0.05,0.1,0.0057374075000000005,"{'timestamp': 1760866780.167948, 'inputs': {'network_load': np.float64(0.1), 'relay_reputation': np.float64(0.51), 'budget_utilization': np.float64(0.05), 'recent_win_rate': np.float64(0.1)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0057374075000000005), 'steps': [{'feature': 'network_load', 'value': np.float64(0.1), 'effect': 'multiply prob by 0.940 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.51), 'effect': 'multiply prob by 1.265 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.05), 'effect': 'multiply prob by 0.965 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.1), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.1,0.51,0.05,0.15,0.0057374075000000005,"{'timestamp': 1760866780.1679752, 'inputs': {'network_load': np.float64(0.1), 'relay_reputation': np.float64(0.51), 'budget_utilization': np.float64(0.05), 'recent_win_rate': np.float64(0.15)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0057374075000000005), 'steps': [{'feature': 'network_load', 'value': np.float64(0.1), 'effect': 'multiply prob by 0.940 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.51), 'effect': 'multiply prob by 1.265 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.05), 'effect': 'multiply prob by 0.965 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.15), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.1,0.51,0.05,0.2,0.0057374075000000005,"{'timestamp': 1760866780.1680005, 'inputs': {'network_load': np.float64(0.1), 'relay_reputation': np.float64(0.51), 'budget_utilization': np.float64(0.05), 'recent_win_rate': np.float64(0.2)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0057374075000000005), 'steps': [{'feature': 'network_load', 'value': np.float64(0.1), 'effect': 'multiply prob by 0.940 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.51), 'effect': 'multiply prob by 1.265 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.05), 'effect': 'multiply prob by 0.965 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.2), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.1,0.51,0.05,0.25,0.0057374075000000005,"{'timestamp': 1760866780.168026, 'inputs': {'network_load': np.float64(0.1), 'relay_reputation': np.float64(0.51), 'budget_utilization': np.float64(0.05), 'recent_win_rate': np.float64(0.25)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0057374075000000005), 'steps': [{'feature': 'network_load', 'value': np.float64(0.1), 'effect': 'multiply prob by 0.940 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.51), 'effect': 'multiply prob by 1.265 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.05), 'effect': 'multiply prob by 0.965 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.25), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.1,0.51,0.05,0.3,0.0057374075000000005,"{'timestamp': 1760866780.168051, 'inputs': {'network_load': np.float64(0.1), 'relay_reputation': np.float64(0.51), 'budget_utilization': np.float64(0.05), 'recent_win_rate': np.float64(0.3)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0057374075000000005), 'steps': [{'feature': 'network_load', 'value': np.float64(0.1), 'effect': 'multiply prob by 0.940 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.51), 'effect': 'multiply prob by 1.265 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.05), 'effect': 'multiply prob by 0.965 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.3), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.1,0.51,0.16,0.0,0.010559207894407922,"{'timestamp': 1760866780.1680777, 'inputs': {'network_load': np.float64(0.1), 'relay_reputation': np.float64(0.51), 'budget_utilization': np.float64(0.16), 'recent_win_rate': 1e-09}, 'base_prob': 0.01, 'final_prob': np.float64(0.010559207894407922), 'steps': [{'feature': 'network_load', 'value': np.float64(0.1), 'effect': 'multiply prob by 0.940 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.51), 'effect': 'multiply prob by 1.265 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.16), 'effect': 'multiply prob by 0.888 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': 1e-09, 'effect': 'multiply prob by 1.000 (higher recent wins -> lower prob)'}]}"
0.1,0.51,0.16,0.05,0.005279604000000001,"{'timestamp': 1760866780.1681051, 'inputs': {'network_load': np.float64(0.1), 'relay_reputation': np.float64(0.51), 'budget_utilization': np.float64(0.16), 'recent_win_rate': np.float64(0.05)}, 'base_prob': 0.01, 'final_prob': np.float64(0.005279604000000001), 'steps': [{'feature': 'network_load', 'value': np.float64(0.1), 'effect': 'multiply prob by 0.940 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.51), 'effect': 'multiply prob by 1.265 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.16), 'effect': 'multiply prob by 0.888 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.05), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.1,0.51,0.16,0.1,0.005279604000000001,"{'timestamp': 1760866780.1681328, 'inputs': {'network_load': np.float64(0.1), 'relay_reputation': np.float64(0.51), 'budget_utilization': np.float64(0.16), 'recent_win_rate': np.float64(0.1)}, 'base_prob': 0.01, 'final_prob': np.float64(0.005279604000000001), 'steps': [{'feature': 'network_load', 'value': np.float64(0.1), 'effect': 'multiply prob by 0.940 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.51), 'effect': 'multiply prob by 1.265 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.16), 'effect': 'multiply prob by 0.888 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.1), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.1,0.51,0.16,0.15,0.005279604000000001,"{'timestamp': 1760866780.1682138, 'inputs': {'network_load': np.float64(0.1), 'relay_reputation': np.float64(0.51), 'budget_utilization': np.float64(0.16), 'recent_win_rate': np.float64(0.15)}, 'base_prob': 0.01, 'final_prob': np.float64(0.005279604000000001), 'steps': [{'feature': 'network_load', 'value': np.float64(0.1), 'effect': 'multiply prob by 0.940 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.51), 'effect': 'multiply prob by 1.265 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.16), 'effect': 'multiply prob by 0.888 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.15), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.1,0.51,0.16,0.2,0.005279604000000001,"{'timestamp': 1760866780.1682546, 'inputs': {'network_load': np.float64(0.1), 'relay_reputation': np.float64(0.51), 'budget_utilization': np.float64(0.16), 'recent_win_rate': np.float64(0.2)}, 'base_prob': 0.01, 'final_prob': np.float64(0.005279604000000001), 'steps': [{'feature': 'network_load', 'value': np.float64(0.1), 'effect': 'multiply prob by 0.940 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.51), 'effect': 'multiply prob by 1.265 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.16), 'effect': 'multiply prob by 0.888 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.2), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.1,0.51,0.16,0.25,0.005279604000000001,"{'timestamp': 1760866780.168281, 'inputs': {'network_load': np.float64(0.1), 'relay_reputation': np.float64(0.51), 'budget_utilization': np.float64(0.16), 'recent_win_rate': np.float64(0.25)}, 'base_prob': 0.01, 'final_prob': np.float64(0.005279604000000001), 'steps': [{'feature': 'network_load', 'value': np.float64(0.1), 'effect': 'multiply prob by 0.940 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.51), 'effect': 'multiply prob by 1.265 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.16), 'effect': 'multiply prob by 0.888 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.25), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.1,0.51,0.16,0.3,0.005279604000000001,"{'timestamp': 1760866780.1683064, 'inputs': {'network_load': np.float64(0.1), 'relay_reputation': np.float64(0.51), 'budget_utilization': np.float64(0.16), 'recent_win_rate': np.float64(0.3)}, 'base_prob': 0.01, 'final_prob': np.float64(0.005279604000000001), 'steps': [{'feature': 'network_load', 'value': np.float64(0.1), 'effect': 'multiply prob by 0.940 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.51), 'effect': 'multiply prob by 1.265 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.16), 'effect': 'multiply prob by 0.888 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.3), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.1,0.51,0.26,0.0,0.009726837902731622,"{'timestamp': 1760866780.1683438, 'inputs': {'network_load': np.float64(0.1), 'relay_reputation': np.float64(0.51), 'budget_utilization': np.float64(0.26), 'recent_win_rate': 1e-09}, 'base_prob': 0.01, 'final_prob': np.float64(0.009726837902731622), 'steps': [{'feature': 'network_load', 'value': np.float64(0.1), 'effect': 'multiply prob by 0.940 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.51), 'effect': 'multiply prob by 1.265 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.26), 'effect': 'multiply prob by 0.818 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': 1e-09, 'effect': 'multiply prob by 1.000 (higher recent wins -> lower prob)'}]}"
0.1,0.51,0.26,0.05,0.004863419000000002,"{'timestamp': 1760866780.1683693, 'inputs': {'network_load': np.float64(0.1), 'relay_reputation': np.float64(0.51), 'budget_utilization': np.float64(0.26), 'recent_win_rate': np.float64(0.05)}, 'base_prob': 0.01, 'final_prob': np.float64(0.004863419000000002), 'steps': [{'feature': 'network_load', 'value': np.float64(0.1), 'effect': 'multiply prob by 0.940 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.51), 'effect': 'multiply prob by 1.265 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.26), 'effect': 'multiply prob by 0.818 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.05), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.1,0.51,0.26,0.1,0.004863419000000002,"{'timestamp': 1760866780.1683948, 'inputs': {'network_load': np.float64(0.1), 'relay_reputation': np.float64(0.51), 'budget_utilization': np.float64(0.26), 'recent_win_rate': np.float64(0.1)}, 'base_prob': 0.01, 'final_prob': np.float64(0.004863419000000002), 'steps': [{'feature': 'network_load', 'value': np.float64(0.1), 'effect': 'multiply prob by 0.940 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.51), 'effect': 'multiply prob by 1.265 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.26), 'effect': 'multiply prob by 0.818 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.1), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.1,0.51,0.26,0.15,0.004863419000000002,"{'timestamp': 1760866780.168422, 'inputs': {'network_load': np.float64(0.1), 'relay_reputation': np.float64(0.51), 'budget_utilization': np.float64(0.26), 'recent_win_rate': np.float64(0.15)}, 'base_prob': 0.01, 'final_prob': np.float64(0.004863419000000002), 'steps': [{'feature': 'network_load', 'value': np.float64(0.1), 'effect': 'multiply prob by 0.940 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.51), 'effect': 'multiply prob by 1.265 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.26), 'effect': 'multiply prob by 0.818 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.15), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.1,0.51,0.26,0.2,0.004863419000000002,"{'timestamp': 1760866780.168449, 'inputs': {'network_load': np.float64(0.1), 'relay_reputation': np.float64(0.51), 'budget_utilization': np.float64(0.26), 'recent_win_rate': np.float64(0.2)}, 'base_prob': 0.01, 'final_prob': np.float64(0.004863419000000002), 'steps': [{'feature': 'network_load', 'value': np.float64(0.1), 'effect': 'multiply prob by 0.940 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.51), 'effect': 'multiply prob by 1.265 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.26), 'effect': 'multiply prob by 0.818 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.2), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.1,0.51,0.26,0.25,0.004863419000000002,"{'timestamp': 1760866780.1685317, 'inputs': {'network_load': np.float64(0.1), 'relay_reputation': np.float64(0.51), 'budget_utilization': np.float64(0.26), 'recent_win_rate': np.float64(0.25)}, 'base_prob': 0.01, 'final_prob': np.float64(0.004863419000000002), 'steps': [{'feature': 'network_load', 'value': np.float64(0.1), 'effect': 'multiply prob by 0.940 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.51), 'effect': 'multiply prob by 1.265 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.26), 'effect': 'multiply prob by 0.818 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.25), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.1,0.51,0.26,0.3,0.004863419000000002,"{'timestamp': 1760866780.1685588, 'inputs': {'network_load': np.float64(0.1), 'relay_reputation': np.float64(0.51), 'budget_utilization': np.float64(0.26), 'recent_win_rate': np.float64(0.3)}, 'base_prob': 0.01, 'final_prob': np.float64(0.004863419000000002), 'steps': [{'feature': 'network_load', 'value': np.float64(0.1), 'effect': 'multiply prob by 0.940 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.51), 'effect': 'multiply prob by 1.265 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.26), 'effect': 'multiply prob by 0.818 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.3), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.1,0.51,0.37,0.0,0.00881123091188769,"{'timestamp': 1760866780.1685896, 'inputs': {'network_load': np.float64(0.1), 'relay_reputation': np.float64(0.51), 'budget_utilization': np.float64(0.37), 'recent_win_rate': 1e-09}, 'base_prob': 0.01, 'final_prob': np.float64(0.00881123091188769), 'steps': [{'feature': 'network_load', 'value': np.float64(0.1), 'effect': 'multiply prob by 0.940 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.51), 'effect': 'multiply prob by 1.265 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.37), 'effect': 'multiply prob by 0.741 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': 1e-09, 'effect': 'multiply prob by 1.000 (higher recent wins -> lower prob)'}]}"
0.1,0.51,0.37,0.05,0.0044056155000000005,"{'timestamp': 1760866780.1686156, 'inputs': {'network_load': np.float64(0.1), 'relay_reputation': np.float64(0.51), 'budget_utilization': np.float64(0.37), 'recent_win_rate': np.float64(0.05)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0044056155000000005), 'steps': [{'feature': 'network_load', 'value': np.float64(0.1), 'effect': 'multiply prob by 0.940 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.51), 'effect': 'multiply prob by 1.265 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.37), 'effect': 'multiply prob by 0.741 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.05), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.1,0.51,0.37,0.1,0.0044056155000000005,"{'timestamp': 1760866780.1686447, 'inputs': {'network_load': np.float64(0.1), 'relay_reputation': np.float64(0.51), 'budget_utilization': np.float64(0.37), 'recent_win_rate': np.float64(0.1)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0044056155000000005), 'steps': [{'feature': 'network_load', 'value': np.float64(0.1), 'effect': 'multiply prob by 0.940 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.51), 'effect': 'multiply prob by 1.265 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.37), 'effect': 'multiply prob by 0.741 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.1), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.1,0.51,0.37,0.15,0.0044056155000000005,"{'timestamp': 1760866780.168672, 'inputs': {'network_load': np.float64(0.1), 'relay_reputation': np.float64(0.51), 'budget_utilization': np.float64(0.37), 'recent_win_rate': np.float64(0.15)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0044056155000000005), 'steps': [{'feature': 'network_load', 'value': np.float64(0.1), 'effect': 'multiply prob by 0.940 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.51), 'effect': 'multiply prob by 1.265 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.37), 'effect': 'multiply prob by 0.741 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.15), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.1,0.51,0.37,0.2,0.0044056155000000005,"{'timestamp': 1760866780.1686997, 'inputs': {'network_load': np.float64(0.1), 'relay_reputation': np.float64(0.51), 'budget_utilization': np.float64(0.37), 'recent_win_rate': np.float64(0.2)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0044056155000000005), 'steps': [{'feature': 'network_load', 'value': np.float64(0.1), 'effect': 'multiply prob by 0.940 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.51), 'effect': 'multiply prob by 1.265 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.37), 'effect': 'multiply prob by 0.741 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.2), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.1,0.51,0.37,0.25,0.0044056155000000005,"{'timestamp': 1760866780.168725, 'inputs': {'network_load': np.float64(0.1), 'relay_reputation': np.float64(0.51), 'budget_utilization': np.float64(0.37), 'recent_win_rate': np.float64(0.25)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0044056155000000005), 'steps': [{'feature': 'network_load', 'value': np.float64(0.1), 'effect': 'multiply prob by 0.940 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.51), 'effect': 'multiply prob by 1.265 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.37), 'effect': 'multiply prob by 0.741 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.25), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.1,0.51,0.37,0.3,0.0044056155000000005,"{'timestamp': 1760866780.1687505, 'inputs': {'network_load': np.float64(0.1), 'relay_reputation': np.float64(0.51), 'budget_utilization': np.float64(0.37), 'recent_win_rate': np.float64(0.3)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0044056155000000005), 'steps': [{'feature': 'network_load', 'value': np.float64(0.1), 'effect': 'multiply prob by 0.940 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.51), 'effect': 'multiply prob by 1.265 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.37), 'effect': 'multiply prob by 0.741 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.3), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.1,0.51,0.48,0.0,0.007895623921043761,"{'timestamp': 1760866780.1687775, 'inputs': {'network_load': np.float64(0.1), 'relay_reputation': np.float64(0.51), 'budget_utilization': np.float64(0.48), 'recent_win_rate': 1e-09}, 'base_prob': 0.01, 'final_prob': np.float64(0.007895623921043761), 'steps': [{'feature': 'network_load', 'value': np.float64(0.1), 'effect': 'multiply prob by 0.940 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.51), 'effect': 'multiply prob by 1.265 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.48), 'effect': 'multiply prob by 0.664 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': 1e-09, 'effect': 'multiply prob by 1.000 (higher recent wins -> lower prob)'}]}"
0.1,0.51,0.48,0.05,0.003947812000000001,"{'timestamp': 1760866780.168803, 'inputs': {'network_load': np.float64(0.1), 'relay_reputation': np.float64(0.51), 'budget_utilization': np.float64(0.48), 'recent_win_rate': np.float64(0.05)}, 'base_prob': 0.01, 'final_prob': np.float64(0.003947812000000001), 'steps': [{'feature': 'network_load', 'value': np.float64(0.1), 'effect': 'multiply prob by 0.940 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.51), 'effect': 'multiply prob by 1.265 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.48), 'effect': 'multiply prob by 0.664 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.05), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.1,0.51,0.48,0.1,0.003947812000000001,"{'timestamp': 1760866780.1688306, 'inputs': {'network_load': np.float64(0.1), 'relay_reputation': np.float64(0.51), 'budget_utilization': np.float64(0.48), 'recent_win_rate': np.float64(0.1)}, 'base_prob': 0.01, 'final_prob': np.float64(0.003947812000000001), 'steps': [{'feature': 'network_load', 'value': np.float64(0.1), 'effect': 'multiply prob by 0.940 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.51), 'effect': 'multiply prob by 1.265 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.48), 'effect': 'multiply prob by 0.664 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.1), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.1,0.51,0.48,0.15,0.003947812000000001,"{'timestamp': 1760866780.1688564, 'inputs': {'network_load': np.float64(0.1), 'relay_reputation': np.float64(0.51), 'budget_utilization': np.float64(0.48), 'recent_win_rate': np.float64(0.15)}, 'base_prob': 0.01, 'final_prob': np.float64(0.003947812000000001), 'steps': [{'feature': 'network_load', 'value': np.float64(0.1), 'effect': 'multiply prob by 0.940 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.51), 'effect': 'multiply prob by 1.265 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.48), 'effect': 'multiply prob by 0.664 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.15), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.1,0.51,0.48,0.2,0.003947812000000001,"{'timestamp': 1760866780.168883, 'inputs': {'network_load': np.float64(0.1), 'relay_reputation': np.float64(0.51), 'budget_utilization': np.float64(0.48), 'recent_win_rate': np.float64(0.2)}, 'base_prob': 0.01, 'final_prob': np.float64(0.003947812000000001), 'steps': [{'feature': 'network_load', 'value': np.float64(0.1), 'effect': 'multiply prob by 0.940 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.51), 'effect': 'multiply prob by 1.265 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.48), 'effect': 'multiply prob by 0.664 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.2), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.1,0.51,0.48,0.25,0.003947812000000001,"{'timestamp': 1760866780.1689126, 'inputs': {'network_load': np.float64(0.1), 'relay_reputation': np.float64(0.51), 'budget_utilization': np.float64(0.48), 'recent_win_rate': np.float64(0.25)}, 'base_prob': 0.01, 'final_prob': np.float64(0.003947812000000001), 'steps': [{'feature': 'network_load', 'value': np.float64(0.1), 'effect': 'multiply prob by 0.940 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.51), 'effect': 'multiply prob by 1.265 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.48), 'effect': 'multiply prob by 0.664 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.25), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.1,0.51,0.48,0.3,0.003947812000000001,"{'timestamp': 1760866780.16894, 'inputs': {'network_load': np.float64(0.1), 'relay_reputation': np.float64(0.51), 'budget_utilization': np.float64(0.48), 'recent_win_rate': np.float64(0.3)}, 'base_prob': 0.01, 'final_prob': np.float64(0.003947812000000001), 'steps': [{'feature': 'network_load', 'value': np.float64(0.1), 'effect': 'multiply prob by 0.940 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.51), 'effect': 'multiply prob by 1.265 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.48), 'effect': 'multiply prob by 0.664 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.3), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.1,0.51,0.59,0.0,0.006980016930199831,"{'timestamp': 1760866780.1689703, 'inputs': {'network_load': np.float64(0.1), 'relay_reputation': np.float64(0.51), 'budget_utilization': np.float64(0.59), 'recent_win_rate': 1e-09}, 'base_prob': 0.01, 'final_prob': np.float64(0.006980016930199831), 'steps': [{'feature': 'network_load', 'value': np.float64(0.1), 'effect': 'multiply prob by 0.940 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.51), 'effect': 'multiply prob by 1.265 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.59), 'effect': 'multiply prob by 0.587 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': 1e-09, 'effect': 'multiply prob by 1.000 (higher recent wins -> lower prob)'}]}"
0.1,0.51,0.59,0.05,0.0034900085000000003,"{'timestamp': 1760866780.1689959, 'inputs': {'network_load': np.float64(0.1), 'relay_reputation': np.float64(0.51), 'budget_utilization': np.float64(0.59), 'recent_win_rate': np.float64(0.05)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0034900085000000003), 'steps': [{'feature': 'network_load', 'value': np.float64(0.1), 'effect': 'multiply prob by 0.940 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.51), 'effect': 'multiply prob by 1.265 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.59), 'effect': 'multiply prob by 0.587 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.05), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.1,0.51,0.59,0.1,0.0034900085000000003,"{'timestamp': 1760866780.169023, 'inputs': {'network_load': np.float64(0.1), 'relay_reputation': np.float64(0.51), 'budget_utilization': np.float64(0.59), 'recent_win_rate': np.float64(0.1)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0034900085000000003), 'steps': [{'feature': 'network_load', 'value': np.float64(0.1), 'effect': 'multiply prob by 0.940 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.51), 'effect': 'multiply prob by 1.265 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.59), 'effect': 'multiply prob by 0.587 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.1), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.1,0.51,0.59,0.15,0.0034900085000000003,"{'timestamp': 1760866780.1690485, 'inputs': {'network_load': np.float64(0.1), 'relay_reputation': np.float64(0.51), 'budget_utilization': np.float64(0.59), 'recent_win_rate': np.float64(0.15)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0034900085000000003), 'steps': [{'feature': 'network_load', 'value': np.float64(0.1), 'effect': 'multiply prob by 0.940 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.51), 'effect': 'multiply prob by 1.265 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.59), 'effect': 'multiply prob by 0.587 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.15), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.1,0.51,0.59,0.2,0.0034900085000000003,"{'timestamp': 1760866780.1690888, 'inputs': {'network_load': np.float64(0.1), 'relay_reputation': np.float64(0.51), 'budget_utilization': np.float64(0.59), 'recent_win_rate': np.float64(0.2)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0034900085000000003), 'steps': [{'feature': 'network_load', 'value': np.float64(0.1), 'effect': 'multiply prob by 0.940 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.51), 'effect': 'multiply prob by 1.265 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.59), 'effect': 'multiply prob by 0.587 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.2), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.1,0.51,0.59,0.25,0.0034900085000000003,"{'timestamp': 1760866780.1691172, 'inputs': {'network_load': np.float64(0.1), 'relay_reputation': np.float64(0.51), 'budget_utilization': np.float64(0.59), 'recent_win_rate': np.float64(0.25)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0034900085000000003), 'steps': [{'feature': 'network_load', 'value': np.float64(0.1), 'effect': 'multiply prob by 0.940 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.51), 'effect': 'multiply prob by 1.265 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.59), 'effect': 'multiply prob by 0.587 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.25), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.1,0.51,0.59,0.3,0.0034900085000000003,"{'timestamp': 1760866780.1691446, 'inputs': {'network_load': np.float64(0.1), 'relay_reputation': np.float64(0.51), 'budget_utilization': np.float64(0.59), 'recent_win_rate': np.float64(0.3)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0034900085000000003), 'steps': [{'feature': 'network_load', 'value': np.float64(0.1), 'effect': 'multiply prob by 0.940 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.51), 'effect': 'multiply prob by 1.265 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.59), 'effect': 'multiply prob by 0.587 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.3), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.1,0.51,0.69,0.0,0.006147646938523532,"{'timestamp': 1760866780.169172, 'inputs': {'network_load': np.float64(0.1), 'relay_reputation': np.float64(0.51), 'budget_utilization': np.float64(0.69), 'recent_win_rate': 1e-09}, 'base_prob': 0.01, 'final_prob': np.float64(0.006147646938523532), 'steps': [{'feature': 'network_load', 'value': np.float64(0.1), 'effect': 'multiply prob by 0.940 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.51), 'effect': 'multiply prob by 1.265 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.69), 'effect': 'multiply prob by 0.517 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': 1e-09, 'effect': 'multiply prob by 1.000 (higher recent wins -> lower prob)'}]}"
0.1,0.51,0.69,0.05,0.0030738235000000013,"{'timestamp': 1760866780.1691973, 'inputs': {'network_load': np.float64(0.1), 'relay_reputation': np.float64(0.51), 'budget_utilization': np.float64(0.69), 'recent_win_rate': np.float64(0.05)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0030738235000000013), 'steps': [{'feature': 'network_load', 'value': np.float64(0.1), 'effect': 'multiply prob by 0.940 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.51), 'effect': 'multiply prob by 1.265 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.69), 'effect': 'multiply prob by 0.517 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.05), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.1,0.51,0.69,0.1,0.0030738235000000013,"{'timestamp': 1760866780.1692252, 'inputs': {'network_load': np.float64(0.1), 'relay_reputation': np.float64(0.51), 'budget_utilization': np.float64(0.69), 'recent_win_rate': np.float64(0.1)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0030738235000000013), 'steps': [{'feature': 'network_load', 'value': np.float64(0.1), 'effect': 'multiply prob by 0.940 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.51), 'effect': 'multiply prob by 1.265 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.69), 'effect': 'multiply prob by 0.517 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.1), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.1,0.51,0.69,0.15,0.0030738235000000013,"{'timestamp': 1760866780.1692507, 'inputs': {'network_load': np.float64(0.1), 'relay_reputation': np.float64(0.51), 'budget_utilization': np.float64(0.69), 'recent_win_rate': np.float64(0.15)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0030738235000000013), 'steps': [{'feature': 'network_load', 'value': np.float64(0.1), 'effect': 'multiply prob by 0.940 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.51), 'effect': 'multiply prob by 1.265 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.69), 'effect': 'multiply prob by 0.517 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.15), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.1,0.51,0.69,0.2,0.0030738235000000013,"{'timestamp': 1760866780.1692781, 'inputs': {'network_load': np.float64(0.1), 'relay_reputation': np.float64(0.51), 'budget_utilization': np.float64(0.69), 'recent_win_rate': np.float64(0.2)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0030738235000000013), 'steps': [{'feature': 'network_load', 'value': np.float64(0.1), 'effect': 'multiply prob by 0.940 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.51), 'effect': 'multiply prob by 1.265 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.69), 'effect': 'multiply prob by 0.517 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.2), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.1,0.51,0.69,0.25,0.0030738235000000013,"{'timestamp': 1760866780.169304, 'inputs': {'network_load': np.float64(0.1), 'relay_reputation': np.float64(0.51), 'budget_utilization': np.float64(0.69), 'recent_win_rate': np.float64(0.25)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0030738235000000013), 'steps': [{'feature': 'network_load', 'value': np.float64(0.1), 'effect': 'multiply prob by 0.940 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.51), 'effect': 'multiply prob by 1.265 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.69), 'effect': 'multiply prob by 0.517 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.25), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.1,0.51,0.69,0.3,0.0030738235000000013,"{'timestamp': 1760866780.1693292, 'inputs': {'network_load': np.float64(0.1), 'relay_reputation': np.float64(0.51), 'budget_utilization': np.float64(0.69), 'recent_win_rate': np.float64(0.3)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0030738235000000013), 'steps': [{'feature': 'network_load', 'value': np.float64(0.1), 'effect': 'multiply prob by 0.940 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.51), 'effect': 'multiply prob by 1.265 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.69), 'effect': 'multiply prob by 0.517 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.3), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.1,0.51,0.8,0.0,0.005232039947679601,"{'timestamp': 1760866780.169358, 'inputs': {'network_load': np.float64(0.1), 'relay_reputation': np.float64(0.51), 'budget_utilization': np.float64(0.8), 'recent_win_rate': 1e-09}, 'base_prob': 0.01, 'final_prob': np.float64(0.005232039947679601), 'steps': [{'feature': 'network_load', 'value': np.float64(0.1), 'effect': 'multiply prob by 0.940 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.51), 'effect': 'multiply prob by 1.265 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.8), 'effect': 'multiply prob by 0.440 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': 1e-09, 'effect': 'multiply prob by 1.000 (higher recent wins -> lower prob)'}]}"
0.1,0.51,0.8,0.05,0.002616020000000001,"{'timestamp': 1760866780.1694355, 'inputs': {'network_load': np.float64(0.1), 'relay_reputation': np.float64(0.51), 'budget_utilization': np.float64(0.8), 'recent_win_rate': np.float64(0.05)}, 'base_prob': 0.01, 'final_prob': np.float64(0.002616020000000001), 'steps': [{'feature': 'network_load', 'value': np.float64(0.1), 'effect': 'multiply prob by 0.940 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.51), 'effect': 'multiply prob by 1.265 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.8), 'effect': 'multiply prob by 0.440 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.05), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.1,0.51,0.8,0.1,0.002616020000000001,"{'timestamp': 1760866780.1694782, 'inputs': {'network_load': np.float64(0.1), 'relay_reputation': np.float64(0.51), 'budget_utilization': np.float64(0.8), 'recent_win_rate': np.float64(0.1)}, 'base_prob': 0.01, 'final_prob': np.float64(0.002616020000000001), 'steps': [{'feature': 'network_load', 'value': np.float64(0.1), 'effect': 'multiply prob by 0.940 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.51), 'effect': 'multiply prob by 1.265 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.8), 'effect': 'multiply prob by 0.440 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.1), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.1,0.51,0.8,0.15,0.002616020000000001,"{'timestamp': 1760866780.169505, 'inputs': {'network_load': np.float64(0.1), 'relay_reputation': np.float64(0.51), 'budget_utilization': np.float64(0.8), 'recent_win_rate': np.float64(0.15)}, 'base_prob': 0.01, 'final_prob': np.float64(0.002616020000000001), 'steps': [{'feature': 'network_load', 'value': np.float64(0.1), 'effect': 'multiply prob by 0.940 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.51), 'effect': 'multiply prob by 1.265 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.8), 'effect': 'multiply prob by 0.440 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.15), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.1,0.51,0.8,0.2,0.002616020000000001,"{'timestamp': 1760866780.169531, 'inputs': {'network_load': np.float64(0.1), 'relay_reputation': np.float64(0.51), 'budget_utilization': np.float64(0.8), 'recent_win_rate': np.float64(0.2)}, 'base_prob': 0.01, 'final_prob': np.float64(0.002616020000000001), 'steps': [{'feature': 'network_load', 'value': np.float64(0.1), 'effect': 'multiply prob by 0.940 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.51), 'effect': 'multiply prob by 1.265 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.8), 'effect': 'multiply prob by 0.440 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.2), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.1,0.51,0.8,0.25,0.002616020000000001,"{'timestamp': 1760866780.1695588, 'inputs': {'network_load': np.float64(0.1), 'relay_reputation': np.float64(0.51), 'budget_utilization': np.float64(0.8), 'recent_win_rate': np.float64(0.25)}, 'base_prob': 0.01, 'final_prob': np.float64(0.002616020000000001), 'steps': [{'feature': 'network_load', 'value': np.float64(0.1), 'effect': 'multiply prob by 0.940 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.51), 'effect': 'multiply prob by 1.265 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.8), 'effect': 'multiply prob by 0.440 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.25), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.1,0.51,0.8,0.3,0.002616020000000001,"{'timestamp': 1760866780.169584, 'inputs': {'network_load': np.float64(0.1), 'relay_reputation': np.float64(0.51), 'budget_utilization': np.float64(0.8), 'recent_win_rate': np.float64(0.3)}, 'base_prob': 0.01, 'final_prob': np.float64(0.002616020000000001), 'steps': [{'feature': 'network_load', 'value': np.float64(0.1), 'effect': 'multiply prob by 0.940 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.51), 'effect': 'multiply prob by 1.265 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.8), 'effect': 'multiply prob by 0.440 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.3), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.1,0.62,0.05,0.0,0.012971529870284697,"{'timestamp': 1760866780.1696165, 'inputs': {'network_load': np.float64(0.1), 'relay_reputation': np.float64(0.62), 'budget_utilization': np.float64(0.05), 'recent_win_rate': 1e-09}, 'base_prob': 0.01, 'final_prob': np.float64(0.012971529870284697), 'steps': [{'feature': 'network_load', 'value': np.float64(0.1), 'effect': 'multiply prob by 0.940 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.62), 'effect': 'multiply prob by 1.430 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.05), 'effect': 'multiply prob by 0.965 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': 1e-09, 'effect': 'multiply prob by 1.000 (higher recent wins -> lower prob)'}]}"
0.1,0.62,0.05,0.05,0.006485764999999999,"{'timestamp': 1760866780.1696444, 'inputs': {'network_load': np.float64(0.1), 'relay_reputation': np.float64(0.62), 'budget_utilization': np.float64(0.05), 'recent_win_rate': np.float64(0.05)}, 'base_prob': 0.01, 'final_prob': np.float64(0.006485764999999999), 'steps': [{'feature': 'network_load', 'value': np.float64(0.1), 'effect': 'multiply prob by 0.940 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.62), 'effect': 'multiply prob by 1.430 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.05), 'effect': 'multiply prob by 0.965 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.05), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.1,0.62,0.05,0.1,0.006485764999999999,"{'timestamp': 1760866780.1696699, 'inputs': {'network_load': np.float64(0.1), 'relay_reputation': np.float64(0.62), 'budget_utilization': np.float64(0.05), 'recent_win_rate': np.float64(0.1)}, 'base_prob': 0.01, 'final_prob': np.float64(0.006485764999999999), 'steps': [{'feature': 'network_load', 'value': np.float64(0.1), 'effect': 'multiply prob by 0.940 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.62), 'effect': 'multiply prob by 1.430 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.05), 'effect': 'multiply prob by 0.965 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.1), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.1,0.62,0.05,0.15,0.006485764999999999,"{'timestamp': 1760866780.169695, 'inputs': {'network_load': np.float64(0.1), 'relay_reputation': np.float64(0.62), 'budget_utilization': np.float64(0.05), 'recent_win_rate': np.float64(0.15)}, 'base_prob': 0.01, 'final_prob': np.float64(0.006485764999999999), 'steps': [{'feature': 'network_load', 'value': np.float64(0.1), 'effect': 'multiply prob by 0.940 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.62), 'effect': 'multiply prob by 1.430 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.05), 'effect': 'multiply prob by 0.965 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.15), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.1,0.62,0.05,0.2,0.006485764999999999,"{'timestamp': 1760866780.1697202, 'inputs': {'network_load': np.float64(0.1), 'relay_reputation': np.float64(0.62), 'budget_utilization': np.float64(0.05), 'recent_win_rate': np.float64(0.2)}, 'base_prob': 0.01, 'final_prob': np.float64(0.006485764999999999), 'steps': [{'feature': 'network_load', 'value': np.float64(0.1), 'effect': 'multiply prob by 0.940 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.62), 'effect': 'multiply prob by 1.430 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.05), 'effect': 'multiply prob by 0.965 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.2), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.1,0.62,0.05,0.25,0.006485764999999999,"{'timestamp': 1760866780.169749, 'inputs': {'network_load': np.float64(0.1), 'relay_reputation': np.float64(0.62), 'budget_utilization': np.float64(0.05), 'recent_win_rate': np.float64(0.25)}, 'base_prob': 0.01, 'final_prob': np.float64(0.006485764999999999), 'steps': [{'feature': 'network_load', 'value': np.float64(0.1), 'effect': 'multiply prob by 0.940 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.62), 'effect': 'multiply prob by 1.430 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.05), 'effect': 'multiply prob by 0.965 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.25), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.1,0.62,0.05,0.3,0.006485764999999999,"{'timestamp': 1760866780.1697745, 'inputs': {'network_load': np.float64(0.1), 'relay_reputation': np.float64(0.62), 'budget_utilization': np.float64(0.05), 'recent_win_rate': np.float64(0.3)}, 'base_prob': 0.01, 'final_prob': np.float64(0.006485764999999999), 'steps': [{'feature': 'network_load', 'value': np.float64(0.1), 'effect': 'multiply prob by 0.940 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.62), 'effect': 'multiply prob by 1.430 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.05), 'effect': 'multiply prob by 0.965 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.3), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.1,0.62,0.16,0.0,0.011936495880635039,"{'timestamp': 1760866780.1698015, 'inputs': {'network_load': np.float64(0.1), 'relay_reputation': np.float64(0.62), 'budget_utilization': np.float64(0.16), 'recent_win_rate': 1e-09}, 'base_prob': 0.01, 'final_prob': np.float64(0.011936495880635039), 'steps': [{'feature': 'network_load', 'value': np.float64(0.1), 'effect': 'multiply prob by 0.940 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.62), 'effect': 'multiply prob by 1.430 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.16), 'effect': 'multiply prob by 0.888 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': 1e-09, 'effect': 'multiply prob by 1.000 (higher recent wins -> lower prob)'}]}"
0.1,0.62,0.16,0.05,0.005968248,"{'timestamp': 1760866780.1698606, 'inputs': {'network_load': np.float64(0.1), 'relay_reputation': np.float64(0.62), 'budget_utilization': np.float64(0.16), 'recent_win_rate': np.float64(0.05)}, 'base_prob': 0.01, 'final_prob': np.float64(0.005968248), 'steps': [{'feature': 'network_load', 'value': np.float64(0.1), 'effect': 'multiply prob by 0.940 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.62), 'effect': 'multiply prob by 1.430 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.16), 'effect': 'multiply prob by 0.888 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.05), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.1,0.62,0.16,0.1,0.005968248,"{'timestamp': 1760866780.1698904, 'inputs': {'network_load': np.float64(0.1), 'relay_reputation': np.float64(0.62), 'budget_utilization': np.float64(0.16), 'recent_win_rate': np.float64(0.1)}, 'base_prob': 0.01, 'final_prob': np.float64(0.005968248), 'steps': [{'feature': 'network_load', 'value': np.float64(0.1), 'effect': 'multiply prob by 0.940 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.62), 'effect': 'multiply prob by 1.430 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.16), 'effect': 'multiply prob by 0.888 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.1), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.1,0.62,0.16,0.15,0.005968248,"{'timestamp': 1760866780.1699176, 'inputs': {'network_load': np.float64(0.1), 'relay_reputation': np.float64(0.62), 'budget_utilization': np.float64(0.16), 'recent_win_rate': np.float64(0.15)}, 'base_prob': 0.01, 'final_prob': np.float64(0.005968248), 'steps': [{'feature': 'network_load', 'value': np.float64(0.1), 'effect': 'multiply prob by 0.940 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.62), 'effect': 'multiply prob by 1.430 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.16), 'effect': 'multiply prob by 0.888 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.15), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.1,0.62,0.16,0.2,0.005968248,"{'timestamp': 1760866780.1699445, 'inputs': {'network_load': np.float64(0.1), 'relay_reputation': np.float64(0.62), 'budget_utilization': np.float64(0.16), 'recent_win_rate': np.float64(0.2)}, 'base_prob': 0.01, 'final_prob': np.float64(0.005968248), 'steps': [{'feature': 'network_load', 'value': np.float64(0.1), 'effect': 'multiply prob by 0.940 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.62), 'effect': 'multiply prob by 1.430 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.16), 'effect': 'multiply prob by 0.888 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.2), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.1,0.62,0.16,0.25,0.005968248,"{'timestamp': 1760866780.1699717, 'inputs': {'network_load': np.float64(0.1), 'relay_reputation': np.float64(0.62), 'budget_utilization': np.float64(0.16), 'recent_win_rate': np.float64(0.25)}, 'base_prob': 0.01, 'final_prob': np.float64(0.005968248), 'steps': [{'feature': 'network_load', 'value': np.float64(0.1), 'effect': 'multiply prob by 0.940 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.62), 'effect': 'multiply prob by 1.430 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.16), 'effect': 'multiply prob by 0.888 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.25), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.1,0.62,0.16,0.3,0.005968248,"{'timestamp': 1760866780.169997, 'inputs': {'network_load': np.float64(0.1), 'relay_reputation': np.float64(0.62), 'budget_utilization': np.float64(0.16), 'recent_win_rate': np.float64(0.3)}, 'base_prob': 0.01, 'final_prob': np.float64(0.005968248), 'steps': [{'feature': 'network_load', 'value': np.float64(0.1), 'effect': 'multiply prob by 0.940 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.62), 'effect': 'multiply prob by 1.430 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.16), 'effect': 'multiply prob by 0.888 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.3), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.1,0.62,0.26,0.0,0.01099555589004444,"{'timestamp': 1760866780.1700244, 'inputs': {'network_load': np.float64(0.1), 'relay_reputation': np.float64(0.62), 'budget_utilization': np.float64(0.26), 'recent_win_rate': 1e-09}, 'base_prob': 0.01, 'final_prob': np.float64(0.01099555589004444), 'steps': [{'feature': 'network_load', 'value': np.float64(0.1), 'effect': 'multiply prob by 0.940 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.62), 'effect': 'multiply prob by 1.430 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.26), 'effect': 'multiply prob by 0.818 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': 1e-09, 'effect': 'multiply prob by 1.000 (higher recent wins -> lower prob)'}]}"
0.1,0.62,0.26,0.05,0.005497778,"{'timestamp': 1760866780.1700501, 'inputs': {'network_load': np.float64(0.1), 'relay_reputation': np.float64(0.62), 'budget_utilization': np.float64(0.26), 'recent_win_rate': np.float64(0.05)}, 'base_prob': 0.01, 'final_prob': np.float64(0.005497778), 'steps': [{'feature': 'network_load', 'value': np.float64(0.1), 'effect': 'multiply prob by 0.940 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.62), 'effect': 'multiply prob by 1.430 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.26), 'effect': 'multiply prob by 0.818 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.05), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.1,0.62,0.26,0.1,0.005497778,"{'timestamp': 1760866780.1700778, 'inputs': {'network_load': np.float64(0.1), 'relay_reputation': np.float64(0.62), 'budget_utilization': np.float64(0.26), 'recent_win_rate': np.float64(0.1)}, 'base_prob': 0.01, 'final_prob': np.float64(0.005497778), 'steps': [{'feature': 'network_load', 'value': np.float64(0.1), 'effect': 'multiply prob by 0.940 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.62), 'effect': 'multiply prob by 1.430 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.26), 'effect': 'multiply prob by 0.818 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.1), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.1,0.62,0.26,0.15,0.005497778,"{'timestamp': 1760866780.1701062, 'inputs': {'network_load': np.float64(0.1), 'relay_reputation': np.float64(0.62), 'budget_utilization': np.float64(0.26), 'recent_win_rate': np.float64(0.15)}, 'base_prob': 0.01, 'final_prob': np.float64(0.005497778), 'steps': [{'feature': 'network_load', 'value': np.float64(0.1), 'effect': 'multiply prob by 0.940 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.62), 'effect': 'multiply prob by 1.430 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.26), 'effect': 'multiply prob by 0.818 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.15), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.1,0.62,0.26,0.2,0.005497778,"{'timestamp': 1760866780.1701336, 'inputs': {'network_load': np.float64(0.1), 'relay_reputation': np.float64(0.62), 'budget_utilization': np.float64(0.26), 'recent_win_rate': np.float64(0.2)}, 'base_prob': 0.01, 'final_prob': np.float64(0.005497778), 'steps': [{'feature': 'network_load', 'value': np.float64(0.1), 'effect': 'multiply prob by 0.940 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.62), 'effect': 'multiply prob by 1.430 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.26), 'effect': 'multiply prob by 0.818 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.2), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.1,0.62,0.26,0.25,0.005497778,"{'timestamp': 1760866780.1701589, 'inputs': {'network_load': np.float64(0.1), 'relay_reputation': np.float64(0.62), 'budget_utilization': np.float64(0.26), 'recent_win_rate': np.float64(0.25)}, 'base_prob': 0.01, 'final_prob': np.float64(0.005497778), 'steps': [{'feature': 'network_load', 'value': np.float64(0.1), 'effect': 'multiply prob by 0.940 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.62), 'effect': 'multiply prob by 1.430 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.26), 'effect': 'multiply prob by 0.818 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.25), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.1,0.62,0.26,0.3,0.005497778,"{'timestamp': 1760866780.1701841, 'inputs': {'network_load': np.float64(0.1), 'relay_reputation': np.float64(0.62), 'budget_utilization': np.float64(0.26), 'recent_win_rate': np.float64(0.3)}, 'base_prob': 0.01, 'final_prob': np.float64(0.005497778), 'steps': [{'feature': 'network_load', 'value': np.float64(0.1), 'effect': 'multiply prob by 0.940 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.62), 'effect': 'multiply prob by 1.430 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.26), 'effect': 'multiply prob by 0.818 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.3), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.1,0.62,0.37,0.0,0.00996052190039478,"{'timestamp': 1760866780.1702132, 'inputs': {'network_load': np.float64(0.1), 'relay_reputation': np.float64(0.62), 'budget_utilization': np.float64(0.37), 'recent_win_rate': 1e-09}, 'base_prob': 0.01, 'final_prob': np.float64(0.00996052190039478), 'steps': [{'feature': 'network_load', 'value': np.float64(0.1), 'effect': 'multiply prob by 0.940 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.62), 'effect': 'multiply prob by 1.430 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.37), 'effect': 'multiply prob by 0.741 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': 1e-09, 'effect': 'multiply prob by 1.000 (higher recent wins -> lower prob)'}]}"
0.1,0.62,0.37,0.05,0.004980261,"{'timestamp': 1760866780.1702387, 'inputs': {'network_load': np.float64(0.1), 'relay_reputation': np.float64(0.62), 'budget_utilization': np.float64(0.37), 'recent_win_rate': np.float64(0.05)}, 'base_prob': 0.01, 'final_prob': np.float64(0.004980261), 'steps': [{'feature': 'network_load', 'value': np.float64(0.1), 'effect': 'multiply prob by 0.940 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.62), 'effect': 'multiply prob by 1.430 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.37), 'effect': 'multiply prob by 0.741 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.05), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.1,0.62,0.37,0.1,0.004980261,"{'timestamp': 1760866780.1702642, 'inputs': {'network_load': np.float64(0.1), 'relay_reputation': np.float64(0.62), 'budget_utilization': np.float64(0.37), 'recent_win_rate': np.float64(0.1)}, 'base_prob': 0.01, 'final_prob': np.float64(0.004980261), 'steps': [{'feature': 'network_load', 'value': np.float64(0.1), 'effect': 'multiply prob by 0.940 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.62), 'effect': 'multiply prob by 1.430 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.37), 'effect': 'multiply prob by 0.741 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.1), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.1,0.62,0.37,0.15,0.004980261,"{'timestamp': 1760866780.1702895, 'inputs': {'network_load': np.float64(0.1), 'relay_reputation': np.float64(0.62), 'budget_utilization': np.float64(0.37), 'recent_win_rate': np.float64(0.15)}, 'base_prob': 0.01, 'final_prob': np.float64(0.004980261), 'steps': [{'feature': 'network_load', 'value': np.float64(0.1), 'effect': 'multiply prob by 0.940 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.62), 'effect': 'multiply prob by 1.430 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.37), 'effect': 'multiply prob by 0.741 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.15), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.1,0.62,0.37,0.2,0.004980261,"{'timestamp': 1760866780.1703167, 'inputs': {'network_load': np.float64(0.1), 'relay_reputation': np.float64(0.62), 'budget_utilization': np.float64(0.37), 'recent_win_rate': np.float64(0.2)}, 'base_prob': 0.01, 'final_prob': np.float64(0.004980261), 'steps': [{'feature': 'network_load', 'value': np.float64(0.1), 'effect': 'multiply prob by 0.940 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.62), 'effect': 'multiply prob by 1.430 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.37), 'effect': 'multiply prob by 0.741 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.2), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.1,0.62,0.37,0.25,0.004980261,"{'timestamp': 1760866780.170389, 'inputs': {'network_load': np.float64(0.1), 'relay_reputation': np.float64(0.62), 'budget_utilization': np.float64(0.37), 'recent_win_rate': np.float64(0.25)}, 'base_prob': 0.01, 'final_prob': np.float64(0.004980261), 'steps': [{'feature': 'network_load', 'value': np.float64(0.1), 'effect': 'multiply prob by 0.940 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.62), 'effect': 'multiply prob by 1.430 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.37), 'effect': 'multiply prob by 0.741 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.25), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.1,0.62,0.37,0.3,0.004980261,"{'timestamp': 1760866780.1704288, 'inputs': {'network_load': np.float64(0.1), 'relay_reputation': np.float64(0.62), 'budget_utilization': np.float64(0.37), 'recent_win_rate': np.float64(0.3)}, 'base_prob': 0.01, 'final_prob': np.float64(0.004980261), 'steps': [{'feature': 'network_load', 'value': np.float64(0.1), 'effect': 'multiply prob by 0.940 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.62), 'effect': 'multiply prob by 1.430 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.37), 'effect': 'multiply prob by 0.741 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.3), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.1,0.62,0.48,0.0,0.00892548791074512,"{'timestamp': 1760866780.170458, 'inputs': {'network_load': np.float64(0.1), 'relay_reputation': np.float64(0.62), 'budget_utilization': np.float64(0.48), 'recent_win_rate': 1e-09}, 'base_prob': 0.01, 'final_prob': np.float64(0.00892548791074512), 'steps': [{'feature': 'network_load', 'value': np.float64(0.1), 'effect': 'multiply prob by 0.940 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.62), 'effect': 'multiply prob by 1.430 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.48), 'effect': 'multiply prob by 0.664 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': 1e-09, 'effect': 'multiply prob by 1.000 (higher recent wins -> lower prob)'}]}"
0.1,0.62,0.48,0.05,0.004462744,"{'timestamp': 1760866780.1704838, 'inputs': {'network_load': np.float64(0.1), 'relay_reputation': np.float64(0.62), 'budget_utilization': np.float64(0.48), 'recent_win_rate': np.float64(0.05)}, 'base_prob': 0.01, 'final_prob': np.float64(0.004462744), 'steps': [{'feature': 'network_load', 'value': np.float64(0.1), 'effect': 'multiply prob by 0.940 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.62), 'effect': 'multiply prob by 1.430 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.48), 'effect': 'multiply prob by 0.664 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.05), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.1,0.62,0.48,0.1,0.004462744,"{'timestamp': 1760866780.1705112, 'inputs': {'network_load': np.float64(0.1), 'relay_reputation': np.float64(0.62), 'budget_utilization': np.float64(0.48), 'recent_win_rate': np.float64(0.1)}, 'base_prob': 0.01, 'final_prob': np.float64(0.004462744), 'steps': [{'feature': 'network_load', 'value': np.float64(0.1), 'effect': 'multiply prob by 0.940 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.62), 'effect': 'multiply prob by 1.430 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.48), 'effect': 'multiply prob by 0.664 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.1), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.1,0.62,0.48,0.15,0.004462744,"{'timestamp': 1760866780.1705384, 'inputs': {'network_load': np.float64(0.1), 'relay_reputation': np.float64(0.62), 'budget_utilization': np.float64(0.48), 'recent_win_rate': np.float64(0.15)}, 'base_prob': 0.01, 'final_prob': np.float64(0.004462744), 'steps': [{'feature': 'network_load', 'value': np.float64(0.1), 'effect': 'multiply prob by 0.940 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.62), 'effect': 'multiply prob by 1.430 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.48), 'effect': 'multiply prob by 0.664 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.15), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.1,0.62,0.48,0.2,0.004462744,"{'timestamp': 1760866780.1705678, 'inputs': {'network_load': np.float64(0.1), 'relay_reputation': np.float64(0.62), 'budget_utilization': np.float64(0.48), 'recent_win_rate': np.float64(0.2)}, 'base_prob': 0.01, 'final_prob': np.float64(0.004462744), 'steps': [{'feature': 'network_load', 'value': np.float64(0.1), 'effect': 'multiply prob by 0.940 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.62), 'effect': 'multiply prob by 1.430 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.48), 'effect': 'multiply prob by 0.664 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.2), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.1,0.62,0.48,0.25,0.004462744,"{'timestamp': 1760866780.170595, 'inputs': {'network_load': np.float64(0.1), 'relay_reputation': np.float64(0.62), 'budget_utilization': np.float64(0.48), 'recent_win_rate': np.float64(0.25)}, 'base_prob': 0.01, 'final_prob': np.float64(0.004462744), 'steps': [{'feature': 'network_load', 'value': np.float64(0.1), 'effect': 'multiply prob by 0.940 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.62), 'effect': 'multiply prob by 1.430 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.48), 'effect': 'multiply prob by 0.664 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.25), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.1,0.62,0.48,0.3,0.004462744,"{'timestamp': 1760866780.17062, 'inputs': {'network_load': np.float64(0.1), 'relay_reputation': np.float64(0.62), 'budget_utilization': np.float64(0.48), 'recent_win_rate': np.float64(0.3)}, 'base_prob': 0.01, 'final_prob': np.float64(0.004462744), 'steps': [{'feature': 'network_load', 'value': np.float64(0.1), 'effect': 'multiply prob by 0.940 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.62), 'effect': 'multiply prob by 1.430 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.48), 'effect': 'multiply prob by 0.664 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.3), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.1,0.62,0.59,0.0,0.007890453921095459,"{'timestamp': 1760866780.1706467, 'inputs': {'network_load': np.float64(0.1), 'relay_reputation': np.float64(0.62), 'budget_utilization': np.float64(0.59), 'recent_win_rate': 1e-09}, 'base_prob': 0.01, 'final_prob': np.float64(0.007890453921095459), 'steps': [{'feature': 'network_load', 'value': np.float64(0.1), 'effect': 'multiply prob by 0.940 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.62), 'effect': 'multiply prob by 1.430 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.59), 'effect': 'multiply prob by 0.587 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': 1e-09, 'effect': 'multiply prob by 1.000 (higher recent wins -> lower prob)'}]}"
0.1,0.62,0.59,0.05,0.003945227,"{'timestamp': 1760866780.1706722, 'inputs': {'network_load': np.float64(0.1), 'relay_reputation': np.float64(0.62), 'budget_utilization': np.float64(0.59), 'recent_win_rate': np.float64(0.05)}, 'base_prob': 0.01, 'final_prob': np.float64(0.003945227), 'steps': [{'feature': 'network_load', 'value': np.float64(0.1), 'effect': 'multiply prob by 0.940 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.62), 'effect': 'multiply prob by 1.430 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.59), 'effect': 'multiply prob by 0.587 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.05), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.1,0.62,0.59,0.1,0.003945227,"{'timestamp': 1760866780.1707015, 'inputs': {'network_load': np.float64(0.1), 'relay_reputation': np.float64(0.62), 'budget_utilization': np.float64(0.59), 'recent_win_rate': np.float64(0.1)}, 'base_prob': 0.01, 'final_prob': np.float64(0.003945227), 'steps': [{'feature': 'network_load', 'value': np.float64(0.1), 'effect': 'multiply prob by 0.940 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.62), 'effect': 'multiply prob by 1.430 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.59), 'effect': 'multiply prob by 0.587 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.1), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.1,0.62,0.59,0.15,0.003945227,"{'timestamp': 1760866780.170727, 'inputs': {'network_load': np.float64(0.1), 'relay_reputation': np.float64(0.62), 'budget_utilization': np.float64(0.59), 'recent_win_rate': np.float64(0.15)}, 'base_prob': 0.01, 'final_prob': np.float64(0.003945227), 'steps': [{'feature': 'network_load', 'value': np.float64(0.1), 'effect': 'multiply prob by 0.940 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.62), 'effect': 'multiply prob by 1.430 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.59), 'effect': 'multiply prob by 0.587 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.15), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.1,0.62,0.59,0.2,0.003945227,"{'timestamp': 1760866780.170752, 'inputs': {'network_load': np.float64(0.1), 'relay_reputation': np.float64(0.62), 'budget_utilization': np.float64(0.59), 'recent_win_rate': np.float64(0.2)}, 'base_prob': 0.01, 'final_prob': np.float64(0.003945227), 'steps': [{'feature': 'network_load', 'value': np.float64(0.1), 'effect': 'multiply prob by 0.940 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.62), 'effect': 'multiply prob by 1.430 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.59), 'effect': 'multiply prob by 0.587 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.2), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.1,0.62,0.59,0.25,0.003945227,"{'timestamp': 1760866780.1707773, 'inputs': {'network_load': np.float64(0.1), 'relay_reputation': np.float64(0.62), 'budget_utilization': np.float64(0.59), 'recent_win_rate': np.float64(0.25)}, 'base_prob': 0.01, 'final_prob': np.float64(0.003945227), 'steps': [{'feature': 'network_load', 'value': np.float64(0.1), 'effect': 'multiply prob by 0.940 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.62), 'effect': 'multiply prob by 1.430 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.59), 'effect': 'multiply prob by 0.587 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.25), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.1,0.62,0.59,0.3,0.003945227,"{'timestamp': 1760866780.1708047, 'inputs': {'network_load': np.float64(0.1), 'relay_reputation': np.float64(0.62), 'budget_utilization': np.float64(0.59), 'recent_win_rate': np.float64(0.3)}, 'base_prob': 0.01, 'final_prob': np.float64(0.003945227), 'steps': [{'feature': 'network_load', 'value': np.float64(0.1), 'effect': 'multiply prob by 0.940 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.62), 'effect': 'multiply prob by 1.430 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.59), 'effect': 'multiply prob by 0.587 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.3), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.1,0.62,0.69,0.0,0.006949513930504861,"{'timestamp': 1760866780.170835, 'inputs': {'network_load': np.float64(0.1), 'relay_reputation': np.float64(0.62), 'budget_utilization': np.float64(0.69), 'recent_win_rate': 1e-09}, 'base_prob': 0.01, 'final_prob': np.float64(0.006949513930504861), 'steps': [{'feature': 'network_load', 'value': np.float64(0.1), 'effect': 'multiply prob by 0.940 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.62), 'effect': 'multiply prob by 1.430 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.69), 'effect': 'multiply prob by 0.517 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': 1e-09, 'effect': 'multiply prob by 1.000 (higher recent wins -> lower prob)'}]}"
0.1,0.62,0.69,0.05,0.0034747570000000006,"{'timestamp': 1760866780.1708605, 'inputs': {'network_load': np.float64(0.1), 'relay_reputation': np.float64(0.62), 'budget_utilization': np.float64(0.69), 'recent_win_rate': np.float64(0.05)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0034747570000000006), 'steps': [{'feature': 'network_load', 'value': np.float64(0.1), 'effect': 'multiply prob by 0.940 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.62), 'effect': 'multiply prob by 1.430 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.69), 'effect': 'multiply prob by 0.517 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.05), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.1,0.62,0.69,0.1,0.0034747570000000006,"{'timestamp': 1760866780.1708858, 'inputs': {'network_load': np.float64(0.1), 'relay_reputation': np.float64(0.62), 'budget_utilization': np.float64(0.69), 'recent_win_rate': np.float64(0.1)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0034747570000000006), 'steps': [{'feature': 'network_load', 'value': np.float64(0.1), 'effect': 'multiply prob by 0.940 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.62), 'effect': 'multiply prob by 1.430 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.69), 'effect': 'multiply prob by 0.517 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.1), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.1,0.62,0.69,0.15,0.0034747570000000006,"{'timestamp': 1760866780.170911, 'inputs': {'network_load': np.float64(0.1), 'relay_reputation': np.float64(0.62), 'budget_utilization': np.float64(0.69), 'recent_win_rate': np.float64(0.15)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0034747570000000006), 'steps': [{'feature': 'network_load', 'value': np.float64(0.1), 'effect': 'multiply prob by 0.940 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.62), 'effect': 'multiply prob by 1.430 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.69), 'effect': 'multiply prob by 0.517 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.15), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.1,0.62,0.69,0.2,0.0034747570000000006,"{'timestamp': 1760866780.170936, 'inputs': {'network_load': np.float64(0.1), 'relay_reputation': np.float64(0.62), 'budget_utilization': np.float64(0.69), 'recent_win_rate': np.float64(0.2)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0034747570000000006), 'steps': [{'feature': 'network_load', 'value': np.float64(0.1), 'effect': 'multiply prob by 0.940 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.62), 'effect': 'multiply prob by 1.430 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.69), 'effect': 'multiply prob by 0.517 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.2), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.1,0.62,0.69,0.25,0.0034747570000000006,"{'timestamp': 1760866780.1709614, 'inputs': {'network_load': np.float64(0.1), 'relay_reputation': np.float64(0.62), 'budget_utilization': np.float64(0.69), 'recent_win_rate': np.float64(0.25)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0034747570000000006), 'steps': [{'feature': 'network_load', 'value': np.float64(0.1), 'effect': 'multiply prob by 0.940 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.62), 'effect': 'multiply prob by 1.430 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.69), 'effect': 'multiply prob by 0.517 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.25), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.1,0.62,0.69,0.3,0.0034747570000000006,"{'timestamp': 1760866780.170992, 'inputs': {'network_load': np.float64(0.1), 'relay_reputation': np.float64(0.62), 'budget_utilization': np.float64(0.69), 'recent_win_rate': np.float64(0.3)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0034747570000000006), 'steps': [{'feature': 'network_load', 'value': np.float64(0.1), 'effect': 'multiply prob by 0.940 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.62), 'effect': 'multiply prob by 1.430 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.69), 'effect': 'multiply prob by 0.517 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.3), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.1,0.62,0.8,0.0,0.0059144799408552004,"{'timestamp': 1760866780.1710224, 'inputs': {'network_load': np.float64(0.1), 'relay_reputation': np.float64(0.62), 'budget_utilization': np.float64(0.8), 'recent_win_rate': 1e-09}, 'base_prob': 0.01, 'final_prob': np.float64(0.0059144799408552004), 'steps': [{'feature': 'network_load', 'value': np.float64(0.1), 'effect': 'multiply prob by 0.940 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.62), 'effect': 'multiply prob by 1.430 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.8), 'effect': 'multiply prob by 0.440 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': 1e-09, 'effect': 'multiply prob by 1.000 (higher recent wins -> lower prob)'}]}"
0.1,0.62,0.8,0.05,0.0029572400000000003,"{'timestamp': 1760866780.1710482, 'inputs': {'network_load': np.float64(0.1), 'relay_reputation': np.float64(0.62), 'budget_utilization': np.float64(0.8), 'recent_win_rate': np.float64(0.05)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0029572400000000003), 'steps': [{'feature': 'network_load', 'value': np.float64(0.1), 'effect': 'multiply prob by 0.940 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.62), 'effect': 'multiply prob by 1.430 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.8), 'effect': 'multiply prob by 0.440 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.05), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.1,0.62,0.8,0.1,0.0029572400000000003,"{'timestamp': 1760866780.1710732, 'inputs': {'network_load': np.float64(0.1), 'relay_reputation': np.float64(0.62), 'budget_utilization': np.float64(0.8), 'recent_win_rate': np.float64(0.1)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0029572400000000003), 'steps': [{'feature': 'network_load', 'value': np.float64(0.1), 'effect': 'multiply prob by 0.940 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.62), 'effect': 'multiply prob by 1.430 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.8), 'effect': 'multiply prob by 0.440 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.1), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.1,0.62,0.8,0.15,0.0029572400000000003,"{'timestamp': 1760866780.1711009, 'inputs': {'network_load': np.float64(0.1), 'relay_reputation': np.float64(0.62), 'budget_utilization': np.float64(0.8), 'recent_win_rate': np.float64(0.15)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0029572400000000003), 'steps': [{'feature': 'network_load', 'value': np.float64(0.1), 'effect': 'multiply prob by 0.940 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.62), 'effect': 'multiply prob by 1.430 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.8), 'effect': 'multiply prob by 0.440 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.15), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.1,0.62,0.8,0.2,0.0029572400000000003,"{'timestamp': 1760866780.1711285, 'inputs': {'network_load': np.float64(0.1), 'relay_reputation': np.float64(0.62), 'budget_utilization': np.float64(0.8), 'recent_win_rate': np.float64(0.2)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0029572400000000003), 'steps': [{'feature': 'network_load', 'value': np.float64(0.1), 'effect': 'multiply prob by 0.940 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.62), 'effect': 'multiply prob by 1.430 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.8), 'effect': 'multiply prob by 0.440 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.2), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.1,0.62,0.8,0.25,0.0029572400000000003,"{'timestamp': 1760866780.171154, 'inputs': {'network_load': np.float64(0.1), 'relay_reputation': np.float64(0.62), 'budget_utilization': np.float64(0.8), 'recent_win_rate': np.float64(0.25)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0029572400000000003), 'steps': [{'feature': 'network_load', 'value': np.float64(0.1), 'effect': 'multiply prob by 0.940 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.62), 'effect': 'multiply prob by 1.430 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.8), 'effect': 'multiply prob by 0.440 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.25), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.1,0.62,0.8,0.3,0.0029572400000000003,"{'timestamp': 1760866780.171179, 'inputs': {'network_load': np.float64(0.1), 'relay_reputation': np.float64(0.62), 'budget_utilization': np.float64(0.8), 'recent_win_rate': np.float64(0.3)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0029572400000000003), 'steps': [{'feature': 'network_load', 'value': np.float64(0.1), 'effect': 'multiply prob by 0.940 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.62), 'effect': 'multiply prob by 1.430 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.8), 'effect': 'multiply prob by 0.440 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.3), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.1,0.73,0.05,0.0,0.014468244855317551,"{'timestamp': 1760866780.1712654, 'inputs': {'network_load': np.float64(0.1), 'relay_reputation': np.float64(0.73), 'budget_utilization': np.float64(0.05), 'recent_win_rate': 1e-09}, 'base_prob': 0.01, 'final_prob': np.float64(0.014468244855317551), 'steps': [{'feature': 'network_load', 'value': np.float64(0.1), 'effect': 'multiply prob by 0.940 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.73), 'effect': 'multiply prob by 1.595 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.05), 'effect': 'multiply prob by 0.965 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': 1e-09, 'effect': 'multiply prob by 1.000 (higher recent wins -> lower prob)'}]}"
0.1,0.73,0.05,0.05,0.0072341225000000006,"{'timestamp': 1760866780.1712954, 'inputs': {'network_load': np.float64(0.1), 'relay_reputation': np.float64(0.73), 'budget_utilization': np.float64(0.05), 'recent_win_rate': np.float64(0.05)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0072341225000000006), 'steps': [{'feature': 'network_load', 'value': np.float64(0.1), 'effect': 'multiply prob by 0.940 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.73), 'effect': 'multiply prob by 1.595 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.05), 'effect': 'multiply prob by 0.965 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.05), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.1,0.73,0.05,0.1,0.0072341225000000006,"{'timestamp': 1760866780.1713264, 'inputs': {'network_load': np.float64(0.1), 'relay_reputation': np.float64(0.73), 'budget_utilization': np.float64(0.05), 'recent_win_rate': np.float64(0.1)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0072341225000000006), 'steps': [{'feature': 'network_load', 'value': np.float64(0.1), 'effect': 'multiply prob by 0.940 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.73), 'effect': 'multiply prob by 1.595 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.05), 'effect': 'multiply prob by 0.965 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.1), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.1,0.73,0.05,0.15,0.0072341225000000006,"{'timestamp': 1760866780.1713521, 'inputs': {'network_load': np.float64(0.1), 'relay_reputation': np.float64(0.73), 'budget_utilization': np.float64(0.05), 'recent_win_rate': np.float64(0.15)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0072341225000000006), 'steps': [{'feature': 'network_load', 'value': np.float64(0.1), 'effect': 'multiply prob by 0.940 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.73), 'effect': 'multiply prob by 1.595 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.05), 'effect': 'multiply prob by 0.965 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.15), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.1,0.73,0.05,0.2,0.0072341225000000006,"{'timestamp': 1760866780.1713772, 'inputs': {'network_load': np.float64(0.1), 'relay_reputation': np.float64(0.73), 'budget_utilization': np.float64(0.05), 'recent_win_rate': np.float64(0.2)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0072341225000000006), 'steps': [{'feature': 'network_load', 'value': np.float64(0.1), 'effect': 'multiply prob by 0.940 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.73), 'effect': 'multiply prob by 1.595 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.05), 'effect': 'multiply prob by 0.965 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.2), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.1,0.73,0.05,0.25,0.0072341225000000006,"{'timestamp': 1760866780.1714032, 'inputs': {'network_load': np.float64(0.1), 'relay_reputation': np.float64(0.73), 'budget_utilization': np.float64(0.05), 'recent_win_rate': np.float64(0.25)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0072341225000000006), 'steps': [{'feature': 'network_load', 'value': np.float64(0.1), 'effect': 'multiply prob by 0.940 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.73), 'effect': 'multiply prob by 1.595 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.05), 'effect': 'multiply prob by 0.965 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.25), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.1,0.73,0.05,0.3,0.0072341225000000006,"{'timestamp': 1760866780.1714575, 'inputs': {'network_load': np.float64(0.1), 'relay_reputation': np.float64(0.73), 'budget_utilization': np.float64(0.05), 'recent_win_rate': np.float64(0.3)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0072341225000000006), 'steps': [{'feature': 'network_load', 'value': np.float64(0.1), 'effect': 'multiply prob by 0.940 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.73), 'effect': 'multiply prob by 1.595 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.05), 'effect': 'multiply prob by 0.965 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.3), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.1,0.73,0.16,0.0,0.01331378386686216,"{'timestamp': 1760866780.17149, 'inputs': {'network_load': np.float64(0.1), 'relay_reputation': np.float64(0.73), 'budget_utilization': np.float64(0.16), 'recent_win_rate': 1e-09}, 'base_prob': 0.01, 'final_prob': np.float64(0.01331378386686216), 'steps': [{'feature': 'network_load', 'value': np.float64(0.1), 'effect': 'multiply prob by 0.940 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.73), 'effect': 'multiply prob by 1.595 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.16), 'effect': 'multiply prob by 0.888 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': 1e-09, 'effect': 'multiply prob by 1.000 (higher recent wins -> lower prob)'}]}"
0.1,0.73,0.16,0.05,0.006656892,"{'timestamp': 1760866780.1715202, 'inputs': {'network_load': np.float64(0.1), 'relay_reputation': np.float64(0.73), 'budget_utilization': np.float64(0.16), 'recent_win_rate': np.float64(0.05)}, 'base_prob': 0.01, 'final_prob': np.float64(0.006656892), 'steps': [{'feature': 'network_load', 'value': np.float64(0.1), 'effect': 'multiply prob by 0.940 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.73), 'effect': 'multiply prob by 1.595 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.16), 'effect': 'multiply prob by 0.888 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.05), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.1,0.73,0.16,0.1,0.006656892,"{'timestamp': 1760866780.1715474, 'inputs': {'network_load': np.float64(0.1), 'relay_reputation': np.float64(0.73), 'budget_utilization': np.float64(0.16), 'recent_win_rate': np.float64(0.1)}, 'base_prob': 0.01, 'final_prob': np.float64(0.006656892), 'steps': [{'feature': 'network_load', 'value': np.float64(0.1), 'effect': 'multiply prob by 0.940 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.73), 'effect': 'multiply prob by 1.595 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.16), 'effect': 'multiply prob by 0.888 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.1), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.1,0.73,0.16,0.15,0.006656892,"{'timestamp': 1760866780.1715724, 'inputs': {'network_load': np.float64(0.1), 'relay_reputation': np.float64(0.73), 'budget_utilization': np.float64(0.16), 'recent_win_rate': np.float64(0.15)}, 'base_prob': 0.01, 'final_prob': np.float64(0.006656892), 'steps': [{'feature': 'network_load', 'value': np.float64(0.1), 'effect': 'multiply prob by 0.940 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.73), 'effect': 'multiply prob by 1.595 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.16), 'effect': 'multiply prob by 0.888 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.15), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.1,0.73,0.16,0.2,0.006656892,"{'timestamp': 1760866780.1715991, 'inputs': {'network_load': np.float64(0.1), 'relay_reputation': np.float64(0.73), 'budget_utilization': np.float64(0.16), 'recent_win_rate': np.float64(0.2)}, 'base_prob': 0.01, 'final_prob': np.float64(0.006656892), 'steps': [{'feature': 'network_load', 'value': np.float64(0.1), 'effect': 'multiply prob by 0.940 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.73), 'effect': 'multiply prob by 1.595 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.16), 'effect': 'multiply prob by 0.888 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.2), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.1,0.73,0.16,0.25,0.006656892,"{'timestamp': 1760866780.1716244, 'inputs': {'network_load': np.float64(0.1), 'relay_reputation': np.float64(0.73), 'budget_utilization': np.float64(0.16), 'recent_win_rate': np.float64(0.25)}, 'base_prob': 0.01, 'final_prob': np.float64(0.006656892), 'steps': [{'feature': 'network_load', 'value': np.float64(0.1), 'effect': 'multiply prob by 0.940 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.73), 'effect': 'multiply prob by 1.595 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.16), 'effect': 'multiply prob by 0.888 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.25), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.1,0.73,0.16,0.3,0.006656892,"{'timestamp': 1760866780.1716514, 'inputs': {'network_load': np.float64(0.1), 'relay_reputation': np.float64(0.73), 'budget_utilization': np.float64(0.16), 'recent_win_rate': np.float64(0.3)}, 'base_prob': 0.01, 'final_prob': np.float64(0.006656892), 'steps': [{'feature': 'network_load', 'value': np.float64(0.1), 'effect': 'multiply prob by 0.940 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.73), 'effect': 'multiply prob by 1.595 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.16), 'effect': 'multiply prob by 0.888 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.3), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.1,0.73,0.26,0.0,0.01226427387735726,"{'timestamp': 1760866780.1716783, 'inputs': {'network_load': np.float64(0.1), 'relay_reputation': np.float64(0.73), 'budget_utilization': np.float64(0.26), 'recent_win_rate': 1e-09}, 'base_prob': 0.01, 'final_prob': np.float64(0.01226427387735726), 'steps': [{'feature': 'network_load', 'value': np.float64(0.1), 'effect': 'multiply prob by 0.940 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.73), 'effect': 'multiply prob by 1.595 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.26), 'effect': 'multiply prob by 0.818 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': 1e-09, 'effect': 'multiply prob by 1.000 (higher recent wins -> lower prob)'}]}"
0.1,0.73,0.26,0.05,0.006132137000000001,"{'timestamp': 1760866780.1726615, 'inputs': {'network_load': np.float64(0.1), 'relay_reputation': np.float64(0.73), 'budget_utilization': np.float64(0.26), 'recent_win_rate': np.float64(0.05)}, 'base_prob': 0.01, 'final_prob': np.float64(0.006132137000000001), 'steps': [{'feature': 'network_load', 'value': np.float64(0.1), 'effect': 'multiply prob by 0.940 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.73), 'effect': 'multiply prob by 1.595 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.26), 'effect': 'multiply prob by 0.818 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.05), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.1,0.73,0.26,0.1,0.006132137000000001,"{'timestamp': 1760866780.1726878, 'inputs': {'network_load': np.float64(0.1), 'relay_reputation': np.float64(0.73), 'budget_utilization': np.float64(0.26), 'recent_win_rate': np.float64(0.1)}, 'base_prob': 0.01, 'final_prob': np.float64(0.006132137000000001), 'steps': [{'feature': 'network_load', 'value': np.float64(0.1), 'effect': 'multiply prob by 0.940 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.73), 'effect': 'multiply prob by 1.595 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.26), 'effect': 'multiply prob by 0.818 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.1), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.1,0.73,0.26,0.15,0.006132137000000001,"{'timestamp': 1760866780.172724, 'inputs': {'network_load': np.float64(0.1), 'relay_reputation': np.float64(0.73), 'budget_utilization': np.float64(0.26), 'recent_win_rate': np.float64(0.15)}, 'base_prob': 0.01, 'final_prob': np.float64(0.006132137000000001), 'steps': [{'feature': 'network_load', 'value': np.float64(0.1), 'effect': 'multiply prob by 0.940 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.73), 'effect': 'multiply prob by 1.595 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.26), 'effect': 'multiply prob by 0.818 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.15), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.1,0.73,0.26,0.2,0.006132137000000001,"{'timestamp': 1760866780.172753, 'inputs': {'network_load': np.float64(0.1), 'relay_reputation': np.float64(0.73), 'budget_utilization': np.float64(0.26), 'recent_win_rate': np.float64(0.2)}, 'base_prob': 0.01, 'final_prob': np.float64(0.006132137000000001), 'steps': [{'feature': 'network_load', 'value': np.float64(0.1), 'effect': 'multiply prob by 0.940 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.73), 'effect': 'multiply prob by 1.595 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.26), 'effect': 'multiply prob by 0.818 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.2), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.1,0.73,0.26,0.25,0.006132137000000001,"{'timestamp': 1760866780.1727786, 'inputs': {'network_load': np.float64(0.1), 'relay_reputation': np.float64(0.73), 'budget_utilization': np.float64(0.26), 'recent_win_rate': np.float64(0.25)}, 'base_prob': 0.01, 'final_prob': np.float64(0.006132137000000001), 'steps': [{'feature': 'network_load', 'value': np.float64(0.1), 'effect': 'multiply prob by 0.940 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.73), 'effect': 'multiply prob by 1.595 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.26), 'effect': 'multiply prob by 0.818 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.25), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.1,0.73,0.26,0.3,0.006132137000000001,"{'timestamp': 1760866780.1728058, 'inputs': {'network_load': np.float64(0.1), 'relay_reputation': np.float64(0.73), 'budget_utilization': np.float64(0.26), 'recent_win_rate': np.float64(0.3)}, 'base_prob': 0.01, 'final_prob': np.float64(0.006132137000000001), 'steps': [{'feature': 'network_load', 'value': np.float64(0.1), 'effect': 'multiply prob by 0.940 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.73), 'effect': 'multiply prob by 1.595 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.26), 'effect': 'multiply prob by 0.818 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.3), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.1,0.73,0.37,0.0,0.01110981288890187,"{'timestamp': 1760866780.172836, 'inputs': {'network_load': np.float64(0.1), 'relay_reputation': np.float64(0.73), 'budget_utilization': np.float64(0.37), 'recent_win_rate': 1e-09}, 'base_prob': 0.01, 'final_prob': np.float64(0.01110981288890187), 'steps': [{'feature': 'network_load', 'value': np.float64(0.1), 'effect': 'multiply prob by 0.940 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.73), 'effect': 'multiply prob by 1.595 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.37), 'effect': 'multiply prob by 0.741 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': 1e-09, 'effect': 'multiply prob by 1.000 (higher recent wins -> lower prob)'}]}"
0.1,0.73,0.37,0.05,0.005554906500000001,"{'timestamp': 1760866780.1728613, 'inputs': {'network_load': np.float64(0.1), 'relay_reputation': np.float64(0.73), 'budget_utilization': np.float64(0.37), 'recent_win_rate': np.float64(0.05)}, 'base_prob': 0.01, 'final_prob': np.float64(0.005554906500000001), 'steps': [{'feature': 'network_load', 'value': np.float64(0.1), 'effect': 'multiply prob by 0.940 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.73), 'effect': 'multiply prob by 1.595 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.37), 'effect': 'multiply prob by 0.741 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.05), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.1,0.73,0.37,0.1,0.005554906500000001,"{'timestamp': 1760866780.1728888, 'inputs': {'network_load': np.float64(0.1), 'relay_reputation': np.float64(0.73), 'budget_utilization': np.float64(0.37), 'recent_win_rate': np.float64(0.1)}, 'base_prob': 0.01, 'final_prob': np.float64(0.005554906500000001), 'steps': [{'feature': 'network_load', 'value': np.float64(0.1), 'effect': 'multiply prob by 0.940 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.73), 'effect': 'multiply prob by 1.595 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.37), 'effect': 'multiply prob by 0.741 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.1), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.1,0.73,0.37,0.15,0.005554906500000001,"{'timestamp': 1760866780.1729143, 'inputs': {'network_load': np.float64(0.1), 'relay_reputation': np.float64(0.73), 'budget_utilization': np.float64(0.37), 'recent_win_rate': np.float64(0.15)}, 'base_prob': 0.01, 'final_prob': np.float64(0.005554906500000001), 'steps': [{'feature': 'network_load', 'value': np.float64(0.1), 'effect': 'multiply prob by 0.940 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.73), 'effect': 'multiply prob by 1.595 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.37), 'effect': 'multiply prob by 0.741 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.15), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.1,0.73,0.37,0.2,0.005554906500000001,"{'timestamp': 1760866780.1729417, 'inputs': {'network_load': np.float64(0.1), 'relay_reputation': np.float64(0.73), 'budget_utilization': np.float64(0.37), 'recent_win_rate': np.float64(0.2)}, 'base_prob': 0.01, 'final_prob': np.float64(0.005554906500000001), 'steps': [{'feature': 'network_load', 'value': np.float64(0.1), 'effect': 'multiply prob by 0.940 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.73), 'effect': 'multiply prob by 1.595 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.37), 'effect': 'multiply prob by 0.741 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.2), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.1,0.73,0.37,0.25,0.005554906500000001,"{'timestamp': 1760866780.172967, 'inputs': {'network_load': np.float64(0.1), 'relay_reputation': np.float64(0.73), 'budget_utilization': np.float64(0.37), 'recent_win_rate': np.float64(0.25)}, 'base_prob': 0.01, 'final_prob': np.float64(0.005554906500000001), 'steps': [{'feature': 'network_load', 'value': np.float64(0.1), 'effect': 'multiply prob by 0.940 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.73), 'effect': 'multiply prob by 1.595 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.37), 'effect': 'multiply prob by 0.741 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.25), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.1,0.73,0.37,0.3,0.005554906500000001,"{'timestamp': 1760866780.172992, 'inputs': {'network_load': np.float64(0.1), 'relay_reputation': np.float64(0.73), 'budget_utilization': np.float64(0.37), 'recent_win_rate': np.float64(0.3)}, 'base_prob': 0.01, 'final_prob': np.float64(0.005554906500000001), 'steps': [{'feature': 'network_load', 'value': np.float64(0.1), 'effect': 'multiply prob by 0.940 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.73), 'effect': 'multiply prob by 1.595 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.37), 'effect': 'multiply prob by 0.741 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.3), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.1,0.73,0.48,0.0,0.00995535190044648,"{'timestamp': 1760866780.1730192, 'inputs': {'network_load': np.float64(0.1), 'relay_reputation': np.float64(0.73), 'budget_utilization': np.float64(0.48), 'recent_win_rate': 1e-09}, 'base_prob': 0.01, 'final_prob': np.float64(0.00995535190044648), 'steps': [{'feature': 'network_load', 'value': np.float64(0.1), 'effect': 'multiply prob by 0.940 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.73), 'effect': 'multiply prob by 1.595 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.48), 'effect': 'multiply prob by 0.664 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': 1e-09, 'effect': 'multiply prob by 1.000 (higher recent wins -> lower prob)'}]}"
0.1,0.73,0.48,0.05,0.004977676,"{'timestamp': 1760866780.1731322, 'inputs': {'network_load': np.float64(0.1), 'relay_reputation': np.float64(0.73), 'budget_utilization': np.float64(0.48), 'recent_win_rate': np.float64(0.05)}, 'base_prob': 0.01, 'final_prob': np.float64(0.004977676), 'steps': [{'feature': 'network_load', 'value': np.float64(0.1), 'effect': 'multiply prob by 0.940 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.73), 'effect': 'multiply prob by 1.595 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.48), 'effect': 'multiply prob by 0.664 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.05), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.1,0.73,0.48,0.1,0.004977676,"{'timestamp': 1760866780.173173, 'inputs': {'network_load': np.float64(0.1), 'relay_reputation': np.float64(0.73), 'budget_utilization': np.float64(0.48), 'recent_win_rate': np.float64(0.1)}, 'base_prob': 0.01, 'final_prob': np.float64(0.004977676), 'steps': [{'feature': 'network_load', 'value': np.float64(0.1), 'effect': 'multiply prob by 0.940 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.73), 'effect': 'multiply prob by 1.595 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.48), 'effect': 'multiply prob by 0.664 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.1), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.1,0.73,0.48,0.15,0.004977676,"{'timestamp': 1760866780.1731994, 'inputs': {'network_load': np.float64(0.1), 'relay_reputation': np.float64(0.73), 'budget_utilization': np.float64(0.48), 'recent_win_rate': np.float64(0.15)}, 'base_prob': 0.01, 'final_prob': np.float64(0.004977676), 'steps': [{'feature': 'network_load', 'value': np.float64(0.1), 'effect': 'multiply prob by 0.940 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.73), 'effect': 'multiply prob by 1.595 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.48), 'effect': 'multiply prob by 0.664 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.15), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.1,0.73,0.48,0.2,0.004977676,"{'timestamp': 1760866780.173225, 'inputs': {'network_load': np.float64(0.1), 'relay_reputation': np.float64(0.73), 'budget_utilization': np.float64(0.48), 'recent_win_rate': np.float64(0.2)}, 'base_prob': 0.01, 'final_prob': np.float64(0.004977676), 'steps': [{'feature': 'network_load', 'value': np.float64(0.1), 'effect': 'multiply prob by 0.940 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.73), 'effect': 'multiply prob by 1.595 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.48), 'effect': 'multiply prob by 0.664 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.2), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.1,0.73,0.48,0.25,0.004977676,"{'timestamp': 1760866780.173256, 'inputs': {'network_load': np.float64(0.1), 'relay_reputation': np.float64(0.73), 'budget_utilization': np.float64(0.48), 'recent_win_rate': np.float64(0.25)}, 'base_prob': 0.01, 'final_prob': np.float64(0.004977676), 'steps': [{'feature': 'network_load', 'value': np.float64(0.1), 'effect': 'multiply prob by 0.940 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.73), 'effect': 'multiply prob by 1.595 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.48), 'effect': 'multiply prob by 0.664 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.25), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.1,0.73,0.48,0.3,0.004977676,"{'timestamp': 1760866780.173288, 'inputs': {'network_load': np.float64(0.1), 'relay_reputation': np.float64(0.73), 'budget_utilization': np.float64(0.48), 'recent_win_rate': np.float64(0.3)}, 'base_prob': 0.01, 'final_prob': np.float64(0.004977676), 'steps': [{'feature': 'network_load', 'value': np.float64(0.1), 'effect': 'multiply prob by 0.940 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.73), 'effect': 'multiply prob by 1.595 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.48), 'effect': 'multiply prob by 0.664 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.3), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.1,0.73,0.59,0.0,0.008800890911991089,"{'timestamp': 1760866780.173318, 'inputs': {'network_load': np.float64(0.1), 'relay_reputation': np.float64(0.73), 'budget_utilization': np.float64(0.59), 'recent_win_rate': 1e-09}, 'base_prob': 0.01, 'final_prob': np.float64(0.008800890911991089), 'steps': [{'feature': 'network_load', 'value': np.float64(0.1), 'effect': 'multiply prob by 0.940 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.73), 'effect': 'multiply prob by 1.595 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.59), 'effect': 'multiply prob by 0.587 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': 1e-09, 'effect': 'multiply prob by 1.000 (higher recent wins -> lower prob)'}]}"
0.1,0.73,0.59,0.05,0.0044004455,"{'timestamp': 1760866780.1733437, 'inputs': {'network_load': np.float64(0.1), 'relay_reputation': np.float64(0.73), 'budget_utilization': np.float64(0.59), 'recent_win_rate': np.float64(0.05)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0044004455), 'steps': [{'feature': 'network_load', 'value': np.float64(0.1), 'effect': 'multiply prob by 0.940 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.73), 'effect': 'multiply prob by 1.595 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.59), 'effect': 'multiply prob by 0.587 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.05), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.1,0.73,0.59,0.1,0.0044004455,"{'timestamp': 1760866780.1733692, 'inputs': {'network_load': np.float64(0.1), 'relay_reputation': np.float64(0.73), 'budget_utilization': np.float64(0.59), 'recent_win_rate': np.float64(0.1)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0044004455), 'steps': [{'feature': 'network_load', 'value': np.float64(0.1), 'effect': 'multiply prob by 0.940 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.73), 'effect': 'multiply prob by 1.595 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.59), 'effect': 'multiply prob by 0.587 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.1), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.1,0.73,0.59,0.15,0.0044004455,"{'timestamp': 1760866780.173397, 'inputs': {'network_load': np.float64(0.1), 'relay_reputation': np.float64(0.73), 'budget_utilization': np.float64(0.59), 'recent_win_rate': np.float64(0.15)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0044004455), 'steps': [{'feature': 'network_load', 'value': np.float64(0.1), 'effect': 'multiply prob by 0.940 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.73), 'effect': 'multiply prob by 1.595 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.59), 'effect': 'multiply prob by 0.587 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.15), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.1,0.73,0.59,0.2,0.0044004455,"{'timestamp': 1760866780.173469, 'inputs': {'network_load': np.float64(0.1), 'relay_reputation': np.float64(0.73), 'budget_utilization': np.float64(0.59), 'recent_win_rate': np.float64(0.2)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0044004455), 'steps': [{'feature': 'network_load', 'value': np.float64(0.1), 'effect': 'multiply prob by 0.940 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.73), 'effect': 'multiply prob by 1.595 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.59), 'effect': 'multiply prob by 0.587 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.2), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.1,0.73,0.59,0.25,0.0044004455,"{'timestamp': 1760866780.173501, 'inputs': {'network_load': np.float64(0.1), 'relay_reputation': np.float64(0.73), 'budget_utilization': np.float64(0.59), 'recent_win_rate': np.float64(0.25)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0044004455), 'steps': [{'feature': 'network_load', 'value': np.float64(0.1), 'effect': 'multiply prob by 0.940 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.73), 'effect': 'multiply prob by 1.595 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.59), 'effect': 'multiply prob by 0.587 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.25), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.1,0.73,0.59,0.3,0.0044004455,"{'timestamp': 1760866780.1735284, 'inputs': {'network_load': np.float64(0.1), 'relay_reputation': np.float64(0.73), 'budget_utilization': np.float64(0.59), 'recent_win_rate': np.float64(0.3)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0044004455), 'steps': [{'feature': 'network_load', 'value': np.float64(0.1), 'effect': 'multiply prob by 0.940 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.73), 'effect': 'multiply prob by 1.595 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.59), 'effect': 'multiply prob by 0.587 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.3), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.1,0.73,0.69,0.0,0.007751380922486192,"{'timestamp': 1760866780.1735578, 'inputs': {'network_load': np.float64(0.1), 'relay_reputation': np.float64(0.73), 'budget_utilization': np.float64(0.69), 'recent_win_rate': 1e-09}, 'base_prob': 0.01, 'final_prob': np.float64(0.007751380922486192), 'steps': [{'feature': 'network_load', 'value': np.float64(0.1), 'effect': 'multiply prob by 0.940 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.73), 'effect': 'multiply prob by 1.595 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.69), 'effect': 'multiply prob by 0.517 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': 1e-09, 'effect': 'multiply prob by 1.000 (higher recent wins -> lower prob)'}]}"
0.1,0.73,0.69,0.05,0.0038756905000000012,"{'timestamp': 1760866780.173583, 'inputs': {'network_load': np.float64(0.1), 'relay_reputation': np.float64(0.73), 'budget_utilization': np.float64(0.69), 'recent_win_rate': np.float64(0.05)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0038756905000000012), 'steps': [{'feature': 'network_load', 'value': np.float64(0.1), 'effect': 'multiply prob by 0.940 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.73), 'effect': 'multiply prob by 1.595 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.69), 'effect': 'multiply prob by 0.517 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.05), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.1,0.73,0.69,0.1,0.0038756905000000012,"{'timestamp': 1760866780.1736083, 'inputs': {'network_load': np.float64(0.1), 'relay_reputation': np.float64(0.73), 'budget_utilization': np.float64(0.69), 'recent_win_rate': np.float64(0.1)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0038756905000000012), 'steps': [{'feature': 'network_load', 'value': np.float64(0.1), 'effect': 'multiply prob by 0.940 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.73), 'effect': 'multiply prob by 1.595 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.69), 'effect': 'multiply prob by 0.517 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.1), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.1,0.73,0.69,0.15,0.0038756905000000012,"{'timestamp': 1760866780.1736355, 'inputs': {'network_load': np.float64(0.1), 'relay_reputation': np.float64(0.73), 'budget_utilization': np.float64(0.69), 'recent_win_rate': np.float64(0.15)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0038756905000000012), 'steps': [{'feature': 'network_load', 'value': np.float64(0.1), 'effect': 'multiply prob by 0.940 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.73), 'effect': 'multiply prob by 1.595 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.69), 'effect': 'multiply prob by 0.517 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.15), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.1,0.73,0.69,0.2,0.0038756905000000012,"{'timestamp': 1760866780.1736608, 'inputs': {'network_load': np.float64(0.1), 'relay_reputation': np.float64(0.73), 'budget_utilization': np.float64(0.69), 'recent_win_rate': np.float64(0.2)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0038756905000000012), 'steps': [{'feature': 'network_load', 'value': np.float64(0.1), 'effect': 'multiply prob by 0.940 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.73), 'effect': 'multiply prob by 1.595 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.69), 'effect': 'multiply prob by 0.517 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.2), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.1,0.73,0.69,0.25,0.0038756905000000012,"{'timestamp': 1760866780.1736875, 'inputs': {'network_load': np.float64(0.1), 'relay_reputation': np.float64(0.73), 'budget_utilization': np.float64(0.69), 'recent_win_rate': np.float64(0.25)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0038756905000000012), 'steps': [{'feature': 'network_load', 'value': np.float64(0.1), 'effect': 'multiply prob by 0.940 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.73), 'effect': 'multiply prob by 1.595 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.69), 'effect': 'multiply prob by 0.517 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.25), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.1,0.73,0.69,0.3,0.0038756905000000012,"{'timestamp': 1760866780.1737132, 'inputs': {'network_load': np.float64(0.1), 'relay_reputation': np.float64(0.73), 'budget_utilization': np.float64(0.69), 'recent_win_rate': np.float64(0.3)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0038756905000000012), 'steps': [{'feature': 'network_load', 'value': np.float64(0.1), 'effect': 'multiply prob by 0.940 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.73), 'effect': 'multiply prob by 1.595 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.69), 'effect': 'multiply prob by 0.517 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.3), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.1,0.73,0.8,0.0,0.006596919934030801,"{'timestamp': 1760866780.1737418, 'inputs': {'network_load': np.float64(0.1), 'relay_reputation': np.float64(0.73), 'budget_utilization': np.float64(0.8), 'recent_win_rate': 1e-09}, 'base_prob': 0.01, 'final_prob': np.float64(0.006596919934030801), 'steps': [{'feature': 'network_load', 'value': np.float64(0.1), 'effect': 'multiply prob by 0.940 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.73), 'effect': 'multiply prob by 1.595 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.8), 'effect': 'multiply prob by 0.440 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': 1e-09, 'effect': 'multiply prob by 1.000 (higher recent wins -> lower prob)'}]}"
0.1,0.73,0.8,0.05,0.003298460000000001,"{'timestamp': 1760866780.1737707, 'inputs': {'network_load': np.float64(0.1), 'relay_reputation': np.float64(0.73), 'budget_utilization': np.float64(0.8), 'recent_win_rate': np.float64(0.05)}, 'base_prob': 0.01, 'final_prob': np.float64(0.003298460000000001), 'steps': [{'feature': 'network_load', 'value': np.float64(0.1), 'effect': 'multiply prob by 0.940 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.73), 'effect': 'multiply prob by 1.595 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.8), 'effect': 'multiply prob by 0.440 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.05), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.1,0.73,0.8,0.1,0.003298460000000001,"{'timestamp': 1760866780.1737964, 'inputs': {'network_load': np.float64(0.1), 'relay_reputation': np.float64(0.73), 'budget_utilization': np.float64(0.8), 'recent_win_rate': np.float64(0.1)}, 'base_prob': 0.01, 'final_prob': np.float64(0.003298460000000001), 'steps': [{'feature': 'network_load', 'value': np.float64(0.1), 'effect': 'multiply prob by 0.940 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.73), 'effect': 'multiply prob by 1.595 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.8), 'effect': 'multiply prob by 0.440 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.1), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.1,0.73,0.8,0.15,0.003298460000000001,"{'timestamp': 1760866780.1738214, 'inputs': {'network_load': np.float64(0.1), 'relay_reputation': np.float64(0.73), 'budget_utilization': np.float64(0.8), 'recent_win_rate': np.float64(0.15)}, 'base_prob': 0.01, 'final_prob': np.float64(0.003298460000000001), 'steps': [{'feature': 'network_load', 'value': np.float64(0.1), 'effect': 'multiply prob by 0.940 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.73), 'effect': 'multiply prob by 1.595 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.8), 'effect': 'multiply prob by 0.440 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.15), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.1,0.73,0.8,0.2,0.003298460000000001,"{'timestamp': 1760866780.1738467, 'inputs': {'network_load': np.float64(0.1), 'relay_reputation': np.float64(0.73), 'budget_utilization': np.float64(0.8), 'recent_win_rate': np.float64(0.2)}, 'base_prob': 0.01, 'final_prob': np.float64(0.003298460000000001), 'steps': [{'feature': 'network_load', 'value': np.float64(0.1), 'effect': 'multiply prob by 0.940 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.73), 'effect': 'multiply prob by 1.595 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.8), 'effect': 'multiply prob by 0.440 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.2), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.1,0.73,0.8,0.25,0.003298460000000001,"{'timestamp': 1760866780.1738718, 'inputs': {'network_load': np.float64(0.1), 'relay_reputation': np.float64(0.73), 'budget_utilization': np.float64(0.8), 'recent_win_rate': np.float64(0.25)}, 'base_prob': 0.01, 'final_prob': np.float64(0.003298460000000001), 'steps': [{'feature': 'network_load', 'value': np.float64(0.1), 'effect': 'multiply prob by 0.940 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.73), 'effect': 'multiply prob by 1.595 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.8), 'effect': 'multiply prob by 0.440 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.25), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.1,0.73,0.8,0.3,0.003298460000000001,"{'timestamp': 1760866780.1738992, 'inputs': {'network_load': np.float64(0.1), 'relay_reputation': np.float64(0.73), 'budget_utilization': np.float64(0.8), 'recent_win_rate': np.float64(0.3)}, 'base_prob': 0.01, 'final_prob': np.float64(0.003298460000000001), 'steps': [{'feature': 'network_load', 'value': np.float64(0.1), 'effect': 'multiply prob by 0.940 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.73), 'effect': 'multiply prob by 1.595 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.8), 'effect': 'multiply prob by 0.440 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.3), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.1,0.84,0.05,0.0,0.0159649598403504,"{'timestamp': 1760866780.1739273, 'inputs': {'network_load': np.float64(0.1), 'relay_reputation': np.float64(0.84), 'budget_utilization': np.float64(0.05), 'recent_win_rate': 1e-09}, 'base_prob': 0.01, 'final_prob': np.float64(0.0159649598403504), 'steps': [{'feature': 'network_load', 'value': np.float64(0.1), 'effect': 'multiply prob by 0.940 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.84), 'effect': 'multiply prob by 1.760 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.05), 'effect': 'multiply prob by 0.965 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': 1e-09, 'effect': 'multiply prob by 1.000 (higher recent wins -> lower prob)'}]}"
0.1,0.84,0.05,0.05,0.00798248,"{'timestamp': 1760866780.173955, 'inputs': {'network_load': np.float64(0.1), 'relay_reputation': np.float64(0.84), 'budget_utilization': np.float64(0.05), 'recent_win_rate': np.float64(0.05)}, 'base_prob': 0.01, 'final_prob': np.float64(0.00798248), 'steps': [{'feature': 'network_load', 'value': np.float64(0.1), 'effect': 'multiply prob by 0.940 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.84), 'effect': 'multiply prob by 1.760 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.05), 'effect': 'multiply prob by 0.965 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.05), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.1,0.84,0.05,0.1,0.00798248,"{'timestamp': 1760866780.1739805, 'inputs': {'network_load': np.float64(0.1), 'relay_reputation': np.float64(0.84), 'budget_utilization': np.float64(0.05), 'recent_win_rate': np.float64(0.1)}, 'base_prob': 0.01, 'final_prob': np.float64(0.00798248), 'steps': [{'feature': 'network_load', 'value': np.float64(0.1), 'effect': 'multiply prob by 0.940 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.84), 'effect': 'multiply prob by 1.760 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.05), 'effect': 'multiply prob by 0.965 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.1), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.1,0.84,0.05,0.15,0.00798248,"{'timestamp': 1760866780.174068, 'inputs': {'network_load': np.float64(0.1), 'relay_reputation': np.float64(0.84), 'budget_utilization': np.float64(0.05), 'recent_win_rate': np.float64(0.15)}, 'base_prob': 0.01, 'final_prob': np.float64(0.00798248), 'steps': [{'feature': 'network_load', 'value': np.float64(0.1), 'effect': 'multiply prob by 0.940 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.84), 'effect': 'multiply prob by 1.760 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.05), 'effect': 'multiply prob by 0.965 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.15), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.1,0.84,0.05,0.2,0.00798248,"{'timestamp': 1760866780.1740952, 'inputs': {'network_load': np.float64(0.1), 'relay_reputation': np.float64(0.84), 'budget_utilization': np.float64(0.05), 'recent_win_rate': np.float64(0.2)}, 'base_prob': 0.01, 'final_prob': np.float64(0.00798248), 'steps': [{'feature': 'network_load', 'value': np.float64(0.1), 'effect': 'multiply prob by 0.940 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.84), 'effect': 'multiply prob by 1.760 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.05), 'effect': 'multiply prob by 0.965 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.2), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.1,0.84,0.05,0.25,0.00798248,"{'timestamp': 1760866780.1741264, 'inputs': {'network_load': np.float64(0.1), 'relay_reputation': np.float64(0.84), 'budget_utilization': np.float64(0.05), 'recent_win_rate': np.float64(0.25)}, 'base_prob': 0.01, 'final_prob': np.float64(0.00798248), 'steps': [{'feature': 'network_load', 'value': np.float64(0.1), 'effect': 'multiply prob by 0.940 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.84), 'effect': 'multiply prob by 1.760 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.05), 'effect': 'multiply prob by 0.965 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.25), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.1,0.84,0.05,0.3,0.00798248,"{'timestamp': 1760866780.1741517, 'inputs': {'network_load': np.float64(0.1), 'relay_reputation': np.float64(0.84), 'budget_utilization': np.float64(0.05), 'recent_win_rate': np.float64(0.3)}, 'base_prob': 0.01, 'final_prob': np.float64(0.00798248), 'steps': [{'feature': 'network_load', 'value': np.float64(0.1), 'effect': 'multiply prob by 0.940 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.84), 'effect': 'multiply prob by 1.760 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.05), 'effect': 'multiply prob by 0.965 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.3), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.1,0.84,0.16,0.0,0.014691071853089278,"{'timestamp': 1760866780.1741815, 'inputs': {'network_load': np.float64(0.1), 'relay_reputation': np.float64(0.84), 'budget_utilization': np.float64(0.16), 'recent_win_rate': 1e-09}, 'base_prob': 0.01, 'final_prob': np.float64(0.014691071853089278), 'steps': [{'feature': 'network_load', 'value': np.float64(0.1), 'effect': 'multiply prob by 0.940 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.84), 'effect': 'multiply prob by 1.760 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.16), 'effect': 'multiply prob by 0.888 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': 1e-09, 'effect': 'multiply prob by 1.000 (higher recent wins -> lower prob)'}]}"
0.1,0.84,0.16,0.05,0.007345536,"{'timestamp': 1760866780.174207, 'inputs': {'network_load': np.float64(0.1), 'relay_reputation': np.float64(0.84), 'budget_utilization': np.float64(0.16), 'recent_win_rate': np.float64(0.05)}, 'base_prob': 0.01, 'final_prob': np.float64(0.007345536), 'steps': [{'feature': 'network_load', 'value': np.float64(0.1), 'effect': 'multiply prob by 0.940 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.84), 'effect': 'multiply prob by 1.760 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.16), 'effect': 'multiply prob by 0.888 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.05), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.1,0.84,0.16,0.1,0.007345536,"{'timestamp': 1760866780.1742373, 'inputs': {'network_load': np.float64(0.1), 'relay_reputation': np.float64(0.84), 'budget_utilization': np.float64(0.16), 'recent_win_rate': np.float64(0.1)}, 'base_prob': 0.01, 'final_prob': np.float64(0.007345536), 'steps': [{'feature': 'network_load', 'value': np.float64(0.1), 'effect': 'multiply prob by 0.940 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.84), 'effect': 'multiply prob by 1.760 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.16), 'effect': 'multiply prob by 0.888 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.1), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.1,0.84,0.16,0.15,0.007345536,"{'timestamp': 1760866780.1742659, 'inputs': {'network_load': np.float64(0.1), 'relay_reputation': np.float64(0.84), 'budget_utilization': np.float64(0.16), 'recent_win_rate': np.float64(0.15)}, 'base_prob': 0.01, 'final_prob': np.float64(0.007345536), 'steps': [{'feature': 'network_load', 'value': np.float64(0.1), 'effect': 'multiply prob by 0.940 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.84), 'effect': 'multiply prob by 1.760 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.16), 'effect': 'multiply prob by 0.888 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.15), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.1,0.84,0.16,0.2,0.007345536,"{'timestamp': 1760866780.1742914, 'inputs': {'network_load': np.float64(0.1), 'relay_reputation': np.float64(0.84), 'budget_utilization': np.float64(0.16), 'recent_win_rate': np.float64(0.2)}, 'base_prob': 0.01, 'final_prob': np.float64(0.007345536), 'steps': [{'feature': 'network_load', 'value': np.float64(0.1), 'effect': 'multiply prob by 0.940 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.84), 'effect': 'multiply prob by 1.760 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.16), 'effect': 'multiply prob by 0.888 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.2), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.1,0.84,0.16,0.25,0.007345536,"{'timestamp': 1760866780.174317, 'inputs': {'network_load': np.float64(0.1), 'relay_reputation': np.float64(0.84), 'budget_utilization': np.float64(0.16), 'recent_win_rate': np.float64(0.25)}, 'base_prob': 0.01, 'final_prob': np.float64(0.007345536), 'steps': [{'feature': 'network_load', 'value': np.float64(0.1), 'effect': 'multiply prob by 0.940 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.84), 'effect': 'multiply prob by 1.760 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.16), 'effect': 'multiply prob by 0.888 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.25), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.1,0.84,0.16,0.3,0.007345536,"{'timestamp': 1760866780.174342, 'inputs': {'network_load': np.float64(0.1), 'relay_reputation': np.float64(0.84), 'budget_utilization': np.float64(0.16), 'recent_win_rate': np.float64(0.3)}, 'base_prob': 0.01, 'final_prob': np.float64(0.007345536), 'steps': [{'feature': 'network_load', 'value': np.float64(0.1), 'effect': 'multiply prob by 0.940 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.84), 'effect': 'multiply prob by 1.760 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.16), 'effect': 'multiply prob by 0.888 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.3), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.1,0.84,0.26,0.0,0.01353299186467008,"{'timestamp': 1760866780.174369, 'inputs': {'network_load': np.float64(0.1), 'relay_reputation': np.float64(0.84), 'budget_utilization': np.float64(0.26), 'recent_win_rate': 1e-09}, 'base_prob': 0.01, 'final_prob': np.float64(0.01353299186467008), 'steps': [{'feature': 'network_load', 'value': np.float64(0.1), 'effect': 'multiply prob by 0.940 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.84), 'effect': 'multiply prob by 1.760 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.26), 'effect': 'multiply prob by 0.818 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': 1e-09, 'effect': 'multiply prob by 1.000 (higher recent wins -> lower prob)'}]}"
0.1,0.84,0.26,0.05,0.006766496,"{'timestamp': 1760866780.1743968, 'inputs': {'network_load': np.float64(0.1), 'relay_reputation': np.float64(0.84), 'budget_utilization': np.float64(0.26), 'recent_win_rate': np.float64(0.05)}, 'base_prob': 0.01, 'final_prob': np.float64(0.006766496), 'steps': [{'feature': 'network_load', 'value': np.float64(0.1), 'effect': 'multiply prob by 0.940 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.84), 'effect': 'multiply prob by 1.760 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.26), 'effect': 'multiply prob by 0.818 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.05), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.1,0.84,0.26,0.1,0.006766496,"{'timestamp': 1760866780.174422, 'inputs': {'network_load': np.float64(0.1), 'relay_reputation': np.float64(0.84), 'budget_utilization': np.float64(0.26), 'recent_win_rate': np.float64(0.1)}, 'base_prob': 0.01, 'final_prob': np.float64(0.006766496), 'steps': [{'feature': 'network_load', 'value': np.float64(0.1), 'effect': 'multiply prob by 0.940 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.84), 'effect': 'multiply prob by 1.760 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.26), 'effect': 'multiply prob by 0.818 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.1), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.1,0.84,0.26,0.15,0.006766496,"{'timestamp': 1760866780.1744494, 'inputs': {'network_load': np.float64(0.1), 'relay_reputation': np.float64(0.84), 'budget_utilization': np.float64(0.26), 'recent_win_rate': np.float64(0.15)}, 'base_prob': 0.01, 'final_prob': np.float64(0.006766496), 'steps': [{'feature': 'network_load', 'value': np.float64(0.1), 'effect': 'multiply prob by 0.940 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.84), 'effect': 'multiply prob by 1.760 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.26), 'effect': 'multiply prob by 0.818 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.15), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.1,0.84,0.26,0.2,0.006766496,"{'timestamp': 1760866780.174475, 'inputs': {'network_load': np.float64(0.1), 'relay_reputation': np.float64(0.84), 'budget_utilization': np.float64(0.26), 'recent_win_rate': np.float64(0.2)}, 'base_prob': 0.01, 'final_prob': np.float64(0.006766496), 'steps': [{'feature': 'network_load', 'value': np.float64(0.1), 'effect': 'multiply prob by 0.940 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.84), 'effect': 'multiply prob by 1.760 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.26), 'effect': 'multiply prob by 0.818 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.2), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.1,0.84,0.26,0.25,0.006766496,"{'timestamp': 1760866780.1745005, 'inputs': {'network_load': np.float64(0.1), 'relay_reputation': np.float64(0.84), 'budget_utilization': np.float64(0.26), 'recent_win_rate': np.float64(0.25)}, 'base_prob': 0.01, 'final_prob': np.float64(0.006766496), 'steps': [{'feature': 'network_load', 'value': np.float64(0.1), 'effect': 'multiply prob by 0.940 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.84), 'effect': 'multiply prob by 1.760 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.26), 'effect': 'multiply prob by 0.818 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.25), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.1,0.84,0.26,0.3,0.006766496,"{'timestamp': 1760866780.174527, 'inputs': {'network_load': np.float64(0.1), 'relay_reputation': np.float64(0.84), 'budget_utilization': np.float64(0.26), 'recent_win_rate': np.float64(0.3)}, 'base_prob': 0.01, 'final_prob': np.float64(0.006766496), 'steps': [{'feature': 'network_load', 'value': np.float64(0.1), 'effect': 'multiply prob by 0.940 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.84), 'effect': 'multiply prob by 1.760 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.26), 'effect': 'multiply prob by 0.818 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.3), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.1,0.84,0.37,0.0,0.01225910387740896,"{'timestamp': 1760866780.1745543, 'inputs': {'network_load': np.float64(0.1), 'relay_reputation': np.float64(0.84), 'budget_utilization': np.float64(0.37), 'recent_win_rate': 1e-09}, 'base_prob': 0.01, 'final_prob': np.float64(0.01225910387740896), 'steps': [{'feature': 'network_load', 'value': np.float64(0.1), 'effect': 'multiply prob by 0.940 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.84), 'effect': 'multiply prob by 1.760 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.37), 'effect': 'multiply prob by 0.741 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': 1e-09, 'effect': 'multiply prob by 1.000 (higher recent wins -> lower prob)'}]}"
0.1,0.84,0.37,0.05,0.006129552,"{'timestamp': 1760866780.1745796, 'inputs': {'network_load': np.float64(0.1), 'relay_reputation': np.float64(0.84), 'budget_utilization': np.float64(0.37), 'recent_win_rate': np.float64(0.05)}, 'base_prob': 0.01, 'final_prob': np.float64(0.006129552), 'steps': [{'feature': 'network_load', 'value': np.float64(0.1), 'effect': 'multiply prob by 0.940 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.84), 'effect': 'multiply prob by 1.760 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.37), 'effect': 'multiply prob by 0.741 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.05), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.1,0.84,0.37,0.1,0.006129552,"{'timestamp': 1760866780.1746082, 'inputs': {'network_load': np.float64(0.1), 'relay_reputation': np.float64(0.84), 'budget_utilization': np.float64(0.37), 'recent_win_rate': np.float64(0.1)}, 'base_prob': 0.01, 'final_prob': np.float64(0.006129552), 'steps': [{'feature': 'network_load', 'value': np.float64(0.1), 'effect': 'multiply prob by 0.940 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.84), 'effect': 'multiply prob by 1.760 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.37), 'effect': 'multiply prob by 0.741 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.1), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.1,0.84,0.37,0.15,0.006129552,"{'timestamp': 1760866780.174634, 'inputs': {'network_load': np.float64(0.1), 'relay_reputation': np.float64(0.84), 'budget_utilization': np.float64(0.37), 'recent_win_rate': np.float64(0.15)}, 'base_prob': 0.01, 'final_prob': np.float64(0.006129552), 'steps': [{'feature': 'network_load', 'value': np.float64(0.1), 'effect': 'multiply prob by 0.940 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.84), 'effect': 'multiply prob by 1.760 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.37), 'effect': 'multiply prob by 0.741 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.15), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.1,0.84,0.37,0.2,0.006129552,"{'timestamp': 1760866780.174902, 'inputs': {'network_load': np.float64(0.1), 'relay_reputation': np.float64(0.84), 'budget_utilization': np.float64(0.37), 'recent_win_rate': np.float64(0.2)}, 'base_prob': 0.01, 'final_prob': np.float64(0.006129552), 'steps': [{'feature': 'network_load', 'value': np.float64(0.1), 'effect': 'multiply prob by 0.940 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.84), 'effect': 'multiply prob by 1.760 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.37), 'effect': 'multiply prob by 0.741 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.2), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.1,0.84,0.37,0.25,0.006129552,"{'timestamp': 1760866780.1749437, 'inputs': {'network_load': np.float64(0.1), 'relay_reputation': np.float64(0.84), 'budget_utilization': np.float64(0.37), 'recent_win_rate': np.float64(0.25)}, 'base_prob': 0.01, 'final_prob': np.float64(0.006129552), 'steps': [{'feature': 'network_load', 'value': np.float64(0.1), 'effect': 'multiply prob by 0.940 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.84), 'effect': 'multiply prob by 1.760 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.37), 'effect': 'multiply prob by 0.741 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.25), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.1,0.84,0.37,0.3,0.006129552,"{'timestamp': 1760866780.174971, 'inputs': {'network_load': np.float64(0.1), 'relay_reputation': np.float64(0.84), 'budget_utilization': np.float64(0.37), 'recent_win_rate': np.float64(0.3)}, 'base_prob': 0.01, 'final_prob': np.float64(0.006129552), 'steps': [{'feature': 'network_load', 'value': np.float64(0.1), 'effect': 'multiply prob by 0.940 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.84), 'effect': 'multiply prob by 1.760 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.37), 'effect': 'multiply prob by 0.741 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.3), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.1,0.84,0.48,0.0,0.01098521589014784,"{'timestamp': 1760866780.1750028, 'inputs': {'network_load': np.float64(0.1), 'relay_reputation': np.float64(0.84), 'budget_utilization': np.float64(0.48), 'recent_win_rate': 1e-09}, 'base_prob': 0.01, 'final_prob': np.float64(0.01098521589014784), 'steps': [{'feature': 'network_load', 'value': np.float64(0.1), 'effect': 'multiply prob by 0.940 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.84), 'effect': 'multiply prob by 1.760 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.48), 'effect': 'multiply prob by 0.664 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': 1e-09, 'effect': 'multiply prob by 1.000 (higher recent wins -> lower prob)'}]}"
0.1,0.84,0.48,0.05,0.005492608,"{'timestamp': 1760866780.1750286, 'inputs': {'network_load': np.float64(0.1), 'relay_reputation': np.float64(0.84), 'budget_utilization': np.float64(0.48), 'recent_win_rate': np.float64(0.05)}, 'base_prob': 0.01, 'final_prob': np.float64(0.005492608), 'steps': [{'feature': 'network_load', 'value': np.float64(0.1), 'effect': 'multiply prob by 0.940 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.84), 'effect': 'multiply prob by 1.760 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.48), 'effect': 'multiply prob by 0.664 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.05), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.1,0.84,0.48,0.1,0.005492608,"{'timestamp': 1760866780.1750538, 'inputs': {'network_load': np.float64(0.1), 'relay_reputation': np.float64(0.84), 'budget_utilization': np.float64(0.48), 'recent_win_rate': np.float64(0.1)}, 'base_prob': 0.01, 'final_prob': np.float64(0.005492608), 'steps': [{'feature': 'network_load', 'value': np.float64(0.1), 'effect': 'multiply prob by 0.940 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.84), 'effect': 'multiply prob by 1.760 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.48), 'effect': 'multiply prob by 0.664 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.1), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.1,0.84,0.48,0.15,0.005492608,"{'timestamp': 1760866780.1750813, 'inputs': {'network_load': np.float64(0.1), 'relay_reputation': np.float64(0.84), 'budget_utilization': np.float64(0.48), 'recent_win_rate': np.float64(0.15)}, 'base_prob': 0.01, 'final_prob': np.float64(0.005492608), 'steps': [{'feature': 'network_load', 'value': np.float64(0.1), 'effect': 'multiply prob by 0.940 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.84), 'effect': 'multiply prob by 1.760 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.48), 'effect': 'multiply prob by 0.664 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.15), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.1,0.84,0.48,0.2,0.005492608,"{'timestamp': 1760866780.1751814, 'inputs': {'network_load': np.float64(0.1), 'relay_reputation': np.float64(0.84), 'budget_utilization': np.float64(0.48), 'recent_win_rate': np.float64(0.2)}, 'base_prob': 0.01, 'final_prob': np.float64(0.005492608), 'steps': [{'feature': 'network_load', 'value': np.float64(0.1), 'effect': 'multiply prob by 0.940 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.84), 'effect': 'multiply prob by 1.760 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.48), 'effect': 'multiply prob by 0.664 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.2), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.1,0.84,0.48,0.25,0.005492608,"{'timestamp': 1760866780.1752226, 'inputs': {'network_load': np.float64(0.1), 'relay_reputation': np.float64(0.84), 'budget_utilization': np.float64(0.48), 'recent_win_rate': np.float64(0.25)}, 'base_prob': 0.01, 'final_prob': np.float64(0.005492608), 'steps': [{'feature': 'network_load', 'value': np.float64(0.1), 'effect': 'multiply prob by 0.940 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.84), 'effect': 'multiply prob by 1.760 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.48), 'effect': 'multiply prob by 0.664 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.25), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.1,0.84,0.48,0.3,0.005492608,"{'timestamp': 1760866780.1752489, 'inputs': {'network_load': np.float64(0.1), 'relay_reputation': np.float64(0.84), 'budget_utilization': np.float64(0.48), 'recent_win_rate': np.float64(0.3)}, 'base_prob': 0.01, 'final_prob': np.float64(0.005492608), 'steps': [{'feature': 'network_load', 'value': np.float64(0.1), 'effect': 'multiply prob by 0.940 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.84), 'effect': 'multiply prob by 1.760 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.48), 'effect': 'multiply prob by 0.664 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.3), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.1,0.84,0.59,0.0,0.009711327902886719,"{'timestamp': 1760866780.1752782, 'inputs': {'network_load': np.float64(0.1), 'relay_reputation': np.float64(0.84), 'budget_utilization': np.float64(0.59), 'recent_win_rate': 1e-09}, 'base_prob': 0.01, 'final_prob': np.float64(0.009711327902886719), 'steps': [{'feature': 'network_load', 'value': np.float64(0.1), 'effect': 'multiply prob by 0.940 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.84), 'effect': 'multiply prob by 1.760 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.59), 'effect': 'multiply prob by 0.587 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': 1e-09, 'effect': 'multiply prob by 1.000 (higher recent wins -> lower prob)'}]}"
0.1,0.84,0.59,0.05,0.004855664,"{'timestamp': 1760866780.1753068, 'inputs': {'network_load': np.float64(0.1), 'relay_reputation': np.float64(0.84), 'budget_utilization': np.float64(0.59), 'recent_win_rate': np.float64(0.05)}, 'base_prob': 0.01, 'final_prob': np.float64(0.004855664), 'steps': [{'feature': 'network_load', 'value': np.float64(0.1), 'effect': 'multiply prob by 0.940 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.84), 'effect': 'multiply prob by 1.760 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.59), 'effect': 'multiply prob by 0.587 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.05), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.1,0.84,0.59,0.1,0.004855664,"{'timestamp': 1760866780.175332, 'inputs': {'network_load': np.float64(0.1), 'relay_reputation': np.float64(0.84), 'budget_utilization': np.float64(0.59), 'recent_win_rate': np.float64(0.1)}, 'base_prob': 0.01, 'final_prob': np.float64(0.004855664), 'steps': [{'feature': 'network_load', 'value': np.float64(0.1), 'effect': 'multiply prob by 0.940 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.84), 'effect': 'multiply prob by 1.760 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.59), 'effect': 'multiply prob by 0.587 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.1), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.1,0.84,0.59,0.15,0.004855664,"{'timestamp': 1760866780.1753573, 'inputs': {'network_load': np.float64(0.1), 'relay_reputation': np.float64(0.84), 'budget_utilization': np.float64(0.59), 'recent_win_rate': np.float64(0.15)}, 'base_prob': 0.01, 'final_prob': np.float64(0.004855664), 'steps': [{'feature': 'network_load', 'value': np.float64(0.1), 'effect': 'multiply prob by 0.940 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.84), 'effect': 'multiply prob by 1.760 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.59), 'effect': 'multiply prob by 0.587 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.15), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.1,0.84,0.59,0.2,0.004855664,"{'timestamp': 1760866780.1753829, 'inputs': {'network_load': np.float64(0.1), 'relay_reputation': np.float64(0.84), 'budget_utilization': np.float64(0.59), 'recent_win_rate': np.float64(0.2)}, 'base_prob': 0.01, 'final_prob': np.float64(0.004855664), 'steps': [{'feature': 'network_load', 'value': np.float64(0.1), 'effect': 'multiply prob by 0.940 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.84), 'effect': 'multiply prob by 1.760 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.59), 'effect': 'multiply prob by 0.587 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.2), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.1,0.84,0.59,0.25,0.004855664,"{'timestamp': 1760866780.1754096, 'inputs': {'network_load': np.float64(0.1), 'relay_reputation': np.float64(0.84), 'budget_utilization': np.float64(0.59), 'recent_win_rate': np.float64(0.25)}, 'base_prob': 0.01, 'final_prob': np.float64(0.004855664), 'steps': [{'feature': 'network_load', 'value': np.float64(0.1), 'effect': 'multiply prob by 0.940 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.84), 'effect': 'multiply prob by 1.760 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.59), 'effect': 'multiply prob by 0.587 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.25), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.1,0.84,0.59,0.3,0.004855664,"{'timestamp': 1760866780.1754355, 'inputs': {'network_load': np.float64(0.1), 'relay_reputation': np.float64(0.84), 'budget_utilization': np.float64(0.59), 'recent_win_rate': np.float64(0.3)}, 'base_prob': 0.01, 'final_prob': np.float64(0.004855664), 'steps': [{'feature': 'network_load', 'value': np.float64(0.1), 'effect': 'multiply prob by 0.940 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.84), 'effect': 'multiply prob by 1.760 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.59), 'effect': 'multiply prob by 0.587 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.3), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.1,0.84,0.69,0.0,0.00855324791446752,"{'timestamp': 1760866780.1754675, 'inputs': {'network_load': np.float64(0.1), 'relay_reputation': np.float64(0.84), 'budget_utilization': np.float64(0.69), 'recent_win_rate': 1e-09}, 'base_prob': 0.01, 'final_prob': np.float64(0.00855324791446752), 'steps': [{'feature': 'network_load', 'value': np.float64(0.1), 'effect': 'multiply prob by 0.940 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.84), 'effect': 'multiply prob by 1.760 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.69), 'effect': 'multiply prob by 0.517 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': 1e-09, 'effect': 'multiply prob by 1.000 (higher recent wins -> lower prob)'}]}"
0.1,0.84,0.69,0.05,0.004276624000000001,"{'timestamp': 1760866780.1754935, 'inputs': {'network_load': np.float64(0.1), 'relay_reputation': np.float64(0.84), 'budget_utilization': np.float64(0.69), 'recent_win_rate': np.float64(0.05)}, 'base_prob': 0.01, 'final_prob': np.float64(0.004276624000000001), 'steps': [{'feature': 'network_load', 'value': np.float64(0.1), 'effect': 'multiply prob by 0.940 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.84), 'effect': 'multiply prob by 1.760 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.69), 'effect': 'multiply prob by 0.517 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.05), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.1,0.84,0.69,0.1,0.004276624000000001,"{'timestamp': 1760866780.1755188, 'inputs': {'network_load': np.float64(0.1), 'relay_reputation': np.float64(0.84), 'budget_utilization': np.float64(0.69), 'recent_win_rate': np.float64(0.1)}, 'base_prob': 0.01, 'final_prob': np.float64(0.004276624000000001), 'steps': [{'feature': 'network_load', 'value': np.float64(0.1), 'effect': 'multiply prob by 0.940 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.84), 'effect': 'multiply prob by 1.760 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.69), 'effect': 'multiply prob by 0.517 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.1), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.1,0.84,0.69,0.15,0.004276624000000001,"{'timestamp': 1760866780.175547, 'inputs': {'network_load': np.float64(0.1), 'relay_reputation': np.float64(0.84), 'budget_utilization': np.float64(0.69), 'recent_win_rate': np.float64(0.15)}, 'base_prob': 0.01, 'final_prob': np.float64(0.004276624000000001), 'steps': [{'feature': 'network_load', 'value': np.float64(0.1), 'effect': 'multiply prob by 0.940 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.84), 'effect': 'multiply prob by 1.760 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.69), 'effect': 'multiply prob by 0.517 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.15), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.1,0.84,0.69,0.2,0.004276624000000001,"{'timestamp': 1760866780.175575, 'inputs': {'network_load': np.float64(0.1), 'relay_reputation': np.float64(0.84), 'budget_utilization': np.float64(0.69), 'recent_win_rate': np.float64(0.2)}, 'base_prob': 0.01, 'final_prob': np.float64(0.004276624000000001), 'steps': [{'feature': 'network_load', 'value': np.float64(0.1), 'effect': 'multiply prob by 0.940 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.84), 'effect': 'multiply prob by 1.760 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.69), 'effect': 'multiply prob by 0.517 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.2), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.1,0.84,0.69,0.25,0.004276624000000001,"{'timestamp': 1760866780.1756244, 'inputs': {'network_load': np.float64(0.1), 'relay_reputation': np.float64(0.84), 'budget_utilization': np.float64(0.69), 'recent_win_rate': np.float64(0.25)}, 'base_prob': 0.01, 'final_prob': np.float64(0.004276624000000001), 'steps': [{'feature': 'network_load', 'value': np.float64(0.1), 'effect': 'multiply prob by 0.940 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.84), 'effect': 'multiply prob by 1.760 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.69), 'effect': 'multiply prob by 0.517 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.25), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.1,0.84,0.69,0.3,0.004276624000000001,"{'timestamp': 1760866780.1756518, 'inputs': {'network_load': np.float64(0.1), 'relay_reputation': np.float64(0.84), 'budget_utilization': np.float64(0.69), 'recent_win_rate': np.float64(0.3)}, 'base_prob': 0.01, 'final_prob': np.float64(0.004276624000000001), 'steps': [{'feature': 'network_load', 'value': np.float64(0.1), 'effect': 'multiply prob by 0.940 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.84), 'effect': 'multiply prob by 1.760 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.69), 'effect': 'multiply prob by 0.517 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.3), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.1,0.84,0.8,0.0,0.007279359927206401,"{'timestamp': 1760866780.1756792, 'inputs': {'network_load': np.float64(0.1), 'relay_reputation': np.float64(0.84), 'budget_utilization': np.float64(0.8), 'recent_win_rate': 1e-09}, 'base_prob': 0.01, 'final_prob': np.float64(0.007279359927206401), 'steps': [{'feature': 'network_load', 'value': np.float64(0.1), 'effect': 'multiply prob by 0.940 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.84), 'effect': 'multiply prob by 1.760 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.8), 'effect': 'multiply prob by 0.440 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': 1e-09, 'effect': 'multiply prob by 1.000 (higher recent wins -> lower prob)'}]}"
0.1,0.84,0.8,0.05,0.0036396800000000006,"{'timestamp': 1760866780.1757045, 'inputs': {'network_load': np.float64(0.1), 'relay_reputation': np.float64(0.84), 'budget_utilization': np.float64(0.8), 'recent_win_rate': np.float64(0.05)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0036396800000000006), 'steps': [{'feature': 'network_load', 'value': np.float64(0.1), 'effect': 'multiply prob by 0.940 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.84), 'effect': 'multiply prob by 1.760 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.8), 'effect': 'multiply prob by 0.440 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.05), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.1,0.84,0.8,0.1,0.0036396800000000006,"{'timestamp': 1760866780.17573, 'inputs': {'network_load': np.float64(0.1), 'relay_reputation': np.float64(0.84), 'budget_utilization': np.float64(0.8), 'recent_win_rate': np.float64(0.1)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0036396800000000006), 'steps': [{'feature': 'network_load', 'value': np.float64(0.1), 'effect': 'multiply prob by 0.940 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.84), 'effect': 'multiply prob by 1.760 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.8), 'effect': 'multiply prob by 0.440 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.1), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.1,0.84,0.8,0.15,0.0036396800000000006,"{'timestamp': 1760866780.1757615, 'inputs': {'network_load': np.float64(0.1), 'relay_reputation': np.float64(0.84), 'budget_utilization': np.float64(0.8), 'recent_win_rate': np.float64(0.15)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0036396800000000006), 'steps': [{'feature': 'network_load', 'value': np.float64(0.1), 'effect': 'multiply prob by 0.940 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.84), 'effect': 'multiply prob by 1.760 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.8), 'effect': 'multiply prob by 0.440 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.15), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.1,0.84,0.8,0.2,0.0036396800000000006,"{'timestamp': 1760866780.1757865, 'inputs': {'network_load': np.float64(0.1), 'relay_reputation': np.float64(0.84), 'budget_utilization': np.float64(0.8), 'recent_win_rate': np.float64(0.2)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0036396800000000006), 'steps': [{'feature': 'network_load', 'value': np.float64(0.1), 'effect': 'multiply prob by 0.940 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.84), 'effect': 'multiply prob by 1.760 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.8), 'effect': 'multiply prob by 0.440 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.2), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.1,0.84,0.8,0.25,0.0036396800000000006,"{'timestamp': 1760866780.1758118, 'inputs': {'network_load': np.float64(0.1), 'relay_reputation': np.float64(0.84), 'budget_utilization': np.float64(0.8), 'recent_win_rate': np.float64(0.25)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0036396800000000006), 'steps': [{'feature': 'network_load', 'value': np.float64(0.1), 'effect': 'multiply prob by 0.940 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.84), 'effect': 'multiply prob by 1.760 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.8), 'effect': 'multiply prob by 0.440 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.25), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.1,0.84,0.8,0.3,0.0036396800000000006,"{'timestamp': 1760866780.1758373, 'inputs': {'network_load': np.float64(0.1), 'relay_reputation': np.float64(0.84), 'budget_utilization': np.float64(0.8), 'recent_win_rate': np.float64(0.3)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0036396800000000006), 'steps': [{'feature': 'network_load', 'value': np.float64(0.1), 'effect': 'multiply prob by 0.940 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.84), 'effect': 'multiply prob by 1.760 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.8), 'effect': 'multiply prob by 0.440 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.3), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.1,0.95,0.05,0.0,0.017461674825383248,"{'timestamp': 1760866780.1758678, 'inputs': {'network_load': np.float64(0.1), 'relay_reputation': np.float64(0.95), 'budget_utilization': np.float64(0.05), 'recent_win_rate': 1e-09}, 'base_prob': 0.01, 'final_prob': np.float64(0.017461674825383248), 'steps': [{'feature': 'network_load', 'value': np.float64(0.1), 'effect': 'multiply prob by 0.940 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.95), 'effect': 'multiply prob by 1.925 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.05), 'effect': 'multiply prob by 0.965 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': 1e-09, 'effect': 'multiply prob by 1.000 (higher recent wins -> lower prob)'}]}"
0.1,0.95,0.05,0.05,0.0087308375,"{'timestamp': 1760866780.1758952, 'inputs': {'network_load': np.float64(0.1), 'relay_reputation': np.float64(0.95), 'budget_utilization': np.float64(0.05), 'recent_win_rate': np.float64(0.05)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0087308375), 'steps': [{'feature': 'network_load', 'value': np.float64(0.1), 'effect': 'multiply prob by 0.940 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.95), 'effect': 'multiply prob by 1.925 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.05), 'effect': 'multiply prob by 0.965 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.05), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.1,0.95,0.05,0.1,0.0087308375,"{'timestamp': 1760866780.1759224, 'inputs': {'network_load': np.float64(0.1), 'relay_reputation': np.float64(0.95), 'budget_utilization': np.float64(0.05), 'recent_win_rate': np.float64(0.1)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0087308375), 'steps': [{'feature': 'network_load', 'value': np.float64(0.1), 'effect': 'multiply prob by 0.940 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.95), 'effect': 'multiply prob by 1.925 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.05), 'effect': 'multiply prob by 0.965 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.1), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.1,0.95,0.05,0.15,0.0087308375,"{'timestamp': 1760866780.1759481, 'inputs': {'network_load': np.float64(0.1), 'relay_reputation': np.float64(0.95), 'budget_utilization': np.float64(0.05), 'recent_win_rate': np.float64(0.15)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0087308375), 'steps': [{'feature': 'network_load', 'value': np.float64(0.1), 'effect': 'multiply prob by 0.940 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.95), 'effect': 'multiply prob by 1.925 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.05), 'effect': 'multiply prob by 0.965 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.15), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.1,0.95,0.05,0.2,0.0087308375,"{'timestamp': 1760866780.1759734, 'inputs': {'network_load': np.float64(0.1), 'relay_reputation': np.float64(0.95), 'budget_utilization': np.float64(0.05), 'recent_win_rate': np.float64(0.2)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0087308375), 'steps': [{'feature': 'network_load', 'value': np.float64(0.1), 'effect': 'multiply prob by 0.940 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.95), 'effect': 'multiply prob by 1.925 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.05), 'effect': 'multiply prob by 0.965 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.2), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.1,0.95,0.05,0.25,0.0087308375,"{'timestamp': 1760866780.175999, 'inputs': {'network_load': np.float64(0.1), 'relay_reputation': np.float64(0.95), 'budget_utilization': np.float64(0.05), 'recent_win_rate': np.float64(0.25)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0087308375), 'steps': [{'feature': 'network_load', 'value': np.float64(0.1), 'effect': 'multiply prob by 0.940 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.95), 'effect': 'multiply prob by 1.925 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.05), 'effect': 'multiply prob by 0.965 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.25), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.1,0.95,0.05,0.3,0.0087308375,"{'timestamp': 1760866780.176027, 'inputs': {'network_load': np.float64(0.1), 'relay_reputation': np.float64(0.95), 'budget_utilization': np.float64(0.05), 'recent_win_rate': np.float64(0.3)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0087308375), 'steps': [{'feature': 'network_load', 'value': np.float64(0.1), 'effect': 'multiply prob by 0.940 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.95), 'effect': 'multiply prob by 1.925 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.05), 'effect': 'multiply prob by 0.965 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.3), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.1,0.95,0.16,0.0,0.0160683598393164,"{'timestamp': 1760866780.1760578, 'inputs': {'network_load': np.float64(0.1), 'relay_reputation': np.float64(0.95), 'budget_utilization': np.float64(0.16), 'recent_win_rate': 1e-09}, 'base_prob': 0.01, 'final_prob': np.float64(0.0160683598393164), 'steps': [{'feature': 'network_load', 'value': np.float64(0.1), 'effect': 'multiply prob by 0.940 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.95), 'effect': 'multiply prob by 1.925 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.16), 'effect': 'multiply prob by 0.888 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': 1e-09, 'effect': 'multiply prob by 1.000 (higher recent wins -> lower prob)'}]}"
0.1,0.95,0.16,0.05,0.00803418,"{'timestamp': 1760866780.1761346, 'inputs': {'network_load': np.float64(0.1), 'relay_reputation': np.float64(0.95), 'budget_utilization': np.float64(0.16), 'recent_win_rate': np.float64(0.05)}, 'base_prob': 0.01, 'final_prob': np.float64(0.00803418), 'steps': [{'feature': 'network_load', 'value': np.float64(0.1), 'effect': 'multiply prob by 0.940 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.95), 'effect': 'multiply prob by 1.925 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.16), 'effect': 'multiply prob by 0.888 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.05), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.1,0.95,0.16,0.1,0.00803418,"{'timestamp': 1760866780.1761727, 'inputs': {'network_load': np.float64(0.1), 'relay_reputation': np.float64(0.95), 'budget_utilization': np.float64(0.16), 'recent_win_rate': np.float64(0.1)}, 'base_prob': 0.01, 'final_prob': np.float64(0.00803418), 'steps': [{'feature': 'network_load', 'value': np.float64(0.1), 'effect': 'multiply prob by 0.940 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.95), 'effect': 'multiply prob by 1.925 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.16), 'effect': 'multiply prob by 0.888 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.1), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.1,0.95,0.16,0.15,0.00803418,"{'timestamp': 1760866780.1761992, 'inputs': {'network_load': np.float64(0.1), 'relay_reputation': np.float64(0.95), 'budget_utilization': np.float64(0.16), 'recent_win_rate': np.float64(0.15)}, 'base_prob': 0.01, 'final_prob': np.float64(0.00803418), 'steps': [{'feature': 'network_load', 'value': np.float64(0.1), 'effect': 'multiply prob by 0.940 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.95), 'effect': 'multiply prob by 1.925 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.16), 'effect': 'multiply prob by 0.888 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.15), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.1,0.95,0.16,0.2,0.00803418,"{'timestamp': 1760866780.1762273, 'inputs': {'network_load': np.float64(0.1), 'relay_reputation': np.float64(0.95), 'budget_utilization': np.float64(0.16), 'recent_win_rate': np.float64(0.2)}, 'base_prob': 0.01, 'final_prob': np.float64(0.00803418), 'steps': [{'feature': 'network_load', 'value': np.float64(0.1), 'effect': 'multiply prob by 0.940 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.95), 'effect': 'multiply prob by 1.925 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.16), 'effect': 'multiply prob by 0.888 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.2), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.1,0.95,0.16,0.25,0.00803418,"{'timestamp': 1760866780.1762545, 'inputs': {'network_load': np.float64(0.1), 'relay_reputation': np.float64(0.95), 'budget_utilization': np.float64(0.16), 'recent_win_rate': np.float64(0.25)}, 'base_prob': 0.01, 'final_prob': np.float64(0.00803418), 'steps': [{'feature': 'network_load', 'value': np.float64(0.1), 'effect': 'multiply prob by 0.940 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.95), 'effect': 'multiply prob by 1.925 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.16), 'effect': 'multiply prob by 0.888 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.25), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.1,0.95,0.16,0.3,0.00803418,"{'timestamp': 1760866780.1762795, 'inputs': {'network_load': np.float64(0.1), 'relay_reputation': np.float64(0.95), 'budget_utilization': np.float64(0.16), 'recent_win_rate': np.float64(0.3)}, 'base_prob': 0.01, 'final_prob': np.float64(0.00803418), 'steps': [{'feature': 'network_load', 'value': np.float64(0.1), 'effect': 'multiply prob by 0.940 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.95), 'effect': 'multiply prob by 1.925 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.16), 'effect': 'multiply prob by 0.888 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.3), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.1,0.95,0.26,0.0,0.0148017098519829,"{'timestamp': 1760866780.1763086, 'inputs': {'network_load': np.float64(0.1), 'relay_reputation': np.float64(0.95), 'budget_utilization': np.float64(0.26), 'recent_win_rate': 1e-09}, 'base_prob': 0.01, 'final_prob': np.float64(0.0148017098519829), 'steps': [{'feature': 'network_load', 'value': np.float64(0.1), 'effect': 'multiply prob by 0.940 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.95), 'effect': 'multiply prob by 1.925 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.26), 'effect': 'multiply prob by 0.818 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': 1e-09, 'effect': 'multiply prob by 1.000 (higher recent wins -> lower prob)'}]}"
0.1,0.95,0.26,0.05,0.0074008550000000005,"{'timestamp': 1760866780.1763341, 'inputs': {'network_load': np.float64(0.1), 'relay_reputation': np.float64(0.95), 'budget_utilization': np.float64(0.26), 'recent_win_rate': np.float64(0.05)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0074008550000000005), 'steps': [{'feature': 'network_load', 'value': np.float64(0.1), 'effect': 'multiply prob by 0.940 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.95), 'effect': 'multiply prob by 1.925 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.26), 'effect': 'multiply prob by 0.818 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.05), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.1,0.95,0.26,0.1,0.0074008550000000005,"{'timestamp': 1760866780.1763613, 'inputs': {'network_load': np.float64(0.1), 'relay_reputation': np.float64(0.95), 'budget_utilization': np.float64(0.26), 'recent_win_rate': np.float64(0.1)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0074008550000000005), 'steps': [{'feature': 'network_load', 'value': np.float64(0.1), 'effect': 'multiply prob by 0.940 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.95), 'effect': 'multiply prob by 1.925 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.26), 'effect': 'multiply prob by 0.818 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.1), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.1,0.95,0.26,0.15,0.0074008550000000005,"{'timestamp': 1760866780.1763885, 'inputs': {'network_load': np.float64(0.1), 'relay_reputation': np.float64(0.95), 'budget_utilization': np.float64(0.26), 'recent_win_rate': np.float64(0.15)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0074008550000000005), 'steps': [{'feature': 'network_load', 'value': np.float64(0.1), 'effect': 'multiply prob by 0.940 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.95), 'effect': 'multiply prob by 1.925 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.26), 'effect': 'multiply prob by 0.818 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.15), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.1,0.95,0.26,0.2,0.0074008550000000005,"{'timestamp': 1760866780.1764162, 'inputs': {'network_load': np.float64(0.1), 'relay_reputation': np.float64(0.95), 'budget_utilization': np.float64(0.26), 'recent_win_rate': np.float64(0.2)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0074008550000000005), 'steps': [{'feature': 'network_load', 'value': np.float64(0.1), 'effect': 'multiply prob by 0.940 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.95), 'effect': 'multiply prob by 1.925 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.26), 'effect': 'multiply prob by 0.818 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.2), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.1,0.95,0.26,0.25,0.0074008550000000005,"{'timestamp': 1760866780.176442, 'inputs': {'network_load': np.float64(0.1), 'relay_reputation': np.float64(0.95), 'budget_utilization': np.float64(0.26), 'recent_win_rate': np.float64(0.25)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0074008550000000005), 'steps': [{'feature': 'network_load', 'value': np.float64(0.1), 'effect': 'multiply prob by 0.940 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.95), 'effect': 'multiply prob by 1.925 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.26), 'effect': 'multiply prob by 0.818 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.25), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.1,0.95,0.26,0.3,0.0074008550000000005,"{'timestamp': 1760866780.1764672, 'inputs': {'network_load': np.float64(0.1), 'relay_reputation': np.float64(0.95), 'budget_utilization': np.float64(0.26), 'recent_win_rate': np.float64(0.3)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0074008550000000005), 'steps': [{'feature': 'network_load', 'value': np.float64(0.1), 'effect': 'multiply prob by 0.940 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.95), 'effect': 'multiply prob by 1.925 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.26), 'effect': 'multiply prob by 0.818 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.3), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.1,0.95,0.37,0.0,0.01340839486591605,"{'timestamp': 1760866780.1764941, 'inputs': {'network_load': np.float64(0.1), 'relay_reputation': np.float64(0.95), 'budget_utilization': np.float64(0.37), 'recent_win_rate': 1e-09}, 'base_prob': 0.01, 'final_prob': np.float64(0.01340839486591605), 'steps': [{'feature': 'network_load', 'value': np.float64(0.1), 'effect': 'multiply prob by 0.940 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.95), 'effect': 'multiply prob by 1.925 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.37), 'effect': 'multiply prob by 0.741 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': 1e-09, 'effect': 'multiply prob by 1.000 (higher recent wins -> lower prob)'}]}"
0.1,0.95,0.37,0.05,0.0067041975,"{'timestamp': 1760866780.1765199, 'inputs': {'network_load': np.float64(0.1), 'relay_reputation': np.float64(0.95), 'budget_utilization': np.float64(0.37), 'recent_win_rate': np.float64(0.05)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0067041975), 'steps': [{'feature': 'network_load', 'value': np.float64(0.1), 'effect': 'multiply prob by 0.940 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.95), 'effect': 'multiply prob by 1.925 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.37), 'effect': 'multiply prob by 0.741 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.05), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.1,0.95,0.37,0.1,0.0067041975,"{'timestamp': 1760866780.176572, 'inputs': {'network_load': np.float64(0.1), 'relay_reputation': np.float64(0.95), 'budget_utilization': np.float64(0.37), 'recent_win_rate': np.float64(0.1)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0067041975), 'steps': [{'feature': 'network_load', 'value': np.float64(0.1), 'effect': 'multiply prob by 0.940 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.95), 'effect': 'multiply prob by 1.925 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.37), 'effect': 'multiply prob by 0.741 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.1), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.1,0.95,0.37,0.15,0.0067041975,"{'timestamp': 1760866780.1766121, 'inputs': {'network_load': np.float64(0.1), 'relay_reputation': np.float64(0.95), 'budget_utilization': np.float64(0.37), 'recent_win_rate': np.float64(0.15)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0067041975), 'steps': [{'feature': 'network_load', 'value': np.float64(0.1), 'effect': 'multiply prob by 0.940 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.95), 'effect': 'multiply prob by 1.925 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.37), 'effect': 'multiply prob by 0.741 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.15), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.1,0.95,0.37,0.2,0.0067041975,"{'timestamp': 1760866780.1766398, 'inputs': {'network_load': np.float64(0.1), 'relay_reputation': np.float64(0.95), 'budget_utilization': np.float64(0.37), 'recent_win_rate': np.float64(0.2)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0067041975), 'steps': [{'feature': 'network_load', 'value': np.float64(0.1), 'effect': 'multiply prob by 0.940 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.95), 'effect': 'multiply prob by 1.925 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.37), 'effect': 'multiply prob by 0.741 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.2), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.1,0.95,0.37,0.25,0.0067041975,"{'timestamp': 1760866780.1766672, 'inputs': {'network_load': np.float64(0.1), 'relay_reputation': np.float64(0.95), 'budget_utilization': np.float64(0.37), 'recent_win_rate': np.float64(0.25)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0067041975), 'steps': [{'feature': 'network_load', 'value': np.float64(0.1), 'effect': 'multiply prob by 0.940 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.95), 'effect': 'multiply prob by 1.925 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.37), 'effect': 'multiply prob by 0.741 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.25), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.1,0.95,0.37,0.3,0.0067041975,"{'timestamp': 1760866780.1766925, 'inputs': {'network_load': np.float64(0.1), 'relay_reputation': np.float64(0.95), 'budget_utilization': np.float64(0.37), 'recent_win_rate': np.float64(0.3)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0067041975), 'steps': [{'feature': 'network_load', 'value': np.float64(0.1), 'effect': 'multiply prob by 0.940 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.95), 'effect': 'multiply prob by 1.925 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.37), 'effect': 'multiply prob by 0.741 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.3), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.1,0.95,0.48,0.0,0.0120150798798492,"{'timestamp': 1760866780.1767235, 'inputs': {'network_load': np.float64(0.1), 'relay_reputation': np.float64(0.95), 'budget_utilization': np.float64(0.48), 'recent_win_rate': 1e-09}, 'base_prob': 0.01, 'final_prob': np.float64(0.0120150798798492), 'steps': [{'feature': 'network_load', 'value': np.float64(0.1), 'effect': 'multiply prob by 0.940 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.95), 'effect': 'multiply prob by 1.925 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.48), 'effect': 'multiply prob by 0.664 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': 1e-09, 'effect': 'multiply prob by 1.000 (higher recent wins -> lower prob)'}]}"
0.1,0.95,0.48,0.05,0.0060075400000000004,"{'timestamp': 1760866780.1767511, 'inputs': {'network_load': np.float64(0.1), 'relay_reputation': np.float64(0.95), 'budget_utilization': np.float64(0.48), 'recent_win_rate': np.float64(0.05)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0060075400000000004), 'steps': [{'feature': 'network_load', 'value': np.float64(0.1), 'effect': 'multiply prob by 0.940 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.95), 'effect': 'multiply prob by 1.925 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.48), 'effect': 'multiply prob by 0.664 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.05), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.1,0.95,0.48,0.1,0.0060075400000000004,"{'timestamp': 1760866780.1767762, 'inputs': {'network_load': np.float64(0.1), 'relay_reputation': np.float64(0.95), 'budget_utilization': np.float64(0.48), 'recent_win_rate': np.float64(0.1)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0060075400000000004), 'steps': [{'feature': 'network_load', 'value': np.float64(0.1), 'effect': 'multiply prob by 0.940 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.95), 'effect': 'multiply prob by 1.925 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.48), 'effect': 'multiply prob by 0.664 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.1), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.1,0.95,0.48,0.15,0.0060075400000000004,"{'timestamp': 1760866780.1768014, 'inputs': {'network_load': np.float64(0.1), 'relay_reputation': np.float64(0.95), 'budget_utilization': np.float64(0.48), 'recent_win_rate': np.float64(0.15)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0060075400000000004), 'steps': [{'feature': 'network_load', 'value': np.float64(0.1), 'effect': 'multiply prob by 0.940 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.95), 'effect': 'multiply prob by 1.925 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.48), 'effect': 'multiply prob by 0.664 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.15), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.1,0.95,0.48,0.2,0.0060075400000000004,"{'timestamp': 1760866780.1768305, 'inputs': {'network_load': np.float64(0.1), 'relay_reputation': np.float64(0.95), 'budget_utilization': np.float64(0.48), 'recent_win_rate': np.float64(0.2)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0060075400000000004), 'steps': [{'feature': 'network_load', 'value': np.float64(0.1), 'effect': 'multiply prob by 0.940 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.95), 'effect': 'multiply prob by 1.925 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.48), 'effect': 'multiply prob by 0.664 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.2), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.1,0.95,0.48,0.25,0.0060075400000000004,"{'timestamp': 1760866780.1768615, 'inputs': {'network_load': np.float64(0.1), 'relay_reputation': np.float64(0.95), 'budget_utilization': np.float64(0.48), 'recent_win_rate': np.float64(0.25)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0060075400000000004), 'steps': [{'feature': 'network_load', 'value': np.float64(0.1), 'effect': 'multiply prob by 0.940 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.95), 'effect': 'multiply prob by 1.925 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.48), 'effect': 'multiply prob by 0.664 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.25), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.1,0.95,0.48,0.3,0.0060075400000000004,"{'timestamp': 1760866780.1768868, 'inputs': {'network_load': np.float64(0.1), 'relay_reputation': np.float64(0.95), 'budget_utilization': np.float64(0.48), 'recent_win_rate': np.float64(0.3)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0060075400000000004), 'steps': [{'feature': 'network_load', 'value': np.float64(0.1), 'effect': 'multiply prob by 0.940 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.95), 'effect': 'multiply prob by 1.925 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.48), 'effect': 'multiply prob by 0.664 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.3), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.1,0.95,0.59,0.0,0.010621764893782349,"{'timestamp': 1760866780.176914, 'inputs': {'network_load': np.float64(0.1), 'relay_reputation': np.float64(0.95), 'budget_utilization': np.float64(0.59), 'recent_win_rate': 1e-09}, 'base_prob': 0.01, 'final_prob': np.float64(0.010621764893782349), 'steps': [{'feature': 'network_load', 'value': np.float64(0.1), 'effect': 'multiply prob by 0.940 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.95), 'effect': 'multiply prob by 1.925 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.59), 'effect': 'multiply prob by 0.587 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': 1e-09, 'effect': 'multiply prob by 1.000 (higher recent wins -> lower prob)'}]}"
0.1,0.95,0.59,0.05,0.0053108825,"{'timestamp': 1760866780.1769392, 'inputs': {'network_load': np.float64(0.1), 'relay_reputation': np.float64(0.95), 'budget_utilization': np.float64(0.59), 'recent_win_rate': np.float64(0.05)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0053108825), 'steps': [{'feature': 'network_load', 'value': np.float64(0.1), 'effect': 'multiply prob by 0.940 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.95), 'effect': 'multiply prob by 1.925 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.59), 'effect': 'multiply prob by 0.587 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.05), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.1,0.95,0.59,0.1,0.0053108825,"{'timestamp': 1760866780.1769643, 'inputs': {'network_load': np.float64(0.1), 'relay_reputation': np.float64(0.95), 'budget_utilization': np.float64(0.59), 'recent_win_rate': np.float64(0.1)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0053108825), 'steps': [{'feature': 'network_load', 'value': np.float64(0.1), 'effect': 'multiply prob by 0.940 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.95), 'effect': 'multiply prob by 1.925 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.59), 'effect': 'multiply prob by 0.587 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.1), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.1,0.95,0.59,0.15,0.0053108825,"{'timestamp': 1760866780.1770332, 'inputs': {'network_load': np.float64(0.1), 'relay_reputation': np.float64(0.95), 'budget_utilization': np.float64(0.59), 'recent_win_rate': np.float64(0.15)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0053108825), 'steps': [{'feature': 'network_load', 'value': np.float64(0.1), 'effect': 'multiply prob by 0.940 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.95), 'effect': 'multiply prob by 1.925 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.59), 'effect': 'multiply prob by 0.587 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.15), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.1,0.95,0.59,0.2,0.0053108825,"{'timestamp': 1760866780.1770735, 'inputs': {'network_load': np.float64(0.1), 'relay_reputation': np.float64(0.95), 'budget_utilization': np.float64(0.59), 'recent_win_rate': np.float64(0.2)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0053108825), 'steps': [{'feature': 'network_load', 'value': np.float64(0.1), 'effect': 'multiply prob by 0.940 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.95), 'effect': 'multiply prob by 1.925 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.59), 'effect': 'multiply prob by 0.587 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.2), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.1,0.95,0.59,0.25,0.0053108825,"{'timestamp': 1760866780.1771028, 'inputs': {'network_load': np.float64(0.1), 'relay_reputation': np.float64(0.95), 'budget_utilization': np.float64(0.59), 'recent_win_rate': np.float64(0.25)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0053108825), 'steps': [{'feature': 'network_load', 'value': np.float64(0.1), 'effect': 'multiply prob by 0.940 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.95), 'effect': 'multiply prob by 1.925 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.59), 'effect': 'multiply prob by 0.587 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.25), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.1,0.95,0.59,0.3,0.0053108825,"{'timestamp': 1760866780.1771286, 'inputs': {'network_load': np.float64(0.1), 'relay_reputation': np.float64(0.95), 'budget_utilization': np.float64(0.59), 'recent_win_rate': np.float64(0.3)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0053108825), 'steps': [{'feature': 'network_load', 'value': np.float64(0.1), 'effect': 'multiply prob by 0.940 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.95), 'effect': 'multiply prob by 1.925 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.59), 'effect': 'multiply prob by 0.587 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.3), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.1,0.95,0.69,0.0,0.009355114906448851,"{'timestamp': 1760866780.1771574, 'inputs': {'network_load': np.float64(0.1), 'relay_reputation': np.float64(0.95), 'budget_utilization': np.float64(0.69), 'recent_win_rate': 1e-09}, 'base_prob': 0.01, 'final_prob': np.float64(0.009355114906448851), 'steps': [{'feature': 'network_load', 'value': np.float64(0.1), 'effect': 'multiply prob by 0.940 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.95), 'effect': 'multiply prob by 1.925 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.69), 'effect': 'multiply prob by 0.517 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': 1e-09, 'effect': 'multiply prob by 1.000 (higher recent wins -> lower prob)'}]}"
0.1,0.95,0.69,0.05,0.004677557500000001,"{'timestamp': 1760866780.177183, 'inputs': {'network_load': np.float64(0.1), 'relay_reputation': np.float64(0.95), 'budget_utilization': np.float64(0.69), 'recent_win_rate': np.float64(0.05)}, 'base_prob': 0.01, 'final_prob': np.float64(0.004677557500000001), 'steps': [{'feature': 'network_load', 'value': np.float64(0.1), 'effect': 'multiply prob by 0.940 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.95), 'effect': 'multiply prob by 1.925 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.69), 'effect': 'multiply prob by 0.517 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.05), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.1,0.95,0.69,0.1,0.004677557500000001,"{'timestamp': 1760866780.1772125, 'inputs': {'network_load': np.float64(0.1), 'relay_reputation': np.float64(0.95), 'budget_utilization': np.float64(0.69), 'recent_win_rate': np.float64(0.1)}, 'base_prob': 0.01, 'final_prob': np.float64(0.004677557500000001), 'steps': [{'feature': 'network_load', 'value': np.float64(0.1), 'effect': 'multiply prob by 0.940 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.95), 'effect': 'multiply prob by 1.925 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.69), 'effect': 'multiply prob by 0.517 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.1), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.1,0.95,0.69,0.15,0.004677557500000001,"{'timestamp': 1760866780.1772392, 'inputs': {'network_load': np.float64(0.1), 'relay_reputation': np.float64(0.95), 'budget_utilization': np.float64(0.69), 'recent_win_rate': np.float64(0.15)}, 'base_prob': 0.01, 'final_prob': np.float64(0.004677557500000001), 'steps': [{'feature': 'network_load', 'value': np.float64(0.1), 'effect': 'multiply prob by 0.940 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.95), 'effect': 'multiply prob by 1.925 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.69), 'effect': 'multiply prob by 0.517 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.15), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.1,0.95,0.69,0.2,0.004677557500000001,"{'timestamp': 1760866780.1772647, 'inputs': {'network_load': np.float64(0.1), 'relay_reputation': np.float64(0.95), 'budget_utilization': np.float64(0.69), 'recent_win_rate': np.float64(0.2)}, 'base_prob': 0.01, 'final_prob': np.float64(0.004677557500000001), 'steps': [{'feature': 'network_load', 'value': np.float64(0.1), 'effect': 'multiply prob by 0.940 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.95), 'effect': 'multiply prob by 1.925 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.69), 'effect': 'multiply prob by 0.517 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.2), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.1,0.95,0.69,0.25,0.004677557500000001,"{'timestamp': 1760866780.1772897, 'inputs': {'network_load': np.float64(0.1), 'relay_reputation': np.float64(0.95), 'budget_utilization': np.float64(0.69), 'recent_win_rate': np.float64(0.25)}, 'base_prob': 0.01, 'final_prob': np.float64(0.004677557500000001), 'steps': [{'feature': 'network_load', 'value': np.float64(0.1), 'effect': 'multiply prob by 0.940 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.95), 'effect': 'multiply prob by 1.925 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.69), 'effect': 'multiply prob by 0.517 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.25), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.1,0.95,0.69,0.3,0.004677557500000001,"{'timestamp': 1760866780.177317, 'inputs': {'network_load': np.float64(0.1), 'relay_reputation': np.float64(0.95), 'budget_utilization': np.float64(0.69), 'recent_win_rate': np.float64(0.3)}, 'base_prob': 0.01, 'final_prob': np.float64(0.004677557500000001), 'steps': [{'feature': 'network_load', 'value': np.float64(0.1), 'effect': 'multiply prob by 0.940 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.95), 'effect': 'multiply prob by 1.925 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.69), 'effect': 'multiply prob by 0.517 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.3), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.1,0.95,0.8,0.0,0.007961799920382002,"{'timestamp': 1760866780.1773477, 'inputs': {'network_load': np.float64(0.1), 'relay_reputation': np.float64(0.95), 'budget_utilization': np.float64(0.8), 'recent_win_rate': 1e-09}, 'base_prob': 0.01, 'final_prob': np.float64(0.007961799920382002), 'steps': [{'feature': 'network_load', 'value': np.float64(0.1), 'effect': 'multiply prob by 0.940 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.95), 'effect': 'multiply prob by 1.925 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.8), 'effect': 'multiply prob by 0.440 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': 1e-09, 'effect': 'multiply prob by 1.000 (higher recent wins -> lower prob)'}]}"
0.1,0.95,0.8,0.05,0.003980900000000001,"{'timestamp': 1760866780.1773732, 'inputs': {'network_load': np.float64(0.1), 'relay_reputation': np.float64(0.95), 'budget_utilization': np.float64(0.8), 'recent_win_rate': np.float64(0.05)}, 'base_prob': 0.01, 'final_prob': np.float64(0.003980900000000001), 'steps': [{'feature': 'network_load', 'value': np.float64(0.1), 'effect': 'multiply prob by 0.940 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.95), 'effect': 'multiply prob by 1.925 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.8), 'effect': 'multiply prob by 0.440 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.05), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.1,0.95,0.8,0.1,0.003980900000000001,"{'timestamp': 1760866780.1773984, 'inputs': {'network_load': np.float64(0.1), 'relay_reputation': np.float64(0.95), 'budget_utilization': np.float64(0.8), 'recent_win_rate': np.float64(0.1)}, 'base_prob': 0.01, 'final_prob': np.float64(0.003980900000000001), 'steps': [{'feature': 'network_load', 'value': np.float64(0.1), 'effect': 'multiply prob by 0.940 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.95), 'effect': 'multiply prob by 1.925 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.8), 'effect': 'multiply prob by 0.440 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.1), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.1,0.95,0.8,0.15,0.003980900000000001,"{'timestamp': 1760866780.177424, 'inputs': {'network_load': np.float64(0.1), 'relay_reputation': np.float64(0.95), 'budget_utilization': np.float64(0.8), 'recent_win_rate': np.float64(0.15)}, 'base_prob': 0.01, 'final_prob': np.float64(0.003980900000000001), 'steps': [{'feature': 'network_load', 'value': np.float64(0.1), 'effect': 'multiply prob by 0.940 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.95), 'effect': 'multiply prob by 1.925 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.8), 'effect': 'multiply prob by 0.440 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.15), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.1,0.95,0.8,0.2,0.003980900000000001,"{'timestamp': 1760866780.1774492, 'inputs': {'network_load': np.float64(0.1), 'relay_reputation': np.float64(0.95), 'budget_utilization': np.float64(0.8), 'recent_win_rate': np.float64(0.2)}, 'base_prob': 0.01, 'final_prob': np.float64(0.003980900000000001), 'steps': [{'feature': 'network_load', 'value': np.float64(0.1), 'effect': 'multiply prob by 0.940 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.95), 'effect': 'multiply prob by 1.925 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.8), 'effect': 'multiply prob by 0.440 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.2), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.1,0.95,0.8,0.25,0.003980900000000001,"{'timestamp': 1760866780.1774786, 'inputs': {'network_load': np.float64(0.1), 'relay_reputation': np.float64(0.95), 'budget_utilization': np.float64(0.8), 'recent_win_rate': np.float64(0.25)}, 'base_prob': 0.01, 'final_prob': np.float64(0.003980900000000001), 'steps': [{'feature': 'network_load', 'value': np.float64(0.1), 'effect': 'multiply prob by 0.940 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.95), 'effect': 'multiply prob by 1.925 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.8), 'effect': 'multiply prob by 0.440 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.25), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.1,0.95,0.8,0.3,0.003980900000000001,"{'timestamp': 1760866780.1775043, 'inputs': {'network_load': np.float64(0.1), 'relay_reputation': np.float64(0.95), 'budget_utilization': np.float64(0.8), 'recent_win_rate': np.float64(0.3)}, 'base_prob': 0.01, 'final_prob': np.float64(0.003980900000000001), 'steps': [{'feature': 'network_load', 'value': np.float64(0.1), 'effect': 'multiply prob by 0.940 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.95), 'effect': 'multiply prob by 1.925 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.8), 'effect': 'multiply prob by 0.440 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.3), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.2,0.4,0.05,0.0,0.009341199906588,"{'timestamp': 1760866780.1775362, 'inputs': {'network_load': np.float64(0.2), 'relay_reputation': np.float64(0.4), 'budget_utilization': np.float64(0.05), 'recent_win_rate': 1e-09}, 'base_prob': 0.01, 'final_prob': np.float64(0.009341199906588), 'steps': [{'feature': 'network_load', 'value': np.float64(0.2), 'effect': 'multiply prob by 0.880 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.4), 'effect': 'multiply prob by 1.100 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.05), 'effect': 'multiply prob by 0.965 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': 1e-09, 'effect': 'multiply prob by 1.000 (higher recent wins -> lower prob)'}]}"
0.2,0.4,0.05,0.05,0.0046706000000000004,"{'timestamp': 1760866780.1775615, 'inputs': {'network_load': np.float64(0.2), 'relay_reputation': np.float64(0.4), 'budget_utilization': np.float64(0.05), 'recent_win_rate': np.float64(0.05)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0046706000000000004), 'steps': [{'feature': 'network_load', 'value': np.float64(0.2), 'effect': 'multiply prob by 0.880 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.4), 'effect': 'multiply prob by 1.100 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.05), 'effect': 'multiply prob by 0.965 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.05), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.2,0.4,0.05,0.1,0.0046706000000000004,"{'timestamp': 1760866780.177587, 'inputs': {'network_load': np.float64(0.2), 'relay_reputation': np.float64(0.4), 'budget_utilization': np.float64(0.05), 'recent_win_rate': np.float64(0.1)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0046706000000000004), 'steps': [{'feature': 'network_load', 'value': np.float64(0.2), 'effect': 'multiply prob by 0.880 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.4), 'effect': 'multiply prob by 1.100 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.05), 'effect': 'multiply prob by 0.965 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.1), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.2,0.4,0.05,0.15,0.0046706000000000004,"{'timestamp': 1760866780.177612, 'inputs': {'network_load': np.float64(0.2), 'relay_reputation': np.float64(0.4), 'budget_utilization': np.float64(0.05), 'recent_win_rate': np.float64(0.15)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0046706000000000004), 'steps': [{'feature': 'network_load', 'value': np.float64(0.2), 'effect': 'multiply prob by 0.880 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.4), 'effect': 'multiply prob by 1.100 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.05), 'effect': 'multiply prob by 0.965 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.15), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.2,0.4,0.05,0.2,0.0046706000000000004,"{'timestamp': 1760866780.1776392, 'inputs': {'network_load': np.float64(0.2), 'relay_reputation': np.float64(0.4), 'budget_utilization': np.float64(0.05), 'recent_win_rate': np.float64(0.2)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0046706000000000004), 'steps': [{'feature': 'network_load', 'value': np.float64(0.2), 'effect': 'multiply prob by 0.880 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.4), 'effect': 'multiply prob by 1.100 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.05), 'effect': 'multiply prob by 0.965 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.2), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.2,0.4,0.05,0.25,0.0046706000000000004,"{'timestamp': 1760866780.1776645, 'inputs': {'network_load': np.float64(0.2), 'relay_reputation': np.float64(0.4), 'budget_utilization': np.float64(0.05), 'recent_win_rate': np.float64(0.25)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0046706000000000004), 'steps': [{'feature': 'network_load', 'value': np.float64(0.2), 'effect': 'multiply prob by 0.880 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.4), 'effect': 'multiply prob by 1.100 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.05), 'effect': 'multiply prob by 0.965 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.25), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.2,0.4,0.05,0.3,0.0046706000000000004,"{'timestamp': 1760866780.1776915, 'inputs': {'network_load': np.float64(0.2), 'relay_reputation': np.float64(0.4), 'budget_utilization': np.float64(0.05), 'recent_win_rate': np.float64(0.3)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0046706000000000004), 'steps': [{'feature': 'network_load', 'value': np.float64(0.2), 'effect': 'multiply prob by 0.880 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.4), 'effect': 'multiply prob by 1.100 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.05), 'effect': 'multiply prob by 0.965 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.3), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.2,0.4,0.16,0.0,0.0085958399140416,"{'timestamp': 1760866780.1777222, 'inputs': {'network_load': np.float64(0.2), 'relay_reputation': np.float64(0.4), 'budget_utilization': np.float64(0.16), 'recent_win_rate': 1e-09}, 'base_prob': 0.01, 'final_prob': np.float64(0.0085958399140416), 'steps': [{'feature': 'network_load', 'value': np.float64(0.2), 'effect': 'multiply prob by 0.880 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.4), 'effect': 'multiply prob by 1.100 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.16), 'effect': 'multiply prob by 0.888 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': 1e-09, 'effect': 'multiply prob by 1.000 (higher recent wins -> lower prob)'}]}"
0.2,0.4,0.16,0.05,0.00429792,"{'timestamp': 1760866780.17775, 'inputs': {'network_load': np.float64(0.2), 'relay_reputation': np.float64(0.4), 'budget_utilization': np.float64(0.16), 'recent_win_rate': np.float64(0.05)}, 'base_prob': 0.01, 'final_prob': np.float64(0.00429792), 'steps': [{'feature': 'network_load', 'value': np.float64(0.2), 'effect': 'multiply prob by 0.880 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.4), 'effect': 'multiply prob by 1.100 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.16), 'effect': 'multiply prob by 0.888 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.05), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.2,0.4,0.16,0.1,0.00429792,"{'timestamp': 1760866780.1778233, 'inputs': {'network_load': np.float64(0.2), 'relay_reputation': np.float64(0.4), 'budget_utilization': np.float64(0.16), 'recent_win_rate': np.float64(0.1)}, 'base_prob': 0.01, 'final_prob': np.float64(0.00429792), 'steps': [{'feature': 'network_load', 'value': np.float64(0.2), 'effect': 'multiply prob by 0.880 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.4), 'effect': 'multiply prob by 1.100 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.16), 'effect': 'multiply prob by 0.888 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.1), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.2,0.4,0.16,0.15,0.00429792,"{'timestamp': 1760866780.1778603, 'inputs': {'network_load': np.float64(0.2), 'relay_reputation': np.float64(0.4), 'budget_utilization': np.float64(0.16), 'recent_win_rate': np.float64(0.15)}, 'base_prob': 0.01, 'final_prob': np.float64(0.00429792), 'steps': [{'feature': 'network_load', 'value': np.float64(0.2), 'effect': 'multiply prob by 0.880 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.4), 'effect': 'multiply prob by 1.100 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.16), 'effect': 'multiply prob by 0.888 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.15), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.2,0.4,0.16,0.2,0.00429792,"{'timestamp': 1760866780.1778862, 'inputs': {'network_load': np.float64(0.2), 'relay_reputation': np.float64(0.4), 'budget_utilization': np.float64(0.16), 'recent_win_rate': np.float64(0.2)}, 'base_prob': 0.01, 'final_prob': np.float64(0.00429792), 'steps': [{'feature': 'network_load', 'value': np.float64(0.2), 'effect': 'multiply prob by 0.880 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.4), 'effect': 'multiply prob by 1.100 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.16), 'effect': 'multiply prob by 0.888 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.2), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.2,0.4,0.16,0.25,0.00429792,"{'timestamp': 1760866780.1779118, 'inputs': {'network_load': np.float64(0.2), 'relay_reputation': np.float64(0.4), 'budget_utilization': np.float64(0.16), 'recent_win_rate': np.float64(0.25)}, 'base_prob': 0.01, 'final_prob': np.float64(0.00429792), 'steps': [{'feature': 'network_load', 'value': np.float64(0.2), 'effect': 'multiply prob by 0.880 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.4), 'effect': 'multiply prob by 1.100 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.16), 'effect': 'multiply prob by 0.888 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.25), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.2,0.4,0.16,0.3,0.00429792,"{'timestamp': 1760866780.1779366, 'inputs': {'network_load': np.float64(0.2), 'relay_reputation': np.float64(0.4), 'budget_utilization': np.float64(0.16), 'recent_win_rate': np.float64(0.3)}, 'base_prob': 0.01, 'final_prob': np.float64(0.00429792), 'steps': [{'feature': 'network_load', 'value': np.float64(0.2), 'effect': 'multiply prob by 0.880 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.4), 'effect': 'multiply prob by 1.100 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.16), 'effect': 'multiply prob by 0.888 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.3), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.2,0.4,0.26,0.0,0.007918239920817602,"{'timestamp': 1760866780.177969, 'inputs': {'network_load': np.float64(0.2), 'relay_reputation': np.float64(0.4), 'budget_utilization': np.float64(0.26), 'recent_win_rate': 1e-09}, 'base_prob': 0.01, 'final_prob': np.float64(0.007918239920817602), 'steps': [{'feature': 'network_load', 'value': np.float64(0.2), 'effect': 'multiply prob by 0.880 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.4), 'effect': 'multiply prob by 1.100 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.26), 'effect': 'multiply prob by 0.818 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': 1e-09, 'effect': 'multiply prob by 1.000 (higher recent wins -> lower prob)'}]}"
0.2,0.4,0.26,0.05,0.003959120000000001,"{'timestamp': 1760866780.1779947, 'inputs': {'network_load': np.float64(0.2), 'relay_reputation': np.float64(0.4), 'budget_utilization': np.float64(0.26), 'recent_win_rate': np.float64(0.05)}, 'base_prob': 0.01, 'final_prob': np.float64(0.003959120000000001), 'steps': [{'feature': 'network_load', 'value': np.float64(0.2), 'effect': 'multiply prob by 0.880 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.4), 'effect': 'multiply prob by 1.100 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.26), 'effect': 'multiply prob by 0.818 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.05), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.2,0.4,0.26,0.1,0.003959120000000001,"{'timestamp': 1760866780.178022, 'inputs': {'network_load': np.float64(0.2), 'relay_reputation': np.float64(0.4), 'budget_utilization': np.float64(0.26), 'recent_win_rate': np.float64(0.1)}, 'base_prob': 0.01, 'final_prob': np.float64(0.003959120000000001), 'steps': [{'feature': 'network_load', 'value': np.float64(0.2), 'effect': 'multiply prob by 0.880 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.4), 'effect': 'multiply prob by 1.100 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.26), 'effect': 'multiply prob by 0.818 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.1), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.2,0.4,0.26,0.15,0.003959120000000001,"{'timestamp': 1760866780.178048, 'inputs': {'network_load': np.float64(0.2), 'relay_reputation': np.float64(0.4), 'budget_utilization': np.float64(0.26), 'recent_win_rate': np.float64(0.15)}, 'base_prob': 0.01, 'final_prob': np.float64(0.003959120000000001), 'steps': [{'feature': 'network_load', 'value': np.float64(0.2), 'effect': 'multiply prob by 0.880 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.4), 'effect': 'multiply prob by 1.100 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.26), 'effect': 'multiply prob by 0.818 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.15), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.2,0.4,0.26,0.2,0.003959120000000001,"{'timestamp': 1760866780.1780734, 'inputs': {'network_load': np.float64(0.2), 'relay_reputation': np.float64(0.4), 'budget_utilization': np.float64(0.26), 'recent_win_rate': np.float64(0.2)}, 'base_prob': 0.01, 'final_prob': np.float64(0.003959120000000001), 'steps': [{'feature': 'network_load', 'value': np.float64(0.2), 'effect': 'multiply prob by 0.880 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.4), 'effect': 'multiply prob by 1.100 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.26), 'effect': 'multiply prob by 0.818 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.2), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.2,0.4,0.26,0.25,0.003959120000000001,"{'timestamp': 1760866780.1781006, 'inputs': {'network_load': np.float64(0.2), 'relay_reputation': np.float64(0.4), 'budget_utilization': np.float64(0.26), 'recent_win_rate': np.float64(0.25)}, 'base_prob': 0.01, 'final_prob': np.float64(0.003959120000000001), 'steps': [{'feature': 'network_load', 'value': np.float64(0.2), 'effect': 'multiply prob by 0.880 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.4), 'effect': 'multiply prob by 1.100 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.26), 'effect': 'multiply prob by 0.818 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.25), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.2,0.4,0.26,0.3,0.003959120000000001,"{'timestamp': 1760866780.1781275, 'inputs': {'network_load': np.float64(0.2), 'relay_reputation': np.float64(0.4), 'budget_utilization': np.float64(0.26), 'recent_win_rate': np.float64(0.3)}, 'base_prob': 0.01, 'final_prob': np.float64(0.003959120000000001), 'steps': [{'feature': 'network_load', 'value': np.float64(0.2), 'effect': 'multiply prob by 0.880 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.4), 'effect': 'multiply prob by 1.100 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.26), 'effect': 'multiply prob by 0.818 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.3), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.2,0.4,0.37,0.0,0.0071728799282712,"{'timestamp': 1760866780.1781545, 'inputs': {'network_load': np.float64(0.2), 'relay_reputation': np.float64(0.4), 'budget_utilization': np.float64(0.37), 'recent_win_rate': 1e-09}, 'base_prob': 0.01, 'final_prob': np.float64(0.0071728799282712), 'steps': [{'feature': 'network_load', 'value': np.float64(0.2), 'effect': 'multiply prob by 0.880 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.4), 'effect': 'multiply prob by 1.100 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.37), 'effect': 'multiply prob by 0.741 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': 1e-09, 'effect': 'multiply prob by 1.000 (higher recent wins -> lower prob)'}]}"
0.2,0.4,0.37,0.05,0.00358644,"{'timestamp': 1760866780.1781933, 'inputs': {'network_load': np.float64(0.2), 'relay_reputation': np.float64(0.4), 'budget_utilization': np.float64(0.37), 'recent_win_rate': np.float64(0.05)}, 'base_prob': 0.01, 'final_prob': np.float64(0.00358644), 'steps': [{'feature': 'network_load', 'value': np.float64(0.2), 'effect': 'multiply prob by 0.880 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.4), 'effect': 'multiply prob by 1.100 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.37), 'effect': 'multiply prob by 0.741 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.05), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.2,0.4,0.37,0.1,0.00358644,"{'timestamp': 1760866780.178219, 'inputs': {'network_load': np.float64(0.2), 'relay_reputation': np.float64(0.4), 'budget_utilization': np.float64(0.37), 'recent_win_rate': np.float64(0.1)}, 'base_prob': 0.01, 'final_prob': np.float64(0.00358644), 'steps': [{'feature': 'network_load', 'value': np.float64(0.2), 'effect': 'multiply prob by 0.880 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.4), 'effect': 'multiply prob by 1.100 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.37), 'effect': 'multiply prob by 0.741 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.1), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.2,0.4,0.37,0.15,0.00358644,"{'timestamp': 1760866780.1782477, 'inputs': {'network_load': np.float64(0.2), 'relay_reputation': np.float64(0.4), 'budget_utilization': np.float64(0.37), 'recent_win_rate': np.float64(0.15)}, 'base_prob': 0.01, 'final_prob': np.float64(0.00358644), 'steps': [{'feature': 'network_load', 'value': np.float64(0.2), 'effect': 'multiply prob by 0.880 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.4), 'effect': 'multiply prob by 1.100 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.37), 'effect': 'multiply prob by 0.741 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.15), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.2,0.4,0.37,0.2,0.00358644,"{'timestamp': 1760866780.1782765, 'inputs': {'network_load': np.float64(0.2), 'relay_reputation': np.float64(0.4), 'budget_utilization': np.float64(0.37), 'recent_win_rate': np.float64(0.2)}, 'base_prob': 0.01, 'final_prob': np.float64(0.00358644), 'steps': [{'feature': 'network_load', 'value': np.float64(0.2), 'effect': 'multiply prob by 0.880 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.4), 'effect': 'multiply prob by 1.100 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.37), 'effect': 'multiply prob by 0.741 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.2), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.2,0.4,0.37,0.25,0.00358644,"{'timestamp': 1760866780.1783023, 'inputs': {'network_load': np.float64(0.2), 'relay_reputation': np.float64(0.4), 'budget_utilization': np.float64(0.37), 'recent_win_rate': np.float64(0.25)}, 'base_prob': 0.01, 'final_prob': np.float64(0.00358644), 'steps': [{'feature': 'network_load', 'value': np.float64(0.2), 'effect': 'multiply prob by 0.880 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.4), 'effect': 'multiply prob by 1.100 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.37), 'effect': 'multiply prob by 0.741 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.25), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.2,0.4,0.37,0.3,0.00358644,"{'timestamp': 1760866780.1783276, 'inputs': {'network_load': np.float64(0.2), 'relay_reputation': np.float64(0.4), 'budget_utilization': np.float64(0.37), 'recent_win_rate': np.float64(0.3)}, 'base_prob': 0.01, 'final_prob': np.float64(0.00358644), 'steps': [{'feature': 'network_load', 'value': np.float64(0.2), 'effect': 'multiply prob by 0.880 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.4), 'effect': 'multiply prob by 1.100 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.37), 'effect': 'multiply prob by 0.741 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.3), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.2,0.4,0.48,0.0,0.0064275199357248,"{'timestamp': 1760866780.1783566, 'inputs': {'network_load': np.float64(0.2), 'relay_reputation': np.float64(0.4), 'budget_utilization': np.float64(0.48), 'recent_win_rate': 1e-09}, 'base_prob': 0.01, 'final_prob': np.float64(0.0064275199357248), 'steps': [{'feature': 'network_load', 'value': np.float64(0.2), 'effect': 'multiply prob by 0.880 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.4), 'effect': 'multiply prob by 1.100 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.48), 'effect': 'multiply prob by 0.664 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': 1e-09, 'effect': 'multiply prob by 1.000 (higher recent wins -> lower prob)'}]}"
0.2,0.4,0.48,0.05,0.0032137600000000004,"{'timestamp': 1760866780.1783822, 'inputs': {'network_load': np.float64(0.2), 'relay_reputation': np.float64(0.4), 'budget_utilization': np.float64(0.48), 'recent_win_rate': np.float64(0.05)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0032137600000000004), 'steps': [{'feature': 'network_load', 'value': np.float64(0.2), 'effect': 'multiply prob by 0.880 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.4), 'effect': 'multiply prob by 1.100 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.48), 'effect': 'multiply prob by 0.664 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.05), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.2,0.4,0.48,0.1,0.0032137600000000004,"{'timestamp': 1760866780.178409, 'inputs': {'network_load': np.float64(0.2), 'relay_reputation': np.float64(0.4), 'budget_utilization': np.float64(0.48), 'recent_win_rate': np.float64(0.1)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0032137600000000004), 'steps': [{'feature': 'network_load', 'value': np.float64(0.2), 'effect': 'multiply prob by 0.880 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.4), 'effect': 'multiply prob by 1.100 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.48), 'effect': 'multiply prob by 0.664 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.1), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.2,0.4,0.48,0.15,0.0032137600000000004,"{'timestamp': 1760866780.1784346, 'inputs': {'network_load': np.float64(0.2), 'relay_reputation': np.float64(0.4), 'budget_utilization': np.float64(0.48), 'recent_win_rate': np.float64(0.15)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0032137600000000004), 'steps': [{'feature': 'network_load', 'value': np.float64(0.2), 'effect': 'multiply prob by 0.880 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.4), 'effect': 'multiply prob by 1.100 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.48), 'effect': 'multiply prob by 0.664 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.15), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.2,0.4,0.48,0.2,0.0032137600000000004,"{'timestamp': 1760866780.1784618, 'inputs': {'network_load': np.float64(0.2), 'relay_reputation': np.float64(0.4), 'budget_utilization': np.float64(0.48), 'recent_win_rate': np.float64(0.2)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0032137600000000004), 'steps': [{'feature': 'network_load', 'value': np.float64(0.2), 'effect': 'multiply prob by 0.880 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.4), 'effect': 'multiply prob by 1.100 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.48), 'effect': 'multiply prob by 0.664 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.2), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.2,0.4,0.48,0.25,0.0032137600000000004,"{'timestamp': 1760866780.178487, 'inputs': {'network_load': np.float64(0.2), 'relay_reputation': np.float64(0.4), 'budget_utilization': np.float64(0.48), 'recent_win_rate': np.float64(0.25)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0032137600000000004), 'steps': [{'feature': 'network_load', 'value': np.float64(0.2), 'effect': 'multiply prob by 0.880 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.4), 'effect': 'multiply prob by 1.100 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.48), 'effect': 'multiply prob by 0.664 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.25), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.2,0.4,0.48,0.3,0.0032137600000000004,"{'timestamp': 1760866780.1785123, 'inputs': {'network_load': np.float64(0.2), 'relay_reputation': np.float64(0.4), 'budget_utilization': np.float64(0.48), 'recent_win_rate': np.float64(0.3)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0032137600000000004), 'steps': [{'feature': 'network_load', 'value': np.float64(0.2), 'effect': 'multiply prob by 0.880 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.4), 'effect': 'multiply prob by 1.100 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.48), 'effect': 'multiply prob by 0.664 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.3), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.2,0.4,0.59,0.0,0.0056821599431784,"{'timestamp': 1760866780.1785436, 'inputs': {'network_load': np.float64(0.2), 'relay_reputation': np.float64(0.4), 'budget_utilization': np.float64(0.59), 'recent_win_rate': 1e-09}, 'base_prob': 0.01, 'final_prob': np.float64(0.0056821599431784), 'steps': [{'feature': 'network_load', 'value': np.float64(0.2), 'effect': 'multiply prob by 0.880 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.4), 'effect': 'multiply prob by 1.100 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.59), 'effect': 'multiply prob by 0.587 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': 1e-09, 'effect': 'multiply prob by 1.000 (higher recent wins -> lower prob)'}]}"
0.2,0.4,0.59,0.05,0.00284108,"{'timestamp': 1760866780.1786, 'inputs': {'network_load': np.float64(0.2), 'relay_reputation': np.float64(0.4), 'budget_utilization': np.float64(0.59), 'recent_win_rate': np.float64(0.05)}, 'base_prob': 0.01, 'final_prob': np.float64(0.00284108), 'steps': [{'feature': 'network_load', 'value': np.float64(0.2), 'effect': 'multiply prob by 0.880 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.4), 'effect': 'multiply prob by 1.100 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.59), 'effect': 'multiply prob by 0.587 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.05), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.2,0.4,0.59,0.1,0.00284108,"{'timestamp': 1760866780.178627, 'inputs': {'network_load': np.float64(0.2), 'relay_reputation': np.float64(0.4), 'budget_utilization': np.float64(0.59), 'recent_win_rate': np.float64(0.1)}, 'base_prob': 0.01, 'final_prob': np.float64(0.00284108), 'steps': [{'feature': 'network_load', 'value': np.float64(0.2), 'effect': 'multiply prob by 0.880 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.4), 'effect': 'multiply prob by 1.100 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.59), 'effect': 'multiply prob by 0.587 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.1), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.2,0.4,0.59,0.15,0.00284108,"{'timestamp': 1760866780.1786528, 'inputs': {'network_load': np.float64(0.2), 'relay_reputation': np.float64(0.4), 'budget_utilization': np.float64(0.59), 'recent_win_rate': np.float64(0.15)}, 'base_prob': 0.01, 'final_prob': np.float64(0.00284108), 'steps': [{'feature': 'network_load', 'value': np.float64(0.2), 'effect': 'multiply prob by 0.880 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.4), 'effect': 'multiply prob by 1.100 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.59), 'effect': 'multiply prob by 0.587 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.15), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.2,0.4,0.59,0.2,0.00284108,"{'timestamp': 1760866780.178678, 'inputs': {'network_load': np.float64(0.2), 'relay_reputation': np.float64(0.4), 'budget_utilization': np.float64(0.59), 'recent_win_rate': np.float64(0.2)}, 'base_prob': 0.01, 'final_prob': np.float64(0.00284108), 'steps': [{'feature': 'network_load', 'value': np.float64(0.2), 'effect': 'multiply prob by 0.880 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.4), 'effect': 'multiply prob by 1.100 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.59), 'effect': 'multiply prob by 0.587 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.2), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.2,0.4,0.59,0.25,0.00284108,"{'timestamp': 1760866780.178709, 'inputs': {'network_load': np.float64(0.2), 'relay_reputation': np.float64(0.4), 'budget_utilization': np.float64(0.59), 'recent_win_rate': np.float64(0.25)}, 'base_prob': 0.01, 'final_prob': np.float64(0.00284108), 'steps': [{'feature': 'network_load', 'value': np.float64(0.2), 'effect': 'multiply prob by 0.880 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.4), 'effect': 'multiply prob by 1.100 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.59), 'effect': 'multiply prob by 0.587 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.25), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.2,0.4,0.59,0.3,0.00284108,"{'timestamp': 1760866780.178782, 'inputs': {'network_load': np.float64(0.2), 'relay_reputation': np.float64(0.4), 'budget_utilization': np.float64(0.59), 'recent_win_rate': np.float64(0.3)}, 'base_prob': 0.01, 'final_prob': np.float64(0.00284108), 'steps': [{'feature': 'network_load', 'value': np.float64(0.2), 'effect': 'multiply prob by 0.880 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.4), 'effect': 'multiply prob by 1.100 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.59), 'effect': 'multiply prob by 0.587 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.3), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.2,0.4,0.69,0.0,0.005004559949954401,"{'timestamp': 1760866780.1788251, 'inputs': {'network_load': np.float64(0.2), 'relay_reputation': np.float64(0.4), 'budget_utilization': np.float64(0.69), 'recent_win_rate': 1e-09}, 'base_prob': 0.01, 'final_prob': np.float64(0.005004559949954401), 'steps': [{'feature': 'network_load', 'value': np.float64(0.2), 'effect': 'multiply prob by 0.880 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.4), 'effect': 'multiply prob by 1.100 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.69), 'effect': 'multiply prob by 0.517 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': 1e-09, 'effect': 'multiply prob by 1.000 (higher recent wins -> lower prob)'}]}"
0.2,0.4,0.69,0.05,0.002502280000000001,"{'timestamp': 1760866780.1788516, 'inputs': {'network_load': np.float64(0.2), 'relay_reputation': np.float64(0.4), 'budget_utilization': np.float64(0.69), 'recent_win_rate': np.float64(0.05)}, 'base_prob': 0.01, 'final_prob': np.float64(0.002502280000000001), 'steps': [{'feature': 'network_load', 'value': np.float64(0.2), 'effect': 'multiply prob by 0.880 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.4), 'effect': 'multiply prob by 1.100 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.69), 'effect': 'multiply prob by 0.517 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.05), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.2,0.4,0.69,0.1,0.002502280000000001,"{'timestamp': 1760866780.178877, 'inputs': {'network_load': np.float64(0.2), 'relay_reputation': np.float64(0.4), 'budget_utilization': np.float64(0.69), 'recent_win_rate': np.float64(0.1)}, 'base_prob': 0.01, 'final_prob': np.float64(0.002502280000000001), 'steps': [{'feature': 'network_load', 'value': np.float64(0.2), 'effect': 'multiply prob by 0.880 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.4), 'effect': 'multiply prob by 1.100 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.69), 'effect': 'multiply prob by 0.517 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.1), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.2,0.4,0.69,0.15,0.002502280000000001,"{'timestamp': 1760866780.1789024, 'inputs': {'network_load': np.float64(0.2), 'relay_reputation': np.float64(0.4), 'budget_utilization': np.float64(0.69), 'recent_win_rate': np.float64(0.15)}, 'base_prob': 0.01, 'final_prob': np.float64(0.002502280000000001), 'steps': [{'feature': 'network_load', 'value': np.float64(0.2), 'effect': 'multiply prob by 0.880 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.4), 'effect': 'multiply prob by 1.100 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.69), 'effect': 'multiply prob by 0.517 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.15), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.2,0.4,0.69,0.2,0.002502280000000001,"{'timestamp': 1760866780.1789296, 'inputs': {'network_load': np.float64(0.2), 'relay_reputation': np.float64(0.4), 'budget_utilization': np.float64(0.69), 'recent_win_rate': np.float64(0.2)}, 'base_prob': 0.01, 'final_prob': np.float64(0.002502280000000001), 'steps': [{'feature': 'network_load', 'value': np.float64(0.2), 'effect': 'multiply prob by 0.880 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.4), 'effect': 'multiply prob by 1.100 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.69), 'effect': 'multiply prob by 0.517 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.2), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.2,0.4,0.69,0.25,0.002502280000000001,"{'timestamp': 1760866780.178957, 'inputs': {'network_load': np.float64(0.2), 'relay_reputation': np.float64(0.4), 'budget_utilization': np.float64(0.69), 'recent_win_rate': np.float64(0.25)}, 'base_prob': 0.01, 'final_prob': np.float64(0.002502280000000001), 'steps': [{'feature': 'network_load', 'value': np.float64(0.2), 'effect': 'multiply prob by 0.880 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.4), 'effect': 'multiply prob by 1.100 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.69), 'effect': 'multiply prob by 0.517 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.25), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.2,0.4,0.69,0.3,0.002502280000000001,"{'timestamp': 1760866780.1789842, 'inputs': {'network_load': np.float64(0.2), 'relay_reputation': np.float64(0.4), 'budget_utilization': np.float64(0.69), 'recent_win_rate': np.float64(0.3)}, 'base_prob': 0.01, 'final_prob': np.float64(0.002502280000000001), 'steps': [{'feature': 'network_load', 'value': np.float64(0.2), 'effect': 'multiply prob by 0.880 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.4), 'effect': 'multiply prob by 1.100 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.69), 'effect': 'multiply prob by 0.517 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.3), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.2,0.4,0.8,0.0,0.004259199957408001,"{'timestamp': 1760866780.1790116, 'inputs': {'network_load': np.float64(0.2), 'relay_reputation': np.float64(0.4), 'budget_utilization': np.float64(0.8), 'recent_win_rate': 1e-09}, 'base_prob': 0.01, 'final_prob': np.float64(0.004259199957408001), 'steps': [{'feature': 'network_load', 'value': np.float64(0.2), 'effect': 'multiply prob by 0.880 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.4), 'effect': 'multiply prob by 1.100 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.8), 'effect': 'multiply prob by 0.440 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': 1e-09, 'effect': 'multiply prob by 1.000 (higher recent wins -> lower prob)'}]}"
0.2,0.4,0.8,0.05,0.0021296000000000006,"{'timestamp': 1760866780.1790369, 'inputs': {'network_load': np.float64(0.2), 'relay_reputation': np.float64(0.4), 'budget_utilization': np.float64(0.8), 'recent_win_rate': np.float64(0.05)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0021296000000000006), 'steps': [{'feature': 'network_load', 'value': np.float64(0.2), 'effect': 'multiply prob by 0.880 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.4), 'effect': 'multiply prob by 1.100 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.8), 'effect': 'multiply prob by 0.440 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.05), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.2,0.4,0.8,0.1,0.0021296000000000006,"{'timestamp': 1760866780.1790638, 'inputs': {'network_load': np.float64(0.2), 'relay_reputation': np.float64(0.4), 'budget_utilization': np.float64(0.8), 'recent_win_rate': np.float64(0.1)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0021296000000000006), 'steps': [{'feature': 'network_load', 'value': np.float64(0.2), 'effect': 'multiply prob by 0.880 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.4), 'effect': 'multiply prob by 1.100 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.8), 'effect': 'multiply prob by 0.440 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.1), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.2,0.4,0.8,0.15,0.0021296000000000006,"{'timestamp': 1760866780.1790893, 'inputs': {'network_load': np.float64(0.2), 'relay_reputation': np.float64(0.4), 'budget_utilization': np.float64(0.8), 'recent_win_rate': np.float64(0.15)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0021296000000000006), 'steps': [{'feature': 'network_load', 'value': np.float64(0.2), 'effect': 'multiply prob by 0.880 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.4), 'effect': 'multiply prob by 1.100 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.8), 'effect': 'multiply prob by 0.440 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.15), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.2,0.4,0.8,0.2,0.0021296000000000006,"{'timestamp': 1760866780.1791146, 'inputs': {'network_load': np.float64(0.2), 'relay_reputation': np.float64(0.4), 'budget_utilization': np.float64(0.8), 'recent_win_rate': np.float64(0.2)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0021296000000000006), 'steps': [{'feature': 'network_load', 'value': np.float64(0.2), 'effect': 'multiply prob by 0.880 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.4), 'effect': 'multiply prob by 1.100 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.8), 'effect': 'multiply prob by 0.440 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.2), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.2,0.4,0.8,0.25,0.0021296000000000006,"{'timestamp': 1760866780.1791399, 'inputs': {'network_load': np.float64(0.2), 'relay_reputation': np.float64(0.4), 'budget_utilization': np.float64(0.8), 'recent_win_rate': np.float64(0.25)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0021296000000000006), 'steps': [{'feature': 'network_load', 'value': np.float64(0.2), 'effect': 'multiply prob by 0.880 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.4), 'effect': 'multiply prob by 1.100 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.8), 'effect': 'multiply prob by 0.440 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.25), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.2,0.4,0.8,0.3,0.0021296000000000006,"{'timestamp': 1760866780.179165, 'inputs': {'network_load': np.float64(0.2), 'relay_reputation': np.float64(0.4), 'budget_utilization': np.float64(0.8), 'recent_win_rate': np.float64(0.3)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0021296000000000006), 'steps': [{'feature': 'network_load', 'value': np.float64(0.2), 'effect': 'multiply prob by 0.880 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.4), 'effect': 'multiply prob by 1.100 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.8), 'effect': 'multiply prob by 0.440 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.3), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.2,0.51,0.05,0.0,0.0107423798925762,"{'timestamp': 1760866780.1791952, 'inputs': {'network_load': np.float64(0.2), 'relay_reputation': np.float64(0.51), 'budget_utilization': np.float64(0.05), 'recent_win_rate': 1e-09}, 'base_prob': 0.01, 'final_prob': np.float64(0.0107423798925762), 'steps': [{'feature': 'network_load', 'value': np.float64(0.2), 'effect': 'multiply prob by 0.880 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.51), 'effect': 'multiply prob by 1.265 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.05), 'effect': 'multiply prob by 0.965 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': 1e-09, 'effect': 'multiply prob by 1.000 (higher recent wins -> lower prob)'}]}"
0.2,0.51,0.05,0.05,0.0053711900000000005,"{'timestamp': 1760866780.179224, 'inputs': {'network_load': np.float64(0.2), 'relay_reputation': np.float64(0.51), 'budget_utilization': np.float64(0.05), 'recent_win_rate': np.float64(0.05)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0053711900000000005), 'steps': [{'feature': 'network_load', 'value': np.float64(0.2), 'effect': 'multiply prob by 0.880 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.51), 'effect': 'multiply prob by 1.265 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.05), 'effect': 'multiply prob by 0.965 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.05), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.2,0.51,0.05,0.1,0.0053711900000000005,"{'timestamp': 1760866780.1792495, 'inputs': {'network_load': np.float64(0.2), 'relay_reputation': np.float64(0.51), 'budget_utilization': np.float64(0.05), 'recent_win_rate': np.float64(0.1)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0053711900000000005), 'steps': [{'feature': 'network_load', 'value': np.float64(0.2), 'effect': 'multiply prob by 0.880 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.51), 'effect': 'multiply prob by 1.265 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.05), 'effect': 'multiply prob by 0.965 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.1), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.2,0.51,0.05,0.15,0.0053711900000000005,"{'timestamp': 1760866780.1792748, 'inputs': {'network_load': np.float64(0.2), 'relay_reputation': np.float64(0.51), 'budget_utilization': np.float64(0.05), 'recent_win_rate': np.float64(0.15)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0053711900000000005), 'steps': [{'feature': 'network_load', 'value': np.float64(0.2), 'effect': 'multiply prob by 0.880 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.51), 'effect': 'multiply prob by 1.265 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.05), 'effect': 'multiply prob by 0.965 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.15), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.2,0.51,0.05,0.2,0.0053711900000000005,"{'timestamp': 1760866780.1793056, 'inputs': {'network_load': np.float64(0.2), 'relay_reputation': np.float64(0.51), 'budget_utilization': np.float64(0.05), 'recent_win_rate': np.float64(0.2)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0053711900000000005), 'steps': [{'feature': 'network_load', 'value': np.float64(0.2), 'effect': 'multiply prob by 0.880 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.51), 'effect': 'multiply prob by 1.265 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.05), 'effect': 'multiply prob by 0.965 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.2), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.2,0.51,0.05,0.25,0.0053711900000000005,"{'timestamp': 1760866780.179334, 'inputs': {'network_load': np.float64(0.2), 'relay_reputation': np.float64(0.51), 'budget_utilization': np.float64(0.05), 'recent_win_rate': np.float64(0.25)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0053711900000000005), 'steps': [{'feature': 'network_load', 'value': np.float64(0.2), 'effect': 'multiply prob by 0.880 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.51), 'effect': 'multiply prob by 1.265 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.05), 'effect': 'multiply prob by 0.965 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.25), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.2,0.51,0.05,0.3,0.0053711900000000005,"{'timestamp': 1760866780.179363, 'inputs': {'network_load': np.float64(0.2), 'relay_reputation': np.float64(0.51), 'budget_utilization': np.float64(0.05), 'recent_win_rate': np.float64(0.3)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0053711900000000005), 'steps': [{'feature': 'network_load', 'value': np.float64(0.2), 'effect': 'multiply prob by 0.880 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.51), 'effect': 'multiply prob by 1.265 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.05), 'effect': 'multiply prob by 0.965 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.3), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.2,0.51,0.16,0.0,0.00988521590114784,"{'timestamp': 1760866780.1793902, 'inputs': {'network_load': np.float64(0.2), 'relay_reputation': np.float64(0.51), 'budget_utilization': np.float64(0.16), 'recent_win_rate': 1e-09}, 'base_prob': 0.01, 'final_prob': np.float64(0.00988521590114784), 'steps': [{'feature': 'network_load', 'value': np.float64(0.2), 'effect': 'multiply prob by 0.880 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.51), 'effect': 'multiply prob by 1.265 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.16), 'effect': 'multiply prob by 0.888 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': 1e-09, 'effect': 'multiply prob by 1.000 (higher recent wins -> lower prob)'}]}"
0.2,0.51,0.16,0.05,0.004942608,"{'timestamp': 1760866780.1794176, 'inputs': {'network_load': np.float64(0.2), 'relay_reputation': np.float64(0.51), 'budget_utilization': np.float64(0.16), 'recent_win_rate': np.float64(0.05)}, 'base_prob': 0.01, 'final_prob': np.float64(0.004942608), 'steps': [{'feature': 'network_load', 'value': np.float64(0.2), 'effect': 'multiply prob by 0.880 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.51), 'effect': 'multiply prob by 1.265 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.16), 'effect': 'multiply prob by 0.888 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.05), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.2,0.51,0.16,0.1,0.004942608,"{'timestamp': 1760866780.1794446, 'inputs': {'network_load': np.float64(0.2), 'relay_reputation': np.float64(0.51), 'budget_utilization': np.float64(0.16), 'recent_win_rate': np.float64(0.1)}, 'base_prob': 0.01, 'final_prob': np.float64(0.004942608), 'steps': [{'feature': 'network_load', 'value': np.float64(0.2), 'effect': 'multiply prob by 0.880 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.51), 'effect': 'multiply prob by 1.265 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.16), 'effect': 'multiply prob by 0.888 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.1), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.2,0.51,0.16,0.15,0.004942608,"{'timestamp': 1760866780.1794698, 'inputs': {'network_load': np.float64(0.2), 'relay_reputation': np.float64(0.51), 'budget_utilization': np.float64(0.16), 'recent_win_rate': np.float64(0.15)}, 'base_prob': 0.01, 'final_prob': np.float64(0.004942608), 'steps': [{'feature': 'network_load', 'value': np.float64(0.2), 'effect': 'multiply prob by 0.880 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.51), 'effect': 'multiply prob by 1.265 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.16), 'effect': 'multiply prob by 0.888 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.15), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.2,0.51,0.16,0.2,0.004942608,"{'timestamp': 1760866780.1794987, 'inputs': {'network_load': np.float64(0.2), 'relay_reputation': np.float64(0.51), 'budget_utilization': np.float64(0.16), 'recent_win_rate': np.float64(0.2)}, 'base_prob': 0.01, 'final_prob': np.float64(0.004942608), 'steps': [{'feature': 'network_load', 'value': np.float64(0.2), 'effect': 'multiply prob by 0.880 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.51), 'effect': 'multiply prob by 1.265 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.16), 'effect': 'multiply prob by 0.888 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.2), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.2,0.51,0.16,0.25,0.004942608,"{'timestamp': 1760866780.179524, 'inputs': {'network_load': np.float64(0.2), 'relay_reputation': np.float64(0.51), 'budget_utilization': np.float64(0.16), 'recent_win_rate': np.float64(0.25)}, 'base_prob': 0.01, 'final_prob': np.float64(0.004942608), 'steps': [{'feature': 'network_load', 'value': np.float64(0.2), 'effect': 'multiply prob by 0.880 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.51), 'effect': 'multiply prob by 1.265 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.16), 'effect': 'multiply prob by 0.888 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.25), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.2,0.51,0.16,0.3,0.004942608,"{'timestamp': 1760866780.1795492, 'inputs': {'network_load': np.float64(0.2), 'relay_reputation': np.float64(0.51), 'budget_utilization': np.float64(0.16), 'recent_win_rate': np.float64(0.3)}, 'base_prob': 0.01, 'final_prob': np.float64(0.004942608), 'steps': [{'feature': 'network_load', 'value': np.float64(0.2), 'effect': 'multiply prob by 0.880 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.51), 'effect': 'multiply prob by 1.265 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.16), 'effect': 'multiply prob by 0.888 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.3), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.2,0.51,0.26,0.0,0.009105975908940241,"{'timestamp': 1760866780.1795764, 'inputs': {'network_load': np.float64(0.2), 'relay_reputation': np.float64(0.51), 'budget_utilization': np.float64(0.26), 'recent_win_rate': 1e-09}, 'base_prob': 0.01, 'final_prob': np.float64(0.009105975908940241), 'steps': [{'feature': 'network_load', 'value': np.float64(0.2), 'effect': 'multiply prob by 0.880 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.51), 'effect': 'multiply prob by 1.265 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.26), 'effect': 'multiply prob by 0.818 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': 1e-09, 'effect': 'multiply prob by 1.000 (higher recent wins -> lower prob)'}]}"
0.2,0.51,0.26,0.05,0.004552988000000001,"{'timestamp': 1760866780.179602, 'inputs': {'network_load': np.float64(0.2), 'relay_reputation': np.float64(0.51), 'budget_utilization': np.float64(0.26), 'recent_win_rate': np.float64(0.05)}, 'base_prob': 0.01, 'final_prob': np.float64(0.004552988000000001), 'steps': [{'feature': 'network_load', 'value': np.float64(0.2), 'effect': 'multiply prob by 0.880 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.51), 'effect': 'multiply prob by 1.265 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.26), 'effect': 'multiply prob by 0.818 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.05), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.2,0.51,0.26,0.1,0.004552988000000001,"{'timestamp': 1760866780.179672, 'inputs': {'network_load': np.float64(0.2), 'relay_reputation': np.float64(0.51), 'budget_utilization': np.float64(0.26), 'recent_win_rate': np.float64(0.1)}, 'base_prob': 0.01, 'final_prob': np.float64(0.004552988000000001), 'steps': [{'feature': 'network_load', 'value': np.float64(0.2), 'effect': 'multiply prob by 0.880 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.51), 'effect': 'multiply prob by 1.265 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.26), 'effect': 'multiply prob by 0.818 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.1), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.2,0.51,0.26,0.15,0.004552988000000001,"{'timestamp': 1760866780.179715, 'inputs': {'network_load': np.float64(0.2), 'relay_reputation': np.float64(0.51), 'budget_utilization': np.float64(0.26), 'recent_win_rate': np.float64(0.15)}, 'base_prob': 0.01, 'final_prob': np.float64(0.004552988000000001), 'steps': [{'feature': 'network_load', 'value': np.float64(0.2), 'effect': 'multiply prob by 0.880 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.51), 'effect': 'multiply prob by 1.265 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.26), 'effect': 'multiply prob by 0.818 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.15), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.2,0.51,0.26,0.2,0.004552988000000001,"{'timestamp': 1760866780.179758, 'inputs': {'network_load': np.float64(0.2), 'relay_reputation': np.float64(0.51), 'budget_utilization': np.float64(0.26), 'recent_win_rate': np.float64(0.2)}, 'base_prob': 0.01, 'final_prob': np.float64(0.004552988000000001), 'steps': [{'feature': 'network_load', 'value': np.float64(0.2), 'effect': 'multiply prob by 0.880 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.51), 'effect': 'multiply prob by 1.265 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.26), 'effect': 'multiply prob by 0.818 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.2), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.2,0.51,0.26,0.25,0.004552988000000001,"{'timestamp': 1760866780.1797924, 'inputs': {'network_load': np.float64(0.2), 'relay_reputation': np.float64(0.51), 'budget_utilization': np.float64(0.26), 'recent_win_rate': np.float64(0.25)}, 'base_prob': 0.01, 'final_prob': np.float64(0.004552988000000001), 'steps': [{'feature': 'network_load', 'value': np.float64(0.2), 'effect': 'multiply prob by 0.880 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.51), 'effect': 'multiply prob by 1.265 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.26), 'effect': 'multiply prob by 0.818 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.25), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.2,0.51,0.26,0.3,0.004552988000000001,"{'timestamp': 1760866780.1798544, 'inputs': {'network_load': np.float64(0.2), 'relay_reputation': np.float64(0.51), 'budget_utilization': np.float64(0.26), 'recent_win_rate': np.float64(0.3)}, 'base_prob': 0.01, 'final_prob': np.float64(0.004552988000000001), 'steps': [{'feature': 'network_load', 'value': np.float64(0.2), 'effect': 'multiply prob by 0.880 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.51), 'effect': 'multiply prob by 1.265 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.26), 'effect': 'multiply prob by 0.818 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.3), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.2,0.51,0.37,0.0,0.00824881191751188,"{'timestamp': 1760866780.1798885, 'inputs': {'network_load': np.float64(0.2), 'relay_reputation': np.float64(0.51), 'budget_utilization': np.float64(0.37), 'recent_win_rate': 1e-09}, 'base_prob': 0.01, 'final_prob': np.float64(0.00824881191751188), 'steps': [{'feature': 'network_load', 'value': np.float64(0.2), 'effect': 'multiply prob by 0.880 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.51), 'effect': 'multiply prob by 1.265 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.37), 'effect': 'multiply prob by 0.741 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': 1e-09, 'effect': 'multiply prob by 1.000 (higher recent wins -> lower prob)'}]}"
0.2,0.51,0.37,0.05,0.004124406000000001,"{'timestamp': 1760866780.1799238, 'inputs': {'network_load': np.float64(0.2), 'relay_reputation': np.float64(0.51), 'budget_utilization': np.float64(0.37), 'recent_win_rate': np.float64(0.05)}, 'base_prob': 0.01, 'final_prob': np.float64(0.004124406000000001), 'steps': [{'feature': 'network_load', 'value': np.float64(0.2), 'effect': 'multiply prob by 0.880 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.51), 'effect': 'multiply prob by 1.265 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.37), 'effect': 'multiply prob by 0.741 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.05), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.2,0.51,0.37,0.1,0.004124406000000001,"{'timestamp': 1760866780.1799498, 'inputs': {'network_load': np.float64(0.2), 'relay_reputation': np.float64(0.51), 'budget_utilization': np.float64(0.37), 'recent_win_rate': np.float64(0.1)}, 'base_prob': 0.01, 'final_prob': np.float64(0.004124406000000001), 'steps': [{'feature': 'network_load', 'value': np.float64(0.2), 'effect': 'multiply prob by 0.880 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.51), 'effect': 'multiply prob by 1.265 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.37), 'effect': 'multiply prob by 0.741 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.1), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.2,0.51,0.37,0.15,0.004124406000000001,"{'timestamp': 1760866780.179977, 'inputs': {'network_load': np.float64(0.2), 'relay_reputation': np.float64(0.51), 'budget_utilization': np.float64(0.37), 'recent_win_rate': np.float64(0.15)}, 'base_prob': 0.01, 'final_prob': np.float64(0.004124406000000001), 'steps': [{'feature': 'network_load', 'value': np.float64(0.2), 'effect': 'multiply prob by 0.880 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.51), 'effect': 'multiply prob by 1.265 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.37), 'effect': 'multiply prob by 0.741 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.15), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.2,0.51,0.37,0.2,0.004124406000000001,"{'timestamp': 1760866780.180002, 'inputs': {'network_load': np.float64(0.2), 'relay_reputation': np.float64(0.51), 'budget_utilization': np.float64(0.37), 'recent_win_rate': np.float64(0.2)}, 'base_prob': 0.01, 'final_prob': np.float64(0.004124406000000001), 'steps': [{'feature': 'network_load', 'value': np.float64(0.2), 'effect': 'multiply prob by 0.880 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.51), 'effect': 'multiply prob by 1.265 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.37), 'effect': 'multiply prob by 0.741 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.2), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.2,0.51,0.37,0.25,0.004124406000000001,"{'timestamp': 1760866780.1800275, 'inputs': {'network_load': np.float64(0.2), 'relay_reputation': np.float64(0.51), 'budget_utilization': np.float64(0.37), 'recent_win_rate': np.float64(0.25)}, 'base_prob': 0.01, 'final_prob': np.float64(0.004124406000000001), 'steps': [{'feature': 'network_load', 'value': np.float64(0.2), 'effect': 'multiply prob by 0.880 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.51), 'effect': 'multiply prob by 1.265 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.37), 'effect': 'multiply prob by 0.741 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.25), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.2,0.51,0.37,0.3,0.004124406000000001,"{'timestamp': 1760866780.180057, 'inputs': {'network_load': np.float64(0.2), 'relay_reputation': np.float64(0.51), 'budget_utilization': np.float64(0.37), 'recent_win_rate': np.float64(0.3)}, 'base_prob': 0.01, 'final_prob': np.float64(0.004124406000000001), 'steps': [{'feature': 'network_load', 'value': np.float64(0.2), 'effect': 'multiply prob by 0.880 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.51), 'effect': 'multiply prob by 1.265 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.37), 'effect': 'multiply prob by 0.741 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.3), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.2,0.51,0.48,0.0,0.007391647926083521,"{'timestamp': 1760866780.1800847, 'inputs': {'network_load': np.float64(0.2), 'relay_reputation': np.float64(0.51), 'budget_utilization': np.float64(0.48), 'recent_win_rate': 1e-09}, 'base_prob': 0.01, 'final_prob': np.float64(0.007391647926083521), 'steps': [{'feature': 'network_load', 'value': np.float64(0.2), 'effect': 'multiply prob by 0.880 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.51), 'effect': 'multiply prob by 1.265 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.48), 'effect': 'multiply prob by 0.664 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': 1e-09, 'effect': 'multiply prob by 1.000 (higher recent wins -> lower prob)'}]}"
0.2,0.51,0.48,0.05,0.0036958240000000008,"{'timestamp': 1760866780.1801097, 'inputs': {'network_load': np.float64(0.2), 'relay_reputation': np.float64(0.51), 'budget_utilization': np.float64(0.48), 'recent_win_rate': np.float64(0.05)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0036958240000000008), 'steps': [{'feature': 'network_load', 'value': np.float64(0.2), 'effect': 'multiply prob by 0.880 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.51), 'effect': 'multiply prob by 1.265 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.48), 'effect': 'multiply prob by 0.664 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.05), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.2,0.51,0.48,0.1,0.0036958240000000008,"{'timestamp': 1760866780.1801372, 'inputs': {'network_load': np.float64(0.2), 'relay_reputation': np.float64(0.51), 'budget_utilization': np.float64(0.48), 'recent_win_rate': np.float64(0.1)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0036958240000000008), 'steps': [{'feature': 'network_load', 'value': np.float64(0.2), 'effect': 'multiply prob by 0.880 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.51), 'effect': 'multiply prob by 1.265 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.48), 'effect': 'multiply prob by 0.664 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.1), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.2,0.51,0.48,0.15,0.0036958240000000008,"{'timestamp': 1760866780.1801622, 'inputs': {'network_load': np.float64(0.2), 'relay_reputation': np.float64(0.51), 'budget_utilization': np.float64(0.48), 'recent_win_rate': np.float64(0.15)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0036958240000000008), 'steps': [{'feature': 'network_load', 'value': np.float64(0.2), 'effect': 'multiply prob by 0.880 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.51), 'effect': 'multiply prob by 1.265 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.48), 'effect': 'multiply prob by 0.664 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.15), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.2,0.51,0.48,0.2,0.0036958240000000008,"{'timestamp': 1760866780.1801915, 'inputs': {'network_load': np.float64(0.2), 'relay_reputation': np.float64(0.51), 'budget_utilization': np.float64(0.48), 'recent_win_rate': np.float64(0.2)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0036958240000000008), 'steps': [{'feature': 'network_load', 'value': np.float64(0.2), 'effect': 'multiply prob by 0.880 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.51), 'effect': 'multiply prob by 1.265 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.48), 'effect': 'multiply prob by 0.664 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.2), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.2,0.51,0.48,0.25,0.0036958240000000008,"{'timestamp': 1760866780.1802206, 'inputs': {'network_load': np.float64(0.2), 'relay_reputation': np.float64(0.51), 'budget_utilization': np.float64(0.48), 'recent_win_rate': np.float64(0.25)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0036958240000000008), 'steps': [{'feature': 'network_load', 'value': np.float64(0.2), 'effect': 'multiply prob by 0.880 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.51), 'effect': 'multiply prob by 1.265 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.48), 'effect': 'multiply prob by 0.664 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.25), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.2,0.51,0.48,0.3,0.0036958240000000008,"{'timestamp': 1760866780.1802466, 'inputs': {'network_load': np.float64(0.2), 'relay_reputation': np.float64(0.51), 'budget_utilization': np.float64(0.48), 'recent_win_rate': np.float64(0.3)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0036958240000000008), 'steps': [{'feature': 'network_load', 'value': np.float64(0.2), 'effect': 'multiply prob by 0.880 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.51), 'effect': 'multiply prob by 1.265 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.48), 'effect': 'multiply prob by 0.664 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.3), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.2,0.51,0.59,0.0,0.0065344839346551595,"{'timestamp': 1760866780.1802733, 'inputs': {'network_load': np.float64(0.2), 'relay_reputation': np.float64(0.51), 'budget_utilization': np.float64(0.59), 'recent_win_rate': 1e-09}, 'base_prob': 0.01, 'final_prob': np.float64(0.0065344839346551595), 'steps': [{'feature': 'network_load', 'value': np.float64(0.2), 'effect': 'multiply prob by 0.880 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.51), 'effect': 'multiply prob by 1.265 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.59), 'effect': 'multiply prob by 0.587 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': 1e-09, 'effect': 'multiply prob by 1.000 (higher recent wins -> lower prob)'}]}"
0.2,0.51,0.59,0.05,0.003267242,"{'timestamp': 1760866780.1802988, 'inputs': {'network_load': np.float64(0.2), 'relay_reputation': np.float64(0.51), 'budget_utilization': np.float64(0.59), 'recent_win_rate': np.float64(0.05)}, 'base_prob': 0.01, 'final_prob': np.float64(0.003267242), 'steps': [{'feature': 'network_load', 'value': np.float64(0.2), 'effect': 'multiply prob by 0.880 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.51), 'effect': 'multiply prob by 1.265 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.59), 'effect': 'multiply prob by 0.587 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.05), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.2,0.51,0.59,0.1,0.003267242,"{'timestamp': 1760866780.1803238, 'inputs': {'network_load': np.float64(0.2), 'relay_reputation': np.float64(0.51), 'budget_utilization': np.float64(0.59), 'recent_win_rate': np.float64(0.1)}, 'base_prob': 0.01, 'final_prob': np.float64(0.003267242), 'steps': [{'feature': 'network_load', 'value': np.float64(0.2), 'effect': 'multiply prob by 0.880 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.51), 'effect': 'multiply prob by 1.265 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.59), 'effect': 'multiply prob by 0.587 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.1), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.2,0.51,0.59,0.15,0.003267242,"{'timestamp': 1760866780.180351, 'inputs': {'network_load': np.float64(0.2), 'relay_reputation': np.float64(0.51), 'budget_utilization': np.float64(0.59), 'recent_win_rate': np.float64(0.15)}, 'base_prob': 0.01, 'final_prob': np.float64(0.003267242), 'steps': [{'feature': 'network_load', 'value': np.float64(0.2), 'effect': 'multiply prob by 0.880 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.51), 'effect': 'multiply prob by 1.265 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.59), 'effect': 'multiply prob by 0.587 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.15), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.2,0.51,0.59,0.2,0.003267242,"{'timestamp': 1760866780.1803763, 'inputs': {'network_load': np.float64(0.2), 'relay_reputation': np.float64(0.51), 'budget_utilization': np.float64(0.59), 'recent_win_rate': np.float64(0.2)}, 'base_prob': 0.01, 'final_prob': np.float64(0.003267242), 'steps': [{'feature': 'network_load', 'value': np.float64(0.2), 'effect': 'multiply prob by 0.880 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.51), 'effect': 'multiply prob by 1.265 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.59), 'effect': 'multiply prob by 0.587 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.2), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.2,0.51,0.59,0.25,0.003267242,"{'timestamp': 1760866780.1804035, 'inputs': {'network_load': np.float64(0.2), 'relay_reputation': np.float64(0.51), 'budget_utilization': np.float64(0.59), 'recent_win_rate': np.float64(0.25)}, 'base_prob': 0.01, 'final_prob': np.float64(0.003267242), 'steps': [{'feature': 'network_load', 'value': np.float64(0.2), 'effect': 'multiply prob by 0.880 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.51), 'effect': 'multiply prob by 1.265 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.59), 'effect': 'multiply prob by 0.587 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.25), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.2,0.51,0.59,0.3,0.003267242,"{'timestamp': 1760866780.1804304, 'inputs': {'network_load': np.float64(0.2), 'relay_reputation': np.float64(0.51), 'budget_utilization': np.float64(0.59), 'recent_win_rate': np.float64(0.3)}, 'base_prob': 0.01, 'final_prob': np.float64(0.003267242), 'steps': [{'feature': 'network_load', 'value': np.float64(0.2), 'effect': 'multiply prob by 0.880 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.51), 'effect': 'multiply prob by 1.265 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.59), 'effect': 'multiply prob by 0.587 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.3), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.2,0.51,0.69,0.0,0.005755243942447562,"{'timestamp': 1760866780.180457, 'inputs': {'network_load': np.float64(0.2), 'relay_reputation': np.float64(0.51), 'budget_utilization': np.float64(0.69), 'recent_win_rate': 1e-09}, 'base_prob': 0.01, 'final_prob': np.float64(0.005755243942447562), 'steps': [{'feature': 'network_load', 'value': np.float64(0.2), 'effect': 'multiply prob by 0.880 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.51), 'effect': 'multiply prob by 1.265 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.69), 'effect': 'multiply prob by 0.517 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': 1e-09, 'effect': 'multiply prob by 1.000 (higher recent wins -> lower prob)'}]}"
0.2,0.51,0.69,0.05,0.002877622000000001,"{'timestamp': 1760866780.180485, 'inputs': {'network_load': np.float64(0.2), 'relay_reputation': np.float64(0.51), 'budget_utilization': np.float64(0.69), 'recent_win_rate': np.float64(0.05)}, 'base_prob': 0.01, 'final_prob': np.float64(0.002877622000000001), 'steps': [{'feature': 'network_load', 'value': np.float64(0.2), 'effect': 'multiply prob by 0.880 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.51), 'effect': 'multiply prob by 1.265 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.69), 'effect': 'multiply prob by 0.517 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.05), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.2,0.51,0.69,0.1,0.002877622000000001,"{'timestamp': 1760866780.1805103, 'inputs': {'network_load': np.float64(0.2), 'relay_reputation': np.float64(0.51), 'budget_utilization': np.float64(0.69), 'recent_win_rate': np.float64(0.1)}, 'base_prob': 0.01, 'final_prob': np.float64(0.002877622000000001), 'steps': [{'feature': 'network_load', 'value': np.float64(0.2), 'effect': 'multiply prob by 0.880 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.51), 'effect': 'multiply prob by 1.265 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.69), 'effect': 'multiply prob by 0.517 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.1), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.2,0.51,0.69,0.15,0.002877622000000001,"{'timestamp': 1760866780.1805356, 'inputs': {'network_load': np.float64(0.2), 'relay_reputation': np.float64(0.51), 'budget_utilization': np.float64(0.69), 'recent_win_rate': np.float64(0.15)}, 'base_prob': 0.01, 'final_prob': np.float64(0.002877622000000001), 'steps': [{'feature': 'network_load', 'value': np.float64(0.2), 'effect': 'multiply prob by 0.880 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.51), 'effect': 'multiply prob by 1.265 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.69), 'effect': 'multiply prob by 0.517 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.15), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.2,0.51,0.69,0.2,0.002877622000000001,"{'timestamp': 1760866780.1805854, 'inputs': {'network_load': np.float64(0.2), 'relay_reputation': np.float64(0.51), 'budget_utilization': np.float64(0.69), 'recent_win_rate': np.float64(0.2)}, 'base_prob': 0.01, 'final_prob': np.float64(0.002877622000000001), 'steps': [{'feature': 'network_load', 'value': np.float64(0.2), 'effect': 'multiply prob by 0.880 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.51), 'effect': 'multiply prob by 1.265 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.69), 'effect': 'multiply prob by 0.517 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.2), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.2,0.51,0.69,0.25,0.002877622000000001,"{'timestamp': 1760866780.1806233, 'inputs': {'network_load': np.float64(0.2), 'relay_reputation': np.float64(0.51), 'budget_utilization': np.float64(0.69), 'recent_win_rate': np.float64(0.25)}, 'base_prob': 0.01, 'final_prob': np.float64(0.002877622000000001), 'steps': [{'feature': 'network_load', 'value': np.float64(0.2), 'effect': 'multiply prob by 0.880 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.51), 'effect': 'multiply prob by 1.265 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.69), 'effect': 'multiply prob by 0.517 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.25), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.2,0.51,0.69,0.3,0.002877622000000001,"{'timestamp': 1760866780.1807191, 'inputs': {'network_load': np.float64(0.2), 'relay_reputation': np.float64(0.51), 'budget_utilization': np.float64(0.69), 'recent_win_rate': np.float64(0.3)}, 'base_prob': 0.01, 'final_prob': np.float64(0.002877622000000001), 'steps': [{'feature': 'network_load', 'value': np.float64(0.2), 'effect': 'multiply prob by 0.880 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.51), 'effect': 'multiply prob by 1.265 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.69), 'effect': 'multiply prob by 0.517 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.3), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.2,0.51,0.8,0.0,0.0048980799510192005,"{'timestamp': 1760866780.1807542, 'inputs': {'network_load': np.float64(0.2), 'relay_reputation': np.float64(0.51), 'budget_utilization': np.float64(0.8), 'recent_win_rate': 1e-09}, 'base_prob': 0.01, 'final_prob': np.float64(0.0048980799510192005), 'steps': [{'feature': 'network_load', 'value': np.float64(0.2), 'effect': 'multiply prob by 0.880 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.51), 'effect': 'multiply prob by 1.265 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.8), 'effect': 'multiply prob by 0.440 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': 1e-09, 'effect': 'multiply prob by 1.000 (higher recent wins -> lower prob)'}]}"
0.2,0.51,0.8,0.05,0.0024490400000000004,"{'timestamp': 1760866780.18078, 'inputs': {'network_load': np.float64(0.2), 'relay_reputation': np.float64(0.51), 'budget_utilization': np.float64(0.8), 'recent_win_rate': np.float64(0.05)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0024490400000000004), 'steps': [{'feature': 'network_load', 'value': np.float64(0.2), 'effect': 'multiply prob by 0.880 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.51), 'effect': 'multiply prob by 1.265 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.8), 'effect': 'multiply prob by 0.440 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.05), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.2,0.51,0.8,0.1,0.0024490400000000004,"{'timestamp': 1760866780.1808054, 'inputs': {'network_load': np.float64(0.2), 'relay_reputation': np.float64(0.51), 'budget_utilization': np.float64(0.8), 'recent_win_rate': np.float64(0.1)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0024490400000000004), 'steps': [{'feature': 'network_load', 'value': np.float64(0.2), 'effect': 'multiply prob by 0.880 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.51), 'effect': 'multiply prob by 1.265 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.8), 'effect': 'multiply prob by 0.440 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.1), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.2,0.51,0.8,0.15,0.0024490400000000004,"{'timestamp': 1760866780.1808305, 'inputs': {'network_load': np.float64(0.2), 'relay_reputation': np.float64(0.51), 'budget_utilization': np.float64(0.8), 'recent_win_rate': np.float64(0.15)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0024490400000000004), 'steps': [{'feature': 'network_load', 'value': np.float64(0.2), 'effect': 'multiply prob by 0.880 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.51), 'effect': 'multiply prob by 1.265 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.8), 'effect': 'multiply prob by 0.440 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.15), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.2,0.51,0.8,0.2,0.0024490400000000004,"{'timestamp': 1760866780.1808577, 'inputs': {'network_load': np.float64(0.2), 'relay_reputation': np.float64(0.51), 'budget_utilization': np.float64(0.8), 'recent_win_rate': np.float64(0.2)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0024490400000000004), 'steps': [{'feature': 'network_load', 'value': np.float64(0.2), 'effect': 'multiply prob by 0.880 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.51), 'effect': 'multiply prob by 1.265 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.8), 'effect': 'multiply prob by 0.440 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.2), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.2,0.51,0.8,0.25,0.0024490400000000004,"{'timestamp': 1760866780.180903, 'inputs': {'network_load': np.float64(0.2), 'relay_reputation': np.float64(0.51), 'budget_utilization': np.float64(0.8), 'recent_win_rate': np.float64(0.25)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0024490400000000004), 'steps': [{'feature': 'network_load', 'value': np.float64(0.2), 'effect': 'multiply prob by 0.880 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.51), 'effect': 'multiply prob by 1.265 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.8), 'effect': 'multiply prob by 0.440 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.25), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.2,0.51,0.8,0.3,0.0024490400000000004,"{'timestamp': 1760866780.1809318, 'inputs': {'network_load': np.float64(0.2), 'relay_reputation': np.float64(0.51), 'budget_utilization': np.float64(0.8), 'recent_win_rate': np.float64(0.3)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0024490400000000004), 'steps': [{'feature': 'network_load', 'value': np.float64(0.2), 'effect': 'multiply prob by 0.880 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.51), 'effect': 'multiply prob by 1.265 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.8), 'effect': 'multiply prob by 0.440 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.3), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.2,0.62,0.05,0.0,0.012143559878564398,"{'timestamp': 1760866780.180963, 'inputs': {'network_load': np.float64(0.2), 'relay_reputation': np.float64(0.62), 'budget_utilization': np.float64(0.05), 'recent_win_rate': 1e-09}, 'base_prob': 0.01, 'final_prob': np.float64(0.012143559878564398), 'steps': [{'feature': 'network_load', 'value': np.float64(0.2), 'effect': 'multiply prob by 0.880 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.62), 'effect': 'multiply prob by 1.430 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.05), 'effect': 'multiply prob by 0.965 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': 1e-09, 'effect': 'multiply prob by 1.000 (higher recent wins -> lower prob)'}]}"
0.2,0.62,0.05,0.05,0.00607178,"{'timestamp': 1760866780.1809888, 'inputs': {'network_load': np.float64(0.2), 'relay_reputation': np.float64(0.62), 'budget_utilization': np.float64(0.05), 'recent_win_rate': np.float64(0.05)}, 'base_prob': 0.01, 'final_prob': np.float64(0.00607178), 'steps': [{'feature': 'network_load', 'value': np.float64(0.2), 'effect': 'multiply prob by 0.880 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.62), 'effect': 'multiply prob by 1.430 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.05), 'effect': 'multiply prob by 0.965 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.05), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.2,0.62,0.05,0.1,0.00607178,"{'timestamp': 1760866780.181014, 'inputs': {'network_load': np.float64(0.2), 'relay_reputation': np.float64(0.62), 'budget_utilization': np.float64(0.05), 'recent_win_rate': np.float64(0.1)}, 'base_prob': 0.01, 'final_prob': np.float64(0.00607178), 'steps': [{'feature': 'network_load', 'value': np.float64(0.2), 'effect': 'multiply prob by 0.880 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.62), 'effect': 'multiply prob by 1.430 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.05), 'effect': 'multiply prob by 0.965 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.1), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.2,0.62,0.05,0.15,0.00607178,"{'timestamp': 1760866780.1810427, 'inputs': {'network_load': np.float64(0.2), 'relay_reputation': np.float64(0.62), 'budget_utilization': np.float64(0.05), 'recent_win_rate': np.float64(0.15)}, 'base_prob': 0.01, 'final_prob': np.float64(0.00607178), 'steps': [{'feature': 'network_load', 'value': np.float64(0.2), 'effect': 'multiply prob by 0.880 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.62), 'effect': 'multiply prob by 1.430 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.05), 'effect': 'multiply prob by 0.965 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.15), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.2,0.62,0.05,0.2,0.00607178,"{'timestamp': 1760866780.181068, 'inputs': {'network_load': np.float64(0.2), 'relay_reputation': np.float64(0.62), 'budget_utilization': np.float64(0.05), 'recent_win_rate': np.float64(0.2)}, 'base_prob': 0.01, 'final_prob': np.float64(0.00607178), 'steps': [{'feature': 'network_load', 'value': np.float64(0.2), 'effect': 'multiply prob by 0.880 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.62), 'effect': 'multiply prob by 1.430 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.05), 'effect': 'multiply prob by 0.965 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.2), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.2,0.62,0.05,0.25,0.00607178,"{'timestamp': 1760866780.1810935, 'inputs': {'network_load': np.float64(0.2), 'relay_reputation': np.float64(0.62), 'budget_utilization': np.float64(0.05), 'recent_win_rate': np.float64(0.25)}, 'base_prob': 0.01, 'final_prob': np.float64(0.00607178), 'steps': [{'feature': 'network_load', 'value': np.float64(0.2), 'effect': 'multiply prob by 0.880 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.62), 'effect': 'multiply prob by 1.430 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.05), 'effect': 'multiply prob by 0.965 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.25), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.2,0.62,0.05,0.3,0.00607178,"{'timestamp': 1760866780.1811185, 'inputs': {'network_load': np.float64(0.2), 'relay_reputation': np.float64(0.62), 'budget_utilization': np.float64(0.05), 'recent_win_rate': np.float64(0.3)}, 'base_prob': 0.01, 'final_prob': np.float64(0.00607178), 'steps': [{'feature': 'network_load', 'value': np.float64(0.2), 'effect': 'multiply prob by 0.880 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.62), 'effect': 'multiply prob by 1.430 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.05), 'effect': 'multiply prob by 0.965 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.3), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.2,0.62,0.16,0.0,0.01117459188825408,"{'timestamp': 1760866780.1811454, 'inputs': {'network_load': np.float64(0.2), 'relay_reputation': np.float64(0.62), 'budget_utilization': np.float64(0.16), 'recent_win_rate': 1e-09}, 'base_prob': 0.01, 'final_prob': np.float64(0.01117459188825408), 'steps': [{'feature': 'network_load', 'value': np.float64(0.2), 'effect': 'multiply prob by 0.880 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.62), 'effect': 'multiply prob by 1.430 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.16), 'effect': 'multiply prob by 0.888 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': 1e-09, 'effect': 'multiply prob by 1.000 (higher recent wins -> lower prob)'}]}"
0.2,0.62,0.16,0.05,0.005587296,"{'timestamp': 1760866780.181176, 'inputs': {'network_load': np.float64(0.2), 'relay_reputation': np.float64(0.62), 'budget_utilization': np.float64(0.16), 'recent_win_rate': np.float64(0.05)}, 'base_prob': 0.01, 'final_prob': np.float64(0.005587296), 'steps': [{'feature': 'network_load', 'value': np.float64(0.2), 'effect': 'multiply prob by 0.880 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.62), 'effect': 'multiply prob by 1.430 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.16), 'effect': 'multiply prob by 0.888 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.05), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.2,0.62,0.16,0.1,0.005587296,"{'timestamp': 1760866780.181205, 'inputs': {'network_load': np.float64(0.2), 'relay_reputation': np.float64(0.62), 'budget_utilization': np.float64(0.16), 'recent_win_rate': np.float64(0.1)}, 'base_prob': 0.01, 'final_prob': np.float64(0.005587296), 'steps': [{'feature': 'network_load', 'value': np.float64(0.2), 'effect': 'multiply prob by 0.880 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.62), 'effect': 'multiply prob by 1.430 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.16), 'effect': 'multiply prob by 0.888 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.1), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.2,0.62,0.16,0.15,0.005587296,"{'timestamp': 1760866780.1812305, 'inputs': {'network_load': np.float64(0.2), 'relay_reputation': np.float64(0.62), 'budget_utilization': np.float64(0.16), 'recent_win_rate': np.float64(0.15)}, 'base_prob': 0.01, 'final_prob': np.float64(0.005587296), 'steps': [{'feature': 'network_load', 'value': np.float64(0.2), 'effect': 'multiply prob by 0.880 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.62), 'effect': 'multiply prob by 1.430 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.16), 'effect': 'multiply prob by 0.888 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.15), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.2,0.62,0.16,0.2,0.005587296,"{'timestamp': 1760866780.1812558, 'inputs': {'network_load': np.float64(0.2), 'relay_reputation': np.float64(0.62), 'budget_utilization': np.float64(0.16), 'recent_win_rate': np.float64(0.2)}, 'base_prob': 0.01, 'final_prob': np.float64(0.005587296), 'steps': [{'feature': 'network_load', 'value': np.float64(0.2), 'effect': 'multiply prob by 0.880 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.62), 'effect': 'multiply prob by 1.430 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.16), 'effect': 'multiply prob by 0.888 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.2), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.2,0.62,0.16,0.25,0.005587296,"{'timestamp': 1760866780.1812813, 'inputs': {'network_load': np.float64(0.2), 'relay_reputation': np.float64(0.62), 'budget_utilization': np.float64(0.16), 'recent_win_rate': np.float64(0.25)}, 'base_prob': 0.01, 'final_prob': np.float64(0.005587296), 'steps': [{'feature': 'network_load', 'value': np.float64(0.2), 'effect': 'multiply prob by 0.880 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.62), 'effect': 'multiply prob by 1.430 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.16), 'effect': 'multiply prob by 0.888 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.25), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.2,0.62,0.16,0.3,0.005587296,"{'timestamp': 1760866780.1813118, 'inputs': {'network_load': np.float64(0.2), 'relay_reputation': np.float64(0.62), 'budget_utilization': np.float64(0.16), 'recent_win_rate': np.float64(0.3)}, 'base_prob': 0.01, 'final_prob': np.float64(0.005587296), 'steps': [{'feature': 'network_load', 'value': np.float64(0.2), 'effect': 'multiply prob by 0.880 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.62), 'effect': 'multiply prob by 1.430 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.16), 'effect': 'multiply prob by 0.888 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.3), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.2,0.62,0.26,0.0,0.01029371189706288,"{'timestamp': 1760866780.1813388, 'inputs': {'network_load': np.float64(0.2), 'relay_reputation': np.float64(0.62), 'budget_utilization': np.float64(0.26), 'recent_win_rate': 1e-09}, 'base_prob': 0.01, 'final_prob': np.float64(0.01029371189706288), 'steps': [{'feature': 'network_load', 'value': np.float64(0.2), 'effect': 'multiply prob by 0.880 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.62), 'effect': 'multiply prob by 1.430 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.26), 'effect': 'multiply prob by 0.818 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': 1e-09, 'effect': 'multiply prob by 1.000 (higher recent wins -> lower prob)'}]}"
0.2,0.62,0.26,0.05,0.005146856,"{'timestamp': 1760866780.1813643, 'inputs': {'network_load': np.float64(0.2), 'relay_reputation': np.float64(0.62), 'budget_utilization': np.float64(0.26), 'recent_win_rate': np.float64(0.05)}, 'base_prob': 0.01, 'final_prob': np.float64(0.005146856), 'steps': [{'feature': 'network_load', 'value': np.float64(0.2), 'effect': 'multiply prob by 0.880 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.62), 'effect': 'multiply prob by 1.430 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.26), 'effect': 'multiply prob by 0.818 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.05), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.2,0.62,0.26,0.1,0.005146856,"{'timestamp': 1760866780.1813917, 'inputs': {'network_load': np.float64(0.2), 'relay_reputation': np.float64(0.62), 'budget_utilization': np.float64(0.26), 'recent_win_rate': np.float64(0.1)}, 'base_prob': 0.01, 'final_prob': np.float64(0.005146856), 'steps': [{'feature': 'network_load', 'value': np.float64(0.2), 'effect': 'multiply prob by 0.880 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.62), 'effect': 'multiply prob by 1.430 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.26), 'effect': 'multiply prob by 0.818 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.1), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.2,0.62,0.26,0.15,0.005146856,"{'timestamp': 1760866780.181417, 'inputs': {'network_load': np.float64(0.2), 'relay_reputation': np.float64(0.62), 'budget_utilization': np.float64(0.26), 'recent_win_rate': np.float64(0.15)}, 'base_prob': 0.01, 'final_prob': np.float64(0.005146856), 'steps': [{'feature': 'network_load', 'value': np.float64(0.2), 'effect': 'multiply prob by 0.880 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.62), 'effect': 'multiply prob by 1.430 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.26), 'effect': 'multiply prob by 0.818 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.15), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.2,0.62,0.26,0.2,0.005146856,"{'timestamp': 1760866780.1814423, 'inputs': {'network_load': np.float64(0.2), 'relay_reputation': np.float64(0.62), 'budget_utilization': np.float64(0.26), 'recent_win_rate': np.float64(0.2)}, 'base_prob': 0.01, 'final_prob': np.float64(0.005146856), 'steps': [{'feature': 'network_load', 'value': np.float64(0.2), 'effect': 'multiply prob by 0.880 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.62), 'effect': 'multiply prob by 1.430 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.26), 'effect': 'multiply prob by 0.818 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.2), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.2,0.62,0.26,0.25,0.005146856,"{'timestamp': 1760866780.1814697, 'inputs': {'network_load': np.float64(0.2), 'relay_reputation': np.float64(0.62), 'budget_utilization': np.float64(0.26), 'recent_win_rate': np.float64(0.25)}, 'base_prob': 0.01, 'final_prob': np.float64(0.005146856), 'steps': [{'feature': 'network_load', 'value': np.float64(0.2), 'effect': 'multiply prob by 0.880 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.62), 'effect': 'multiply prob by 1.430 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.26), 'effect': 'multiply prob by 0.818 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.25), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.2,0.62,0.26,0.3,0.005146856,"{'timestamp': 1760866780.181495, 'inputs': {'network_load': np.float64(0.2), 'relay_reputation': np.float64(0.62), 'budget_utilization': np.float64(0.26), 'recent_win_rate': np.float64(0.3)}, 'base_prob': 0.01, 'final_prob': np.float64(0.005146856), 'steps': [{'feature': 'network_load', 'value': np.float64(0.2), 'effect': 'multiply prob by 0.880 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.62), 'effect': 'multiply prob by 1.430 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.26), 'effect': 'multiply prob by 0.818 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.3), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.2,0.62,0.37,0.0,0.009324743906752558,"{'timestamp': 1760866780.181573, 'inputs': {'network_load': np.float64(0.2), 'relay_reputation': np.float64(0.62), 'budget_utilization': np.float64(0.37), 'recent_win_rate': 1e-09}, 'base_prob': 0.01, 'final_prob': np.float64(0.009324743906752558), 'steps': [{'feature': 'network_load', 'value': np.float64(0.2), 'effect': 'multiply prob by 0.880 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.62), 'effect': 'multiply prob by 1.430 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.37), 'effect': 'multiply prob by 0.741 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': 1e-09, 'effect': 'multiply prob by 1.000 (higher recent wins -> lower prob)'}]}"
0.2,0.62,0.37,0.05,0.004662372,"{'timestamp': 1760866780.1816115, 'inputs': {'network_load': np.float64(0.2), 'relay_reputation': np.float64(0.62), 'budget_utilization': np.float64(0.37), 'recent_win_rate': np.float64(0.05)}, 'base_prob': 0.01, 'final_prob': np.float64(0.004662372), 'steps': [{'feature': 'network_load', 'value': np.float64(0.2), 'effect': 'multiply prob by 0.880 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.62), 'effect': 'multiply prob by 1.430 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.37), 'effect': 'multiply prob by 0.741 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.05), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.2,0.62,0.37,0.1,0.004662372,"{'timestamp': 1760866780.1816382, 'inputs': {'network_load': np.float64(0.2), 'relay_reputation': np.float64(0.62), 'budget_utilization': np.float64(0.37), 'recent_win_rate': np.float64(0.1)}, 'base_prob': 0.01, 'final_prob': np.float64(0.004662372), 'steps': [{'feature': 'network_load', 'value': np.float64(0.2), 'effect': 'multiply prob by 0.880 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.62), 'effect': 'multiply prob by 1.430 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.37), 'effect': 'multiply prob by 0.741 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.1), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.2,0.62,0.37,0.15,0.004662372,"{'timestamp': 1760866780.1816685, 'inputs': {'network_load': np.float64(0.2), 'relay_reputation': np.float64(0.62), 'budget_utilization': np.float64(0.37), 'recent_win_rate': np.float64(0.15)}, 'base_prob': 0.01, 'final_prob': np.float64(0.004662372), 'steps': [{'feature': 'network_load', 'value': np.float64(0.2), 'effect': 'multiply prob by 0.880 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.62), 'effect': 'multiply prob by 1.430 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.37), 'effect': 'multiply prob by 0.741 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.15), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.2,0.62,0.37,0.2,0.004662372,"{'timestamp': 1760866780.1816957, 'inputs': {'network_load': np.float64(0.2), 'relay_reputation': np.float64(0.62), 'budget_utilization': np.float64(0.37), 'recent_win_rate': np.float64(0.2)}, 'base_prob': 0.01, 'final_prob': np.float64(0.004662372), 'steps': [{'feature': 'network_load', 'value': np.float64(0.2), 'effect': 'multiply prob by 0.880 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.62), 'effect': 'multiply prob by 1.430 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.37), 'effect': 'multiply prob by 0.741 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.2), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.2,0.62,0.37,0.25,0.004662372,"{'timestamp': 1760866780.181721, 'inputs': {'network_load': np.float64(0.2), 'relay_reputation': np.float64(0.62), 'budget_utilization': np.float64(0.37), 'recent_win_rate': np.float64(0.25)}, 'base_prob': 0.01, 'final_prob': np.float64(0.004662372), 'steps': [{'feature': 'network_load', 'value': np.float64(0.2), 'effect': 'multiply prob by 0.880 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.62), 'effect': 'multiply prob by 1.430 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.37), 'effect': 'multiply prob by 0.741 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.25), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.2,0.62,0.37,0.3,0.004662372,"{'timestamp': 1760866780.1817462, 'inputs': {'network_load': np.float64(0.2), 'relay_reputation': np.float64(0.62), 'budget_utilization': np.float64(0.37), 'recent_win_rate': np.float64(0.3)}, 'base_prob': 0.01, 'final_prob': np.float64(0.004662372), 'steps': [{'feature': 'network_load', 'value': np.float64(0.2), 'effect': 'multiply prob by 0.880 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.62), 'effect': 'multiply prob by 1.430 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.37), 'effect': 'multiply prob by 0.741 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.3), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.2,0.62,0.48,0.0,0.00835577591644224,"{'timestamp': 1760866780.1817753, 'inputs': {'network_load': np.float64(0.2), 'relay_reputation': np.float64(0.62), 'budget_utilization': np.float64(0.48), 'recent_win_rate': 1e-09}, 'base_prob': 0.01, 'final_prob': np.float64(0.00835577591644224), 'steps': [{'feature': 'network_load', 'value': np.float64(0.2), 'effect': 'multiply prob by 0.880 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.62), 'effect': 'multiply prob by 1.430 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.48), 'effect': 'multiply prob by 0.664 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': 1e-09, 'effect': 'multiply prob by 1.000 (higher recent wins -> lower prob)'}]}"
0.2,0.62,0.48,0.05,0.004177888,"{'timestamp': 1760866780.1818025, 'inputs': {'network_load': np.float64(0.2), 'relay_reputation': np.float64(0.62), 'budget_utilization': np.float64(0.48), 'recent_win_rate': np.float64(0.05)}, 'base_prob': 0.01, 'final_prob': np.float64(0.004177888), 'steps': [{'feature': 'network_load', 'value': np.float64(0.2), 'effect': 'multiply prob by 0.880 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.62), 'effect': 'multiply prob by 1.430 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.48), 'effect': 'multiply prob by 0.664 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.05), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.2,0.62,0.48,0.1,0.004177888,"{'timestamp': 1760866780.181833, 'inputs': {'network_load': np.float64(0.2), 'relay_reputation': np.float64(0.62), 'budget_utilization': np.float64(0.48), 'recent_win_rate': np.float64(0.1)}, 'base_prob': 0.01, 'final_prob': np.float64(0.004177888), 'steps': [{'feature': 'network_load', 'value': np.float64(0.2), 'effect': 'multiply prob by 0.880 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.62), 'effect': 'multiply prob by 1.430 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.48), 'effect': 'multiply prob by 0.664 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.1), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.2,0.62,0.48,0.15,0.004177888,"{'timestamp': 1760866780.1818585, 'inputs': {'network_load': np.float64(0.2), 'relay_reputation': np.float64(0.62), 'budget_utilization': np.float64(0.48), 'recent_win_rate': np.float64(0.15)}, 'base_prob': 0.01, 'final_prob': np.float64(0.004177888), 'steps': [{'feature': 'network_load', 'value': np.float64(0.2), 'effect': 'multiply prob by 0.880 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.62), 'effect': 'multiply prob by 1.430 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.48), 'effect': 'multiply prob by 0.664 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.15), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.2,0.62,0.48,0.2,0.004177888,"{'timestamp': 1760866780.1818864, 'inputs': {'network_load': np.float64(0.2), 'relay_reputation': np.float64(0.62), 'budget_utilization': np.float64(0.48), 'recent_win_rate': np.float64(0.2)}, 'base_prob': 0.01, 'final_prob': np.float64(0.004177888), 'steps': [{'feature': 'network_load', 'value': np.float64(0.2), 'effect': 'multiply prob by 0.880 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.62), 'effect': 'multiply prob by 1.430 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.48), 'effect': 'multiply prob by 0.664 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.2), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.2,0.62,0.48,0.25,0.004177888,"{'timestamp': 1760866780.1819193, 'inputs': {'network_load': np.float64(0.2), 'relay_reputation': np.float64(0.62), 'budget_utilization': np.float64(0.48), 'recent_win_rate': np.float64(0.25)}, 'base_prob': 0.01, 'final_prob': np.float64(0.004177888), 'steps': [{'feature': 'network_load', 'value': np.float64(0.2), 'effect': 'multiply prob by 0.880 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.62), 'effect': 'multiply prob by 1.430 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.48), 'effect': 'multiply prob by 0.664 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.25), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.2,0.62,0.48,0.3,0.004177888,"{'timestamp': 1760866780.1819491, 'inputs': {'network_load': np.float64(0.2), 'relay_reputation': np.float64(0.62), 'budget_utilization': np.float64(0.48), 'recent_win_rate': np.float64(0.3)}, 'base_prob': 0.01, 'final_prob': np.float64(0.004177888), 'steps': [{'feature': 'network_load', 'value': np.float64(0.2), 'effect': 'multiply prob by 0.880 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.62), 'effect': 'multiply prob by 1.430 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.48), 'effect': 'multiply prob by 0.664 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.3), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.2,0.62,0.59,0.0,0.007386807926131919,"{'timestamp': 1760866780.181986, 'inputs': {'network_load': np.float64(0.2), 'relay_reputation': np.float64(0.62), 'budget_utilization': np.float64(0.59), 'recent_win_rate': 1e-09}, 'base_prob': 0.01, 'final_prob': np.float64(0.007386807926131919), 'steps': [{'feature': 'network_load', 'value': np.float64(0.2), 'effect': 'multiply prob by 0.880 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.62), 'effect': 'multiply prob by 1.430 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.59), 'effect': 'multiply prob by 0.587 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': 1e-09, 'effect': 'multiply prob by 1.000 (higher recent wins -> lower prob)'}]}"
0.2,0.62,0.59,0.05,0.0036934039999999995,"{'timestamp': 1760866780.1820207, 'inputs': {'network_load': np.float64(0.2), 'relay_reputation': np.float64(0.62), 'budget_utilization': np.float64(0.59), 'recent_win_rate': np.float64(0.05)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0036934039999999995), 'steps': [{'feature': 'network_load', 'value': np.float64(0.2), 'effect': 'multiply prob by 0.880 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.62), 'effect': 'multiply prob by 1.430 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.59), 'effect': 'multiply prob by 0.587 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.05), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.2,0.62,0.59,0.1,0.0036934039999999995,"{'timestamp': 1760866780.1820548, 'inputs': {'network_load': np.float64(0.2), 'relay_reputation': np.float64(0.62), 'budget_utilization': np.float64(0.59), 'recent_win_rate': np.float64(0.1)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0036934039999999995), 'steps': [{'feature': 'network_load', 'value': np.float64(0.2), 'effect': 'multiply prob by 0.880 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.62), 'effect': 'multiply prob by 1.430 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.59), 'effect': 'multiply prob by 0.587 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.1), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.2,0.62,0.59,0.15,0.0036934039999999995,"{'timestamp': 1760866780.1820877, 'inputs': {'network_load': np.float64(0.2), 'relay_reputation': np.float64(0.62), 'budget_utilization': np.float64(0.59), 'recent_win_rate': np.float64(0.15)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0036934039999999995), 'steps': [{'feature': 'network_load', 'value': np.float64(0.2), 'effect': 'multiply prob by 0.880 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.62), 'effect': 'multiply prob by 1.430 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.59), 'effect': 'multiply prob by 0.587 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.15), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.2,0.62,0.59,0.2,0.0036934039999999995,"{'timestamp': 1760866780.1821249, 'inputs': {'network_load': np.float64(0.2), 'relay_reputation': np.float64(0.62), 'budget_utilization': np.float64(0.59), 'recent_win_rate': np.float64(0.2)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0036934039999999995), 'steps': [{'feature': 'network_load', 'value': np.float64(0.2), 'effect': 'multiply prob by 0.880 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.62), 'effect': 'multiply prob by 1.430 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.59), 'effect': 'multiply prob by 0.587 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.2), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.2,0.62,0.59,0.25,0.0036934039999999995,"{'timestamp': 1760866780.1821632, 'inputs': {'network_load': np.float64(0.2), 'relay_reputation': np.float64(0.62), 'budget_utilization': np.float64(0.59), 'recent_win_rate': np.float64(0.25)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0036934039999999995), 'steps': [{'feature': 'network_load', 'value': np.float64(0.2), 'effect': 'multiply prob by 0.880 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.62), 'effect': 'multiply prob by 1.430 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.59), 'effect': 'multiply prob by 0.587 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.25), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.2,0.62,0.59,0.3,0.0036934039999999995,"{'timestamp': 1760866780.1821988, 'inputs': {'network_load': np.float64(0.2), 'relay_reputation': np.float64(0.62), 'budget_utilization': np.float64(0.59), 'recent_win_rate': np.float64(0.3)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0036934039999999995), 'steps': [{'feature': 'network_load', 'value': np.float64(0.2), 'effect': 'multiply prob by 0.880 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.62), 'effect': 'multiply prob by 1.430 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.59), 'effect': 'multiply prob by 0.587 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.3), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.2,0.62,0.69,0.0,0.006505927934940721,"{'timestamp': 1760866780.1822357, 'inputs': {'network_load': np.float64(0.2), 'relay_reputation': np.float64(0.62), 'budget_utilization': np.float64(0.69), 'recent_win_rate': 1e-09}, 'base_prob': 0.01, 'final_prob': np.float64(0.006505927934940721), 'steps': [{'feature': 'network_load', 'value': np.float64(0.2), 'effect': 'multiply prob by 0.880 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.62), 'effect': 'multiply prob by 1.430 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.69), 'effect': 'multiply prob by 0.517 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': 1e-09, 'effect': 'multiply prob by 1.000 (higher recent wins -> lower prob)'}]}"
0.2,0.62,0.69,0.05,0.0032529640000000005,"{'timestamp': 1760866780.1822681, 'inputs': {'network_load': np.float64(0.2), 'relay_reputation': np.float64(0.62), 'budget_utilization': np.float64(0.69), 'recent_win_rate': np.float64(0.05)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0032529640000000005), 'steps': [{'feature': 'network_load', 'value': np.float64(0.2), 'effect': 'multiply prob by 0.880 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.62), 'effect': 'multiply prob by 1.430 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.69), 'effect': 'multiply prob by 0.517 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.05), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.2,0.62,0.69,0.1,0.0032529640000000005,"{'timestamp': 1760866780.1823013, 'inputs': {'network_load': np.float64(0.2), 'relay_reputation': np.float64(0.62), 'budget_utilization': np.float64(0.69), 'recent_win_rate': np.float64(0.1)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0032529640000000005), 'steps': [{'feature': 'network_load', 'value': np.float64(0.2), 'effect': 'multiply prob by 0.880 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.62), 'effect': 'multiply prob by 1.430 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.69), 'effect': 'multiply prob by 0.517 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.1), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.2,0.62,0.69,0.15,0.0032529640000000005,"{'timestamp': 1760866780.1823378, 'inputs': {'network_load': np.float64(0.2), 'relay_reputation': np.float64(0.62), 'budget_utilization': np.float64(0.69), 'recent_win_rate': np.float64(0.15)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0032529640000000005), 'steps': [{'feature': 'network_load', 'value': np.float64(0.2), 'effect': 'multiply prob by 0.880 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.62), 'effect': 'multiply prob by 1.430 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.69), 'effect': 'multiply prob by 0.517 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.15), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.2,0.62,0.69,0.2,0.0032529640000000005,"{'timestamp': 1760866780.182371, 'inputs': {'network_load': np.float64(0.2), 'relay_reputation': np.float64(0.62), 'budget_utilization': np.float64(0.69), 'recent_win_rate': np.float64(0.2)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0032529640000000005), 'steps': [{'feature': 'network_load', 'value': np.float64(0.2), 'effect': 'multiply prob by 0.880 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.62), 'effect': 'multiply prob by 1.430 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.69), 'effect': 'multiply prob by 0.517 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.2), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.2,0.62,0.69,0.25,0.0032529640000000005,"{'timestamp': 1760866780.1824036, 'inputs': {'network_load': np.float64(0.2), 'relay_reputation': np.float64(0.62), 'budget_utilization': np.float64(0.69), 'recent_win_rate': np.float64(0.25)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0032529640000000005), 'steps': [{'feature': 'network_load', 'value': np.float64(0.2), 'effect': 'multiply prob by 0.880 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.62), 'effect': 'multiply prob by 1.430 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.69), 'effect': 'multiply prob by 0.517 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.25), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.2,0.62,0.69,0.3,0.0032529640000000005,"{'timestamp': 1760866780.1824393, 'inputs': {'network_load': np.float64(0.2), 'relay_reputation': np.float64(0.62), 'budget_utilization': np.float64(0.69), 'recent_win_rate': np.float64(0.3)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0032529640000000005), 'steps': [{'feature': 'network_load', 'value': np.float64(0.2), 'effect': 'multiply prob by 0.880 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.62), 'effect': 'multiply prob by 1.430 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.69), 'effect': 'multiply prob by 0.517 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.3), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.2,0.62,0.8,0.0,0.0055369599446304,"{'timestamp': 1760866780.1824758, 'inputs': {'network_load': np.float64(0.2), 'relay_reputation': np.float64(0.62), 'budget_utilization': np.float64(0.8), 'recent_win_rate': 1e-09}, 'base_prob': 0.01, 'final_prob': np.float64(0.0055369599446304), 'steps': [{'feature': 'network_load', 'value': np.float64(0.2), 'effect': 'multiply prob by 0.880 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.62), 'effect': 'multiply prob by 1.430 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.8), 'effect': 'multiply prob by 0.440 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': 1e-09, 'effect': 'multiply prob by 1.000 (higher recent wins -> lower prob)'}]}"
0.2,0.62,0.8,0.05,0.0027684800000000002,"{'timestamp': 1760866780.1825118, 'inputs': {'network_load': np.float64(0.2), 'relay_reputation': np.float64(0.62), 'budget_utilization': np.float64(0.8), 'recent_win_rate': np.float64(0.05)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0027684800000000002), 'steps': [{'feature': 'network_load', 'value': np.float64(0.2), 'effect': 'multiply prob by 0.880 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.62), 'effect': 'multiply prob by 1.430 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.8), 'effect': 'multiply prob by 0.440 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.05), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.2,0.62,0.8,0.1,0.0027684800000000002,"{'timestamp': 1760866780.182546, 'inputs': {'network_load': np.float64(0.2), 'relay_reputation': np.float64(0.62), 'budget_utilization': np.float64(0.8), 'recent_win_rate': np.float64(0.1)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0027684800000000002), 'steps': [{'feature': 'network_load', 'value': np.float64(0.2), 'effect': 'multiply prob by 0.880 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.62), 'effect': 'multiply prob by 1.430 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.8), 'effect': 'multiply prob by 0.440 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.1), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.2,0.62,0.8,0.15,0.0027684800000000002,"{'timestamp': 1760866780.1826997, 'inputs': {'network_load': np.float64(0.2), 'relay_reputation': np.float64(0.62), 'budget_utilization': np.float64(0.8), 'recent_win_rate': np.float64(0.15)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0027684800000000002), 'steps': [{'feature': 'network_load', 'value': np.float64(0.2), 'effect': 'multiply prob by 0.880 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.62), 'effect': 'multiply prob by 1.430 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.8), 'effect': 'multiply prob by 0.440 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.15), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.2,0.62,0.8,0.2,0.0027684800000000002,"{'timestamp': 1760866780.1827352, 'inputs': {'network_load': np.float64(0.2), 'relay_reputation': np.float64(0.62), 'budget_utilization': np.float64(0.8), 'recent_win_rate': np.float64(0.2)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0027684800000000002), 'steps': [{'feature': 'network_load', 'value': np.float64(0.2), 'effect': 'multiply prob by 0.880 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.62), 'effect': 'multiply prob by 1.430 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.8), 'effect': 'multiply prob by 0.440 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.2), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.2,0.62,0.8,0.25,0.0027684800000000002,"{'timestamp': 1760866780.182768, 'inputs': {'network_load': np.float64(0.2), 'relay_reputation': np.float64(0.62), 'budget_utilization': np.float64(0.8), 'recent_win_rate': np.float64(0.25)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0027684800000000002), 'steps': [{'feature': 'network_load', 'value': np.float64(0.2), 'effect': 'multiply prob by 0.880 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.62), 'effect': 'multiply prob by 1.430 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.8), 'effect': 'multiply prob by 0.440 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.25), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.2,0.62,0.8,0.3,0.0027684800000000002,"{'timestamp': 1760866780.1828, 'inputs': {'network_load': np.float64(0.2), 'relay_reputation': np.float64(0.62), 'budget_utilization': np.float64(0.8), 'recent_win_rate': np.float64(0.3)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0027684800000000002), 'steps': [{'feature': 'network_load', 'value': np.float64(0.2), 'effect': 'multiply prob by 0.880 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.62), 'effect': 'multiply prob by 1.430 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.8), 'effect': 'multiply prob by 0.440 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.3), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.2,0.73,0.05,0.0,0.0135447398645526,"{'timestamp': 1760866780.1828506, 'inputs': {'network_load': np.float64(0.2), 'relay_reputation': np.float64(0.73), 'budget_utilization': np.float64(0.05), 'recent_win_rate': 1e-09}, 'base_prob': 0.01, 'final_prob': np.float64(0.0135447398645526), 'steps': [{'feature': 'network_load', 'value': np.float64(0.2), 'effect': 'multiply prob by 0.880 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.73), 'effect': 'multiply prob by 1.595 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.05), 'effect': 'multiply prob by 0.965 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': 1e-09, 'effect': 'multiply prob by 1.000 (higher recent wins -> lower prob)'}]}"
0.2,0.73,0.05,0.05,0.00677237,"{'timestamp': 1760866780.1828897, 'inputs': {'network_load': np.float64(0.2), 'relay_reputation': np.float64(0.73), 'budget_utilization': np.float64(0.05), 'recent_win_rate': np.float64(0.05)}, 'base_prob': 0.01, 'final_prob': np.float64(0.00677237), 'steps': [{'feature': 'network_load', 'value': np.float64(0.2), 'effect': 'multiply prob by 0.880 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.73), 'effect': 'multiply prob by 1.595 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.05), 'effect': 'multiply prob by 0.965 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.05), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.2,0.73,0.05,0.1,0.00677237,"{'timestamp': 1760866780.1829247, 'inputs': {'network_load': np.float64(0.2), 'relay_reputation': np.float64(0.73), 'budget_utilization': np.float64(0.05), 'recent_win_rate': np.float64(0.1)}, 'base_prob': 0.01, 'final_prob': np.float64(0.00677237), 'steps': [{'feature': 'network_load', 'value': np.float64(0.2), 'effect': 'multiply prob by 0.880 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.73), 'effect': 'multiply prob by 1.595 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.05), 'effect': 'multiply prob by 0.965 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.1), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.2,0.73,0.05,0.15,0.00677237,"{'timestamp': 1760866780.18296, 'inputs': {'network_load': np.float64(0.2), 'relay_reputation': np.float64(0.73), 'budget_utilization': np.float64(0.05), 'recent_win_rate': np.float64(0.15)}, 'base_prob': 0.01, 'final_prob': np.float64(0.00677237), 'steps': [{'feature': 'network_load', 'value': np.float64(0.2), 'effect': 'multiply prob by 0.880 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.73), 'effect': 'multiply prob by 1.595 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.05), 'effect': 'multiply prob by 0.965 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.15), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.2,0.73,0.05,0.2,0.00677237,"{'timestamp': 1760866780.1829922, 'inputs': {'network_load': np.float64(0.2), 'relay_reputation': np.float64(0.73), 'budget_utilization': np.float64(0.05), 'recent_win_rate': np.float64(0.2)}, 'base_prob': 0.01, 'final_prob': np.float64(0.00677237), 'steps': [{'feature': 'network_load', 'value': np.float64(0.2), 'effect': 'multiply prob by 0.880 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.73), 'effect': 'multiply prob by 1.595 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.05), 'effect': 'multiply prob by 0.965 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.2), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.2,0.73,0.05,0.25,0.00677237,"{'timestamp': 1760866780.1830308, 'inputs': {'network_load': np.float64(0.2), 'relay_reputation': np.float64(0.73), 'budget_utilization': np.float64(0.05), 'recent_win_rate': np.float64(0.25)}, 'base_prob': 0.01, 'final_prob': np.float64(0.00677237), 'steps': [{'feature': 'network_load', 'value': np.float64(0.2), 'effect': 'multiply prob by 0.880 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.73), 'effect': 'multiply prob by 1.595 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.05), 'effect': 'multiply prob by 0.965 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.25), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.2,0.73,0.05,0.3,0.00677237,"{'timestamp': 1760866780.1830604, 'inputs': {'network_load': np.float64(0.2), 'relay_reputation': np.float64(0.73), 'budget_utilization': np.float64(0.05), 'recent_win_rate': np.float64(0.3)}, 'base_prob': 0.01, 'final_prob': np.float64(0.00677237), 'steps': [{'feature': 'network_load', 'value': np.float64(0.2), 'effect': 'multiply prob by 0.880 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.73), 'effect': 'multiply prob by 1.595 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.05), 'effect': 'multiply prob by 0.965 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.3), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.2,0.73,0.16,0.0,0.01246396787536032,"{'timestamp': 1760866780.1830945, 'inputs': {'network_load': np.float64(0.2), 'relay_reputation': np.float64(0.73), 'budget_utilization': np.float64(0.16), 'recent_win_rate': 1e-09}, 'base_prob': 0.01, 'final_prob': np.float64(0.01246396787536032), 'steps': [{'feature': 'network_load', 'value': np.float64(0.2), 'effect': 'multiply prob by 0.880 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.73), 'effect': 'multiply prob by 1.595 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.16), 'effect': 'multiply prob by 0.888 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': 1e-09, 'effect': 'multiply prob by 1.000 (higher recent wins -> lower prob)'}]}"
0.2,0.73,0.16,0.05,0.006231984,"{'timestamp': 1760866780.18312, 'inputs': {'network_load': np.float64(0.2), 'relay_reputation': np.float64(0.73), 'budget_utilization': np.float64(0.16), 'recent_win_rate': np.float64(0.05)}, 'base_prob': 0.01, 'final_prob': np.float64(0.006231984), 'steps': [{'feature': 'network_load', 'value': np.float64(0.2), 'effect': 'multiply prob by 0.880 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.73), 'effect': 'multiply prob by 1.595 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.16), 'effect': 'multiply prob by 0.888 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.05), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.2,0.73,0.16,0.1,0.006231984,"{'timestamp': 1760866780.1831455, 'inputs': {'network_load': np.float64(0.2), 'relay_reputation': np.float64(0.73), 'budget_utilization': np.float64(0.16), 'recent_win_rate': np.float64(0.1)}, 'base_prob': 0.01, 'final_prob': np.float64(0.006231984), 'steps': [{'feature': 'network_load', 'value': np.float64(0.2), 'effect': 'multiply prob by 0.880 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.73), 'effect': 'multiply prob by 1.595 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.16), 'effect': 'multiply prob by 0.888 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.1), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.2,0.73,0.16,0.15,0.006231984,"{'timestamp': 1760866780.1831763, 'inputs': {'network_load': np.float64(0.2), 'relay_reputation': np.float64(0.73), 'budget_utilization': np.float64(0.16), 'recent_win_rate': np.float64(0.15)}, 'base_prob': 0.01, 'final_prob': np.float64(0.006231984), 'steps': [{'feature': 'network_load', 'value': np.float64(0.2), 'effect': 'multiply prob by 0.880 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.73), 'effect': 'multiply prob by 1.595 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.16), 'effect': 'multiply prob by 0.888 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.15), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.2,0.73,0.16,0.2,0.006231984,"{'timestamp': 1760866780.1832013, 'inputs': {'network_load': np.float64(0.2), 'relay_reputation': np.float64(0.73), 'budget_utilization': np.float64(0.16), 'recent_win_rate': np.float64(0.2)}, 'base_prob': 0.01, 'final_prob': np.float64(0.006231984), 'steps': [{'feature': 'network_load', 'value': np.float64(0.2), 'effect': 'multiply prob by 0.880 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.73), 'effect': 'multiply prob by 1.595 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.16), 'effect': 'multiply prob by 0.888 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.2), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.2,0.73,0.16,0.25,0.006231984,"{'timestamp': 1760866780.1832266, 'inputs': {'network_load': np.float64(0.2), 'relay_reputation': np.float64(0.73), 'budget_utilization': np.float64(0.16), 'recent_win_rate': np.float64(0.25)}, 'base_prob': 0.01, 'final_prob': np.float64(0.006231984), 'steps': [{'feature': 'network_load', 'value': np.float64(0.2), 'effect': 'multiply prob by 0.880 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.73), 'effect': 'multiply prob by 1.595 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.16), 'effect': 'multiply prob by 0.888 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.25), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.2,0.73,0.16,0.3,0.006231984,"{'timestamp': 1760866780.1832519, 'inputs': {'network_load': np.float64(0.2), 'relay_reputation': np.float64(0.73), 'budget_utilization': np.float64(0.16), 'recent_win_rate': np.float64(0.3)}, 'base_prob': 0.01, 'final_prob': np.float64(0.006231984), 'steps': [{'feature': 'network_load', 'value': np.float64(0.2), 'effect': 'multiply prob by 0.880 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.73), 'effect': 'multiply prob by 1.595 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.16), 'effect': 'multiply prob by 0.888 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.3), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.2,0.73,0.26,0.0,0.01148144788518552,"{'timestamp': 1760866780.183279, 'inputs': {'network_load': np.float64(0.2), 'relay_reputation': np.float64(0.73), 'budget_utilization': np.float64(0.26), 'recent_win_rate': 1e-09}, 'base_prob': 0.01, 'final_prob': np.float64(0.01148144788518552), 'steps': [{'feature': 'network_load', 'value': np.float64(0.2), 'effect': 'multiply prob by 0.880 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.73), 'effect': 'multiply prob by 1.595 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.26), 'effect': 'multiply prob by 0.818 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': 1e-09, 'effect': 'multiply prob by 1.000 (higher recent wins -> lower prob)'}]}"
0.2,0.73,0.26,0.05,0.005740724,"{'timestamp': 1760866780.1833682, 'inputs': {'network_load': np.float64(0.2), 'relay_reputation': np.float64(0.73), 'budget_utilization': np.float64(0.26), 'recent_win_rate': np.float64(0.05)}, 'base_prob': 0.01, 'final_prob': np.float64(0.005740724), 'steps': [{'feature': 'network_load', 'value': np.float64(0.2), 'effect': 'multiply prob by 0.880 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.73), 'effect': 'multiply prob by 1.595 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.26), 'effect': 'multiply prob by 0.818 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.05), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.2,0.73,0.26,0.1,0.005740724,"{'timestamp': 1760866780.1834085, 'inputs': {'network_load': np.float64(0.2), 'relay_reputation': np.float64(0.73), 'budget_utilization': np.float64(0.26), 'recent_win_rate': np.float64(0.1)}, 'base_prob': 0.01, 'final_prob': np.float64(0.005740724), 'steps': [{'feature': 'network_load', 'value': np.float64(0.2), 'effect': 'multiply prob by 0.880 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.73), 'effect': 'multiply prob by 1.595 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.26), 'effect': 'multiply prob by 0.818 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.1), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.2,0.73,0.26,0.15,0.005740724,"{'timestamp': 1760866780.1834443, 'inputs': {'network_load': np.float64(0.2), 'relay_reputation': np.float64(0.73), 'budget_utilization': np.float64(0.26), 'recent_win_rate': np.float64(0.15)}, 'base_prob': 0.01, 'final_prob': np.float64(0.005740724), 'steps': [{'feature': 'network_load', 'value': np.float64(0.2), 'effect': 'multiply prob by 0.880 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.73), 'effect': 'multiply prob by 1.595 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.26), 'effect': 'multiply prob by 0.818 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.15), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.2,0.73,0.26,0.2,0.005740724,"{'timestamp': 1760866780.1834698, 'inputs': {'network_load': np.float64(0.2), 'relay_reputation': np.float64(0.73), 'budget_utilization': np.float64(0.26), 'recent_win_rate': np.float64(0.2)}, 'base_prob': 0.01, 'final_prob': np.float64(0.005740724), 'steps': [{'feature': 'network_load', 'value': np.float64(0.2), 'effect': 'multiply prob by 0.880 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.73), 'effect': 'multiply prob by 1.595 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.26), 'effect': 'multiply prob by 0.818 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.2), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.2,0.73,0.26,0.25,0.005740724,"{'timestamp': 1760866780.1834972, 'inputs': {'network_load': np.float64(0.2), 'relay_reputation': np.float64(0.73), 'budget_utilization': np.float64(0.26), 'recent_win_rate': np.float64(0.25)}, 'base_prob': 0.01, 'final_prob': np.float64(0.005740724), 'steps': [{'feature': 'network_load', 'value': np.float64(0.2), 'effect': 'multiply prob by 0.880 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.73), 'effect': 'multiply prob by 1.595 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.26), 'effect': 'multiply prob by 0.818 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.25), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.2,0.73,0.26,0.3,0.005740724,"{'timestamp': 1760866780.1835225, 'inputs': {'network_load': np.float64(0.2), 'relay_reputation': np.float64(0.73), 'budget_utilization': np.float64(0.26), 'recent_win_rate': np.float64(0.3)}, 'base_prob': 0.01, 'final_prob': np.float64(0.005740724), 'steps': [{'feature': 'network_load', 'value': np.float64(0.2), 'effect': 'multiply prob by 0.880 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.73), 'effect': 'multiply prob by 1.595 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.26), 'effect': 'multiply prob by 0.818 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.3), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.2,0.73,0.37,0.0,0.01040067589599324,"{'timestamp': 1760866780.1835577, 'inputs': {'network_load': np.float64(0.2), 'relay_reputation': np.float64(0.73), 'budget_utilization': np.float64(0.37), 'recent_win_rate': 1e-09}, 'base_prob': 0.01, 'final_prob': np.float64(0.01040067589599324), 'steps': [{'feature': 'network_load', 'value': np.float64(0.2), 'effect': 'multiply prob by 0.880 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.73), 'effect': 'multiply prob by 1.595 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.37), 'effect': 'multiply prob by 0.741 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': 1e-09, 'effect': 'multiply prob by 1.000 (higher recent wins -> lower prob)'}]}"
0.2,0.73,0.37,0.05,0.005200338,"{'timestamp': 1760866780.1835833, 'inputs': {'network_load': np.float64(0.2), 'relay_reputation': np.float64(0.73), 'budget_utilization': np.float64(0.37), 'recent_win_rate': np.float64(0.05)}, 'base_prob': 0.01, 'final_prob': np.float64(0.005200338), 'steps': [{'feature': 'network_load', 'value': np.float64(0.2), 'effect': 'multiply prob by 0.880 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.73), 'effect': 'multiply prob by 1.595 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.37), 'effect': 'multiply prob by 0.741 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.05), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.2,0.73,0.37,0.1,0.005200338,"{'timestamp': 1760866780.1836655, 'inputs': {'network_load': np.float64(0.2), 'relay_reputation': np.float64(0.73), 'budget_utilization': np.float64(0.37), 'recent_win_rate': np.float64(0.1)}, 'base_prob': 0.01, 'final_prob': np.float64(0.005200338), 'steps': [{'feature': 'network_load', 'value': np.float64(0.2), 'effect': 'multiply prob by 0.880 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.73), 'effect': 'multiply prob by 1.595 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.37), 'effect': 'multiply prob by 0.741 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.1), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.2,0.73,0.37,0.15,0.005200338,"{'timestamp': 1760866780.1837065, 'inputs': {'network_load': np.float64(0.2), 'relay_reputation': np.float64(0.73), 'budget_utilization': np.float64(0.37), 'recent_win_rate': np.float64(0.15)}, 'base_prob': 0.01, 'final_prob': np.float64(0.005200338), 'steps': [{'feature': 'network_load', 'value': np.float64(0.2), 'effect': 'multiply prob by 0.880 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.73), 'effect': 'multiply prob by 1.595 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.37), 'effect': 'multiply prob by 0.741 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.15), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.2,0.73,0.37,0.2,0.005200338,"{'timestamp': 1760866780.183733, 'inputs': {'network_load': np.float64(0.2), 'relay_reputation': np.float64(0.73), 'budget_utilization': np.float64(0.37), 'recent_win_rate': np.float64(0.2)}, 'base_prob': 0.01, 'final_prob': np.float64(0.005200338), 'steps': [{'feature': 'network_load', 'value': np.float64(0.2), 'effect': 'multiply prob by 0.880 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.73), 'effect': 'multiply prob by 1.595 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.37), 'effect': 'multiply prob by 0.741 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.2), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.2,0.73,0.37,0.25,0.005200338,"{'timestamp': 1760866780.1837614, 'inputs': {'network_load': np.float64(0.2), 'relay_reputation': np.float64(0.73), 'budget_utilization': np.float64(0.37), 'recent_win_rate': np.float64(0.25)}, 'base_prob': 0.01, 'final_prob': np.float64(0.005200338), 'steps': [{'feature': 'network_load', 'value': np.float64(0.2), 'effect': 'multiply prob by 0.880 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.73), 'effect': 'multiply prob by 1.595 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.37), 'effect': 'multiply prob by 0.741 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.25), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.2,0.73,0.37,0.3,0.005200338,"{'timestamp': 1760866780.1837869, 'inputs': {'network_load': np.float64(0.2), 'relay_reputation': np.float64(0.73), 'budget_utilization': np.float64(0.37), 'recent_win_rate': np.float64(0.3)}, 'base_prob': 0.01, 'final_prob': np.float64(0.005200338), 'steps': [{'feature': 'network_load', 'value': np.float64(0.2), 'effect': 'multiply prob by 0.880 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.73), 'effect': 'multiply prob by 1.595 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.37), 'effect': 'multiply prob by 0.741 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.3), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.2,0.73,0.48,0.0,0.00931990390680096,"{'timestamp': 1760866780.183816, 'inputs': {'network_load': np.float64(0.2), 'relay_reputation': np.float64(0.73), 'budget_utilization': np.float64(0.48), 'recent_win_rate': 1e-09}, 'base_prob': 0.01, 'final_prob': np.float64(0.00931990390680096), 'steps': [{'feature': 'network_load', 'value': np.float64(0.2), 'effect': 'multiply prob by 0.880 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.73), 'effect': 'multiply prob by 1.595 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.48), 'effect': 'multiply prob by 0.664 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': 1e-09, 'effect': 'multiply prob by 1.000 (higher recent wins -> lower prob)'}]}"
0.2,0.73,0.48,0.05,0.004659952,"{'timestamp': 1760866780.183843, 'inputs': {'network_load': np.float64(0.2), 'relay_reputation': np.float64(0.73), 'budget_utilization': np.float64(0.48), 'recent_win_rate': np.float64(0.05)}, 'base_prob': 0.01, 'final_prob': np.float64(0.004659952), 'steps': [{'feature': 'network_load', 'value': np.float64(0.2), 'effect': 'multiply prob by 0.880 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.73), 'effect': 'multiply prob by 1.595 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.48), 'effect': 'multiply prob by 0.664 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.05), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.2,0.73,0.48,0.1,0.004659952,"{'timestamp': 1760866780.1838927, 'inputs': {'network_load': np.float64(0.2), 'relay_reputation': np.float64(0.73), 'budget_utilization': np.float64(0.48), 'recent_win_rate': np.float64(0.1)}, 'base_prob': 0.01, 'final_prob': np.float64(0.004659952), 'steps': [{'feature': 'network_load', 'value': np.float64(0.2), 'effect': 'multiply prob by 0.880 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.73), 'effect': 'multiply prob by 1.595 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.48), 'effect': 'multiply prob by 0.664 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.1), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.2,0.73,0.48,0.15,0.004659952,"{'timestamp': 1760866780.1839218, 'inputs': {'network_load': np.float64(0.2), 'relay_reputation': np.float64(0.73), 'budget_utilization': np.float64(0.48), 'recent_win_rate': np.float64(0.15)}, 'base_prob': 0.01, 'final_prob': np.float64(0.004659952), 'steps': [{'feature': 'network_load', 'value': np.float64(0.2), 'effect': 'multiply prob by 0.880 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.73), 'effect': 'multiply prob by 1.595 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.48), 'effect': 'multiply prob by 0.664 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.15), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.2,0.73,0.48,0.2,0.004659952,"{'timestamp': 1760866780.1839478, 'inputs': {'network_load': np.float64(0.2), 'relay_reputation': np.float64(0.73), 'budget_utilization': np.float64(0.48), 'recent_win_rate': np.float64(0.2)}, 'base_prob': 0.01, 'final_prob': np.float64(0.004659952), 'steps': [{'feature': 'network_load', 'value': np.float64(0.2), 'effect': 'multiply prob by 0.880 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.73), 'effect': 'multiply prob by 1.595 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.48), 'effect': 'multiply prob by 0.664 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.2), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.2,0.73,0.48,0.25,0.004659952,"{'timestamp': 1760866780.183975, 'inputs': {'network_load': np.float64(0.2), 'relay_reputation': np.float64(0.73), 'budget_utilization': np.float64(0.48), 'recent_win_rate': np.float64(0.25)}, 'base_prob': 0.01, 'final_prob': np.float64(0.004659952), 'steps': [{'feature': 'network_load', 'value': np.float64(0.2), 'effect': 'multiply prob by 0.880 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.73), 'effect': 'multiply prob by 1.595 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.48), 'effect': 'multiply prob by 0.664 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.25), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.2,0.73,0.48,0.3,0.004659952,"{'timestamp': 1760866780.1840003, 'inputs': {'network_load': np.float64(0.2), 'relay_reputation': np.float64(0.73), 'budget_utilization': np.float64(0.48), 'recent_win_rate': np.float64(0.3)}, 'base_prob': 0.01, 'final_prob': np.float64(0.004659952), 'steps': [{'feature': 'network_load', 'value': np.float64(0.2), 'effect': 'multiply prob by 0.880 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.73), 'effect': 'multiply prob by 1.595 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.48), 'effect': 'multiply prob by 0.664 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.3), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.2,0.73,0.59,0.0,0.008239131917608679,"{'timestamp': 1760866780.1840339, 'inputs': {'network_load': np.float64(0.2), 'relay_reputation': np.float64(0.73), 'budget_utilization': np.float64(0.59), 'recent_win_rate': 1e-09}, 'base_prob': 0.01, 'final_prob': np.float64(0.008239131917608679), 'steps': [{'feature': 'network_load', 'value': np.float64(0.2), 'effect': 'multiply prob by 0.880 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.73), 'effect': 'multiply prob by 1.595 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.59), 'effect': 'multiply prob by 0.587 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': 1e-09, 'effect': 'multiply prob by 1.000 (higher recent wins -> lower prob)'}]}"
0.2,0.73,0.59,0.05,0.004119566,"{'timestamp': 1760866780.1840594, 'inputs': {'network_load': np.float64(0.2), 'relay_reputation': np.float64(0.73), 'budget_utilization': np.float64(0.59), 'recent_win_rate': np.float64(0.05)}, 'base_prob': 0.01, 'final_prob': np.float64(0.004119566), 'steps': [{'feature': 'network_load', 'value': np.float64(0.2), 'effect': 'multiply prob by 0.880 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.73), 'effect': 'multiply prob by 1.595 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.59), 'effect': 'multiply prob by 0.587 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.05), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.2,0.73,0.59,0.1,0.004119566,"{'timestamp': 1760866780.1840909, 'inputs': {'network_load': np.float64(0.2), 'relay_reputation': np.float64(0.73), 'budget_utilization': np.float64(0.59), 'recent_win_rate': np.float64(0.1)}, 'base_prob': 0.01, 'final_prob': np.float64(0.004119566), 'steps': [{'feature': 'network_load', 'value': np.float64(0.2), 'effect': 'multiply prob by 0.880 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.73), 'effect': 'multiply prob by 1.595 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.59), 'effect': 'multiply prob by 0.587 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.1), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.2,0.73,0.59,0.15,0.004119566,"{'timestamp': 1760866780.1841164, 'inputs': {'network_load': np.float64(0.2), 'relay_reputation': np.float64(0.73), 'budget_utilization': np.float64(0.59), 'recent_win_rate': np.float64(0.15)}, 'base_prob': 0.01, 'final_prob': np.float64(0.004119566), 'steps': [{'feature': 'network_load', 'value': np.float64(0.2), 'effect': 'multiply prob by 0.880 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.73), 'effect': 'multiply prob by 1.595 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.59), 'effect': 'multiply prob by 0.587 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.15), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.2,0.73,0.59,0.2,0.004119566,"{'timestamp': 1760866780.1841435, 'inputs': {'network_load': np.float64(0.2), 'relay_reputation': np.float64(0.73), 'budget_utilization': np.float64(0.59), 'recent_win_rate': np.float64(0.2)}, 'base_prob': 0.01, 'final_prob': np.float64(0.004119566), 'steps': [{'feature': 'network_load', 'value': np.float64(0.2), 'effect': 'multiply prob by 0.880 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.73), 'effect': 'multiply prob by 1.595 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.59), 'effect': 'multiply prob by 0.587 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.2), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.2,0.73,0.59,0.25,0.004119566,"{'timestamp': 1760866780.184169, 'inputs': {'network_load': np.float64(0.2), 'relay_reputation': np.float64(0.73), 'budget_utilization': np.float64(0.59), 'recent_win_rate': np.float64(0.25)}, 'base_prob': 0.01, 'final_prob': np.float64(0.004119566), 'steps': [{'feature': 'network_load', 'value': np.float64(0.2), 'effect': 'multiply prob by 0.880 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.73), 'effect': 'multiply prob by 1.595 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.59), 'effect': 'multiply prob by 0.587 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.25), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.2,0.73,0.59,0.3,0.004119566,"{'timestamp': 1760866780.184194, 'inputs': {'network_load': np.float64(0.2), 'relay_reputation': np.float64(0.73), 'budget_utilization': np.float64(0.59), 'recent_win_rate': np.float64(0.3)}, 'base_prob': 0.01, 'final_prob': np.float64(0.004119566), 'steps': [{'feature': 'network_load', 'value': np.float64(0.2), 'effect': 'multiply prob by 0.880 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.73), 'effect': 'multiply prob by 1.595 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.59), 'effect': 'multiply prob by 0.587 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.3), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.2,0.73,0.69,0.0,0.007256611927433881,"{'timestamp': 1760866780.184225, 'inputs': {'network_load': np.float64(0.2), 'relay_reputation': np.float64(0.73), 'budget_utilization': np.float64(0.69), 'recent_win_rate': 1e-09}, 'base_prob': 0.01, 'final_prob': np.float64(0.007256611927433881), 'steps': [{'feature': 'network_load', 'value': np.float64(0.2), 'effect': 'multiply prob by 0.880 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.73), 'effect': 'multiply prob by 1.595 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.69), 'effect': 'multiply prob by 0.517 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': 1e-09, 'effect': 'multiply prob by 1.000 (higher recent wins -> lower prob)'}]}"
0.2,0.73,0.69,0.05,0.003628306000000001,"{'timestamp': 1760866780.1842546, 'inputs': {'network_load': np.float64(0.2), 'relay_reputation': np.float64(0.73), 'budget_utilization': np.float64(0.69), 'recent_win_rate': np.float64(0.05)}, 'base_prob': 0.01, 'final_prob': np.float64(0.003628306000000001), 'steps': [{'feature': 'network_load', 'value': np.float64(0.2), 'effect': 'multiply prob by 0.880 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.73), 'effect': 'multiply prob by 1.595 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.69), 'effect': 'multiply prob by 0.517 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.05), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.2,0.73,0.69,0.1,0.003628306000000001,"{'timestamp': 1760866780.1842802, 'inputs': {'network_load': np.float64(0.2), 'relay_reputation': np.float64(0.73), 'budget_utilization': np.float64(0.69), 'recent_win_rate': np.float64(0.1)}, 'base_prob': 0.01, 'final_prob': np.float64(0.003628306000000001), 'steps': [{'feature': 'network_load', 'value': np.float64(0.2), 'effect': 'multiply prob by 0.880 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.73), 'effect': 'multiply prob by 1.595 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.69), 'effect': 'multiply prob by 0.517 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.1), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.2,0.73,0.69,0.15,0.003628306000000001,"{'timestamp': 1760866780.1843052, 'inputs': {'network_load': np.float64(0.2), 'relay_reputation': np.float64(0.73), 'budget_utilization': np.float64(0.69), 'recent_win_rate': np.float64(0.15)}, 'base_prob': 0.01, 'final_prob': np.float64(0.003628306000000001), 'steps': [{'feature': 'network_load', 'value': np.float64(0.2), 'effect': 'multiply prob by 0.880 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.73), 'effect': 'multiply prob by 1.595 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.69), 'effect': 'multiply prob by 0.517 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.15), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.2,0.73,0.69,0.2,0.003628306000000001,"{'timestamp': 1760866780.1843305, 'inputs': {'network_load': np.float64(0.2), 'relay_reputation': np.float64(0.73), 'budget_utilization': np.float64(0.69), 'recent_win_rate': np.float64(0.2)}, 'base_prob': 0.01, 'final_prob': np.float64(0.003628306000000001), 'steps': [{'feature': 'network_load', 'value': np.float64(0.2), 'effect': 'multiply prob by 0.880 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.73), 'effect': 'multiply prob by 1.595 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.69), 'effect': 'multiply prob by 0.517 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.2), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.2,0.73,0.69,0.25,0.003628306000000001,"{'timestamp': 1760866780.1843588, 'inputs': {'network_load': np.float64(0.2), 'relay_reputation': np.float64(0.73), 'budget_utilization': np.float64(0.69), 'recent_win_rate': np.float64(0.25)}, 'base_prob': 0.01, 'final_prob': np.float64(0.003628306000000001), 'steps': [{'feature': 'network_load', 'value': np.float64(0.2), 'effect': 'multiply prob by 0.880 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.73), 'effect': 'multiply prob by 1.595 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.69), 'effect': 'multiply prob by 0.517 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.25), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.2,0.73,0.69,0.3,0.003628306000000001,"{'timestamp': 1760866780.1843843, 'inputs': {'network_load': np.float64(0.2), 'relay_reputation': np.float64(0.73), 'budget_utilization': np.float64(0.69), 'recent_win_rate': np.float64(0.3)}, 'base_prob': 0.01, 'final_prob': np.float64(0.003628306000000001), 'steps': [{'feature': 'network_load', 'value': np.float64(0.2), 'effect': 'multiply prob by 0.880 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.73), 'effect': 'multiply prob by 1.595 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.69), 'effect': 'multiply prob by 0.517 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.3), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.2,0.73,0.8,0.0,0.0061758399382416005,"{'timestamp': 1760866780.1844134, 'inputs': {'network_load': np.float64(0.2), 'relay_reputation': np.float64(0.73), 'budget_utilization': np.float64(0.8), 'recent_win_rate': 1e-09}, 'base_prob': 0.01, 'final_prob': np.float64(0.0061758399382416005), 'steps': [{'feature': 'network_load', 'value': np.float64(0.2), 'effect': 'multiply prob by 0.880 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.73), 'effect': 'multiply prob by 1.595 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.8), 'effect': 'multiply prob by 0.440 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': 1e-09, 'effect': 'multiply prob by 1.000 (higher recent wins -> lower prob)'}]}"
0.2,0.73,0.8,0.05,0.0030879200000000005,"{'timestamp': 1760866780.184439, 'inputs': {'network_load': np.float64(0.2), 'relay_reputation': np.float64(0.73), 'budget_utilization': np.float64(0.8), 'recent_win_rate': np.float64(0.05)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0030879200000000005), 'steps': [{'feature': 'network_load', 'value': np.float64(0.2), 'effect': 'multiply prob by 0.880 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.73), 'effect': 'multiply prob by 1.595 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.8), 'effect': 'multiply prob by 0.440 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.05), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.2,0.73,0.8,0.1,0.0030879200000000005,"{'timestamp': 1760866780.1844642, 'inputs': {'network_load': np.float64(0.2), 'relay_reputation': np.float64(0.73), 'budget_utilization': np.float64(0.8), 'recent_win_rate': np.float64(0.1)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0030879200000000005), 'steps': [{'feature': 'network_load', 'value': np.float64(0.2), 'effect': 'multiply prob by 0.880 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.73), 'effect': 'multiply prob by 1.595 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.8), 'effect': 'multiply prob by 0.440 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.1), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.2,0.73,0.8,0.15,0.0030879200000000005,"{'timestamp': 1760866780.1844895, 'inputs': {'network_load': np.float64(0.2), 'relay_reputation': np.float64(0.73), 'budget_utilization': np.float64(0.8), 'recent_win_rate': np.float64(0.15)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0030879200000000005), 'steps': [{'feature': 'network_load', 'value': np.float64(0.2), 'effect': 'multiply prob by 0.880 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.73), 'effect': 'multiply prob by 1.595 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.8), 'effect': 'multiply prob by 0.440 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.15), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.2,0.73,0.8,0.2,0.0030879200000000005,"{'timestamp': 1760866780.1845167, 'inputs': {'network_load': np.float64(0.2), 'relay_reputation': np.float64(0.73), 'budget_utilization': np.float64(0.8), 'recent_win_rate': np.float64(0.2)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0030879200000000005), 'steps': [{'feature': 'network_load', 'value': np.float64(0.2), 'effect': 'multiply prob by 0.880 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.73), 'effect': 'multiply prob by 1.595 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.8), 'effect': 'multiply prob by 0.440 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.2), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.2,0.73,0.8,0.25,0.0030879200000000005,"{'timestamp': 1760866780.1845417, 'inputs': {'network_load': np.float64(0.2), 'relay_reputation': np.float64(0.73), 'budget_utilization': np.float64(0.8), 'recent_win_rate': np.float64(0.25)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0030879200000000005), 'steps': [{'feature': 'network_load', 'value': np.float64(0.2), 'effect': 'multiply prob by 0.880 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.73), 'effect': 'multiply prob by 1.595 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.8), 'effect': 'multiply prob by 0.440 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.25), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.2,0.73,0.8,0.3,0.0030879200000000005,"{'timestamp': 1760866780.1846316, 'inputs': {'network_load': np.float64(0.2), 'relay_reputation': np.float64(0.73), 'budget_utilization': np.float64(0.8), 'recent_win_rate': np.float64(0.3)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0030879200000000005), 'steps': [{'feature': 'network_load', 'value': np.float64(0.2), 'effect': 'multiply prob by 0.880 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.73), 'effect': 'multiply prob by 1.595 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.8), 'effect': 'multiply prob by 0.440 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.3), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.2,0.84,0.05,0.0,0.014945919850540801,"{'timestamp': 1760866780.1846743, 'inputs': {'network_load': np.float64(0.2), 'relay_reputation': np.float64(0.84), 'budget_utilization': np.float64(0.05), 'recent_win_rate': 1e-09}, 'base_prob': 0.01, 'final_prob': np.float64(0.014945919850540801), 'steps': [{'feature': 'network_load', 'value': np.float64(0.2), 'effect': 'multiply prob by 0.880 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.84), 'effect': 'multiply prob by 1.760 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.05), 'effect': 'multiply prob by 0.965 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': 1e-09, 'effect': 'multiply prob by 1.000 (higher recent wins -> lower prob)'}]}"
0.2,0.84,0.05,0.05,0.007472960000000001,"{'timestamp': 1760866780.184701, 'inputs': {'network_load': np.float64(0.2), 'relay_reputation': np.float64(0.84), 'budget_utilization': np.float64(0.05), 'recent_win_rate': np.float64(0.05)}, 'base_prob': 0.01, 'final_prob': np.float64(0.007472960000000001), 'steps': [{'feature': 'network_load', 'value': np.float64(0.2), 'effect': 'multiply prob by 0.880 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.84), 'effect': 'multiply prob by 1.760 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.05), 'effect': 'multiply prob by 0.965 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.05), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.2,0.84,0.05,0.1,0.007472960000000001,"{'timestamp': 1760866780.1847284, 'inputs': {'network_load': np.float64(0.2), 'relay_reputation': np.float64(0.84), 'budget_utilization': np.float64(0.05), 'recent_win_rate': np.float64(0.1)}, 'base_prob': 0.01, 'final_prob': np.float64(0.007472960000000001), 'steps': [{'feature': 'network_load', 'value': np.float64(0.2), 'effect': 'multiply prob by 0.880 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.84), 'effect': 'multiply prob by 1.760 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.05), 'effect': 'multiply prob by 0.965 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.1), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.2,0.84,0.05,0.15,0.007472960000000001,"{'timestamp': 1760866780.1847584, 'inputs': {'network_load': np.float64(0.2), 'relay_reputation': np.float64(0.84), 'budget_utilization': np.float64(0.05), 'recent_win_rate': np.float64(0.15)}, 'base_prob': 0.01, 'final_prob': np.float64(0.007472960000000001), 'steps': [{'feature': 'network_load', 'value': np.float64(0.2), 'effect': 'multiply prob by 0.880 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.84), 'effect': 'multiply prob by 1.760 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.05), 'effect': 'multiply prob by 0.965 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.15), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.2,0.84,0.05,0.2,0.007472960000000001,"{'timestamp': 1760866780.1847842, 'inputs': {'network_load': np.float64(0.2), 'relay_reputation': np.float64(0.84), 'budget_utilization': np.float64(0.05), 'recent_win_rate': np.float64(0.2)}, 'base_prob': 0.01, 'final_prob': np.float64(0.007472960000000001), 'steps': [{'feature': 'network_load', 'value': np.float64(0.2), 'effect': 'multiply prob by 0.880 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.84), 'effect': 'multiply prob by 1.760 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.05), 'effect': 'multiply prob by 0.965 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.2), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.2,0.84,0.05,0.25,0.007472960000000001,"{'timestamp': 1760866780.1848094, 'inputs': {'network_load': np.float64(0.2), 'relay_reputation': np.float64(0.84), 'budget_utilization': np.float64(0.05), 'recent_win_rate': np.float64(0.25)}, 'base_prob': 0.01, 'final_prob': np.float64(0.007472960000000001), 'steps': [{'feature': 'network_load', 'value': np.float64(0.2), 'effect': 'multiply prob by 0.880 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.84), 'effect': 'multiply prob by 1.760 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.05), 'effect': 'multiply prob by 0.965 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.25), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.2,0.84,0.05,0.3,0.007472960000000001,"{'timestamp': 1760866780.1848347, 'inputs': {'network_load': np.float64(0.2), 'relay_reputation': np.float64(0.84), 'budget_utilization': np.float64(0.05), 'recent_win_rate': np.float64(0.3)}, 'base_prob': 0.01, 'final_prob': np.float64(0.007472960000000001), 'steps': [{'feature': 'network_load', 'value': np.float64(0.2), 'effect': 'multiply prob by 0.880 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.84), 'effect': 'multiply prob by 1.760 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.05), 'effect': 'multiply prob by 0.965 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.3), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.2,0.84,0.16,0.0,0.013753343862466561,"{'timestamp': 1760866780.1848705, 'inputs': {'network_load': np.float64(0.2), 'relay_reputation': np.float64(0.84), 'budget_utilization': np.float64(0.16), 'recent_win_rate': 1e-09}, 'base_prob': 0.01, 'final_prob': np.float64(0.013753343862466561), 'steps': [{'feature': 'network_load', 'value': np.float64(0.2), 'effect': 'multiply prob by 0.880 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.84), 'effect': 'multiply prob by 1.760 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.16), 'effect': 'multiply prob by 0.888 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': 1e-09, 'effect': 'multiply prob by 1.000 (higher recent wins -> lower prob)'}]}"
0.2,0.84,0.16,0.05,0.006876672000000001,"{'timestamp': 1760866780.1848974, 'inputs': {'network_load': np.float64(0.2), 'relay_reputation': np.float64(0.84), 'budget_utilization': np.float64(0.16), 'recent_win_rate': np.float64(0.05)}, 'base_prob': 0.01, 'final_prob': np.float64(0.006876672000000001), 'steps': [{'feature': 'network_load', 'value': np.float64(0.2), 'effect': 'multiply prob by 0.880 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.84), 'effect': 'multiply prob by 1.760 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.16), 'effect': 'multiply prob by 0.888 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.05), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.2,0.84,0.16,0.1,0.006876672000000001,"{'timestamp': 1760866780.1849232, 'inputs': {'network_load': np.float64(0.2), 'relay_reputation': np.float64(0.84), 'budget_utilization': np.float64(0.16), 'recent_win_rate': np.float64(0.1)}, 'base_prob': 0.01, 'final_prob': np.float64(0.006876672000000001), 'steps': [{'feature': 'network_load', 'value': np.float64(0.2), 'effect': 'multiply prob by 0.880 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.84), 'effect': 'multiply prob by 1.760 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.16), 'effect': 'multiply prob by 0.888 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.1), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.2,0.84,0.16,0.15,0.006876672000000001,"{'timestamp': 1760866780.1849482, 'inputs': {'network_load': np.float64(0.2), 'relay_reputation': np.float64(0.84), 'budget_utilization': np.float64(0.16), 'recent_win_rate': np.float64(0.15)}, 'base_prob': 0.01, 'final_prob': np.float64(0.006876672000000001), 'steps': [{'feature': 'network_load', 'value': np.float64(0.2), 'effect': 'multiply prob by 0.880 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.84), 'effect': 'multiply prob by 1.760 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.16), 'effect': 'multiply prob by 0.888 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.15), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.2,0.84,0.16,0.2,0.006876672000000001,"{'timestamp': 1760866780.1849732, 'inputs': {'network_load': np.float64(0.2), 'relay_reputation': np.float64(0.84), 'budget_utilization': np.float64(0.16), 'recent_win_rate': np.float64(0.2)}, 'base_prob': 0.01, 'final_prob': np.float64(0.006876672000000001), 'steps': [{'feature': 'network_load', 'value': np.float64(0.2), 'effect': 'multiply prob by 0.880 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.84), 'effect': 'multiply prob by 1.760 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.16), 'effect': 'multiply prob by 0.888 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.2), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.2,0.84,0.16,0.25,0.006876672000000001,"{'timestamp': 1760866780.1850002, 'inputs': {'network_load': np.float64(0.2), 'relay_reputation': np.float64(0.84), 'budget_utilization': np.float64(0.16), 'recent_win_rate': np.float64(0.25)}, 'base_prob': 0.01, 'final_prob': np.float64(0.006876672000000001), 'steps': [{'feature': 'network_load', 'value': np.float64(0.2), 'effect': 'multiply prob by 0.880 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.84), 'effect': 'multiply prob by 1.760 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.16), 'effect': 'multiply prob by 0.888 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.25), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.2,0.84,0.16,0.3,0.006876672000000001,"{'timestamp': 1760866780.1850257, 'inputs': {'network_load': np.float64(0.2), 'relay_reputation': np.float64(0.84), 'budget_utilization': np.float64(0.16), 'recent_win_rate': np.float64(0.3)}, 'base_prob': 0.01, 'final_prob': np.float64(0.006876672000000001), 'steps': [{'feature': 'network_load', 'value': np.float64(0.2), 'effect': 'multiply prob by 0.880 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.84), 'effect': 'multiply prob by 1.760 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.16), 'effect': 'multiply prob by 0.888 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.3), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.2,0.84,0.26,0.0,0.01266918387330816,"{'timestamp': 1760866780.1850529, 'inputs': {'network_load': np.float64(0.2), 'relay_reputation': np.float64(0.84), 'budget_utilization': np.float64(0.26), 'recent_win_rate': 1e-09}, 'base_prob': 0.01, 'final_prob': np.float64(0.01266918387330816), 'steps': [{'feature': 'network_load', 'value': np.float64(0.2), 'effect': 'multiply prob by 0.880 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.84), 'effect': 'multiply prob by 1.760 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.26), 'effect': 'multiply prob by 0.818 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': 1e-09, 'effect': 'multiply prob by 1.000 (higher recent wins -> lower prob)'}]}"
0.2,0.84,0.26,0.05,0.006334592000000001,"{'timestamp': 1760866780.18508, 'inputs': {'network_load': np.float64(0.2), 'relay_reputation': np.float64(0.84), 'budget_utilization': np.float64(0.26), 'recent_win_rate': np.float64(0.05)}, 'base_prob': 0.01, 'final_prob': np.float64(0.006334592000000001), 'steps': [{'feature': 'network_load', 'value': np.float64(0.2), 'effect': 'multiply prob by 0.880 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.84), 'effect': 'multiply prob by 1.760 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.26), 'effect': 'multiply prob by 0.818 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.05), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.2,0.84,0.26,0.1,0.006334592000000001,"{'timestamp': 1760866780.1851056, 'inputs': {'network_load': np.float64(0.2), 'relay_reputation': np.float64(0.84), 'budget_utilization': np.float64(0.26), 'recent_win_rate': np.float64(0.1)}, 'base_prob': 0.01, 'final_prob': np.float64(0.006334592000000001), 'steps': [{'feature': 'network_load', 'value': np.float64(0.2), 'effect': 'multiply prob by 0.880 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.84), 'effect': 'multiply prob by 1.760 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.26), 'effect': 'multiply prob by 0.818 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.1), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.2,0.84,0.26,0.15,0.006334592000000001,"{'timestamp': 1760866780.1851308, 'inputs': {'network_load': np.float64(0.2), 'relay_reputation': np.float64(0.84), 'budget_utilization': np.float64(0.26), 'recent_win_rate': np.float64(0.15)}, 'base_prob': 0.01, 'final_prob': np.float64(0.006334592000000001), 'steps': [{'feature': 'network_load', 'value': np.float64(0.2), 'effect': 'multiply prob by 0.880 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.84), 'effect': 'multiply prob by 1.760 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.26), 'effect': 'multiply prob by 0.818 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.15), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.2,0.84,0.26,0.2,0.006334592000000001,"{'timestamp': 1760866780.1851609, 'inputs': {'network_load': np.float64(0.2), 'relay_reputation': np.float64(0.84), 'budget_utilization': np.float64(0.26), 'recent_win_rate': np.float64(0.2)}, 'base_prob': 0.01, 'final_prob': np.float64(0.006334592000000001), 'steps': [{'feature': 'network_load', 'value': np.float64(0.2), 'effect': 'multiply prob by 0.880 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.84), 'effect': 'multiply prob by 1.760 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.26), 'effect': 'multiply prob by 0.818 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.2), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.2,0.84,0.26,0.25,0.006334592000000001,"{'timestamp': 1760866780.1851864, 'inputs': {'network_load': np.float64(0.2), 'relay_reputation': np.float64(0.84), 'budget_utilization': np.float64(0.26), 'recent_win_rate': np.float64(0.25)}, 'base_prob': 0.01, 'final_prob': np.float64(0.006334592000000001), 'steps': [{'feature': 'network_load', 'value': np.float64(0.2), 'effect': 'multiply prob by 0.880 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.84), 'effect': 'multiply prob by 1.760 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.26), 'effect': 'multiply prob by 0.818 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.25), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.2,0.84,0.26,0.3,0.006334592000000001,"{'timestamp': 1760866780.1852117, 'inputs': {'network_load': np.float64(0.2), 'relay_reputation': np.float64(0.84), 'budget_utilization': np.float64(0.26), 'recent_win_rate': np.float64(0.3)}, 'base_prob': 0.01, 'final_prob': np.float64(0.006334592000000001), 'steps': [{'feature': 'network_load', 'value': np.float64(0.2), 'effect': 'multiply prob by 0.880 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.84), 'effect': 'multiply prob by 1.760 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.26), 'effect': 'multiply prob by 0.818 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.3), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.2,0.84,0.37,0.0,0.01147660788523392,"{'timestamp': 1760866780.1852388, 'inputs': {'network_load': np.float64(0.2), 'relay_reputation': np.float64(0.84), 'budget_utilization': np.float64(0.37), 'recent_win_rate': 1e-09}, 'base_prob': 0.01, 'final_prob': np.float64(0.01147660788523392), 'steps': [{'feature': 'network_load', 'value': np.float64(0.2), 'effect': 'multiply prob by 0.880 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.84), 'effect': 'multiply prob by 1.760 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.37), 'effect': 'multiply prob by 0.741 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': 1e-09, 'effect': 'multiply prob by 1.000 (higher recent wins -> lower prob)'}]}"
0.2,0.84,0.37,0.05,0.0057383040000000005,"{'timestamp': 1760866780.185264, 'inputs': {'network_load': np.float64(0.2), 'relay_reputation': np.float64(0.84), 'budget_utilization': np.float64(0.37), 'recent_win_rate': np.float64(0.05)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0057383040000000005), 'steps': [{'feature': 'network_load', 'value': np.float64(0.2), 'effect': 'multiply prob by 0.880 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.84), 'effect': 'multiply prob by 1.760 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.37), 'effect': 'multiply prob by 0.741 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.05), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.2,0.84,0.37,0.1,0.0057383040000000005,"{'timestamp': 1760866780.1852932, 'inputs': {'network_load': np.float64(0.2), 'relay_reputation': np.float64(0.84), 'budget_utilization': np.float64(0.37), 'recent_win_rate': np.float64(0.1)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0057383040000000005), 'steps': [{'feature': 'network_load', 'value': np.float64(0.2), 'effect': 'multiply prob by 0.880 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.84), 'effect': 'multiply prob by 1.760 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.37), 'effect': 'multiply prob by 0.741 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.1), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.2,0.84,0.37,0.15,0.0057383040000000005,"{'timestamp': 1760866780.1853209, 'inputs': {'network_load': np.float64(0.2), 'relay_reputation': np.float64(0.84), 'budget_utilization': np.float64(0.37), 'recent_win_rate': np.float64(0.15)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0057383040000000005), 'steps': [{'feature': 'network_load', 'value': np.float64(0.2), 'effect': 'multiply prob by 0.880 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.84), 'effect': 'multiply prob by 1.760 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.37), 'effect': 'multiply prob by 0.741 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.15), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.2,0.84,0.37,0.2,0.0057383040000000005,"{'timestamp': 1760866780.1853466, 'inputs': {'network_load': np.float64(0.2), 'relay_reputation': np.float64(0.84), 'budget_utilization': np.float64(0.37), 'recent_win_rate': np.float64(0.2)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0057383040000000005), 'steps': [{'feature': 'network_load', 'value': np.float64(0.2), 'effect': 'multiply prob by 0.880 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.84), 'effect': 'multiply prob by 1.760 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.37), 'effect': 'multiply prob by 0.741 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.2), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.2,0.84,0.37,0.25,0.0057383040000000005,"{'timestamp': 1760866780.1853716, 'inputs': {'network_load': np.float64(0.2), 'relay_reputation': np.float64(0.84), 'budget_utilization': np.float64(0.37), 'recent_win_rate': np.float64(0.25)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0057383040000000005), 'steps': [{'feature': 'network_load', 'value': np.float64(0.2), 'effect': 'multiply prob by 0.880 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.84), 'effect': 'multiply prob by 1.760 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.37), 'effect': 'multiply prob by 0.741 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.25), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.2,0.84,0.37,0.3,0.0057383040000000005,"{'timestamp': 1760866780.185397, 'inputs': {'network_load': np.float64(0.2), 'relay_reputation': np.float64(0.84), 'budget_utilization': np.float64(0.37), 'recent_win_rate': np.float64(0.3)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0057383040000000005), 'steps': [{'feature': 'network_load', 'value': np.float64(0.2), 'effect': 'multiply prob by 0.880 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.84), 'effect': 'multiply prob by 1.760 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.37), 'effect': 'multiply prob by 0.741 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.3), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.2,0.84,0.48,0.0,0.01028403189715968,"{'timestamp': 1760866780.1854262, 'inputs': {'network_load': np.float64(0.2), 'relay_reputation': np.float64(0.84), 'budget_utilization': np.float64(0.48), 'recent_win_rate': 1e-09}, 'base_prob': 0.01, 'final_prob': np.float64(0.01028403189715968), 'steps': [{'feature': 'network_load', 'value': np.float64(0.2), 'effect': 'multiply prob by 0.880 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.84), 'effect': 'multiply prob by 1.760 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.48), 'effect': 'multiply prob by 0.664 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': 1e-09, 'effect': 'multiply prob by 1.000 (higher recent wins -> lower prob)'}]}"
0.2,0.84,0.48,0.05,0.005142016000000001,"{'timestamp': 1760866780.1855133, 'inputs': {'network_load': np.float64(0.2), 'relay_reputation': np.float64(0.84), 'budget_utilization': np.float64(0.48), 'recent_win_rate': np.float64(0.05)}, 'base_prob': 0.01, 'final_prob': np.float64(0.005142016000000001), 'steps': [{'feature': 'network_load', 'value': np.float64(0.2), 'effect': 'multiply prob by 0.880 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.84), 'effect': 'multiply prob by 1.760 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.48), 'effect': 'multiply prob by 0.664 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.05), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.2,0.84,0.48,0.1,0.005142016000000001,"{'timestamp': 1760866780.1855748, 'inputs': {'network_load': np.float64(0.2), 'relay_reputation': np.float64(0.84), 'budget_utilization': np.float64(0.48), 'recent_win_rate': np.float64(0.1)}, 'base_prob': 0.01, 'final_prob': np.float64(0.005142016000000001), 'steps': [{'feature': 'network_load', 'value': np.float64(0.2), 'effect': 'multiply prob by 0.880 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.84), 'effect': 'multiply prob by 1.760 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.48), 'effect': 'multiply prob by 0.664 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.1), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.2,0.84,0.48,0.15,0.005142016000000001,"{'timestamp': 1760866780.185606, 'inputs': {'network_load': np.float64(0.2), 'relay_reputation': np.float64(0.84), 'budget_utilization': np.float64(0.48), 'recent_win_rate': np.float64(0.15)}, 'base_prob': 0.01, 'final_prob': np.float64(0.005142016000000001), 'steps': [{'feature': 'network_load', 'value': np.float64(0.2), 'effect': 'multiply prob by 0.880 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.84), 'effect': 'multiply prob by 1.760 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.48), 'effect': 'multiply prob by 0.664 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.15), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.2,0.84,0.48,0.2,0.005142016000000001,"{'timestamp': 1760866780.1856318, 'inputs': {'network_load': np.float64(0.2), 'relay_reputation': np.float64(0.84), 'budget_utilization': np.float64(0.48), 'recent_win_rate': np.float64(0.2)}, 'base_prob': 0.01, 'final_prob': np.float64(0.005142016000000001), 'steps': [{'feature': 'network_load', 'value': np.float64(0.2), 'effect': 'multiply prob by 0.880 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.84), 'effect': 'multiply prob by 1.760 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.48), 'effect': 'multiply prob by 0.664 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.2), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.2,0.84,0.48,0.25,0.005142016000000001,"{'timestamp': 1760866780.1856582, 'inputs': {'network_load': np.float64(0.2), 'relay_reputation': np.float64(0.84), 'budget_utilization': np.float64(0.48), 'recent_win_rate': np.float64(0.25)}, 'base_prob': 0.01, 'final_prob': np.float64(0.005142016000000001), 'steps': [{'feature': 'network_load', 'value': np.float64(0.2), 'effect': 'multiply prob by 0.880 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.84), 'effect': 'multiply prob by 1.760 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.48), 'effect': 'multiply prob by 0.664 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.25), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.2,0.84,0.48,0.3,0.005142016000000001,"{'timestamp': 1760866780.1856854, 'inputs': {'network_load': np.float64(0.2), 'relay_reputation': np.float64(0.84), 'budget_utilization': np.float64(0.48), 'recent_win_rate': np.float64(0.3)}, 'base_prob': 0.01, 'final_prob': np.float64(0.005142016000000001), 'steps': [{'feature': 'network_load', 'value': np.float64(0.2), 'effect': 'multiply prob by 0.880 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.84), 'effect': 'multiply prob by 1.760 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.48), 'effect': 'multiply prob by 0.664 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.3), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.2,0.84,0.59,0.0,0.00909145590908544,"{'timestamp': 1760866780.185715, 'inputs': {'network_load': np.float64(0.2), 'relay_reputation': np.float64(0.84), 'budget_utilization': np.float64(0.59), 'recent_win_rate': 1e-09}, 'base_prob': 0.01, 'final_prob': np.float64(0.00909145590908544), 'steps': [{'feature': 'network_load', 'value': np.float64(0.2), 'effect': 'multiply prob by 0.880 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.84), 'effect': 'multiply prob by 1.760 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.59), 'effect': 'multiply prob by 0.587 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': 1e-09, 'effect': 'multiply prob by 1.000 (higher recent wins -> lower prob)'}]}"
0.2,0.84,0.59,0.05,0.004545728000000001,"{'timestamp': 1760866780.1857426, 'inputs': {'network_load': np.float64(0.2), 'relay_reputation': np.float64(0.84), 'budget_utilization': np.float64(0.59), 'recent_win_rate': np.float64(0.05)}, 'base_prob': 0.01, 'final_prob': np.float64(0.004545728000000001), 'steps': [{'feature': 'network_load', 'value': np.float64(0.2), 'effect': 'multiply prob by 0.880 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.84), 'effect': 'multiply prob by 1.760 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.59), 'effect': 'multiply prob by 0.587 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.05), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.2,0.84,0.59,0.1,0.004545728000000001,"{'timestamp': 1760866780.1857681, 'inputs': {'network_load': np.float64(0.2), 'relay_reputation': np.float64(0.84), 'budget_utilization': np.float64(0.59), 'recent_win_rate': np.float64(0.1)}, 'base_prob': 0.01, 'final_prob': np.float64(0.004545728000000001), 'steps': [{'feature': 'network_load', 'value': np.float64(0.2), 'effect': 'multiply prob by 0.880 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.84), 'effect': 'multiply prob by 1.760 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.59), 'effect': 'multiply prob by 0.587 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.1), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.2,0.84,0.59,0.15,0.004545728000000001,"{'timestamp': 1760866780.1857977, 'inputs': {'network_load': np.float64(0.2), 'relay_reputation': np.float64(0.84), 'budget_utilization': np.float64(0.59), 'recent_win_rate': np.float64(0.15)}, 'base_prob': 0.01, 'final_prob': np.float64(0.004545728000000001), 'steps': [{'feature': 'network_load', 'value': np.float64(0.2), 'effect': 'multiply prob by 0.880 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.84), 'effect': 'multiply prob by 1.760 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.59), 'effect': 'multiply prob by 0.587 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.15), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.2,0.84,0.59,0.2,0.004545728000000001,"{'timestamp': 1760866780.1858323, 'inputs': {'network_load': np.float64(0.2), 'relay_reputation': np.float64(0.84), 'budget_utilization': np.float64(0.59), 'recent_win_rate': np.float64(0.2)}, 'base_prob': 0.01, 'final_prob': np.float64(0.004545728000000001), 'steps': [{'feature': 'network_load', 'value': np.float64(0.2), 'effect': 'multiply prob by 0.880 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.84), 'effect': 'multiply prob by 1.760 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.59), 'effect': 'multiply prob by 0.587 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.2), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.2,0.84,0.59,0.25,0.004545728000000001,"{'timestamp': 1760866780.1858597, 'inputs': {'network_load': np.float64(0.2), 'relay_reputation': np.float64(0.84), 'budget_utilization': np.float64(0.59), 'recent_win_rate': np.float64(0.25)}, 'base_prob': 0.01, 'final_prob': np.float64(0.004545728000000001), 'steps': [{'feature': 'network_load', 'value': np.float64(0.2), 'effect': 'multiply prob by 0.880 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.84), 'effect': 'multiply prob by 1.760 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.59), 'effect': 'multiply prob by 0.587 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.25), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.2,0.84,0.59,0.3,0.004545728000000001,"{'timestamp': 1760866780.185885, 'inputs': {'network_load': np.float64(0.2), 'relay_reputation': np.float64(0.84), 'budget_utilization': np.float64(0.59), 'recent_win_rate': np.float64(0.3)}, 'base_prob': 0.01, 'final_prob': np.float64(0.004545728000000001), 'steps': [{'feature': 'network_load', 'value': np.float64(0.2), 'effect': 'multiply prob by 0.880 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.84), 'effect': 'multiply prob by 1.760 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.59), 'effect': 'multiply prob by 0.587 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.3), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.2,0.84,0.69,0.0,0.008007295919927042,"{'timestamp': 1760866780.1859124, 'inputs': {'network_load': np.float64(0.2), 'relay_reputation': np.float64(0.84), 'budget_utilization': np.float64(0.69), 'recent_win_rate': 1e-09}, 'base_prob': 0.01, 'final_prob': np.float64(0.008007295919927042), 'steps': [{'feature': 'network_load', 'value': np.float64(0.2), 'effect': 'multiply prob by 0.880 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.84), 'effect': 'multiply prob by 1.760 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.69), 'effect': 'multiply prob by 0.517 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': 1e-09, 'effect': 'multiply prob by 1.000 (higher recent wins -> lower prob)'}]}"
0.2,0.84,0.69,0.05,0.004003648000000001,"{'timestamp': 1760866780.18594, 'inputs': {'network_load': np.float64(0.2), 'relay_reputation': np.float64(0.84), 'budget_utilization': np.float64(0.69), 'recent_win_rate': np.float64(0.05)}, 'base_prob': 0.01, 'final_prob': np.float64(0.004003648000000001), 'steps': [{'feature': 'network_load', 'value': np.float64(0.2), 'effect': 'multiply prob by 0.880 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.84), 'effect': 'multiply prob by 1.760 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.69), 'effect': 'multiply prob by 0.517 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.05), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.2,0.84,0.69,0.1,0.004003648000000001,"{'timestamp': 1760866780.185992, 'inputs': {'network_load': np.float64(0.2), 'relay_reputation': np.float64(0.84), 'budget_utilization': np.float64(0.69), 'recent_win_rate': np.float64(0.1)}, 'base_prob': 0.01, 'final_prob': np.float64(0.004003648000000001), 'steps': [{'feature': 'network_load', 'value': np.float64(0.2), 'effect': 'multiply prob by 0.880 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.84), 'effect': 'multiply prob by 1.760 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.69), 'effect': 'multiply prob by 0.517 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.1), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.2,0.84,0.69,0.15,0.004003648000000001,"{'timestamp': 1760866780.1860204, 'inputs': {'network_load': np.float64(0.2), 'relay_reputation': np.float64(0.84), 'budget_utilization': np.float64(0.69), 'recent_win_rate': np.float64(0.15)}, 'base_prob': 0.01, 'final_prob': np.float64(0.004003648000000001), 'steps': [{'feature': 'network_load', 'value': np.float64(0.2), 'effect': 'multiply prob by 0.880 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.84), 'effect': 'multiply prob by 1.760 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.69), 'effect': 'multiply prob by 0.517 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.15), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.2,0.84,0.69,0.2,0.004003648000000001,"{'timestamp': 1760866780.1860454, 'inputs': {'network_load': np.float64(0.2), 'relay_reputation': np.float64(0.84), 'budget_utilization': np.float64(0.69), 'recent_win_rate': np.float64(0.2)}, 'base_prob': 0.01, 'final_prob': np.float64(0.004003648000000001), 'steps': [{'feature': 'network_load', 'value': np.float64(0.2), 'effect': 'multiply prob by 0.880 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.84), 'effect': 'multiply prob by 1.760 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.69), 'effect': 'multiply prob by 0.517 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.2), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.2,0.84,0.69,0.25,0.004003648000000001,"{'timestamp': 1760866780.1860726, 'inputs': {'network_load': np.float64(0.2), 'relay_reputation': np.float64(0.84), 'budget_utilization': np.float64(0.69), 'recent_win_rate': np.float64(0.25)}, 'base_prob': 0.01, 'final_prob': np.float64(0.004003648000000001), 'steps': [{'feature': 'network_load', 'value': np.float64(0.2), 'effect': 'multiply prob by 0.880 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.84), 'effect': 'multiply prob by 1.760 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.69), 'effect': 'multiply prob by 0.517 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.25), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.2,0.84,0.69,0.3,0.004003648000000001,"{'timestamp': 1760866780.1860979, 'inputs': {'network_load': np.float64(0.2), 'relay_reputation': np.float64(0.84), 'budget_utilization': np.float64(0.69), 'recent_win_rate': np.float64(0.3)}, 'base_prob': 0.01, 'final_prob': np.float64(0.004003648000000001), 'steps': [{'feature': 'network_load', 'value': np.float64(0.2), 'effect': 'multiply prob by 0.880 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.84), 'effect': 'multiply prob by 1.760 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.69), 'effect': 'multiply prob by 0.517 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.3), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.2,0.84,0.8,0.0,0.006814719931852801,"{'timestamp': 1760866780.186127, 'inputs': {'network_load': np.float64(0.2), 'relay_reputation': np.float64(0.84), 'budget_utilization': np.float64(0.8), 'recent_win_rate': 1e-09}, 'base_prob': 0.01, 'final_prob': np.float64(0.006814719931852801), 'steps': [{'feature': 'network_load', 'value': np.float64(0.2), 'effect': 'multiply prob by 0.880 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.84), 'effect': 'multiply prob by 1.760 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.8), 'effect': 'multiply prob by 0.440 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': 1e-09, 'effect': 'multiply prob by 1.000 (higher recent wins -> lower prob)'}]}"
0.2,0.84,0.8,0.05,0.0034073600000000008,"{'timestamp': 1760866780.1861563, 'inputs': {'network_load': np.float64(0.2), 'relay_reputation': np.float64(0.84), 'budget_utilization': np.float64(0.8), 'recent_win_rate': np.float64(0.05)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0034073600000000008), 'steps': [{'feature': 'network_load', 'value': np.float64(0.2), 'effect': 'multiply prob by 0.880 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.84), 'effect': 'multiply prob by 1.760 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.8), 'effect': 'multiply prob by 0.440 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.05), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.2,0.84,0.8,0.1,0.0034073600000000008,"{'timestamp': 1760866780.1861813, 'inputs': {'network_load': np.float64(0.2), 'relay_reputation': np.float64(0.84), 'budget_utilization': np.float64(0.8), 'recent_win_rate': np.float64(0.1)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0034073600000000008), 'steps': [{'feature': 'network_load', 'value': np.float64(0.2), 'effect': 'multiply prob by 0.880 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.84), 'effect': 'multiply prob by 1.760 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.8), 'effect': 'multiply prob by 0.440 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.1), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.2,0.84,0.8,0.15,0.0034073600000000008,"{'timestamp': 1760866780.1862066, 'inputs': {'network_load': np.float64(0.2), 'relay_reputation': np.float64(0.84), 'budget_utilization': np.float64(0.8), 'recent_win_rate': np.float64(0.15)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0034073600000000008), 'steps': [{'feature': 'network_load', 'value': np.float64(0.2), 'effect': 'multiply prob by 0.880 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.84), 'effect': 'multiply prob by 1.760 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.8), 'effect': 'multiply prob by 0.440 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.15), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.2,0.84,0.8,0.2,0.0034073600000000008,"{'timestamp': 1760866780.1862316, 'inputs': {'network_load': np.float64(0.2), 'relay_reputation': np.float64(0.84), 'budget_utilization': np.float64(0.8), 'recent_win_rate': np.float64(0.2)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0034073600000000008), 'steps': [{'feature': 'network_load', 'value': np.float64(0.2), 'effect': 'multiply prob by 0.880 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.84), 'effect': 'multiply prob by 1.760 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.8), 'effect': 'multiply prob by 0.440 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.2), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.2,0.84,0.8,0.25,0.0034073600000000008,"{'timestamp': 1760866780.1862583, 'inputs': {'network_load': np.float64(0.2), 'relay_reputation': np.float64(0.84), 'budget_utilization': np.float64(0.8), 'recent_win_rate': np.float64(0.25)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0034073600000000008), 'steps': [{'feature': 'network_load', 'value': np.float64(0.2), 'effect': 'multiply prob by 0.880 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.84), 'effect': 'multiply prob by 1.760 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.8), 'effect': 'multiply prob by 0.440 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.25), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.2,0.84,0.8,0.3,0.0034073600000000008,"{'timestamp': 1760866780.1862867, 'inputs': {'network_load': np.float64(0.2), 'relay_reputation': np.float64(0.84), 'budget_utilization': np.float64(0.8), 'recent_win_rate': np.float64(0.3)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0034073600000000008), 'steps': [{'feature': 'network_load', 'value': np.float64(0.2), 'effect': 'multiply prob by 0.880 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.84), 'effect': 'multiply prob by 1.760 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.8), 'effect': 'multiply prob by 0.440 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.3), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.2,0.95,0.05,0.0,0.016347099836529,"{'timestamp': 1760866780.1863818, 'inputs': {'network_load': np.float64(0.2), 'relay_reputation': np.float64(0.95), 'budget_utilization': np.float64(0.05), 'recent_win_rate': 1e-09}, 'base_prob': 0.01, 'final_prob': np.float64(0.016347099836529), 'steps': [{'feature': 'network_load', 'value': np.float64(0.2), 'effect': 'multiply prob by 0.880 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.95), 'effect': 'multiply prob by 1.925 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.05), 'effect': 'multiply prob by 0.965 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': 1e-09, 'effect': 'multiply prob by 1.000 (higher recent wins -> lower prob)'}]}"
0.2,0.95,0.05,0.05,0.00817355,"{'timestamp': 1760866780.1864204, 'inputs': {'network_load': np.float64(0.2), 'relay_reputation': np.float64(0.95), 'budget_utilization': np.float64(0.05), 'recent_win_rate': np.float64(0.05)}, 'base_prob': 0.01, 'final_prob': np.float64(0.00817355), 'steps': [{'feature': 'network_load', 'value': np.float64(0.2), 'effect': 'multiply prob by 0.880 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.95), 'effect': 'multiply prob by 1.925 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.05), 'effect': 'multiply prob by 0.965 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.05), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.2,0.95,0.05,0.1,0.00817355,"{'timestamp': 1760866780.186447, 'inputs': {'network_load': np.float64(0.2), 'relay_reputation': np.float64(0.95), 'budget_utilization': np.float64(0.05), 'recent_win_rate': np.float64(0.1)}, 'base_prob': 0.01, 'final_prob': np.float64(0.00817355), 'steps': [{'feature': 'network_load', 'value': np.float64(0.2), 'effect': 'multiply prob by 0.880 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.95), 'effect': 'multiply prob by 1.925 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.05), 'effect': 'multiply prob by 0.965 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.1), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.2,0.95,0.05,0.15,0.00817355,"{'timestamp': 1760866780.1864724, 'inputs': {'network_load': np.float64(0.2), 'relay_reputation': np.float64(0.95), 'budget_utilization': np.float64(0.05), 'recent_win_rate': np.float64(0.15)}, 'base_prob': 0.01, 'final_prob': np.float64(0.00817355), 'steps': [{'feature': 'network_load', 'value': np.float64(0.2), 'effect': 'multiply prob by 0.880 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.95), 'effect': 'multiply prob by 1.925 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.05), 'effect': 'multiply prob by 0.965 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.15), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.2,0.95,0.05,0.2,0.00817355,"{'timestamp': 1760866780.1865017, 'inputs': {'network_load': np.float64(0.2), 'relay_reputation': np.float64(0.95), 'budget_utilization': np.float64(0.05), 'recent_win_rate': np.float64(0.2)}, 'base_prob': 0.01, 'final_prob': np.float64(0.00817355), 'steps': [{'feature': 'network_load', 'value': np.float64(0.2), 'effect': 'multiply prob by 0.880 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.95), 'effect': 'multiply prob by 1.925 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.05), 'effect': 'multiply prob by 0.965 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.2), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.2,0.95,0.05,0.25,0.00817355,"{'timestamp': 1760866780.1865509, 'inputs': {'network_load': np.float64(0.2), 'relay_reputation': np.float64(0.95), 'budget_utilization': np.float64(0.05), 'recent_win_rate': np.float64(0.25)}, 'base_prob': 0.01, 'final_prob': np.float64(0.00817355), 'steps': [{'feature': 'network_load', 'value': np.float64(0.2), 'effect': 'multiply prob by 0.880 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.95), 'effect': 'multiply prob by 1.925 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.05), 'effect': 'multiply prob by 0.965 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.25), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.2,0.95,0.05,0.3,0.00817355,"{'timestamp': 1760866780.1865768, 'inputs': {'network_load': np.float64(0.2), 'relay_reputation': np.float64(0.95), 'budget_utilization': np.float64(0.05), 'recent_win_rate': np.float64(0.3)}, 'base_prob': 0.01, 'final_prob': np.float64(0.00817355), 'steps': [{'feature': 'network_load', 'value': np.float64(0.2), 'effect': 'multiply prob by 0.880 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.95), 'effect': 'multiply prob by 1.925 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.05), 'effect': 'multiply prob by 0.965 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.3), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.2,0.95,0.16,0.0,0.0150427198495728,"{'timestamp': 1760866780.1866462, 'inputs': {'network_load': np.float64(0.2), 'relay_reputation': np.float64(0.95), 'budget_utilization': np.float64(0.16), 'recent_win_rate': 1e-09}, 'base_prob': 0.01, 'final_prob': np.float64(0.0150427198495728), 'steps': [{'feature': 'network_load', 'value': np.float64(0.2), 'effect': 'multiply prob by 0.880 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.95), 'effect': 'multiply prob by 1.925 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.16), 'effect': 'multiply prob by 0.888 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': 1e-09, 'effect': 'multiply prob by 1.000 (higher recent wins -> lower prob)'}]}"
0.2,0.95,0.16,0.05,0.00752136,"{'timestamp': 1760866780.1866736, 'inputs': {'network_load': np.float64(0.2), 'relay_reputation': np.float64(0.95), 'budget_utilization': np.float64(0.16), 'recent_win_rate': np.float64(0.05)}, 'base_prob': 0.01, 'final_prob': np.float64(0.00752136), 'steps': [{'feature': 'network_load', 'value': np.float64(0.2), 'effect': 'multiply prob by 0.880 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.95), 'effect': 'multiply prob by 1.925 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.16), 'effect': 'multiply prob by 0.888 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.05), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.2,0.95,0.16,0.1,0.00752136,"{'timestamp': 1760866780.1867034, 'inputs': {'network_load': np.float64(0.2), 'relay_reputation': np.float64(0.95), 'budget_utilization': np.float64(0.16), 'recent_win_rate': np.float64(0.1)}, 'base_prob': 0.01, 'final_prob': np.float64(0.00752136), 'steps': [{'feature': 'network_load', 'value': np.float64(0.2), 'effect': 'multiply prob by 0.880 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.95), 'effect': 'multiply prob by 1.925 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.16), 'effect': 'multiply prob by 0.888 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.1), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.2,0.95,0.16,0.15,0.00752136,"{'timestamp': 1760866780.186729, 'inputs': {'network_load': np.float64(0.2), 'relay_reputation': np.float64(0.95), 'budget_utilization': np.float64(0.16), 'recent_win_rate': np.float64(0.15)}, 'base_prob': 0.01, 'final_prob': np.float64(0.00752136), 'steps': [{'feature': 'network_load', 'value': np.float64(0.2), 'effect': 'multiply prob by 0.880 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.95), 'effect': 'multiply prob by 1.925 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.16), 'effect': 'multiply prob by 0.888 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.15), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.2,0.95,0.16,0.2,0.00752136,"{'timestamp': 1760866780.186754, 'inputs': {'network_load': np.float64(0.2), 'relay_reputation': np.float64(0.95), 'budget_utilization': np.float64(0.16), 'recent_win_rate': np.float64(0.2)}, 'base_prob': 0.01, 'final_prob': np.float64(0.00752136), 'steps': [{'feature': 'network_load', 'value': np.float64(0.2), 'effect': 'multiply prob by 0.880 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.95), 'effect': 'multiply prob by 1.925 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.16), 'effect': 'multiply prob by 0.888 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.2), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.2,0.95,0.16,0.25,0.00752136,"{'timestamp': 1760866780.1867788, 'inputs': {'network_load': np.float64(0.2), 'relay_reputation': np.float64(0.95), 'budget_utilization': np.float64(0.16), 'recent_win_rate': np.float64(0.25)}, 'base_prob': 0.01, 'final_prob': np.float64(0.00752136), 'steps': [{'feature': 'network_load', 'value': np.float64(0.2), 'effect': 'multiply prob by 0.880 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.95), 'effect': 'multiply prob by 1.925 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.16), 'effect': 'multiply prob by 0.888 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.25), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.2,0.95,0.16,0.3,0.00752136,"{'timestamp': 1760866780.186804, 'inputs': {'network_load': np.float64(0.2), 'relay_reputation': np.float64(0.95), 'budget_utilization': np.float64(0.16), 'recent_win_rate': np.float64(0.3)}, 'base_prob': 0.01, 'final_prob': np.float64(0.00752136), 'steps': [{'feature': 'network_load', 'value': np.float64(0.2), 'effect': 'multiply prob by 0.880 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.95), 'effect': 'multiply prob by 1.925 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.16), 'effect': 'multiply prob by 0.888 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.3), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.2,0.95,0.26,0.0,0.0138569198614308,"{'timestamp': 1760866780.1868331, 'inputs': {'network_load': np.float64(0.2), 'relay_reputation': np.float64(0.95), 'budget_utilization': np.float64(0.26), 'recent_win_rate': 1e-09}, 'base_prob': 0.01, 'final_prob': np.float64(0.0138569198614308), 'steps': [{'feature': 'network_load', 'value': np.float64(0.2), 'effect': 'multiply prob by 0.880 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.95), 'effect': 'multiply prob by 1.925 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.26), 'effect': 'multiply prob by 0.818 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': 1e-09, 'effect': 'multiply prob by 1.000 (higher recent wins -> lower prob)'}]}"
0.2,0.95,0.26,0.05,0.006928460000000001,"{'timestamp': 1760866780.1868641, 'inputs': {'network_load': np.float64(0.2), 'relay_reputation': np.float64(0.95), 'budget_utilization': np.float64(0.26), 'recent_win_rate': np.float64(0.05)}, 'base_prob': 0.01, 'final_prob': np.float64(0.006928460000000001), 'steps': [{'feature': 'network_load', 'value': np.float64(0.2), 'effect': 'multiply prob by 0.880 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.95), 'effect': 'multiply prob by 1.925 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.26), 'effect': 'multiply prob by 0.818 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.05), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.2,0.95,0.26,0.1,0.006928460000000001,"{'timestamp': 1760866780.1868963, 'inputs': {'network_load': np.float64(0.2), 'relay_reputation': np.float64(0.95), 'budget_utilization': np.float64(0.26), 'recent_win_rate': np.float64(0.1)}, 'base_prob': 0.01, 'final_prob': np.float64(0.006928460000000001), 'steps': [{'feature': 'network_load', 'value': np.float64(0.2), 'effect': 'multiply prob by 0.880 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.95), 'effect': 'multiply prob by 1.925 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.26), 'effect': 'multiply prob by 0.818 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.1), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.2,0.95,0.26,0.15,0.006928460000000001,"{'timestamp': 1760866780.186922, 'inputs': {'network_load': np.float64(0.2), 'relay_reputation': np.float64(0.95), 'budget_utilization': np.float64(0.26), 'recent_win_rate': np.float64(0.15)}, 'base_prob': 0.01, 'final_prob': np.float64(0.006928460000000001), 'steps': [{'feature': 'network_load', 'value': np.float64(0.2), 'effect': 'multiply prob by 0.880 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.95), 'effect': 'multiply prob by 1.925 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.26), 'effect': 'multiply prob by 0.818 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.15), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.2,0.95,0.26,0.2,0.006928460000000001,"{'timestamp': 1760866780.186947, 'inputs': {'network_load': np.float64(0.2), 'relay_reputation': np.float64(0.95), 'budget_utilization': np.float64(0.26), 'recent_win_rate': np.float64(0.2)}, 'base_prob': 0.01, 'final_prob': np.float64(0.006928460000000001), 'steps': [{'feature': 'network_load', 'value': np.float64(0.2), 'effect': 'multiply prob by 0.880 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.95), 'effect': 'multiply prob by 1.925 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.26), 'effect': 'multiply prob by 0.818 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.2), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.2,0.95,0.26,0.25,0.006928460000000001,"{'timestamp': 1760866780.1869724, 'inputs': {'network_load': np.float64(0.2), 'relay_reputation': np.float64(0.95), 'budget_utilization': np.float64(0.26), 'recent_win_rate': np.float64(0.25)}, 'base_prob': 0.01, 'final_prob': np.float64(0.006928460000000001), 'steps': [{'feature': 'network_load', 'value': np.float64(0.2), 'effect': 'multiply prob by 0.880 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.95), 'effect': 'multiply prob by 1.925 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.26), 'effect': 'multiply prob by 0.818 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.25), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.2,0.95,0.26,0.3,0.006928460000000001,"{'timestamp': 1760866780.1869996, 'inputs': {'network_load': np.float64(0.2), 'relay_reputation': np.float64(0.95), 'budget_utilization': np.float64(0.26), 'recent_win_rate': np.float64(0.3)}, 'base_prob': 0.01, 'final_prob': np.float64(0.006928460000000001), 'steps': [{'feature': 'network_load', 'value': np.float64(0.2), 'effect': 'multiply prob by 0.880 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.95), 'effect': 'multiply prob by 1.925 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.26), 'effect': 'multiply prob by 0.818 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.3), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.2,0.95,0.37,0.0,0.012552539874474598,"{'timestamp': 1760866780.1870284, 'inputs': {'network_load': np.float64(0.2), 'relay_reputation': np.float64(0.95), 'budget_utilization': np.float64(0.37), 'recent_win_rate': 1e-09}, 'base_prob': 0.01, 'final_prob': np.float64(0.012552539874474598), 'steps': [{'feature': 'network_load', 'value': np.float64(0.2), 'effect': 'multiply prob by 0.880 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.95), 'effect': 'multiply prob by 1.925 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.37), 'effect': 'multiply prob by 0.741 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': 1e-09, 'effect': 'multiply prob by 1.000 (higher recent wins -> lower prob)'}]}"
0.2,0.95,0.37,0.05,0.00627627,"{'timestamp': 1760866780.187054, 'inputs': {'network_load': np.float64(0.2), 'relay_reputation': np.float64(0.95), 'budget_utilization': np.float64(0.37), 'recent_win_rate': np.float64(0.05)}, 'base_prob': 0.01, 'final_prob': np.float64(0.00627627), 'steps': [{'feature': 'network_load', 'value': np.float64(0.2), 'effect': 'multiply prob by 0.880 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.95), 'effect': 'multiply prob by 1.925 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.37), 'effect': 'multiply prob by 0.741 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.05), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.2,0.95,0.37,0.1,0.00627627,"{'timestamp': 1760866780.1870809, 'inputs': {'network_load': np.float64(0.2), 'relay_reputation': np.float64(0.95), 'budget_utilization': np.float64(0.37), 'recent_win_rate': np.float64(0.1)}, 'base_prob': 0.01, 'final_prob': np.float64(0.00627627), 'steps': [{'feature': 'network_load', 'value': np.float64(0.2), 'effect': 'multiply prob by 0.880 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.95), 'effect': 'multiply prob by 1.925 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.37), 'effect': 'multiply prob by 0.741 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.1), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.2,0.95,0.37,0.15,0.00627627,"{'timestamp': 1760866780.1871061, 'inputs': {'network_load': np.float64(0.2), 'relay_reputation': np.float64(0.95), 'budget_utilization': np.float64(0.37), 'recent_win_rate': np.float64(0.15)}, 'base_prob': 0.01, 'final_prob': np.float64(0.00627627), 'steps': [{'feature': 'network_load', 'value': np.float64(0.2), 'effect': 'multiply prob by 0.880 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.95), 'effect': 'multiply prob by 1.925 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.37), 'effect': 'multiply prob by 0.741 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.15), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.2,0.95,0.37,0.2,0.00627627,"{'timestamp': 1760866780.187133, 'inputs': {'network_load': np.float64(0.2), 'relay_reputation': np.float64(0.95), 'budget_utilization': np.float64(0.37), 'recent_win_rate': np.float64(0.2)}, 'base_prob': 0.01, 'final_prob': np.float64(0.00627627), 'steps': [{'feature': 'network_load', 'value': np.float64(0.2), 'effect': 'multiply prob by 0.880 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.95), 'effect': 'multiply prob by 1.925 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.37), 'effect': 'multiply prob by 0.741 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.2), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.2,0.95,0.37,0.25,0.00627627,"{'timestamp': 1760866780.1871583, 'inputs': {'network_load': np.float64(0.2), 'relay_reputation': np.float64(0.95), 'budget_utilization': np.float64(0.37), 'recent_win_rate': np.float64(0.25)}, 'base_prob': 0.01, 'final_prob': np.float64(0.00627627), 'steps': [{'feature': 'network_load', 'value': np.float64(0.2), 'effect': 'multiply prob by 0.880 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.95), 'effect': 'multiply prob by 1.925 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.37), 'effect': 'multiply prob by 0.741 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.25), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.2,0.95,0.37,0.3,0.00627627,"{'timestamp': 1760866780.1871834, 'inputs': {'network_load': np.float64(0.2), 'relay_reputation': np.float64(0.95), 'budget_utilization': np.float64(0.37), 'recent_win_rate': np.float64(0.3)}, 'base_prob': 0.01, 'final_prob': np.float64(0.00627627), 'steps': [{'feature': 'network_load', 'value': np.float64(0.2), 'effect': 'multiply prob by 0.880 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.95), 'effect': 'multiply prob by 1.925 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.37), 'effect': 'multiply prob by 0.741 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.3), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.2,0.95,0.48,0.0,0.0112481598875184,"{'timestamp': 1760866780.1872108, 'inputs': {'network_load': np.float64(0.2), 'relay_reputation': np.float64(0.95), 'budget_utilization': np.float64(0.48), 'recent_win_rate': 1e-09}, 'base_prob': 0.01, 'final_prob': np.float64(0.0112481598875184), 'steps': [{'feature': 'network_load', 'value': np.float64(0.2), 'effect': 'multiply prob by 0.880 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.95), 'effect': 'multiply prob by 1.925 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.48), 'effect': 'multiply prob by 0.664 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': 1e-09, 'effect': 'multiply prob by 1.000 (higher recent wins -> lower prob)'}]}"
0.2,0.95,0.48,0.05,0.00562408,"{'timestamp': 1760866780.1872358, 'inputs': {'network_load': np.float64(0.2), 'relay_reputation': np.float64(0.95), 'budget_utilization': np.float64(0.48), 'recent_win_rate': np.float64(0.05)}, 'base_prob': 0.01, 'final_prob': np.float64(0.00562408), 'steps': [{'feature': 'network_load', 'value': np.float64(0.2), 'effect': 'multiply prob by 0.880 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.95), 'effect': 'multiply prob by 1.925 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.48), 'effect': 'multiply prob by 0.664 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.05), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.2,0.95,0.48,0.1,0.00562408,"{'timestamp': 1760866780.1872609, 'inputs': {'network_load': np.float64(0.2), 'relay_reputation': np.float64(0.95), 'budget_utilization': np.float64(0.48), 'recent_win_rate': np.float64(0.1)}, 'base_prob': 0.01, 'final_prob': np.float64(0.00562408), 'steps': [{'feature': 'network_load', 'value': np.float64(0.2), 'effect': 'multiply prob by 0.880 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.95), 'effect': 'multiply prob by 1.925 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.48), 'effect': 'multiply prob by 0.664 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.1), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.2,0.95,0.48,0.15,0.00562408,"{'timestamp': 1760866780.1872904, 'inputs': {'network_load': np.float64(0.2), 'relay_reputation': np.float64(0.95), 'budget_utilization': np.float64(0.48), 'recent_win_rate': np.float64(0.15)}, 'base_prob': 0.01, 'final_prob': np.float64(0.00562408), 'steps': [{'feature': 'network_load', 'value': np.float64(0.2), 'effect': 'multiply prob by 0.880 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.95), 'effect': 'multiply prob by 1.925 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.48), 'effect': 'multiply prob by 0.664 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.15), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.2,0.95,0.48,0.2,0.00562408,"{'timestamp': 1760866780.187319, 'inputs': {'network_load': np.float64(0.2), 'relay_reputation': np.float64(0.95), 'budget_utilization': np.float64(0.48), 'recent_win_rate': np.float64(0.2)}, 'base_prob': 0.01, 'final_prob': np.float64(0.00562408), 'steps': [{'feature': 'network_load', 'value': np.float64(0.2), 'effect': 'multiply prob by 0.880 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.95), 'effect': 'multiply prob by 1.925 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.48), 'effect': 'multiply prob by 0.664 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.2), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.2,0.95,0.48,0.25,0.00562408,"{'timestamp': 1760866780.1873481, 'inputs': {'network_load': np.float64(0.2), 'relay_reputation': np.float64(0.95), 'budget_utilization': np.float64(0.48), 'recent_win_rate': np.float64(0.25)}, 'base_prob': 0.01, 'final_prob': np.float64(0.00562408), 'steps': [{'feature': 'network_load', 'value': np.float64(0.2), 'effect': 'multiply prob by 0.880 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.95), 'effect': 'multiply prob by 1.925 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.48), 'effect': 'multiply prob by 0.664 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.25), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.2,0.95,0.48,0.3,0.00562408,"{'timestamp': 1760866780.1874251, 'inputs': {'network_load': np.float64(0.2), 'relay_reputation': np.float64(0.95), 'budget_utilization': np.float64(0.48), 'recent_win_rate': np.float64(0.3)}, 'base_prob': 0.01, 'final_prob': np.float64(0.00562408), 'steps': [{'feature': 'network_load', 'value': np.float64(0.2), 'effect': 'multiply prob by 0.880 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.95), 'effect': 'multiply prob by 1.925 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.48), 'effect': 'multiply prob by 0.664 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.3), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.2,0.95,0.59,0.0,0.0099437799005622,"{'timestamp': 1760866780.1874688, 'inputs': {'network_load': np.float64(0.2), 'relay_reputation': np.float64(0.95), 'budget_utilization': np.float64(0.59), 'recent_win_rate': 1e-09}, 'base_prob': 0.01, 'final_prob': np.float64(0.0099437799005622), 'steps': [{'feature': 'network_load', 'value': np.float64(0.2), 'effect': 'multiply prob by 0.880 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.95), 'effect': 'multiply prob by 1.925 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.59), 'effect': 'multiply prob by 0.587 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': 1e-09, 'effect': 'multiply prob by 1.000 (higher recent wins -> lower prob)'}]}"
0.2,0.95,0.59,0.05,0.00497189,"{'timestamp': 1760866780.1875024, 'inputs': {'network_load': np.float64(0.2), 'relay_reputation': np.float64(0.95), 'budget_utilization': np.float64(0.59), 'recent_win_rate': np.float64(0.05)}, 'base_prob': 0.01, 'final_prob': np.float64(0.00497189), 'steps': [{'feature': 'network_load', 'value': np.float64(0.2), 'effect': 'multiply prob by 0.880 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.95), 'effect': 'multiply prob by 1.925 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.59), 'effect': 'multiply prob by 0.587 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.05), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.2,0.95,0.59,0.1,0.00497189,"{'timestamp': 1760866780.187528, 'inputs': {'network_load': np.float64(0.2), 'relay_reputation': np.float64(0.95), 'budget_utilization': np.float64(0.59), 'recent_win_rate': np.float64(0.1)}, 'base_prob': 0.01, 'final_prob': np.float64(0.00497189), 'steps': [{'feature': 'network_load', 'value': np.float64(0.2), 'effect': 'multiply prob by 0.880 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.95), 'effect': 'multiply prob by 1.925 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.59), 'effect': 'multiply prob by 0.587 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.1), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.2,0.95,0.59,0.15,0.00497189,"{'timestamp': 1760866780.1875532, 'inputs': {'network_load': np.float64(0.2), 'relay_reputation': np.float64(0.95), 'budget_utilization': np.float64(0.59), 'recent_win_rate': np.float64(0.15)}, 'base_prob': 0.01, 'final_prob': np.float64(0.00497189), 'steps': [{'feature': 'network_load', 'value': np.float64(0.2), 'effect': 'multiply prob by 0.880 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.95), 'effect': 'multiply prob by 1.925 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.59), 'effect': 'multiply prob by 0.587 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.15), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.2,0.95,0.59,0.2,0.00497189,"{'timestamp': 1760866780.1875803, 'inputs': {'network_load': np.float64(0.2), 'relay_reputation': np.float64(0.95), 'budget_utilization': np.float64(0.59), 'recent_win_rate': np.float64(0.2)}, 'base_prob': 0.01, 'final_prob': np.float64(0.00497189), 'steps': [{'feature': 'network_load', 'value': np.float64(0.2), 'effect': 'multiply prob by 0.880 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.95), 'effect': 'multiply prob by 1.925 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.59), 'effect': 'multiply prob by 0.587 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.2), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.2,0.95,0.59,0.25,0.00497189,"{'timestamp': 1760866780.1876075, 'inputs': {'network_load': np.float64(0.2), 'relay_reputation': np.float64(0.95), 'budget_utilization': np.float64(0.59), 'recent_win_rate': np.float64(0.25)}, 'base_prob': 0.01, 'final_prob': np.float64(0.00497189), 'steps': [{'feature': 'network_load', 'value': np.float64(0.2), 'effect': 'multiply prob by 0.880 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.95), 'effect': 'multiply prob by 1.925 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.59), 'effect': 'multiply prob by 0.587 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.25), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.2,0.95,0.59,0.3,0.00497189,"{'timestamp': 1760866780.1876347, 'inputs': {'network_load': np.float64(0.2), 'relay_reputation': np.float64(0.95), 'budget_utilization': np.float64(0.59), 'recent_win_rate': np.float64(0.3)}, 'base_prob': 0.01, 'final_prob': np.float64(0.00497189), 'steps': [{'feature': 'network_load', 'value': np.float64(0.2), 'effect': 'multiply prob by 0.880 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.95), 'effect': 'multiply prob by 1.925 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.59), 'effect': 'multiply prob by 0.587 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.3), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.2,0.95,0.69,0.0,0.008757979912420201,"{'timestamp': 1760866780.187662, 'inputs': {'network_load': np.float64(0.2), 'relay_reputation': np.float64(0.95), 'budget_utilization': np.float64(0.69), 'recent_win_rate': 1e-09}, 'base_prob': 0.01, 'final_prob': np.float64(0.008757979912420201), 'steps': [{'feature': 'network_load', 'value': np.float64(0.2), 'effect': 'multiply prob by 0.880 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.95), 'effect': 'multiply prob by 1.925 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.69), 'effect': 'multiply prob by 0.517 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': 1e-09, 'effect': 'multiply prob by 1.000 (higher recent wins -> lower prob)'}]}"
0.2,0.95,0.69,0.05,0.004378990000000001,"{'timestamp': 1760866780.1876874, 'inputs': {'network_load': np.float64(0.2), 'relay_reputation': np.float64(0.95), 'budget_utilization': np.float64(0.69), 'recent_win_rate': np.float64(0.05)}, 'base_prob': 0.01, 'final_prob': np.float64(0.004378990000000001), 'steps': [{'feature': 'network_load', 'value': np.float64(0.2), 'effect': 'multiply prob by 0.880 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.95), 'effect': 'multiply prob by 1.925 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.69), 'effect': 'multiply prob by 0.517 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.05), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.2,0.95,0.69,0.1,0.004378990000000001,"{'timestamp': 1760866780.1877127, 'inputs': {'network_load': np.float64(0.2), 'relay_reputation': np.float64(0.95), 'budget_utilization': np.float64(0.69), 'recent_win_rate': np.float64(0.1)}, 'base_prob': 0.01, 'final_prob': np.float64(0.004378990000000001), 'steps': [{'feature': 'network_load', 'value': np.float64(0.2), 'effect': 'multiply prob by 0.880 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.95), 'effect': 'multiply prob by 1.925 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.69), 'effect': 'multiply prob by 0.517 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.1), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.2,0.95,0.69,0.15,0.004378990000000001,"{'timestamp': 1760866780.1877382, 'inputs': {'network_load': np.float64(0.2), 'relay_reputation': np.float64(0.95), 'budget_utilization': np.float64(0.69), 'recent_win_rate': np.float64(0.15)}, 'base_prob': 0.01, 'final_prob': np.float64(0.004378990000000001), 'steps': [{'feature': 'network_load', 'value': np.float64(0.2), 'effect': 'multiply prob by 0.880 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.95), 'effect': 'multiply prob by 1.925 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.69), 'effect': 'multiply prob by 0.517 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.15), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.2,0.95,0.69,0.2,0.004378990000000001,"{'timestamp': 1760866780.1877704, 'inputs': {'network_load': np.float64(0.2), 'relay_reputation': np.float64(0.95), 'budget_utilization': np.float64(0.69), 'recent_win_rate': np.float64(0.2)}, 'base_prob': 0.01, 'final_prob': np.float64(0.004378990000000001), 'steps': [{'feature': 'network_load', 'value': np.float64(0.2), 'effect': 'multiply prob by 0.880 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.95), 'effect': 'multiply prob by 1.925 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.69), 'effect': 'multiply prob by 0.517 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.2), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.2,0.95,0.69,0.25,0.004378990000000001,"{'timestamp': 1760866780.1877983, 'inputs': {'network_load': np.float64(0.2), 'relay_reputation': np.float64(0.95), 'budget_utilization': np.float64(0.69), 'recent_win_rate': np.float64(0.25)}, 'base_prob': 0.01, 'final_prob': np.float64(0.004378990000000001), 'steps': [{'feature': 'network_load', 'value': np.float64(0.2), 'effect': 'multiply prob by 0.880 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.95), 'effect': 'multiply prob by 1.925 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.69), 'effect': 'multiply prob by 0.517 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.25), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.2,0.95,0.69,0.3,0.004378990000000001,"{'timestamp': 1760866780.1878254, 'inputs': {'network_load': np.float64(0.2), 'relay_reputation': np.float64(0.95), 'budget_utilization': np.float64(0.69), 'recent_win_rate': np.float64(0.3)}, 'base_prob': 0.01, 'final_prob': np.float64(0.004378990000000001), 'steps': [{'feature': 'network_load', 'value': np.float64(0.2), 'effect': 'multiply prob by 0.880 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.95), 'effect': 'multiply prob by 1.925 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.69), 'effect': 'multiply prob by 0.517 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.3), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.2,0.95,0.8,0.0,0.0074535999254640006,"{'timestamp': 1760866780.187853, 'inputs': {'network_load': np.float64(0.2), 'relay_reputation': np.float64(0.95), 'budget_utilization': np.float64(0.8), 'recent_win_rate': 1e-09}, 'base_prob': 0.01, 'final_prob': np.float64(0.0074535999254640006), 'steps': [{'feature': 'network_load', 'value': np.float64(0.2), 'effect': 'multiply prob by 0.880 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.95), 'effect': 'multiply prob by 1.925 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.8), 'effect': 'multiply prob by 0.440 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': 1e-09, 'effect': 'multiply prob by 1.000 (higher recent wins -> lower prob)'}]}"
0.2,0.95,0.8,0.05,0.0037268000000000006,"{'timestamp': 1760866780.1878786, 'inputs': {'network_load': np.float64(0.2), 'relay_reputation': np.float64(0.95), 'budget_utilization': np.float64(0.8), 'recent_win_rate': np.float64(0.05)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0037268000000000006), 'steps': [{'feature': 'network_load', 'value': np.float64(0.2), 'effect': 'multiply prob by 0.880 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.95), 'effect': 'multiply prob by 1.925 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.8), 'effect': 'multiply prob by 0.440 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.05), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.2,0.95,0.8,0.1,0.0037268000000000006,"{'timestamp': 1760866780.1879044, 'inputs': {'network_load': np.float64(0.2), 'relay_reputation': np.float64(0.95), 'budget_utilization': np.float64(0.8), 'recent_win_rate': np.float64(0.1)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0037268000000000006), 'steps': [{'feature': 'network_load', 'value': np.float64(0.2), 'effect': 'multiply prob by 0.880 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.95), 'effect': 'multiply prob by 1.925 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.8), 'effect': 'multiply prob by 0.440 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.1), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.2,0.95,0.8,0.15,0.0037268000000000006,"{'timestamp': 1760866780.1879332, 'inputs': {'network_load': np.float64(0.2), 'relay_reputation': np.float64(0.95), 'budget_utilization': np.float64(0.8), 'recent_win_rate': np.float64(0.15)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0037268000000000006), 'steps': [{'feature': 'network_load', 'value': np.float64(0.2), 'effect': 'multiply prob by 0.880 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.95), 'effect': 'multiply prob by 1.925 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.8), 'effect': 'multiply prob by 0.440 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.15), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.2,0.95,0.8,0.2,0.0037268000000000006,"{'timestamp': 1760866780.1879587, 'inputs': {'network_load': np.float64(0.2), 'relay_reputation': np.float64(0.95), 'budget_utilization': np.float64(0.8), 'recent_win_rate': np.float64(0.2)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0037268000000000006), 'steps': [{'feature': 'network_load', 'value': np.float64(0.2), 'effect': 'multiply prob by 0.880 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.95), 'effect': 'multiply prob by 1.925 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.8), 'effect': 'multiply prob by 0.440 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.2), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.2,0.95,0.8,0.25,0.0037268000000000006,"{'timestamp': 1760866780.1879842, 'inputs': {'network_load': np.float64(0.2), 'relay_reputation': np.float64(0.95), 'budget_utilization': np.float64(0.8), 'recent_win_rate': np.float64(0.25)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0037268000000000006), 'steps': [{'feature': 'network_load', 'value': np.float64(0.2), 'effect': 'multiply prob by 0.880 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.95), 'effect': 'multiply prob by 1.925 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.8), 'effect': 'multiply prob by 0.440 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.25), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.2,0.95,0.8,0.3,0.0037268000000000006,"{'timestamp': 1760866780.1880112, 'inputs': {'network_load': np.float64(0.2), 'relay_reputation': np.float64(0.95), 'budget_utilization': np.float64(0.8), 'recent_win_rate': np.float64(0.3)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0037268000000000006), 'steps': [{'feature': 'network_load', 'value': np.float64(0.2), 'effect': 'multiply prob by 0.880 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.95), 'effect': 'multiply prob by 1.925 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.8), 'effect': 'multiply prob by 0.440 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.3), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.3,0.4,0.05,0.0,0.008704299912957,"{'timestamp': 1760866780.1880417, 'inputs': {'network_load': np.float64(0.3), 'relay_reputation': np.float64(0.4), 'budget_utilization': np.float64(0.05), 'recent_win_rate': 1e-09}, 'base_prob': 0.01, 'final_prob': np.float64(0.008704299912957), 'steps': [{'feature': 'network_load', 'value': np.float64(0.3), 'effect': 'multiply prob by 0.820 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.4), 'effect': 'multiply prob by 1.100 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.05), 'effect': 'multiply prob by 0.965 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': 1e-09, 'effect': 'multiply prob by 1.000 (higher recent wins -> lower prob)'}]}"
0.3,0.4,0.05,0.05,0.004352150000000001,"{'timestamp': 1760866780.1880703, 'inputs': {'network_load': np.float64(0.3), 'relay_reputation': np.float64(0.4), 'budget_utilization': np.float64(0.05), 'recent_win_rate': np.float64(0.05)}, 'base_prob': 0.01, 'final_prob': np.float64(0.004352150000000001), 'steps': [{'feature': 'network_load', 'value': np.float64(0.3), 'effect': 'multiply prob by 0.820 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.4), 'effect': 'multiply prob by 1.100 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.05), 'effect': 'multiply prob by 0.965 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.05), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.3,0.4,0.05,0.1,0.004352150000000001,"{'timestamp': 1760866780.188098, 'inputs': {'network_load': np.float64(0.3), 'relay_reputation': np.float64(0.4), 'budget_utilization': np.float64(0.05), 'recent_win_rate': np.float64(0.1)}, 'base_prob': 0.01, 'final_prob': np.float64(0.004352150000000001), 'steps': [{'feature': 'network_load', 'value': np.float64(0.3), 'effect': 'multiply prob by 0.820 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.4), 'effect': 'multiply prob by 1.100 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.05), 'effect': 'multiply prob by 0.965 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.1), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.3,0.4,0.05,0.15,0.004352150000000001,"{'timestamp': 1760866780.1881237, 'inputs': {'network_load': np.float64(0.3), 'relay_reputation': np.float64(0.4), 'budget_utilization': np.float64(0.05), 'recent_win_rate': np.float64(0.15)}, 'base_prob': 0.01, 'final_prob': np.float64(0.004352150000000001), 'steps': [{'feature': 'network_load', 'value': np.float64(0.3), 'effect': 'multiply prob by 0.820 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.4), 'effect': 'multiply prob by 1.100 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.05), 'effect': 'multiply prob by 0.965 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.15), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.3,0.4,0.05,0.2,0.004352150000000001,"{'timestamp': 1760866780.1881511, 'inputs': {'network_load': np.float64(0.3), 'relay_reputation': np.float64(0.4), 'budget_utilization': np.float64(0.05), 'recent_win_rate': np.float64(0.2)}, 'base_prob': 0.01, 'final_prob': np.float64(0.004352150000000001), 'steps': [{'feature': 'network_load', 'value': np.float64(0.3), 'effect': 'multiply prob by 0.820 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.4), 'effect': 'multiply prob by 1.100 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.05), 'effect': 'multiply prob by 0.965 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.2), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.3,0.4,0.05,0.25,0.004352150000000001,"{'timestamp': 1760866780.1881766, 'inputs': {'network_load': np.float64(0.3), 'relay_reputation': np.float64(0.4), 'budget_utilization': np.float64(0.05), 'recent_win_rate': np.float64(0.25)}, 'base_prob': 0.01, 'final_prob': np.float64(0.004352150000000001), 'steps': [{'feature': 'network_load', 'value': np.float64(0.3), 'effect': 'multiply prob by 0.820 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.4), 'effect': 'multiply prob by 1.100 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.05), 'effect': 'multiply prob by 0.965 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.25), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.3,0.4,0.05,0.3,0.004352150000000001,"{'timestamp': 1760866780.1882048, 'inputs': {'network_load': np.float64(0.3), 'relay_reputation': np.float64(0.4), 'budget_utilization': np.float64(0.05), 'recent_win_rate': np.float64(0.3)}, 'base_prob': 0.01, 'final_prob': np.float64(0.004352150000000001), 'steps': [{'feature': 'network_load', 'value': np.float64(0.3), 'effect': 'multiply prob by 0.820 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.4), 'effect': 'multiply prob by 1.100 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.05), 'effect': 'multiply prob by 0.965 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.3), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.3,0.4,0.16,0.0,0.0080097599199024,"{'timestamp': 1760866780.1883013, 'inputs': {'network_load': np.float64(0.3), 'relay_reputation': np.float64(0.4), 'budget_utilization': np.float64(0.16), 'recent_win_rate': 1e-09}, 'base_prob': 0.01, 'final_prob': np.float64(0.0080097599199024), 'steps': [{'feature': 'network_load', 'value': np.float64(0.3), 'effect': 'multiply prob by 0.820 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.4), 'effect': 'multiply prob by 1.100 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.16), 'effect': 'multiply prob by 0.888 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': 1e-09, 'effect': 'multiply prob by 1.000 (higher recent wins -> lower prob)'}]}"
0.3,0.4,0.16,0.05,0.004004880000000001,"{'timestamp': 1760866780.1883347, 'inputs': {'network_load': np.float64(0.3), 'relay_reputation': np.float64(0.4), 'budget_utilization': np.float64(0.16), 'recent_win_rate': np.float64(0.05)}, 'base_prob': 0.01, 'final_prob': np.float64(0.004004880000000001), 'steps': [{'feature': 'network_load', 'value': np.float64(0.3), 'effect': 'multiply prob by 0.820 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.4), 'effect': 'multiply prob by 1.100 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.16), 'effect': 'multiply prob by 0.888 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.05), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.3,0.4,0.16,0.1,0.004004880000000001,"{'timestamp': 1760866780.1883605, 'inputs': {'network_load': np.float64(0.3), 'relay_reputation': np.float64(0.4), 'budget_utilization': np.float64(0.16), 'recent_win_rate': np.float64(0.1)}, 'base_prob': 0.01, 'final_prob': np.float64(0.004004880000000001), 'steps': [{'feature': 'network_load', 'value': np.float64(0.3), 'effect': 'multiply prob by 0.820 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.4), 'effect': 'multiply prob by 1.100 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.16), 'effect': 'multiply prob by 0.888 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.1), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.3,0.4,0.16,0.15,0.004004880000000001,"{'timestamp': 1760866780.1883857, 'inputs': {'network_load': np.float64(0.3), 'relay_reputation': np.float64(0.4), 'budget_utilization': np.float64(0.16), 'recent_win_rate': np.float64(0.15)}, 'base_prob': 0.01, 'final_prob': np.float64(0.004004880000000001), 'steps': [{'feature': 'network_load', 'value': np.float64(0.3), 'effect': 'multiply prob by 0.820 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.4), 'effect': 'multiply prob by 1.100 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.16), 'effect': 'multiply prob by 0.888 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.15), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.3,0.4,0.16,0.2,0.004004880000000001,"{'timestamp': 1760866780.1884112, 'inputs': {'network_load': np.float64(0.3), 'relay_reputation': np.float64(0.4), 'budget_utilization': np.float64(0.16), 'recent_win_rate': np.float64(0.2)}, 'base_prob': 0.01, 'final_prob': np.float64(0.004004880000000001), 'steps': [{'feature': 'network_load', 'value': np.float64(0.3), 'effect': 'multiply prob by 0.820 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.4), 'effect': 'multiply prob by 1.100 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.16), 'effect': 'multiply prob by 0.888 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.2), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.3,0.4,0.16,0.25,0.004004880000000001,"{'timestamp': 1760866780.1884382, 'inputs': {'network_load': np.float64(0.3), 'relay_reputation': np.float64(0.4), 'budget_utilization': np.float64(0.16), 'recent_win_rate': np.float64(0.25)}, 'base_prob': 0.01, 'final_prob': np.float64(0.004004880000000001), 'steps': [{'feature': 'network_load', 'value': np.float64(0.3), 'effect': 'multiply prob by 0.820 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.4), 'effect': 'multiply prob by 1.100 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.16), 'effect': 'multiply prob by 0.888 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.25), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.3,0.4,0.16,0.3,0.004004880000000001,"{'timestamp': 1760866780.1884634, 'inputs': {'network_load': np.float64(0.3), 'relay_reputation': np.float64(0.4), 'budget_utilization': np.float64(0.16), 'recent_win_rate': np.float64(0.3)}, 'base_prob': 0.01, 'final_prob': np.float64(0.004004880000000001), 'steps': [{'feature': 'network_load', 'value': np.float64(0.3), 'effect': 'multiply prob by 0.820 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.4), 'effect': 'multiply prob by 1.100 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.16), 'effect': 'multiply prob by 0.888 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.3), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.3,0.4,0.26,0.0,0.0073783599262164015,"{'timestamp': 1760866780.1884923, 'inputs': {'network_load': np.float64(0.3), 'relay_reputation': np.float64(0.4), 'budget_utilization': np.float64(0.26), 'recent_win_rate': 1e-09}, 'base_prob': 0.01, 'final_prob': np.float64(0.0073783599262164015), 'steps': [{'feature': 'network_load', 'value': np.float64(0.3), 'effect': 'multiply prob by 0.820 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.4), 'effect': 'multiply prob by 1.100 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.26), 'effect': 'multiply prob by 0.818 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': 1e-09, 'effect': 'multiply prob by 1.000 (higher recent wins -> lower prob)'}]}"
0.3,0.4,0.26,0.05,0.003689180000000001,"{'timestamp': 1760866780.1885195, 'inputs': {'network_load': np.float64(0.3), 'relay_reputation': np.float64(0.4), 'budget_utilization': np.float64(0.26), 'recent_win_rate': np.float64(0.05)}, 'base_prob': 0.01, 'final_prob': np.float64(0.003689180000000001), 'steps': [{'feature': 'network_load', 'value': np.float64(0.3), 'effect': 'multiply prob by 0.820 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.4), 'effect': 'multiply prob by 1.100 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.26), 'effect': 'multiply prob by 0.818 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.05), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.3,0.4,0.26,0.1,0.003689180000000001,"{'timestamp': 1760866780.1885445, 'inputs': {'network_load': np.float64(0.3), 'relay_reputation': np.float64(0.4), 'budget_utilization': np.float64(0.26), 'recent_win_rate': np.float64(0.1)}, 'base_prob': 0.01, 'final_prob': np.float64(0.003689180000000001), 'steps': [{'feature': 'network_load', 'value': np.float64(0.3), 'effect': 'multiply prob by 0.820 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.4), 'effect': 'multiply prob by 1.100 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.26), 'effect': 'multiply prob by 0.818 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.1), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.3,0.4,0.26,0.15,0.003689180000000001,"{'timestamp': 1760866780.1885717, 'inputs': {'network_load': np.float64(0.3), 'relay_reputation': np.float64(0.4), 'budget_utilization': np.float64(0.26), 'recent_win_rate': np.float64(0.15)}, 'base_prob': 0.01, 'final_prob': np.float64(0.003689180000000001), 'steps': [{'feature': 'network_load', 'value': np.float64(0.3), 'effect': 'multiply prob by 0.820 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.4), 'effect': 'multiply prob by 1.100 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.26), 'effect': 'multiply prob by 0.818 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.15), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.3,0.4,0.26,0.2,0.003689180000000001,"{'timestamp': 1760866780.1886265, 'inputs': {'network_load': np.float64(0.3), 'relay_reputation': np.float64(0.4), 'budget_utilization': np.float64(0.26), 'recent_win_rate': np.float64(0.2)}, 'base_prob': 0.01, 'final_prob': np.float64(0.003689180000000001), 'steps': [{'feature': 'network_load', 'value': np.float64(0.3), 'effect': 'multiply prob by 0.820 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.4), 'effect': 'multiply prob by 1.100 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.26), 'effect': 'multiply prob by 0.818 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.2), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.3,0.4,0.26,0.25,0.003689180000000001,"{'timestamp': 1760866780.188658, 'inputs': {'network_load': np.float64(0.3), 'relay_reputation': np.float64(0.4), 'budget_utilization': np.float64(0.26), 'recent_win_rate': np.float64(0.25)}, 'base_prob': 0.01, 'final_prob': np.float64(0.003689180000000001), 'steps': [{'feature': 'network_load', 'value': np.float64(0.3), 'effect': 'multiply prob by 0.820 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.4), 'effect': 'multiply prob by 1.100 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.26), 'effect': 'multiply prob by 0.818 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.25), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.3,0.4,0.26,0.3,0.003689180000000001,"{'timestamp': 1760866780.1886833, 'inputs': {'network_load': np.float64(0.3), 'relay_reputation': np.float64(0.4), 'budget_utilization': np.float64(0.26), 'recent_win_rate': np.float64(0.3)}, 'base_prob': 0.01, 'final_prob': np.float64(0.003689180000000001), 'steps': [{'feature': 'network_load', 'value': np.float64(0.3), 'effect': 'multiply prob by 0.820 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.4), 'effect': 'multiply prob by 1.100 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.26), 'effect': 'multiply prob by 0.818 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.3), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.3,0.4,0.37,0.0,0.006683819933161802,"{'timestamp': 1760866780.1887121, 'inputs': {'network_load': np.float64(0.3), 'relay_reputation': np.float64(0.4), 'budget_utilization': np.float64(0.37), 'recent_win_rate': 1e-09}, 'base_prob': 0.01, 'final_prob': np.float64(0.006683819933161802), 'steps': [{'feature': 'network_load', 'value': np.float64(0.3), 'effect': 'multiply prob by 0.820 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.4), 'effect': 'multiply prob by 1.100 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.37), 'effect': 'multiply prob by 0.741 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': 1e-09, 'effect': 'multiply prob by 1.000 (higher recent wins -> lower prob)'}]}"
0.3,0.4,0.37,0.05,0.003341910000000001,"{'timestamp': 1760866780.188742, 'inputs': {'network_load': np.float64(0.3), 'relay_reputation': np.float64(0.4), 'budget_utilization': np.float64(0.37), 'recent_win_rate': np.float64(0.05)}, 'base_prob': 0.01, 'final_prob': np.float64(0.003341910000000001), 'steps': [{'feature': 'network_load', 'value': np.float64(0.3), 'effect': 'multiply prob by 0.820 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.4), 'effect': 'multiply prob by 1.100 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.37), 'effect': 'multiply prob by 0.741 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.05), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.3,0.4,0.37,0.1,0.003341910000000001,"{'timestamp': 1760866780.1887715, 'inputs': {'network_load': np.float64(0.3), 'relay_reputation': np.float64(0.4), 'budget_utilization': np.float64(0.37), 'recent_win_rate': np.float64(0.1)}, 'base_prob': 0.01, 'final_prob': np.float64(0.003341910000000001), 'steps': [{'feature': 'network_load', 'value': np.float64(0.3), 'effect': 'multiply prob by 0.820 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.4), 'effect': 'multiply prob by 1.100 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.37), 'effect': 'multiply prob by 0.741 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.1), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.3,0.4,0.37,0.15,0.003341910000000001,"{'timestamp': 1760866780.1887984, 'inputs': {'network_load': np.float64(0.3), 'relay_reputation': np.float64(0.4), 'budget_utilization': np.float64(0.37), 'recent_win_rate': np.float64(0.15)}, 'base_prob': 0.01, 'final_prob': np.float64(0.003341910000000001), 'steps': [{'feature': 'network_load', 'value': np.float64(0.3), 'effect': 'multiply prob by 0.820 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.4), 'effect': 'multiply prob by 1.100 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.37), 'effect': 'multiply prob by 0.741 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.15), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.3,0.4,0.37,0.2,0.003341910000000001,"{'timestamp': 1760866780.1888237, 'inputs': {'network_load': np.float64(0.3), 'relay_reputation': np.float64(0.4), 'budget_utilization': np.float64(0.37), 'recent_win_rate': np.float64(0.2)}, 'base_prob': 0.01, 'final_prob': np.float64(0.003341910000000001), 'steps': [{'feature': 'network_load', 'value': np.float64(0.3), 'effect': 'multiply prob by 0.820 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.4), 'effect': 'multiply prob by 1.100 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.37), 'effect': 'multiply prob by 0.741 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.2), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.3,0.4,0.37,0.25,0.003341910000000001,"{'timestamp': 1760866780.1888492, 'inputs': {'network_load': np.float64(0.3), 'relay_reputation': np.float64(0.4), 'budget_utilization': np.float64(0.37), 'recent_win_rate': np.float64(0.25)}, 'base_prob': 0.01, 'final_prob': np.float64(0.003341910000000001), 'steps': [{'feature': 'network_load', 'value': np.float64(0.3), 'effect': 'multiply prob by 0.820 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.4), 'effect': 'multiply prob by 1.100 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.37), 'effect': 'multiply prob by 0.741 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.25), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.3,0.4,0.37,0.3,0.003341910000000001,"{'timestamp': 1760866780.188876, 'inputs': {'network_load': np.float64(0.3), 'relay_reputation': np.float64(0.4), 'budget_utilization': np.float64(0.37), 'recent_win_rate': np.float64(0.3)}, 'base_prob': 0.01, 'final_prob': np.float64(0.003341910000000001), 'steps': [{'feature': 'network_load', 'value': np.float64(0.3), 'effect': 'multiply prob by 0.820 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.4), 'effect': 'multiply prob by 1.100 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.37), 'effect': 'multiply prob by 0.741 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.3), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.3,0.4,0.48,0.0,0.005989279940107201,"{'timestamp': 1760866780.188903, 'inputs': {'network_load': np.float64(0.3), 'relay_reputation': np.float64(0.4), 'budget_utilization': np.float64(0.48), 'recent_win_rate': 1e-09}, 'base_prob': 0.01, 'final_prob': np.float64(0.005989279940107201), 'steps': [{'feature': 'network_load', 'value': np.float64(0.3), 'effect': 'multiply prob by 0.820 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.4), 'effect': 'multiply prob by 1.100 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.48), 'effect': 'multiply prob by 0.664 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': 1e-09, 'effect': 'multiply prob by 1.000 (higher recent wins -> lower prob)'}]}"
0.3,0.4,0.48,0.05,0.0029946400000000007,"{'timestamp': 1760866780.1889284, 'inputs': {'network_load': np.float64(0.3), 'relay_reputation': np.float64(0.4), 'budget_utilization': np.float64(0.48), 'recent_win_rate': np.float64(0.05)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0029946400000000007), 'steps': [{'feature': 'network_load', 'value': np.float64(0.3), 'effect': 'multiply prob by 0.820 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.4), 'effect': 'multiply prob by 1.100 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.48), 'effect': 'multiply prob by 0.664 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.05), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.3,0.4,0.48,0.1,0.0029946400000000007,"{'timestamp': 1760866780.1889534, 'inputs': {'network_load': np.float64(0.3), 'relay_reputation': np.float64(0.4), 'budget_utilization': np.float64(0.48), 'recent_win_rate': np.float64(0.1)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0029946400000000007), 'steps': [{'feature': 'network_load', 'value': np.float64(0.3), 'effect': 'multiply prob by 0.820 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.4), 'effect': 'multiply prob by 1.100 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.48), 'effect': 'multiply prob by 0.664 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.1), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.3,0.4,0.48,0.15,0.0029946400000000007,"{'timestamp': 1760866780.1889808, 'inputs': {'network_load': np.float64(0.3), 'relay_reputation': np.float64(0.4), 'budget_utilization': np.float64(0.48), 'recent_win_rate': np.float64(0.15)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0029946400000000007), 'steps': [{'feature': 'network_load', 'value': np.float64(0.3), 'effect': 'multiply prob by 0.820 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.4), 'effect': 'multiply prob by 1.100 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.48), 'effect': 'multiply prob by 0.664 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.15), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.3,0.4,0.48,0.2,0.0029946400000000007,"{'timestamp': 1760866780.1890073, 'inputs': {'network_load': np.float64(0.3), 'relay_reputation': np.float64(0.4), 'budget_utilization': np.float64(0.48), 'recent_win_rate': np.float64(0.2)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0029946400000000007), 'steps': [{'feature': 'network_load', 'value': np.float64(0.3), 'effect': 'multiply prob by 0.820 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.4), 'effect': 'multiply prob by 1.100 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.48), 'effect': 'multiply prob by 0.664 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.2), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.3,0.4,0.48,0.25,0.0029946400000000007,"{'timestamp': 1760866780.1890347, 'inputs': {'network_load': np.float64(0.3), 'relay_reputation': np.float64(0.4), 'budget_utilization': np.float64(0.48), 'recent_win_rate': np.float64(0.25)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0029946400000000007), 'steps': [{'feature': 'network_load', 'value': np.float64(0.3), 'effect': 'multiply prob by 0.820 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.4), 'effect': 'multiply prob by 1.100 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.48), 'effect': 'multiply prob by 0.664 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.25), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.3,0.4,0.48,0.3,0.0029946400000000007,"{'timestamp': 1760866780.1890597, 'inputs': {'network_load': np.float64(0.3), 'relay_reputation': np.float64(0.4), 'budget_utilization': np.float64(0.48), 'recent_win_rate': np.float64(0.3)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0029946400000000007), 'steps': [{'feature': 'network_load', 'value': np.float64(0.3), 'effect': 'multiply prob by 0.820 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.4), 'effect': 'multiply prob by 1.100 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.48), 'effect': 'multiply prob by 0.664 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.3), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.3,0.4,0.59,0.0,0.005294739947052601,"{'timestamp': 1760866780.1890917, 'inputs': {'network_load': np.float64(0.3), 'relay_reputation': np.float64(0.4), 'budget_utilization': np.float64(0.59), 'recent_win_rate': 1e-09}, 'base_prob': 0.01, 'final_prob': np.float64(0.005294739947052601), 'steps': [{'feature': 'network_load', 'value': np.float64(0.3), 'effect': 'multiply prob by 0.820 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.4), 'effect': 'multiply prob by 1.100 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.59), 'effect': 'multiply prob by 0.587 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': 1e-09, 'effect': 'multiply prob by 1.000 (higher recent wins -> lower prob)'}]}"
0.3,0.4,0.59,0.05,0.0026473700000000005,"{'timestamp': 1760866780.1891172, 'inputs': {'network_load': np.float64(0.3), 'relay_reputation': np.float64(0.4), 'budget_utilization': np.float64(0.59), 'recent_win_rate': np.float64(0.05)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0026473700000000005), 'steps': [{'feature': 'network_load', 'value': np.float64(0.3), 'effect': 'multiply prob by 0.820 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.4), 'effect': 'multiply prob by 1.100 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.59), 'effect': 'multiply prob by 0.587 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.05), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.3,0.4,0.59,0.1,0.0026473700000000005,"{'timestamp': 1760866780.1891603, 'inputs': {'network_load': np.float64(0.3), 'relay_reputation': np.float64(0.4), 'budget_utilization': np.float64(0.59), 'recent_win_rate': np.float64(0.1)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0026473700000000005), 'steps': [{'feature': 'network_load', 'value': np.float64(0.3), 'effect': 'multiply prob by 0.820 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.4), 'effect': 'multiply prob by 1.100 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.59), 'effect': 'multiply prob by 0.587 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.1), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.3,0.4,0.59,0.15,0.0026473700000000005,"{'timestamp': 1760866780.1891925, 'inputs': {'network_load': np.float64(0.3), 'relay_reputation': np.float64(0.4), 'budget_utilization': np.float64(0.59), 'recent_win_rate': np.float64(0.15)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0026473700000000005), 'steps': [{'feature': 'network_load', 'value': np.float64(0.3), 'effect': 'multiply prob by 0.820 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.4), 'effect': 'multiply prob by 1.100 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.59), 'effect': 'multiply prob by 0.587 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.15), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.3,0.4,0.59,0.2,0.0026473700000000005,"{'timestamp': 1760866780.189283, 'inputs': {'network_load': np.float64(0.3), 'relay_reputation': np.float64(0.4), 'budget_utilization': np.float64(0.59), 'recent_win_rate': np.float64(0.2)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0026473700000000005), 'steps': [{'feature': 'network_load', 'value': np.float64(0.3), 'effect': 'multiply prob by 0.820 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.4), 'effect': 'multiply prob by 1.100 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.59), 'effect': 'multiply prob by 0.587 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.2), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.3,0.4,0.59,0.25,0.0026473700000000005,"{'timestamp': 1760866780.1893125, 'inputs': {'network_load': np.float64(0.3), 'relay_reputation': np.float64(0.4), 'budget_utilization': np.float64(0.59), 'recent_win_rate': np.float64(0.25)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0026473700000000005), 'steps': [{'feature': 'network_load', 'value': np.float64(0.3), 'effect': 'multiply prob by 0.820 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.4), 'effect': 'multiply prob by 1.100 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.59), 'effect': 'multiply prob by 0.587 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.25), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.3,0.4,0.59,0.3,0.0026473700000000005,"{'timestamp': 1760866780.1893382, 'inputs': {'network_load': np.float64(0.3), 'relay_reputation': np.float64(0.4), 'budget_utilization': np.float64(0.59), 'recent_win_rate': np.float64(0.3)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0026473700000000005), 'steps': [{'feature': 'network_load', 'value': np.float64(0.3), 'effect': 'multiply prob by 0.820 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.4), 'effect': 'multiply prob by 1.100 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.59), 'effect': 'multiply prob by 0.587 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.3), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.3,0.4,0.69,0.0,0.004663339953366602,"{'timestamp': 1760866780.1893737, 'inputs': {'network_load': np.float64(0.3), 'relay_reputation': np.float64(0.4), 'budget_utilization': np.float64(0.69), 'recent_win_rate': 1e-09}, 'base_prob': 0.01, 'final_prob': np.float64(0.004663339953366602), 'steps': [{'feature': 'network_load', 'value': np.float64(0.3), 'effect': 'multiply prob by 0.820 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.4), 'effect': 'multiply prob by 1.100 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.69), 'effect': 'multiply prob by 0.517 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': 1e-09, 'effect': 'multiply prob by 1.000 (higher recent wins -> lower prob)'}]}"
0.3,0.4,0.69,0.05,0.002331670000000001,"{'timestamp': 1760866780.1894016, 'inputs': {'network_load': np.float64(0.3), 'relay_reputation': np.float64(0.4), 'budget_utilization': np.float64(0.69), 'recent_win_rate': np.float64(0.05)}, 'base_prob': 0.01, 'final_prob': np.float64(0.002331670000000001), 'steps': [{'feature': 'network_load', 'value': np.float64(0.3), 'effect': 'multiply prob by 0.820 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.4), 'effect': 'multiply prob by 1.100 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.69), 'effect': 'multiply prob by 0.517 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.05), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.3,0.4,0.69,0.1,0.002331670000000001,"{'timestamp': 1760866780.1894288, 'inputs': {'network_load': np.float64(0.3), 'relay_reputation': np.float64(0.4), 'budget_utilization': np.float64(0.69), 'recent_win_rate': np.float64(0.1)}, 'base_prob': 0.01, 'final_prob': np.float64(0.002331670000000001), 'steps': [{'feature': 'network_load', 'value': np.float64(0.3), 'effect': 'multiply prob by 0.820 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.4), 'effect': 'multiply prob by 1.100 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.69), 'effect': 'multiply prob by 0.517 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.1), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.3,0.4,0.69,0.15,0.002331670000000001,"{'timestamp': 1760866780.189454, 'inputs': {'network_load': np.float64(0.3), 'relay_reputation': np.float64(0.4), 'budget_utilization': np.float64(0.69), 'recent_win_rate': np.float64(0.15)}, 'base_prob': 0.01, 'final_prob': np.float64(0.002331670000000001), 'steps': [{'feature': 'network_load', 'value': np.float64(0.3), 'effect': 'multiply prob by 0.820 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.4), 'effect': 'multiply prob by 1.100 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.69), 'effect': 'multiply prob by 0.517 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.15), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.3,0.4,0.69,0.2,0.002331670000000001,"{'timestamp': 1760866780.1894794, 'inputs': {'network_load': np.float64(0.3), 'relay_reputation': np.float64(0.4), 'budget_utilization': np.float64(0.69), 'recent_win_rate': np.float64(0.2)}, 'base_prob': 0.01, 'final_prob': np.float64(0.002331670000000001), 'steps': [{'feature': 'network_load', 'value': np.float64(0.3), 'effect': 'multiply prob by 0.820 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.4), 'effect': 'multiply prob by 1.100 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.69), 'effect': 'multiply prob by 0.517 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.2), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.3,0.4,0.69,0.25,0.002331670000000001,"{'timestamp': 1760866780.1895065, 'inputs': {'network_load': np.float64(0.3), 'relay_reputation': np.float64(0.4), 'budget_utilization': np.float64(0.69), 'recent_win_rate': np.float64(0.25)}, 'base_prob': 0.01, 'final_prob': np.float64(0.002331670000000001), 'steps': [{'feature': 'network_load', 'value': np.float64(0.3), 'effect': 'multiply prob by 0.820 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.4), 'effect': 'multiply prob by 1.100 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.69), 'effect': 'multiply prob by 0.517 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.25), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.3,0.4,0.69,0.3,0.002331670000000001,"{'timestamp': 1760866780.1895316, 'inputs': {'network_load': np.float64(0.3), 'relay_reputation': np.float64(0.4), 'budget_utilization': np.float64(0.69), 'recent_win_rate': np.float64(0.3)}, 'base_prob': 0.01, 'final_prob': np.float64(0.002331670000000001), 'steps': [{'feature': 'network_load', 'value': np.float64(0.3), 'effect': 'multiply prob by 0.820 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.4), 'effect': 'multiply prob by 1.100 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.69), 'effect': 'multiply prob by 0.517 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.3), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.3,0.4,0.8,0.0,0.003968799960312001,"{'timestamp': 1760866780.189561, 'inputs': {'network_load': np.float64(0.3), 'relay_reputation': np.float64(0.4), 'budget_utilization': np.float64(0.8), 'recent_win_rate': 1e-09}, 'base_prob': 0.01, 'final_prob': np.float64(0.003968799960312001), 'steps': [{'feature': 'network_load', 'value': np.float64(0.3), 'effect': 'multiply prob by 0.820 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.4), 'effect': 'multiply prob by 1.100 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.8), 'effect': 'multiply prob by 0.440 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': 1e-09, 'effect': 'multiply prob by 1.000 (higher recent wins -> lower prob)'}]}"
0.3,0.4,0.8,0.05,0.0019844000000000007,"{'timestamp': 1760866780.1895862, 'inputs': {'network_load': np.float64(0.3), 'relay_reputation': np.float64(0.4), 'budget_utilization': np.float64(0.8), 'recent_win_rate': np.float64(0.05)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0019844000000000007), 'steps': [{'feature': 'network_load', 'value': np.float64(0.3), 'effect': 'multiply prob by 0.820 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.4), 'effect': 'multiply prob by 1.100 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.8), 'effect': 'multiply prob by 0.440 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.05), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.3,0.4,0.8,0.1,0.0019844000000000007,"{'timestamp': 1760866780.1896133, 'inputs': {'network_load': np.float64(0.3), 'relay_reputation': np.float64(0.4), 'budget_utilization': np.float64(0.8), 'recent_win_rate': np.float64(0.1)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0019844000000000007), 'steps': [{'feature': 'network_load', 'value': np.float64(0.3), 'effect': 'multiply prob by 0.820 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.4), 'effect': 'multiply prob by 1.100 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.8), 'effect': 'multiply prob by 0.440 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.1), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.3,0.4,0.8,0.15,0.0019844000000000007,"{'timestamp': 1760866780.1896386, 'inputs': {'network_load': np.float64(0.3), 'relay_reputation': np.float64(0.4), 'budget_utilization': np.float64(0.8), 'recent_win_rate': np.float64(0.15)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0019844000000000007), 'steps': [{'feature': 'network_load', 'value': np.float64(0.3), 'effect': 'multiply prob by 0.820 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.4), 'effect': 'multiply prob by 1.100 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.8), 'effect': 'multiply prob by 0.440 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.15), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.3,0.4,0.8,0.2,0.0019844000000000007,"{'timestamp': 1760866780.189664, 'inputs': {'network_load': np.float64(0.3), 'relay_reputation': np.float64(0.4), 'budget_utilization': np.float64(0.8), 'recent_win_rate': np.float64(0.2)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0019844000000000007), 'steps': [{'feature': 'network_load', 'value': np.float64(0.3), 'effect': 'multiply prob by 0.820 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.4), 'effect': 'multiply prob by 1.100 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.8), 'effect': 'multiply prob by 0.440 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.2), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.3,0.4,0.8,0.25,0.0019844000000000007,"{'timestamp': 1760866780.189691, 'inputs': {'network_load': np.float64(0.3), 'relay_reputation': np.float64(0.4), 'budget_utilization': np.float64(0.8), 'recent_win_rate': np.float64(0.25)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0019844000000000007), 'steps': [{'feature': 'network_load', 'value': np.float64(0.3), 'effect': 'multiply prob by 0.820 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.4), 'effect': 'multiply prob by 1.100 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.8), 'effect': 'multiply prob by 0.440 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.25), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.3,0.4,0.8,0.3,0.0019844000000000007,"{'timestamp': 1760866780.1897185, 'inputs': {'network_load': np.float64(0.3), 'relay_reputation': np.float64(0.4), 'budget_utilization': np.float64(0.8), 'recent_win_rate': np.float64(0.3)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0019844000000000007), 'steps': [{'feature': 'network_load', 'value': np.float64(0.3), 'effect': 'multiply prob by 0.820 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.4), 'effect': 'multiply prob by 1.100 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.8), 'effect': 'multiply prob by 0.440 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.3), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.3,0.51,0.05,0.0,0.01000994489990055,"{'timestamp': 1760866780.1897478, 'inputs': {'network_load': np.float64(0.3), 'relay_reputation': np.float64(0.51), 'budget_utilization': np.float64(0.05), 'recent_win_rate': 1e-09}, 'base_prob': 0.01, 'final_prob': np.float64(0.01000994489990055), 'steps': [{'feature': 'network_load', 'value': np.float64(0.3), 'effect': 'multiply prob by 0.820 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.51), 'effect': 'multiply prob by 1.265 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.05), 'effect': 'multiply prob by 0.965 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': 1e-09, 'effect': 'multiply prob by 1.000 (higher recent wins -> lower prob)'}]}"
0.3,0.51,0.05,0.05,0.0050049725000000005,"{'timestamp': 1760866780.1897733, 'inputs': {'network_load': np.float64(0.3), 'relay_reputation': np.float64(0.51), 'budget_utilization': np.float64(0.05), 'recent_win_rate': np.float64(0.05)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0050049725000000005), 'steps': [{'feature': 'network_load', 'value': np.float64(0.3), 'effect': 'multiply prob by 0.820 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.51), 'effect': 'multiply prob by 1.265 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.05), 'effect': 'multiply prob by 0.965 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.05), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.3,0.51,0.05,0.1,0.0050049725000000005,"{'timestamp': 1760866780.1897984, 'inputs': {'network_load': np.float64(0.3), 'relay_reputation': np.float64(0.51), 'budget_utilization': np.float64(0.05), 'recent_win_rate': np.float64(0.1)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0050049725000000005), 'steps': [{'feature': 'network_load', 'value': np.float64(0.3), 'effect': 'multiply prob by 0.820 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.51), 'effect': 'multiply prob by 1.265 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.05), 'effect': 'multiply prob by 0.965 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.1), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.3,0.51,0.05,0.15,0.0050049725000000005,"{'timestamp': 1760866780.1898625, 'inputs': {'network_load': np.float64(0.3), 'relay_reputation': np.float64(0.51), 'budget_utilization': np.float64(0.05), 'recent_win_rate': np.float64(0.15)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0050049725000000005), 'steps': [{'feature': 'network_load', 'value': np.float64(0.3), 'effect': 'multiply prob by 0.820 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.51), 'effect': 'multiply prob by 1.265 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.05), 'effect': 'multiply prob by 0.965 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.15), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.3,0.51,0.05,0.2,0.0050049725000000005,"{'timestamp': 1760866780.1898913, 'inputs': {'network_load': np.float64(0.3), 'relay_reputation': np.float64(0.51), 'budget_utilization': np.float64(0.05), 'recent_win_rate': np.float64(0.2)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0050049725000000005), 'steps': [{'feature': 'network_load', 'value': np.float64(0.3), 'effect': 'multiply prob by 0.820 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.51), 'effect': 'multiply prob by 1.265 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.05), 'effect': 'multiply prob by 0.965 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.2), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.3,0.51,0.05,0.25,0.0050049725000000005,"{'timestamp': 1760866780.1899168, 'inputs': {'network_load': np.float64(0.3), 'relay_reputation': np.float64(0.51), 'budget_utilization': np.float64(0.05), 'recent_win_rate': np.float64(0.25)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0050049725000000005), 'steps': [{'feature': 'network_load', 'value': np.float64(0.3), 'effect': 'multiply prob by 0.820 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.51), 'effect': 'multiply prob by 1.265 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.05), 'effect': 'multiply prob by 0.965 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.25), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.3,0.51,0.05,0.3,0.0050049725000000005,"{'timestamp': 1760866780.1899443, 'inputs': {'network_load': np.float64(0.3), 'relay_reputation': np.float64(0.51), 'budget_utilization': np.float64(0.05), 'recent_win_rate': np.float64(0.3)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0050049725000000005), 'steps': [{'feature': 'network_load', 'value': np.float64(0.3), 'effect': 'multiply prob by 0.820 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.51), 'effect': 'multiply prob by 1.265 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.05), 'effect': 'multiply prob by 0.965 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.3), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.3,0.51,0.16,0.0,0.009211223907887763,"{'timestamp': 1760866780.189974, 'inputs': {'network_load': np.float64(0.3), 'relay_reputation': np.float64(0.51), 'budget_utilization': np.float64(0.16), 'recent_win_rate': 1e-09}, 'base_prob': 0.01, 'final_prob': np.float64(0.009211223907887763), 'steps': [{'feature': 'network_load', 'value': np.float64(0.3), 'effect': 'multiply prob by 0.820 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.51), 'effect': 'multiply prob by 1.265 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.16), 'effect': 'multiply prob by 0.888 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': 1e-09, 'effect': 'multiply prob by 1.000 (higher recent wins -> lower prob)'}]}"
0.3,0.51,0.16,0.05,0.004605612000000001,"{'timestamp': 1760866780.1899993, 'inputs': {'network_load': np.float64(0.3), 'relay_reputation': np.float64(0.51), 'budget_utilization': np.float64(0.16), 'recent_win_rate': np.float64(0.05)}, 'base_prob': 0.01, 'final_prob': np.float64(0.004605612000000001), 'steps': [{'feature': 'network_load', 'value': np.float64(0.3), 'effect': 'multiply prob by 0.820 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.51), 'effect': 'multiply prob by 1.265 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.16), 'effect': 'multiply prob by 0.888 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.05), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.3,0.51,0.16,0.1,0.004605612000000001,"{'timestamp': 1760866780.1900306, 'inputs': {'network_load': np.float64(0.3), 'relay_reputation': np.float64(0.51), 'budget_utilization': np.float64(0.16), 'recent_win_rate': np.float64(0.1)}, 'base_prob': 0.01, 'final_prob': np.float64(0.004605612000000001), 'steps': [{'feature': 'network_load', 'value': np.float64(0.3), 'effect': 'multiply prob by 0.820 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.51), 'effect': 'multiply prob by 1.265 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.16), 'effect': 'multiply prob by 0.888 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.1), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.3,0.51,0.16,0.15,0.004605612000000001,"{'timestamp': 1760866780.1900556, 'inputs': {'network_load': np.float64(0.3), 'relay_reputation': np.float64(0.51), 'budget_utilization': np.float64(0.16), 'recent_win_rate': np.float64(0.15)}, 'base_prob': 0.01, 'final_prob': np.float64(0.004605612000000001), 'steps': [{'feature': 'network_load', 'value': np.float64(0.3), 'effect': 'multiply prob by 0.820 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.51), 'effect': 'multiply prob by 1.265 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.16), 'effect': 'multiply prob by 0.888 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.15), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.3,0.51,0.16,0.2,0.004605612000000001,"{'timestamp': 1760866780.1900811, 'inputs': {'network_load': np.float64(0.3), 'relay_reputation': np.float64(0.51), 'budget_utilization': np.float64(0.16), 'recent_win_rate': np.float64(0.2)}, 'base_prob': 0.01, 'final_prob': np.float64(0.004605612000000001), 'steps': [{'feature': 'network_load', 'value': np.float64(0.3), 'effect': 'multiply prob by 0.820 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.51), 'effect': 'multiply prob by 1.265 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.16), 'effect': 'multiply prob by 0.888 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.2), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.3,0.51,0.16,0.25,0.004605612000000001,"{'timestamp': 1760866780.1901062, 'inputs': {'network_load': np.float64(0.3), 'relay_reputation': np.float64(0.51), 'budget_utilization': np.float64(0.16), 'recent_win_rate': np.float64(0.25)}, 'base_prob': 0.01, 'final_prob': np.float64(0.004605612000000001), 'steps': [{'feature': 'network_load', 'value': np.float64(0.3), 'effect': 'multiply prob by 0.820 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.51), 'effect': 'multiply prob by 1.265 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.16), 'effect': 'multiply prob by 0.888 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.25), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.3,0.51,0.16,0.3,0.004605612000000001,"{'timestamp': 1760866780.190198, 'inputs': {'network_load': np.float64(0.3), 'relay_reputation': np.float64(0.51), 'budget_utilization': np.float64(0.16), 'recent_win_rate': np.float64(0.3)}, 'base_prob': 0.01, 'final_prob': np.float64(0.004605612000000001), 'steps': [{'feature': 'network_load', 'value': np.float64(0.3), 'effect': 'multiply prob by 0.820 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.51), 'effect': 'multiply prob by 1.265 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.16), 'effect': 'multiply prob by 0.888 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.3), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.3,0.51,0.26,0.0,0.008485113915148862,"{'timestamp': 1760866780.1902423, 'inputs': {'network_load': np.float64(0.3), 'relay_reputation': np.float64(0.51), 'budget_utilization': np.float64(0.26), 'recent_win_rate': 1e-09}, 'base_prob': 0.01, 'final_prob': np.float64(0.008485113915148862), 'steps': [{'feature': 'network_load', 'value': np.float64(0.3), 'effect': 'multiply prob by 0.820 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.51), 'effect': 'multiply prob by 1.265 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.26), 'effect': 'multiply prob by 0.818 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': 1e-09, 'effect': 'multiply prob by 1.000 (higher recent wins -> lower prob)'}]}"
0.3,0.51,0.26,0.05,0.004242557000000001,"{'timestamp': 1760866780.1902707, 'inputs': {'network_load': np.float64(0.3), 'relay_reputation': np.float64(0.51), 'budget_utilization': np.float64(0.26), 'recent_win_rate': np.float64(0.05)}, 'base_prob': 0.01, 'final_prob': np.float64(0.004242557000000001), 'steps': [{'feature': 'network_load', 'value': np.float64(0.3), 'effect': 'multiply prob by 0.820 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.51), 'effect': 'multiply prob by 1.265 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.26), 'effect': 'multiply prob by 0.818 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.05), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.3,0.51,0.26,0.1,0.004242557000000001,"{'timestamp': 1760866780.190298, 'inputs': {'network_load': np.float64(0.3), 'relay_reputation': np.float64(0.51), 'budget_utilization': np.float64(0.26), 'recent_win_rate': np.float64(0.1)}, 'base_prob': 0.01, 'final_prob': np.float64(0.004242557000000001), 'steps': [{'feature': 'network_load', 'value': np.float64(0.3), 'effect': 'multiply prob by 0.820 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.51), 'effect': 'multiply prob by 1.265 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.26), 'effect': 'multiply prob by 0.818 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.1), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.3,0.51,0.26,0.15,0.004242557000000001,"{'timestamp': 1760866780.1903234, 'inputs': {'network_load': np.float64(0.3), 'relay_reputation': np.float64(0.51), 'budget_utilization': np.float64(0.26), 'recent_win_rate': np.float64(0.15)}, 'base_prob': 0.01, 'final_prob': np.float64(0.004242557000000001), 'steps': [{'feature': 'network_load', 'value': np.float64(0.3), 'effect': 'multiply prob by 0.820 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.51), 'effect': 'multiply prob by 1.265 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.26), 'effect': 'multiply prob by 0.818 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.15), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.3,0.51,0.26,0.2,0.004242557000000001,"{'timestamp': 1760866780.1903486, 'inputs': {'network_load': np.float64(0.3), 'relay_reputation': np.float64(0.51), 'budget_utilization': np.float64(0.26), 'recent_win_rate': np.float64(0.2)}, 'base_prob': 0.01, 'final_prob': np.float64(0.004242557000000001), 'steps': [{'feature': 'network_load', 'value': np.float64(0.3), 'effect': 'multiply prob by 0.820 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.51), 'effect': 'multiply prob by 1.265 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.26), 'effect': 'multiply prob by 0.818 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.2), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.3,0.51,0.26,0.25,0.004242557000000001,"{'timestamp': 1760866780.1903756, 'inputs': {'network_load': np.float64(0.3), 'relay_reputation': np.float64(0.51), 'budget_utilization': np.float64(0.26), 'recent_win_rate': np.float64(0.25)}, 'base_prob': 0.01, 'final_prob': np.float64(0.004242557000000001), 'steps': [{'feature': 'network_load', 'value': np.float64(0.3), 'effect': 'multiply prob by 0.820 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.51), 'effect': 'multiply prob by 1.265 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.26), 'effect': 'multiply prob by 0.818 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.25), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.3,0.51,0.26,0.3,0.004242557000000001,"{'timestamp': 1760866780.1904008, 'inputs': {'network_load': np.float64(0.3), 'relay_reputation': np.float64(0.51), 'budget_utilization': np.float64(0.26), 'recent_win_rate': np.float64(0.3)}, 'base_prob': 0.01, 'final_prob': np.float64(0.004242557000000001), 'steps': [{'feature': 'network_load', 'value': np.float64(0.3), 'effect': 'multiply prob by 0.820 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.51), 'effect': 'multiply prob by 1.265 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.26), 'effect': 'multiply prob by 0.818 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.3), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.3,0.51,0.37,0.0,0.007686392923136071,"{'timestamp': 1760866780.1904283, 'inputs': {'network_load': np.float64(0.3), 'relay_reputation': np.float64(0.51), 'budget_utilization': np.float64(0.37), 'recent_win_rate': 1e-09}, 'base_prob': 0.01, 'final_prob': np.float64(0.007686392923136071), 'steps': [{'feature': 'network_load', 'value': np.float64(0.3), 'effect': 'multiply prob by 0.820 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.51), 'effect': 'multiply prob by 1.265 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.37), 'effect': 'multiply prob by 0.741 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': 1e-09, 'effect': 'multiply prob by 1.000 (higher recent wins -> lower prob)'}]}"
0.3,0.51,0.37,0.05,0.0038431965000000007,"{'timestamp': 1760866780.1904535, 'inputs': {'network_load': np.float64(0.3), 'relay_reputation': np.float64(0.51), 'budget_utilization': np.float64(0.37), 'recent_win_rate': np.float64(0.05)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0038431965000000007), 'steps': [{'feature': 'network_load', 'value': np.float64(0.3), 'effect': 'multiply prob by 0.820 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.51), 'effect': 'multiply prob by 1.265 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.37), 'effect': 'multiply prob by 0.741 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.05), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.3,0.51,0.37,0.1,0.0038431965000000007,"{'timestamp': 1760866780.1904805, 'inputs': {'network_load': np.float64(0.3), 'relay_reputation': np.float64(0.51), 'budget_utilization': np.float64(0.37), 'recent_win_rate': np.float64(0.1)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0038431965000000007), 'steps': [{'feature': 'network_load', 'value': np.float64(0.3), 'effect': 'multiply prob by 0.820 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.51), 'effect': 'multiply prob by 1.265 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.37), 'effect': 'multiply prob by 0.741 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.1), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.3,0.51,0.37,0.15,0.0038431965000000007,"{'timestamp': 1760866780.1905105, 'inputs': {'network_load': np.float64(0.3), 'relay_reputation': np.float64(0.51), 'budget_utilization': np.float64(0.37), 'recent_win_rate': np.float64(0.15)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0038431965000000007), 'steps': [{'feature': 'network_load', 'value': np.float64(0.3), 'effect': 'multiply prob by 0.820 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.51), 'effect': 'multiply prob by 1.265 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.37), 'effect': 'multiply prob by 0.741 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.15), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.3,0.51,0.37,0.2,0.0038431965000000007,"{'timestamp': 1760866780.1905363, 'inputs': {'network_load': np.float64(0.3), 'relay_reputation': np.float64(0.51), 'budget_utilization': np.float64(0.37), 'recent_win_rate': np.float64(0.2)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0038431965000000007), 'steps': [{'feature': 'network_load', 'value': np.float64(0.3), 'effect': 'multiply prob by 0.820 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.51), 'effect': 'multiply prob by 1.265 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.37), 'effect': 'multiply prob by 0.741 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.2), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.3,0.51,0.37,0.25,0.0038431965000000007,"{'timestamp': 1760866780.190563, 'inputs': {'network_load': np.float64(0.3), 'relay_reputation': np.float64(0.51), 'budget_utilization': np.float64(0.37), 'recent_win_rate': np.float64(0.25)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0038431965000000007), 'steps': [{'feature': 'network_load', 'value': np.float64(0.3), 'effect': 'multiply prob by 0.820 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.51), 'effect': 'multiply prob by 1.265 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.37), 'effect': 'multiply prob by 0.741 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.25), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.3,0.51,0.37,0.3,0.0038431965000000007,"{'timestamp': 1760866780.19059, 'inputs': {'network_load': np.float64(0.3), 'relay_reputation': np.float64(0.51), 'budget_utilization': np.float64(0.37), 'recent_win_rate': np.float64(0.3)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0038431965000000007), 'steps': [{'feature': 'network_load', 'value': np.float64(0.3), 'effect': 'multiply prob by 0.820 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.51), 'effect': 'multiply prob by 1.265 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.37), 'effect': 'multiply prob by 0.741 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.3), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.3,0.51,0.48,0.0,0.0068876719311232815,"{'timestamp': 1760866780.19098, 'inputs': {'network_load': np.float64(0.3), 'relay_reputation': np.float64(0.51), 'budget_utilization': np.float64(0.48), 'recent_win_rate': 1e-09}, 'base_prob': 0.01, 'final_prob': np.float64(0.0068876719311232815), 'steps': [{'feature': 'network_load', 'value': np.float64(0.3), 'effect': 'multiply prob by 0.820 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.51), 'effect': 'multiply prob by 1.265 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.48), 'effect': 'multiply prob by 0.664 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': 1e-09, 'effect': 'multiply prob by 1.000 (higher recent wins -> lower prob)'}]}"
0.3,0.51,0.48,0.05,0.003443836000000001,"{'timestamp': 1760866780.191015, 'inputs': {'network_load': np.float64(0.3), 'relay_reputation': np.float64(0.51), 'budget_utilization': np.float64(0.48), 'recent_win_rate': np.float64(0.05)}, 'base_prob': 0.01, 'final_prob': np.float64(0.003443836000000001), 'steps': [{'feature': 'network_load', 'value': np.float64(0.3), 'effect': 'multiply prob by 0.820 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.51), 'effect': 'multiply prob by 1.265 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.48), 'effect': 'multiply prob by 0.664 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.05), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.3,0.51,0.48,0.1,0.003443836000000001,"{'timestamp': 1760866780.191061, 'inputs': {'network_load': np.float64(0.3), 'relay_reputation': np.float64(0.51), 'budget_utilization': np.float64(0.48), 'recent_win_rate': np.float64(0.1)}, 'base_prob': 0.01, 'final_prob': np.float64(0.003443836000000001), 'steps': [{'feature': 'network_load', 'value': np.float64(0.3), 'effect': 'multiply prob by 0.820 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.51), 'effect': 'multiply prob by 1.265 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.48), 'effect': 'multiply prob by 0.664 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.1), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.3,0.51,0.48,0.15,0.003443836000000001,"{'timestamp': 1760866780.1911502, 'inputs': {'network_load': np.float64(0.3), 'relay_reputation': np.float64(0.51), 'budget_utilization': np.float64(0.48), 'recent_win_rate': np.float64(0.15)}, 'base_prob': 0.01, 'final_prob': np.float64(0.003443836000000001), 'steps': [{'feature': 'network_load', 'value': np.float64(0.3), 'effect': 'multiply prob by 0.820 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.51), 'effect': 'multiply prob by 1.265 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.48), 'effect': 'multiply prob by 0.664 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.15), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.3,0.51,0.48,0.2,0.003443836000000001,"{'timestamp': 1760866780.191192, 'inputs': {'network_load': np.float64(0.3), 'relay_reputation': np.float64(0.51), 'budget_utilization': np.float64(0.48), 'recent_win_rate': np.float64(0.2)}, 'base_prob': 0.01, 'final_prob': np.float64(0.003443836000000001), 'steps': [{'feature': 'network_load', 'value': np.float64(0.3), 'effect': 'multiply prob by 0.820 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.51), 'effect': 'multiply prob by 1.265 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.48), 'effect': 'multiply prob by 0.664 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.2), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.3,0.51,0.48,0.25,0.003443836000000001,"{'timestamp': 1760866780.1912217, 'inputs': {'network_load': np.float64(0.3), 'relay_reputation': np.float64(0.51), 'budget_utilization': np.float64(0.48), 'recent_win_rate': np.float64(0.25)}, 'base_prob': 0.01, 'final_prob': np.float64(0.003443836000000001), 'steps': [{'feature': 'network_load', 'value': np.float64(0.3), 'effect': 'multiply prob by 0.820 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.51), 'effect': 'multiply prob by 1.265 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.48), 'effect': 'multiply prob by 0.664 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.25), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.3,0.51,0.48,0.3,0.003443836000000001,"{'timestamp': 1760866780.1912467, 'inputs': {'network_load': np.float64(0.3), 'relay_reputation': np.float64(0.51), 'budget_utilization': np.float64(0.48), 'recent_win_rate': np.float64(0.3)}, 'base_prob': 0.01, 'final_prob': np.float64(0.003443836000000001), 'steps': [{'feature': 'network_load', 'value': np.float64(0.3), 'effect': 'multiply prob by 0.820 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.51), 'effect': 'multiply prob by 1.265 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.48), 'effect': 'multiply prob by 0.664 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.3), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.3,0.51,0.59,0.0,0.00608895093911049,"{'timestamp': 1760866780.191283, 'inputs': {'network_load': np.float64(0.3), 'relay_reputation': np.float64(0.51), 'budget_utilization': np.float64(0.59), 'recent_win_rate': 1e-09}, 'base_prob': 0.01, 'final_prob': np.float64(0.00608895093911049), 'steps': [{'feature': 'network_load', 'value': np.float64(0.3), 'effect': 'multiply prob by 0.820 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.51), 'effect': 'multiply prob by 1.265 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.59), 'effect': 'multiply prob by 0.587 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': 1e-09, 'effect': 'multiply prob by 1.000 (higher recent wins -> lower prob)'}]}"
0.3,0.51,0.59,0.05,0.0030444755,"{'timestamp': 1760866780.1913085, 'inputs': {'network_load': np.float64(0.3), 'relay_reputation': np.float64(0.51), 'budget_utilization': np.float64(0.59), 'recent_win_rate': np.float64(0.05)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0030444755), 'steps': [{'feature': 'network_load', 'value': np.float64(0.3), 'effect': 'multiply prob by 0.820 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.51), 'effect': 'multiply prob by 1.265 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.59), 'effect': 'multiply prob by 0.587 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.05), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.3,0.51,0.59,0.1,0.0030444755,"{'timestamp': 1760866780.1913338, 'inputs': {'network_load': np.float64(0.3), 'relay_reputation': np.float64(0.51), 'budget_utilization': np.float64(0.59), 'recent_win_rate': np.float64(0.1)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0030444755), 'steps': [{'feature': 'network_load', 'value': np.float64(0.3), 'effect': 'multiply prob by 0.820 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.51), 'effect': 'multiply prob by 1.265 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.59), 'effect': 'multiply prob by 0.587 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.1), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.3,0.51,0.59,0.15,0.0030444755,"{'timestamp': 1760866780.1913648, 'inputs': {'network_load': np.float64(0.3), 'relay_reputation': np.float64(0.51), 'budget_utilization': np.float64(0.59), 'recent_win_rate': np.float64(0.15)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0030444755), 'steps': [{'feature': 'network_load', 'value': np.float64(0.3), 'effect': 'multiply prob by 0.820 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.51), 'effect': 'multiply prob by 1.265 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.59), 'effect': 'multiply prob by 0.587 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.15), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.3,0.51,0.59,0.2,0.0030444755,"{'timestamp': 1760866780.1913905, 'inputs': {'network_load': np.float64(0.3), 'relay_reputation': np.float64(0.51), 'budget_utilization': np.float64(0.59), 'recent_win_rate': np.float64(0.2)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0030444755), 'steps': [{'feature': 'network_load', 'value': np.float64(0.3), 'effect': 'multiply prob by 0.820 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.51), 'effect': 'multiply prob by 1.265 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.59), 'effect': 'multiply prob by 0.587 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.2), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.3,0.51,0.59,0.25,0.0030444755,"{'timestamp': 1760866780.191417, 'inputs': {'network_load': np.float64(0.3), 'relay_reputation': np.float64(0.51), 'budget_utilization': np.float64(0.59), 'recent_win_rate': np.float64(0.25)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0030444755), 'steps': [{'feature': 'network_load', 'value': np.float64(0.3), 'effect': 'multiply prob by 0.820 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.51), 'effect': 'multiply prob by 1.265 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.59), 'effect': 'multiply prob by 0.587 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.25), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.3,0.51,0.59,0.3,0.0030444755,"{'timestamp': 1760866780.1914425, 'inputs': {'network_load': np.float64(0.3), 'relay_reputation': np.float64(0.51), 'budget_utilization': np.float64(0.59), 'recent_win_rate': np.float64(0.3)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0030444755), 'steps': [{'feature': 'network_load', 'value': np.float64(0.3), 'effect': 'multiply prob by 0.820 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.51), 'effect': 'multiply prob by 1.265 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.59), 'effect': 'multiply prob by 0.587 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.3), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.3,0.51,0.69,0.0,0.005362840946371593,"{'timestamp': 1760866780.1914697, 'inputs': {'network_load': np.float64(0.3), 'relay_reputation': np.float64(0.51), 'budget_utilization': np.float64(0.69), 'recent_win_rate': 1e-09}, 'base_prob': 0.01, 'final_prob': np.float64(0.005362840946371593), 'steps': [{'feature': 'network_load', 'value': np.float64(0.3), 'effect': 'multiply prob by 0.820 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.51), 'effect': 'multiply prob by 1.265 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.69), 'effect': 'multiply prob by 0.517 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': 1e-09, 'effect': 'multiply prob by 1.000 (higher recent wins -> lower prob)'}]}"
0.3,0.51,0.69,0.05,0.0026814205000000014,"{'timestamp': 1760866780.191495, 'inputs': {'network_load': np.float64(0.3), 'relay_reputation': np.float64(0.51), 'budget_utilization': np.float64(0.69), 'recent_win_rate': np.float64(0.05)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0026814205000000014), 'steps': [{'feature': 'network_load', 'value': np.float64(0.3), 'effect': 'multiply prob by 0.820 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.51), 'effect': 'multiply prob by 1.265 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.69), 'effect': 'multiply prob by 0.517 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.05), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.3,0.51,0.69,0.1,0.0026814205000000014,"{'timestamp': 1760866780.1915476, 'inputs': {'network_load': np.float64(0.3), 'relay_reputation': np.float64(0.51), 'budget_utilization': np.float64(0.69), 'recent_win_rate': np.float64(0.1)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0026814205000000014), 'steps': [{'feature': 'network_load', 'value': np.float64(0.3), 'effect': 'multiply prob by 0.820 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.51), 'effect': 'multiply prob by 1.265 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.69), 'effect': 'multiply prob by 0.517 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.1), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.3,0.51,0.69,0.15,0.0026814205000000014,"{'timestamp': 1760866780.19166, 'inputs': {'network_load': np.float64(0.3), 'relay_reputation': np.float64(0.51), 'budget_utilization': np.float64(0.69), 'recent_win_rate': np.float64(0.15)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0026814205000000014), 'steps': [{'feature': 'network_load', 'value': np.float64(0.3), 'effect': 'multiply prob by 0.820 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.51), 'effect': 'multiply prob by 1.265 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.69), 'effect': 'multiply prob by 0.517 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.15), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.3,0.51,0.69,0.2,0.0026814205000000014,"{'timestamp': 1760866780.1916924, 'inputs': {'network_load': np.float64(0.3), 'relay_reputation': np.float64(0.51), 'budget_utilization': np.float64(0.69), 'recent_win_rate': np.float64(0.2)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0026814205000000014), 'steps': [{'feature': 'network_load', 'value': np.float64(0.3), 'effect': 'multiply prob by 0.820 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.51), 'effect': 'multiply prob by 1.265 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.69), 'effect': 'multiply prob by 0.517 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.2), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.3,0.51,0.69,0.25,0.0026814205000000014,"{'timestamp': 1760866780.1917183, 'inputs': {'network_load': np.float64(0.3), 'relay_reputation': np.float64(0.51), 'budget_utilization': np.float64(0.69), 'recent_win_rate': np.float64(0.25)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0026814205000000014), 'steps': [{'feature': 'network_load', 'value': np.float64(0.3), 'effect': 'multiply prob by 0.820 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.51), 'effect': 'multiply prob by 1.265 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.69), 'effect': 'multiply prob by 0.517 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.25), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.3,0.51,0.69,0.3,0.0026814205000000014,"{'timestamp': 1760866780.1917455, 'inputs': {'network_load': np.float64(0.3), 'relay_reputation': np.float64(0.51), 'budget_utilization': np.float64(0.69), 'recent_win_rate': np.float64(0.3)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0026814205000000014), 'steps': [{'feature': 'network_load', 'value': np.float64(0.3), 'effect': 'multiply prob by 0.820 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.51), 'effect': 'multiply prob by 1.265 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.69), 'effect': 'multiply prob by 0.517 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.3), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.3,0.51,0.8,0.0,0.004564119954358801,"{'timestamp': 1760866780.1917768, 'inputs': {'network_load': np.float64(0.3), 'relay_reputation': np.float64(0.51), 'budget_utilization': np.float64(0.8), 'recent_win_rate': 1e-09}, 'base_prob': 0.01, 'final_prob': np.float64(0.004564119954358801), 'steps': [{'feature': 'network_load', 'value': np.float64(0.3), 'effect': 'multiply prob by 0.820 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.51), 'effect': 'multiply prob by 1.265 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.8), 'effect': 'multiply prob by 0.440 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': 1e-09, 'effect': 'multiply prob by 1.000 (higher recent wins -> lower prob)'}]}"
0.3,0.51,0.8,0.05,0.0022820600000000007,"{'timestamp': 1760866780.191803, 'inputs': {'network_load': np.float64(0.3), 'relay_reputation': np.float64(0.51), 'budget_utilization': np.float64(0.8), 'recent_win_rate': np.float64(0.05)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0022820600000000007), 'steps': [{'feature': 'network_load', 'value': np.float64(0.3), 'effect': 'multiply prob by 0.820 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.51), 'effect': 'multiply prob by 1.265 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.8), 'effect': 'multiply prob by 0.440 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.05), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.3,0.51,0.8,0.1,0.0022820600000000007,"{'timestamp': 1760866780.1918302, 'inputs': {'network_load': np.float64(0.3), 'relay_reputation': np.float64(0.51), 'budget_utilization': np.float64(0.8), 'recent_win_rate': np.float64(0.1)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0022820600000000007), 'steps': [{'feature': 'network_load', 'value': np.float64(0.3), 'effect': 'multiply prob by 0.820 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.51), 'effect': 'multiply prob by 1.265 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.8), 'effect': 'multiply prob by 0.440 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.1), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.3,0.51,0.8,0.15,0.0022820600000000007,"{'timestamp': 1760866780.1918573, 'inputs': {'network_load': np.float64(0.3), 'relay_reputation': np.float64(0.51), 'budget_utilization': np.float64(0.8), 'recent_win_rate': np.float64(0.15)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0022820600000000007), 'steps': [{'feature': 'network_load', 'value': np.float64(0.3), 'effect': 'multiply prob by 0.820 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.51), 'effect': 'multiply prob by 1.265 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.8), 'effect': 'multiply prob by 0.440 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.15), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.3,0.51,0.8,0.2,0.0022820600000000007,"{'timestamp': 1760866780.1918828, 'inputs': {'network_load': np.float64(0.3), 'relay_reputation': np.float64(0.51), 'budget_utilization': np.float64(0.8), 'recent_win_rate': np.float64(0.2)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0022820600000000007), 'steps': [{'feature': 'network_load', 'value': np.float64(0.3), 'effect': 'multiply prob by 0.820 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.51), 'effect': 'multiply prob by 1.265 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.8), 'effect': 'multiply prob by 0.440 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.2), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.3,0.51,0.8,0.25,0.0022820600000000007,"{'timestamp': 1760866780.1919098, 'inputs': {'network_load': np.float64(0.3), 'relay_reputation': np.float64(0.51), 'budget_utilization': np.float64(0.8), 'recent_win_rate': np.float64(0.25)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0022820600000000007), 'steps': [{'feature': 'network_load', 'value': np.float64(0.3), 'effect': 'multiply prob by 0.820 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.51), 'effect': 'multiply prob by 1.265 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.8), 'effect': 'multiply prob by 0.440 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.25), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.3,0.51,0.8,0.3,0.0022820600000000007,"{'timestamp': 1760866780.1919353, 'inputs': {'network_load': np.float64(0.3), 'relay_reputation': np.float64(0.51), 'budget_utilization': np.float64(0.8), 'recent_win_rate': np.float64(0.3)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0022820600000000007), 'steps': [{'feature': 'network_load', 'value': np.float64(0.3), 'effect': 'multiply prob by 0.820 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.51), 'effect': 'multiply prob by 1.265 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.8), 'effect': 'multiply prob by 0.440 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.3), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.3,0.62,0.05,0.0,0.011315589886844099,"{'timestamp': 1760866780.1919656, 'inputs': {'network_load': np.float64(0.3), 'relay_reputation': np.float64(0.62), 'budget_utilization': np.float64(0.05), 'recent_win_rate': 1e-09}, 'base_prob': 0.01, 'final_prob': np.float64(0.011315589886844099), 'steps': [{'feature': 'network_load', 'value': np.float64(0.3), 'effect': 'multiply prob by 0.820 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.62), 'effect': 'multiply prob by 1.430 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.05), 'effect': 'multiply prob by 0.965 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': 1e-09, 'effect': 'multiply prob by 1.000 (higher recent wins -> lower prob)'}]}"
0.3,0.62,0.05,0.05,0.005657795,"{'timestamp': 1760866780.1919913, 'inputs': {'network_load': np.float64(0.3), 'relay_reputation': np.float64(0.62), 'budget_utilization': np.float64(0.05), 'recent_win_rate': np.float64(0.05)}, 'base_prob': 0.01, 'final_prob': np.float64(0.005657795), 'steps': [{'feature': 'network_load', 'value': np.float64(0.3), 'effect': 'multiply prob by 0.820 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.62), 'effect': 'multiply prob by 1.430 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.05), 'effect': 'multiply prob by 0.965 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.05), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.3,0.62,0.05,0.1,0.005657795,"{'timestamp': 1760866780.1920166, 'inputs': {'network_load': np.float64(0.3), 'relay_reputation': np.float64(0.62), 'budget_utilization': np.float64(0.05), 'recent_win_rate': np.float64(0.1)}, 'base_prob': 0.01, 'final_prob': np.float64(0.005657795), 'steps': [{'feature': 'network_load', 'value': np.float64(0.3), 'effect': 'multiply prob by 0.820 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.62), 'effect': 'multiply prob by 1.430 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.05), 'effect': 'multiply prob by 0.965 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.1), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.3,0.62,0.05,0.15,0.005657795,"{'timestamp': 1760866780.1920424, 'inputs': {'network_load': np.float64(0.3), 'relay_reputation': np.float64(0.62), 'budget_utilization': np.float64(0.05), 'recent_win_rate': np.float64(0.15)}, 'base_prob': 0.01, 'final_prob': np.float64(0.005657795), 'steps': [{'feature': 'network_load', 'value': np.float64(0.3), 'effect': 'multiply prob by 0.820 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.62), 'effect': 'multiply prob by 1.430 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.05), 'effect': 'multiply prob by 0.965 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.15), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.3,0.62,0.05,0.2,0.005657795,"{'timestamp': 1760866780.1920676, 'inputs': {'network_load': np.float64(0.3), 'relay_reputation': np.float64(0.62), 'budget_utilization': np.float64(0.05), 'recent_win_rate': np.float64(0.2)}, 'base_prob': 0.01, 'final_prob': np.float64(0.005657795), 'steps': [{'feature': 'network_load', 'value': np.float64(0.3), 'effect': 'multiply prob by 0.820 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.62), 'effect': 'multiply prob by 1.430 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.05), 'effect': 'multiply prob by 0.965 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.2), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.3,0.62,0.05,0.25,0.005657795,"{'timestamp': 1760866780.192095, 'inputs': {'network_load': np.float64(0.3), 'relay_reputation': np.float64(0.62), 'budget_utilization': np.float64(0.05), 'recent_win_rate': np.float64(0.25)}, 'base_prob': 0.01, 'final_prob': np.float64(0.005657795), 'steps': [{'feature': 'network_load', 'value': np.float64(0.3), 'effect': 'multiply prob by 0.820 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.62), 'effect': 'multiply prob by 1.430 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.05), 'effect': 'multiply prob by 0.965 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.25), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.3,0.62,0.05,0.3,0.005657795,"{'timestamp': 1760866780.1921225, 'inputs': {'network_load': np.float64(0.3), 'relay_reputation': np.float64(0.62), 'budget_utilization': np.float64(0.05), 'recent_win_rate': np.float64(0.3)}, 'base_prob': 0.01, 'final_prob': np.float64(0.005657795), 'steps': [{'feature': 'network_load', 'value': np.float64(0.3), 'effect': 'multiply prob by 0.820 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.62), 'effect': 'multiply prob by 1.430 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.05), 'effect': 'multiply prob by 0.965 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.3), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.3,0.62,0.16,0.0,0.010412687895873119,"{'timestamp': 1760866780.1921499, 'inputs': {'network_load': np.float64(0.3), 'relay_reputation': np.float64(0.62), 'budget_utilization': np.float64(0.16), 'recent_win_rate': 1e-09}, 'base_prob': 0.01, 'final_prob': np.float64(0.010412687895873119), 'steps': [{'feature': 'network_load', 'value': np.float64(0.3), 'effect': 'multiply prob by 0.820 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.62), 'effect': 'multiply prob by 1.430 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.16), 'effect': 'multiply prob by 0.888 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': 1e-09, 'effect': 'multiply prob by 1.000 (higher recent wins -> lower prob)'}]}"
0.3,0.62,0.16,0.05,0.005206344,"{'timestamp': 1760866780.192177, 'inputs': {'network_load': np.float64(0.3), 'relay_reputation': np.float64(0.62), 'budget_utilization': np.float64(0.16), 'recent_win_rate': np.float64(0.05)}, 'base_prob': 0.01, 'final_prob': np.float64(0.005206344), 'steps': [{'feature': 'network_load', 'value': np.float64(0.3), 'effect': 'multiply prob by 0.820 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.62), 'effect': 'multiply prob by 1.430 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.16), 'effect': 'multiply prob by 0.888 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.05), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.3,0.62,0.16,0.1,0.005206344,"{'timestamp': 1760866780.192204, 'inputs': {'network_load': np.float64(0.3), 'relay_reputation': np.float64(0.62), 'budget_utilization': np.float64(0.16), 'recent_win_rate': np.float64(0.1)}, 'base_prob': 0.01, 'final_prob': np.float64(0.005206344), 'steps': [{'feature': 'network_load', 'value': np.float64(0.3), 'effect': 'multiply prob by 0.820 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.62), 'effect': 'multiply prob by 1.430 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.16), 'effect': 'multiply prob by 0.888 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.1), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.3,0.62,0.16,0.15,0.005206344,"{'timestamp': 1760866780.1922297, 'inputs': {'network_load': np.float64(0.3), 'relay_reputation': np.float64(0.62), 'budget_utilization': np.float64(0.16), 'recent_win_rate': np.float64(0.15)}, 'base_prob': 0.01, 'final_prob': np.float64(0.005206344), 'steps': [{'feature': 'network_load', 'value': np.float64(0.3), 'effect': 'multiply prob by 0.820 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.62), 'effect': 'multiply prob by 1.430 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.16), 'effect': 'multiply prob by 0.888 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.15), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.3,0.62,0.16,0.2,0.005206344,"{'timestamp': 1760866780.192261, 'inputs': {'network_load': np.float64(0.3), 'relay_reputation': np.float64(0.62), 'budget_utilization': np.float64(0.16), 'recent_win_rate': np.float64(0.2)}, 'base_prob': 0.01, 'final_prob': np.float64(0.005206344), 'steps': [{'feature': 'network_load', 'value': np.float64(0.3), 'effect': 'multiply prob by 0.820 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.62), 'effect': 'multiply prob by 1.430 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.16), 'effect': 'multiply prob by 0.888 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.2), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.3,0.62,0.16,0.25,0.005206344,"{'timestamp': 1760866780.1922877, 'inputs': {'network_load': np.float64(0.3), 'relay_reputation': np.float64(0.62), 'budget_utilization': np.float64(0.16), 'recent_win_rate': np.float64(0.25)}, 'base_prob': 0.01, 'final_prob': np.float64(0.005206344), 'steps': [{'feature': 'network_load', 'value': np.float64(0.3), 'effect': 'multiply prob by 0.820 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.62), 'effect': 'multiply prob by 1.430 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.16), 'effect': 'multiply prob by 0.888 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.25), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.3,0.62,0.16,0.3,0.005206344,"{'timestamp': 1760866780.1923323, 'inputs': {'network_load': np.float64(0.3), 'relay_reputation': np.float64(0.62), 'budget_utilization': np.float64(0.16), 'recent_win_rate': np.float64(0.3)}, 'base_prob': 0.01, 'final_prob': np.float64(0.005206344), 'steps': [{'feature': 'network_load', 'value': np.float64(0.3), 'effect': 'multiply prob by 0.820 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.62), 'effect': 'multiply prob by 1.430 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.16), 'effect': 'multiply prob by 0.888 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.3), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.3,0.62,0.26,0.0,0.00959186790408132,"{'timestamp': 1760866780.192362, 'inputs': {'network_load': np.float64(0.3), 'relay_reputation': np.float64(0.62), 'budget_utilization': np.float64(0.26), 'recent_win_rate': 1e-09}, 'base_prob': 0.01, 'final_prob': np.float64(0.00959186790408132), 'steps': [{'feature': 'network_load', 'value': np.float64(0.3), 'effect': 'multiply prob by 0.820 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.62), 'effect': 'multiply prob by 1.430 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.26), 'effect': 'multiply prob by 0.818 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': 1e-09, 'effect': 'multiply prob by 1.000 (higher recent wins -> lower prob)'}]}"
0.3,0.62,0.26,0.05,0.004795934000000001,"{'timestamp': 1760866780.1923878, 'inputs': {'network_load': np.float64(0.3), 'relay_reputation': np.float64(0.62), 'budget_utilization': np.float64(0.26), 'recent_win_rate': np.float64(0.05)}, 'base_prob': 0.01, 'final_prob': np.float64(0.004795934000000001), 'steps': [{'feature': 'network_load', 'value': np.float64(0.3), 'effect': 'multiply prob by 0.820 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.62), 'effect': 'multiply prob by 1.430 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.26), 'effect': 'multiply prob by 0.818 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.05), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.3,0.62,0.26,0.1,0.004795934000000001,"{'timestamp': 1760866780.1924713, 'inputs': {'network_load': np.float64(0.3), 'relay_reputation': np.float64(0.62), 'budget_utilization': np.float64(0.26), 'recent_win_rate': np.float64(0.1)}, 'base_prob': 0.01, 'final_prob': np.float64(0.004795934000000001), 'steps': [{'feature': 'network_load', 'value': np.float64(0.3), 'effect': 'multiply prob by 0.820 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.62), 'effect': 'multiply prob by 1.430 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.26), 'effect': 'multiply prob by 0.818 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.1), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.3,0.62,0.26,0.15,0.004795934000000001,"{'timestamp': 1760866780.1925018, 'inputs': {'network_load': np.float64(0.3), 'relay_reputation': np.float64(0.62), 'budget_utilization': np.float64(0.26), 'recent_win_rate': np.float64(0.15)}, 'base_prob': 0.01, 'final_prob': np.float64(0.004795934000000001), 'steps': [{'feature': 'network_load', 'value': np.float64(0.3), 'effect': 'multiply prob by 0.820 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.62), 'effect': 'multiply prob by 1.430 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.26), 'effect': 'multiply prob by 0.818 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.15), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.3,0.62,0.26,0.2,0.004795934000000001,"{'timestamp': 1760866780.192527, 'inputs': {'network_load': np.float64(0.3), 'relay_reputation': np.float64(0.62), 'budget_utilization': np.float64(0.26), 'recent_win_rate': np.float64(0.2)}, 'base_prob': 0.01, 'final_prob': np.float64(0.004795934000000001), 'steps': [{'feature': 'network_load', 'value': np.float64(0.3), 'effect': 'multiply prob by 0.820 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.62), 'effect': 'multiply prob by 1.430 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.26), 'effect': 'multiply prob by 0.818 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.2), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.3,0.62,0.26,0.25,0.004795934000000001,"{'timestamp': 1760866780.1925526, 'inputs': {'network_load': np.float64(0.3), 'relay_reputation': np.float64(0.62), 'budget_utilization': np.float64(0.26), 'recent_win_rate': np.float64(0.25)}, 'base_prob': 0.01, 'final_prob': np.float64(0.004795934000000001), 'steps': [{'feature': 'network_load', 'value': np.float64(0.3), 'effect': 'multiply prob by 0.820 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.62), 'effect': 'multiply prob by 1.430 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.26), 'effect': 'multiply prob by 0.818 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.25), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.3,0.62,0.26,0.3,0.004795934000000001,"{'timestamp': 1760866780.1925776, 'inputs': {'network_load': np.float64(0.3), 'relay_reputation': np.float64(0.62), 'budget_utilization': np.float64(0.26), 'recent_win_rate': np.float64(0.3)}, 'base_prob': 0.01, 'final_prob': np.float64(0.004795934000000001), 'steps': [{'feature': 'network_load', 'value': np.float64(0.3), 'effect': 'multiply prob by 0.820 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.62), 'effect': 'multiply prob by 1.430 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.26), 'effect': 'multiply prob by 0.818 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.3), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.3,0.62,0.37,0.0,0.008688965913110339,"{'timestamp': 1760866780.1926086, 'inputs': {'network_load': np.float64(0.3), 'relay_reputation': np.float64(0.62), 'budget_utilization': np.float64(0.37), 'recent_win_rate': 1e-09}, 'base_prob': 0.01, 'final_prob': np.float64(0.008688965913110339), 'steps': [{'feature': 'network_load', 'value': np.float64(0.3), 'effect': 'multiply prob by 0.820 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.62), 'effect': 'multiply prob by 1.430 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.37), 'effect': 'multiply prob by 0.741 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': 1e-09, 'effect': 'multiply prob by 1.000 (higher recent wins -> lower prob)'}]}"
0.3,0.62,0.37,0.05,0.004344483,"{'timestamp': 1760866780.1926365, 'inputs': {'network_load': np.float64(0.3), 'relay_reputation': np.float64(0.62), 'budget_utilization': np.float64(0.37), 'recent_win_rate': np.float64(0.05)}, 'base_prob': 0.01, 'final_prob': np.float64(0.004344483), 'steps': [{'feature': 'network_load', 'value': np.float64(0.3), 'effect': 'multiply prob by 0.820 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.62), 'effect': 'multiply prob by 1.430 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.37), 'effect': 'multiply prob by 0.741 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.05), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.3,0.62,0.37,0.1,0.004344483,"{'timestamp': 1760866780.1926618, 'inputs': {'network_load': np.float64(0.3), 'relay_reputation': np.float64(0.62), 'budget_utilization': np.float64(0.37), 'recent_win_rate': np.float64(0.1)}, 'base_prob': 0.01, 'final_prob': np.float64(0.004344483), 'steps': [{'feature': 'network_load', 'value': np.float64(0.3), 'effect': 'multiply prob by 0.820 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.62), 'effect': 'multiply prob by 1.430 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.37), 'effect': 'multiply prob by 0.741 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.1), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.3,0.62,0.37,0.15,0.004344483,"{'timestamp': 1760866780.1926894, 'inputs': {'network_load': np.float64(0.3), 'relay_reputation': np.float64(0.62), 'budget_utilization': np.float64(0.37), 'recent_win_rate': np.float64(0.15)}, 'base_prob': 0.01, 'final_prob': np.float64(0.004344483), 'steps': [{'feature': 'network_load', 'value': np.float64(0.3), 'effect': 'multiply prob by 0.820 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.62), 'effect': 'multiply prob by 1.430 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.37), 'effect': 'multiply prob by 0.741 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.15), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.3,0.62,0.37,0.2,0.004344483,"{'timestamp': 1760866780.1927147, 'inputs': {'network_load': np.float64(0.3), 'relay_reputation': np.float64(0.62), 'budget_utilization': np.float64(0.37), 'recent_win_rate': np.float64(0.2)}, 'base_prob': 0.01, 'final_prob': np.float64(0.004344483), 'steps': [{'feature': 'network_load', 'value': np.float64(0.3), 'effect': 'multiply prob by 0.820 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.62), 'effect': 'multiply prob by 1.430 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.37), 'effect': 'multiply prob by 0.741 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.2), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.3,0.62,0.37,0.25,0.004344483,"{'timestamp': 1760866780.1927404, 'inputs': {'network_load': np.float64(0.3), 'relay_reputation': np.float64(0.62), 'budget_utilization': np.float64(0.37), 'recent_win_rate': np.float64(0.25)}, 'base_prob': 0.01, 'final_prob': np.float64(0.004344483), 'steps': [{'feature': 'network_load', 'value': np.float64(0.3), 'effect': 'multiply prob by 0.820 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.62), 'effect': 'multiply prob by 1.430 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.37), 'effect': 'multiply prob by 0.741 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.25), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.3,0.62,0.37,0.3,0.004344483,"{'timestamp': 1760866780.1927679, 'inputs': {'network_load': np.float64(0.3), 'relay_reputation': np.float64(0.62), 'budget_utilization': np.float64(0.37), 'recent_win_rate': np.float64(0.3)}, 'base_prob': 0.01, 'final_prob': np.float64(0.004344483), 'steps': [{'feature': 'network_load', 'value': np.float64(0.3), 'effect': 'multiply prob by 0.820 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.62), 'effect': 'multiply prob by 1.430 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.37), 'effect': 'multiply prob by 0.741 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.3), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.3,0.62,0.48,0.0,0.00778606392213936,"{'timestamp': 1760866780.192797, 'inputs': {'network_load': np.float64(0.3), 'relay_reputation': np.float64(0.62), 'budget_utilization': np.float64(0.48), 'recent_win_rate': 1e-09}, 'base_prob': 0.01, 'final_prob': np.float64(0.00778606392213936), 'steps': [{'feature': 'network_load', 'value': np.float64(0.3), 'effect': 'multiply prob by 0.820 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.62), 'effect': 'multiply prob by 1.430 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.48), 'effect': 'multiply prob by 0.664 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': 1e-09, 'effect': 'multiply prob by 1.000 (higher recent wins -> lower prob)'}]}"
0.3,0.62,0.48,0.05,0.0038930320000000003,"{'timestamp': 1760866780.1928241, 'inputs': {'network_load': np.float64(0.3), 'relay_reputation': np.float64(0.62), 'budget_utilization': np.float64(0.48), 'recent_win_rate': np.float64(0.05)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0038930320000000003), 'steps': [{'feature': 'network_load', 'value': np.float64(0.3), 'effect': 'multiply prob by 0.820 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.62), 'effect': 'multiply prob by 1.430 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.48), 'effect': 'multiply prob by 0.664 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.05), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.3,0.62,0.48,0.1,0.0038930320000000003,"{'timestamp': 1760866780.1928508, 'inputs': {'network_load': np.float64(0.3), 'relay_reputation': np.float64(0.62), 'budget_utilization': np.float64(0.48), 'recent_win_rate': np.float64(0.1)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0038930320000000003), 'steps': [{'feature': 'network_load', 'value': np.float64(0.3), 'effect': 'multiply prob by 0.820 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.62), 'effect': 'multiply prob by 1.430 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.48), 'effect': 'multiply prob by 0.664 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.1), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.3,0.62,0.48,0.15,0.0038930320000000003,"{'timestamp': 1760866780.1928763, 'inputs': {'network_load': np.float64(0.3), 'relay_reputation': np.float64(0.62), 'budget_utilization': np.float64(0.48), 'recent_win_rate': np.float64(0.15)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0038930320000000003), 'steps': [{'feature': 'network_load', 'value': np.float64(0.3), 'effect': 'multiply prob by 0.820 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.62), 'effect': 'multiply prob by 1.430 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.48), 'effect': 'multiply prob by 0.664 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.15), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.3,0.62,0.48,0.2,0.0038930320000000003,"{'timestamp': 1760866780.1929038, 'inputs': {'network_load': np.float64(0.3), 'relay_reputation': np.float64(0.62), 'budget_utilization': np.float64(0.48), 'recent_win_rate': np.float64(0.2)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0038930320000000003), 'steps': [{'feature': 'network_load', 'value': np.float64(0.3), 'effect': 'multiply prob by 0.820 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.62), 'effect': 'multiply prob by 1.430 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.48), 'effect': 'multiply prob by 0.664 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.2), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.3,0.62,0.48,0.25,0.0038930320000000003,"{'timestamp': 1760866780.1929288, 'inputs': {'network_load': np.float64(0.3), 'relay_reputation': np.float64(0.62), 'budget_utilization': np.float64(0.48), 'recent_win_rate': np.float64(0.25)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0038930320000000003), 'steps': [{'feature': 'network_load', 'value': np.float64(0.3), 'effect': 'multiply prob by 0.820 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.62), 'effect': 'multiply prob by 1.430 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.48), 'effect': 'multiply prob by 0.664 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.25), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.3,0.62,0.48,0.3,0.0038930320000000003,"{'timestamp': 1760866780.192954, 'inputs': {'network_load': np.float64(0.3), 'relay_reputation': np.float64(0.62), 'budget_utilization': np.float64(0.48), 'recent_win_rate': np.float64(0.3)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0038930320000000003), 'steps': [{'feature': 'network_load', 'value': np.float64(0.3), 'effect': 'multiply prob by 0.820 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.62), 'effect': 'multiply prob by 1.430 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.48), 'effect': 'multiply prob by 0.664 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.3), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.3,0.62,0.59,0.0,0.00688316193116838,"{'timestamp': 1760866780.192981, 'inputs': {'network_load': np.float64(0.3), 'relay_reputation': np.float64(0.62), 'budget_utilization': np.float64(0.59), 'recent_win_rate': 1e-09}, 'base_prob': 0.01, 'final_prob': np.float64(0.00688316193116838), 'steps': [{'feature': 'network_load', 'value': np.float64(0.3), 'effect': 'multiply prob by 0.820 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.62), 'effect': 'multiply prob by 1.430 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.59), 'effect': 'multiply prob by 0.587 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': 1e-09, 'effect': 'multiply prob by 1.000 (higher recent wins -> lower prob)'}]}"
0.3,0.62,0.59,0.05,0.003441581,"{'timestamp': 1760866780.1930063, 'inputs': {'network_load': np.float64(0.3), 'relay_reputation': np.float64(0.62), 'budget_utilization': np.float64(0.59), 'recent_win_rate': np.float64(0.05)}, 'base_prob': 0.01, 'final_prob': np.float64(0.003441581), 'steps': [{'feature': 'network_load', 'value': np.float64(0.3), 'effect': 'multiply prob by 0.820 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.62), 'effect': 'multiply prob by 1.430 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.59), 'effect': 'multiply prob by 0.587 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.05), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.3,0.62,0.59,0.1,0.003441581,"{'timestamp': 1760866780.1930337, 'inputs': {'network_load': np.float64(0.3), 'relay_reputation': np.float64(0.62), 'budget_utilization': np.float64(0.59), 'recent_win_rate': np.float64(0.1)}, 'base_prob': 0.01, 'final_prob': np.float64(0.003441581), 'steps': [{'feature': 'network_load', 'value': np.float64(0.3), 'effect': 'multiply prob by 0.820 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.62), 'effect': 'multiply prob by 1.430 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.59), 'effect': 'multiply prob by 0.587 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.1), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.3,0.62,0.59,0.15,0.003441581,"{'timestamp': 1760866780.1930647, 'inputs': {'network_load': np.float64(0.3), 'relay_reputation': np.float64(0.62), 'budget_utilization': np.float64(0.59), 'recent_win_rate': np.float64(0.15)}, 'base_prob': 0.01, 'final_prob': np.float64(0.003441581), 'steps': [{'feature': 'network_load', 'value': np.float64(0.3), 'effect': 'multiply prob by 0.820 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.62), 'effect': 'multiply prob by 1.430 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.59), 'effect': 'multiply prob by 0.587 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.15), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.3,0.62,0.59,0.2,0.003441581,"{'timestamp': 1760866780.1930919, 'inputs': {'network_load': np.float64(0.3), 'relay_reputation': np.float64(0.62), 'budget_utilization': np.float64(0.59), 'recent_win_rate': np.float64(0.2)}, 'base_prob': 0.01, 'final_prob': np.float64(0.003441581), 'steps': [{'feature': 'network_load', 'value': np.float64(0.3), 'effect': 'multiply prob by 0.820 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.62), 'effect': 'multiply prob by 1.430 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.59), 'effect': 'multiply prob by 0.587 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.2), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.3,0.62,0.59,0.25,0.003441581,"{'timestamp': 1760866780.1931481, 'inputs': {'network_load': np.float64(0.3), 'relay_reputation': np.float64(0.62), 'budget_utilization': np.float64(0.59), 'recent_win_rate': np.float64(0.25)}, 'base_prob': 0.01, 'final_prob': np.float64(0.003441581), 'steps': [{'feature': 'network_load', 'value': np.float64(0.3), 'effect': 'multiply prob by 0.820 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.62), 'effect': 'multiply prob by 1.430 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.59), 'effect': 'multiply prob by 0.587 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.25), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.3,0.62,0.59,0.3,0.003441581,"{'timestamp': 1760866780.1931756, 'inputs': {'network_load': np.float64(0.3), 'relay_reputation': np.float64(0.62), 'budget_utilization': np.float64(0.59), 'recent_win_rate': np.float64(0.3)}, 'base_prob': 0.01, 'final_prob': np.float64(0.003441581), 'steps': [{'feature': 'network_load', 'value': np.float64(0.3), 'effect': 'multiply prob by 0.820 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.62), 'effect': 'multiply prob by 1.430 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.59), 'effect': 'multiply prob by 0.587 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.3), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.3,0.62,0.69,0.0,0.0060623419393765815,"{'timestamp': 1760866780.1932087, 'inputs': {'network_load': np.float64(0.3), 'relay_reputation': np.float64(0.62), 'budget_utilization': np.float64(0.69), 'recent_win_rate': 1e-09}, 'base_prob': 0.01, 'final_prob': np.float64(0.0060623419393765815), 'steps': [{'feature': 'network_load', 'value': np.float64(0.3), 'effect': 'multiply prob by 0.820 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.62), 'effect': 'multiply prob by 1.430 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.69), 'effect': 'multiply prob by 0.517 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': 1e-09, 'effect': 'multiply prob by 1.000 (higher recent wins -> lower prob)'}]}"
0.3,0.62,0.69,0.05,0.003031171000000001,"{'timestamp': 1760866780.1932344, 'inputs': {'network_load': np.float64(0.3), 'relay_reputation': np.float64(0.62), 'budget_utilization': np.float64(0.69), 'recent_win_rate': np.float64(0.05)}, 'base_prob': 0.01, 'final_prob': np.float64(0.003031171000000001), 'steps': [{'feature': 'network_load', 'value': np.float64(0.3), 'effect': 'multiply prob by 0.820 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.62), 'effect': 'multiply prob by 1.430 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.69), 'effect': 'multiply prob by 0.517 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.05), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.3,0.62,0.69,0.1,0.003031171000000001,"{'timestamp': 1760866780.1932595, 'inputs': {'network_load': np.float64(0.3), 'relay_reputation': np.float64(0.62), 'budget_utilization': np.float64(0.69), 'recent_win_rate': np.float64(0.1)}, 'base_prob': 0.01, 'final_prob': np.float64(0.003031171000000001), 'steps': [{'feature': 'network_load', 'value': np.float64(0.3), 'effect': 'multiply prob by 0.820 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.62), 'effect': 'multiply prob by 1.430 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.69), 'effect': 'multiply prob by 0.517 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.1), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.3,0.62,0.69,0.15,0.003031171000000001,"{'timestamp': 1760866780.1932845, 'inputs': {'network_load': np.float64(0.3), 'relay_reputation': np.float64(0.62), 'budget_utilization': np.float64(0.69), 'recent_win_rate': np.float64(0.15)}, 'base_prob': 0.01, 'final_prob': np.float64(0.003031171000000001), 'steps': [{'feature': 'network_load', 'value': np.float64(0.3), 'effect': 'multiply prob by 0.820 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.62), 'effect': 'multiply prob by 1.430 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.69), 'effect': 'multiply prob by 0.517 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.15), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.3,0.62,0.69,0.2,0.003031171000000001,"{'timestamp': 1760866780.1933117, 'inputs': {'network_load': np.float64(0.3), 'relay_reputation': np.float64(0.62), 'budget_utilization': np.float64(0.69), 'recent_win_rate': np.float64(0.2)}, 'base_prob': 0.01, 'final_prob': np.float64(0.003031171000000001), 'steps': [{'feature': 'network_load', 'value': np.float64(0.3), 'effect': 'multiply prob by 0.820 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.62), 'effect': 'multiply prob by 1.430 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.69), 'effect': 'multiply prob by 0.517 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.2), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.3,0.62,0.69,0.25,0.003031171000000001,"{'timestamp': 1760866780.1933799, 'inputs': {'network_load': np.float64(0.3), 'relay_reputation': np.float64(0.62), 'budget_utilization': np.float64(0.69), 'recent_win_rate': np.float64(0.25)}, 'base_prob': 0.01, 'final_prob': np.float64(0.003031171000000001), 'steps': [{'feature': 'network_load', 'value': np.float64(0.3), 'effect': 'multiply prob by 0.820 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.62), 'effect': 'multiply prob by 1.430 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.69), 'effect': 'multiply prob by 0.517 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.25), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.3,0.62,0.69,0.3,0.003031171000000001,"{'timestamp': 1760866780.1934235, 'inputs': {'network_load': np.float64(0.3), 'relay_reputation': np.float64(0.62), 'budget_utilization': np.float64(0.69), 'recent_win_rate': np.float64(0.3)}, 'base_prob': 0.01, 'final_prob': np.float64(0.003031171000000001), 'steps': [{'feature': 'network_load', 'value': np.float64(0.3), 'effect': 'multiply prob by 0.820 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.62), 'effect': 'multiply prob by 1.430 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.69), 'effect': 'multiply prob by 0.517 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.3), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.3,0.62,0.8,0.0,0.005159439948405601,"{'timestamp': 1760866780.193453, 'inputs': {'network_load': np.float64(0.3), 'relay_reputation': np.float64(0.62), 'budget_utilization': np.float64(0.8), 'recent_win_rate': 1e-09}, 'base_prob': 0.01, 'final_prob': np.float64(0.005159439948405601), 'steps': [{'feature': 'network_load', 'value': np.float64(0.3), 'effect': 'multiply prob by 0.820 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.62), 'effect': 'multiply prob by 1.430 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.8), 'effect': 'multiply prob by 0.440 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': 1e-09, 'effect': 'multiply prob by 1.000 (higher recent wins -> lower prob)'}]}"
0.3,0.62,0.8,0.05,0.0025797200000000006,"{'timestamp': 1760866780.1934786, 'inputs': {'network_load': np.float64(0.3), 'relay_reputation': np.float64(0.62), 'budget_utilization': np.float64(0.8), 'recent_win_rate': np.float64(0.05)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0025797200000000006), 'steps': [{'feature': 'network_load', 'value': np.float64(0.3), 'effect': 'multiply prob by 0.820 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.62), 'effect': 'multiply prob by 1.430 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.8), 'effect': 'multiply prob by 0.440 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.05), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.3,0.62,0.8,0.1,0.0025797200000000006,"{'timestamp': 1760866780.193504, 'inputs': {'network_load': np.float64(0.3), 'relay_reputation': np.float64(0.62), 'budget_utilization': np.float64(0.8), 'recent_win_rate': np.float64(0.1)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0025797200000000006), 'steps': [{'feature': 'network_load', 'value': np.float64(0.3), 'effect': 'multiply prob by 0.820 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.62), 'effect': 'multiply prob by 1.430 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.8), 'effect': 'multiply prob by 0.440 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.1), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.3,0.62,0.8,0.15,0.0025797200000000006,"{'timestamp': 1760866780.1935294, 'inputs': {'network_load': np.float64(0.3), 'relay_reputation': np.float64(0.62), 'budget_utilization': np.float64(0.8), 'recent_win_rate': np.float64(0.15)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0025797200000000006), 'steps': [{'feature': 'network_load', 'value': np.float64(0.3), 'effect': 'multiply prob by 0.820 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.62), 'effect': 'multiply prob by 1.430 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.8), 'effect': 'multiply prob by 0.440 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.15), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.3,0.62,0.8,0.2,0.0025797200000000006,"{'timestamp': 1760866780.193557, 'inputs': {'network_load': np.float64(0.3), 'relay_reputation': np.float64(0.62), 'budget_utilization': np.float64(0.8), 'recent_win_rate': np.float64(0.2)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0025797200000000006), 'steps': [{'feature': 'network_load', 'value': np.float64(0.3), 'effect': 'multiply prob by 0.820 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.62), 'effect': 'multiply prob by 1.430 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.8), 'effect': 'multiply prob by 0.440 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.2), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.3,0.62,0.8,0.25,0.0025797200000000006,"{'timestamp': 1760866780.1935844, 'inputs': {'network_load': np.float64(0.3), 'relay_reputation': np.float64(0.62), 'budget_utilization': np.float64(0.8), 'recent_win_rate': np.float64(0.25)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0025797200000000006), 'steps': [{'feature': 'network_load', 'value': np.float64(0.3), 'effect': 'multiply prob by 0.820 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.62), 'effect': 'multiply prob by 1.430 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.8), 'effect': 'multiply prob by 0.440 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.25), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.3,0.62,0.8,0.3,0.0025797200000000006,"{'timestamp': 1760866780.1936111, 'inputs': {'network_load': np.float64(0.3), 'relay_reputation': np.float64(0.62), 'budget_utilization': np.float64(0.8), 'recent_win_rate': np.float64(0.3)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0025797200000000006), 'steps': [{'feature': 'network_load', 'value': np.float64(0.3), 'effect': 'multiply prob by 0.820 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.62), 'effect': 'multiply prob by 1.430 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.8), 'effect': 'multiply prob by 0.440 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.3), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.3,0.73,0.05,0.0,0.012621234873787648,"{'timestamp': 1760866780.1936393, 'inputs': {'network_load': np.float64(0.3), 'relay_reputation': np.float64(0.73), 'budget_utilization': np.float64(0.05), 'recent_win_rate': 1e-09}, 'base_prob': 0.01, 'final_prob': np.float64(0.012621234873787648), 'steps': [{'feature': 'network_load', 'value': np.float64(0.3), 'effect': 'multiply prob by 0.820 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.73), 'effect': 'multiply prob by 1.595 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.05), 'effect': 'multiply prob by 0.965 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': 1e-09, 'effect': 'multiply prob by 1.000 (higher recent wins -> lower prob)'}]}"
0.3,0.73,0.05,0.05,0.0063106175,"{'timestamp': 1760866780.1936646, 'inputs': {'network_load': np.float64(0.3), 'relay_reputation': np.float64(0.73), 'budget_utilization': np.float64(0.05), 'recent_win_rate': np.float64(0.05)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0063106175), 'steps': [{'feature': 'network_load', 'value': np.float64(0.3), 'effect': 'multiply prob by 0.820 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.73), 'effect': 'multiply prob by 1.595 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.05), 'effect': 'multiply prob by 0.965 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.05), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.3,0.73,0.05,0.1,0.0063106175,"{'timestamp': 1760866780.1936917, 'inputs': {'network_load': np.float64(0.3), 'relay_reputation': np.float64(0.73), 'budget_utilization': np.float64(0.05), 'recent_win_rate': np.float64(0.1)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0063106175), 'steps': [{'feature': 'network_load', 'value': np.float64(0.3), 'effect': 'multiply prob by 0.820 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.73), 'effect': 'multiply prob by 1.595 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.05), 'effect': 'multiply prob by 0.965 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.1), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.3,0.73,0.05,0.15,0.0063106175,"{'timestamp': 1760866780.1937172, 'inputs': {'network_load': np.float64(0.3), 'relay_reputation': np.float64(0.73), 'budget_utilization': np.float64(0.05), 'recent_win_rate': np.float64(0.15)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0063106175), 'steps': [{'feature': 'network_load', 'value': np.float64(0.3), 'effect': 'multiply prob by 0.820 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.73), 'effect': 'multiply prob by 1.595 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.05), 'effect': 'multiply prob by 0.965 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.15), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.3,0.73,0.05,0.2,0.0063106175,"{'timestamp': 1760866780.193745, 'inputs': {'network_load': np.float64(0.3), 'relay_reputation': np.float64(0.73), 'budget_utilization': np.float64(0.05), 'recent_win_rate': np.float64(0.2)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0063106175), 'steps': [{'feature': 'network_load', 'value': np.float64(0.3), 'effect': 'multiply prob by 0.820 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.73), 'effect': 'multiply prob by 1.595 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.05), 'effect': 'multiply prob by 0.965 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.2), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.3,0.73,0.05,0.25,0.0063106175,"{'timestamp': 1760866780.1937702, 'inputs': {'network_load': np.float64(0.3), 'relay_reputation': np.float64(0.73), 'budget_utilization': np.float64(0.05), 'recent_win_rate': np.float64(0.25)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0063106175), 'steps': [{'feature': 'network_load', 'value': np.float64(0.3), 'effect': 'multiply prob by 0.820 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.73), 'effect': 'multiply prob by 1.595 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.05), 'effect': 'multiply prob by 0.965 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.25), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.3,0.73,0.05,0.3,0.0063106175,"{'timestamp': 1760866780.1937976, 'inputs': {'network_load': np.float64(0.3), 'relay_reputation': np.float64(0.73), 'budget_utilization': np.float64(0.05), 'recent_win_rate': np.float64(0.3)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0063106175), 'steps': [{'feature': 'network_load', 'value': np.float64(0.3), 'effect': 'multiply prob by 0.820 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.73), 'effect': 'multiply prob by 1.595 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.05), 'effect': 'multiply prob by 0.965 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.3), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.3,0.73,0.16,0.0,0.01161415188385848,"{'timestamp': 1760866780.1938245, 'inputs': {'network_load': np.float64(0.3), 'relay_reputation': np.float64(0.73), 'budget_utilization': np.float64(0.16), 'recent_win_rate': 1e-09}, 'base_prob': 0.01, 'final_prob': np.float64(0.01161415188385848), 'steps': [{'feature': 'network_load', 'value': np.float64(0.3), 'effect': 'multiply prob by 0.820 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.73), 'effect': 'multiply prob by 1.595 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.16), 'effect': 'multiply prob by 0.888 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': 1e-09, 'effect': 'multiply prob by 1.000 (higher recent wins -> lower prob)'}]}"
0.3,0.73,0.16,0.05,0.005807076,"{'timestamp': 1760866780.193852, 'inputs': {'network_load': np.float64(0.3), 'relay_reputation': np.float64(0.73), 'budget_utilization': np.float64(0.16), 'recent_win_rate': np.float64(0.05)}, 'base_prob': 0.01, 'final_prob': np.float64(0.005807076), 'steps': [{'feature': 'network_load', 'value': np.float64(0.3), 'effect': 'multiply prob by 0.820 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.73), 'effect': 'multiply prob by 1.595 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.16), 'effect': 'multiply prob by 0.888 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.05), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.3,0.73,0.16,0.1,0.005807076,"{'timestamp': 1760866780.1938791, 'inputs': {'network_load': np.float64(0.3), 'relay_reputation': np.float64(0.73), 'budget_utilization': np.float64(0.16), 'recent_win_rate': np.float64(0.1)}, 'base_prob': 0.01, 'final_prob': np.float64(0.005807076), 'steps': [{'feature': 'network_load', 'value': np.float64(0.3), 'effect': 'multiply prob by 0.820 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.73), 'effect': 'multiply prob by 1.595 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.16), 'effect': 'multiply prob by 0.888 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.1), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.3,0.73,0.16,0.15,0.005807076,"{'timestamp': 1760866780.1939046, 'inputs': {'network_load': np.float64(0.3), 'relay_reputation': np.float64(0.73), 'budget_utilization': np.float64(0.16), 'recent_win_rate': np.float64(0.15)}, 'base_prob': 0.01, 'final_prob': np.float64(0.005807076), 'steps': [{'feature': 'network_load', 'value': np.float64(0.3), 'effect': 'multiply prob by 0.820 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.73), 'effect': 'multiply prob by 1.595 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.16), 'effect': 'multiply prob by 0.888 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.15), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.3,0.73,0.16,0.2,0.005807076,"{'timestamp': 1760866780.1939337, 'inputs': {'network_load': np.float64(0.3), 'relay_reputation': np.float64(0.73), 'budget_utilization': np.float64(0.16), 'recent_win_rate': np.float64(0.2)}, 'base_prob': 0.01, 'final_prob': np.float64(0.005807076), 'steps': [{'feature': 'network_load', 'value': np.float64(0.3), 'effect': 'multiply prob by 0.820 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.73), 'effect': 'multiply prob by 1.595 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.16), 'effect': 'multiply prob by 0.888 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.2), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.3,0.73,0.16,0.25,0.005807076,"{'timestamp': 1760866780.1939595, 'inputs': {'network_load': np.float64(0.3), 'relay_reputation': np.float64(0.73), 'budget_utilization': np.float64(0.16), 'recent_win_rate': np.float64(0.25)}, 'base_prob': 0.01, 'final_prob': np.float64(0.005807076), 'steps': [{'feature': 'network_load', 'value': np.float64(0.3), 'effect': 'multiply prob by 0.820 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.73), 'effect': 'multiply prob by 1.595 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.16), 'effect': 'multiply prob by 0.888 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.25), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.3,0.73,0.16,0.3,0.005807076,"{'timestamp': 1760866780.1939864, 'inputs': {'network_load': np.float64(0.3), 'relay_reputation': np.float64(0.73), 'budget_utilization': np.float64(0.16), 'recent_win_rate': np.float64(0.3)}, 'base_prob': 0.01, 'final_prob': np.float64(0.005807076), 'steps': [{'feature': 'network_load', 'value': np.float64(0.3), 'effect': 'multiply prob by 0.820 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.73), 'effect': 'multiply prob by 1.595 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.16), 'effect': 'multiply prob by 0.888 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.3), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.3,0.73,0.26,0.0,0.010698621893013781,"{'timestamp': 1760866780.1940153, 'inputs': {'network_load': np.float64(0.3), 'relay_reputation': np.float64(0.73), 'budget_utilization': np.float64(0.26), 'recent_win_rate': 1e-09}, 'base_prob': 0.01, 'final_prob': np.float64(0.010698621893013781), 'steps': [{'feature': 'network_load', 'value': np.float64(0.3), 'effect': 'multiply prob by 0.820 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.73), 'effect': 'multiply prob by 1.595 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.26), 'effect': 'multiply prob by 0.818 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': 1e-09, 'effect': 'multiply prob by 1.000 (higher recent wins -> lower prob)'}]}"
0.3,0.73,0.26,0.05,0.005349311000000001,"{'timestamp': 1760866780.1940427, 'inputs': {'network_load': np.float64(0.3), 'relay_reputation': np.float64(0.73), 'budget_utilization': np.float64(0.26), 'recent_win_rate': np.float64(0.05)}, 'base_prob': 0.01, 'final_prob': np.float64(0.005349311000000001), 'steps': [{'feature': 'network_load', 'value': np.float64(0.3), 'effect': 'multiply prob by 0.820 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.73), 'effect': 'multiply prob by 1.595 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.26), 'effect': 'multiply prob by 0.818 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.05), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.3,0.73,0.26,0.1,0.005349311000000001,"{'timestamp': 1760866780.1940682, 'inputs': {'network_load': np.float64(0.3), 'relay_reputation': np.float64(0.73), 'budget_utilization': np.float64(0.26), 'recent_win_rate': np.float64(0.1)}, 'base_prob': 0.01, 'final_prob': np.float64(0.005349311000000001), 'steps': [{'feature': 'network_load', 'value': np.float64(0.3), 'effect': 'multiply prob by 0.820 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.73), 'effect': 'multiply prob by 1.595 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.26), 'effect': 'multiply prob by 0.818 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.1), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.3,0.73,0.26,0.15,0.005349311000000001,"{'timestamp': 1760866780.1940935, 'inputs': {'network_load': np.float64(0.3), 'relay_reputation': np.float64(0.73), 'budget_utilization': np.float64(0.26), 'recent_win_rate': np.float64(0.15)}, 'base_prob': 0.01, 'final_prob': np.float64(0.005349311000000001), 'steps': [{'feature': 'network_load', 'value': np.float64(0.3), 'effect': 'multiply prob by 0.820 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.73), 'effect': 'multiply prob by 1.595 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.26), 'effect': 'multiply prob by 0.818 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.15), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.3,0.73,0.26,0.2,0.005349311000000001,"{'timestamp': 1760866780.1941206, 'inputs': {'network_load': np.float64(0.3), 'relay_reputation': np.float64(0.73), 'budget_utilization': np.float64(0.26), 'recent_win_rate': np.float64(0.2)}, 'base_prob': 0.01, 'final_prob': np.float64(0.005349311000000001), 'steps': [{'feature': 'network_load', 'value': np.float64(0.3), 'effect': 'multiply prob by 0.820 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.73), 'effect': 'multiply prob by 1.595 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.26), 'effect': 'multiply prob by 0.818 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.2), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.3,0.73,0.26,0.25,0.005349311000000001,"{'timestamp': 1760866780.1941462, 'inputs': {'network_load': np.float64(0.3), 'relay_reputation': np.float64(0.73), 'budget_utilization': np.float64(0.26), 'recent_win_rate': np.float64(0.25)}, 'base_prob': 0.01, 'final_prob': np.float64(0.005349311000000001), 'steps': [{'feature': 'network_load', 'value': np.float64(0.3), 'effect': 'multiply prob by 0.820 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.73), 'effect': 'multiply prob by 1.595 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.26), 'effect': 'multiply prob by 0.818 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.25), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.3,0.73,0.26,0.3,0.005349311000000001,"{'timestamp': 1760866780.1941714, 'inputs': {'network_load': np.float64(0.3), 'relay_reputation': np.float64(0.73), 'budget_utilization': np.float64(0.26), 'recent_win_rate': np.float64(0.3)}, 'base_prob': 0.01, 'final_prob': np.float64(0.005349311000000001), 'steps': [{'feature': 'network_load', 'value': np.float64(0.3), 'effect': 'multiply prob by 0.820 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.73), 'effect': 'multiply prob by 1.595 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.26), 'effect': 'multiply prob by 0.818 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.3), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.3,0.73,0.37,0.0,0.00969153890308461,"{'timestamp': 1760866780.1941993, 'inputs': {'network_load': np.float64(0.3), 'relay_reputation': np.float64(0.73), 'budget_utilization': np.float64(0.37), 'recent_win_rate': 1e-09}, 'base_prob': 0.01, 'final_prob': np.float64(0.00969153890308461), 'steps': [{'feature': 'network_load', 'value': np.float64(0.3), 'effect': 'multiply prob by 0.820 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.73), 'effect': 'multiply prob by 1.595 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.37), 'effect': 'multiply prob by 0.741 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': 1e-09, 'effect': 'multiply prob by 1.000 (higher recent wins -> lower prob)'}]}"
0.3,0.73,0.37,0.05,0.0048457695,"{'timestamp': 1760866780.194271, 'inputs': {'network_load': np.float64(0.3), 'relay_reputation': np.float64(0.73), 'budget_utilization': np.float64(0.37), 'recent_win_rate': np.float64(0.05)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0048457695), 'steps': [{'feature': 'network_load', 'value': np.float64(0.3), 'effect': 'multiply prob by 0.820 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.73), 'effect': 'multiply prob by 1.595 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.37), 'effect': 'multiply prob by 0.741 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.05), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.3,0.73,0.37,0.1,0.0048457695,"{'timestamp': 1760866780.1943076, 'inputs': {'network_load': np.float64(0.3), 'relay_reputation': np.float64(0.73), 'budget_utilization': np.float64(0.37), 'recent_win_rate': np.float64(0.1)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0048457695), 'steps': [{'feature': 'network_load', 'value': np.float64(0.3), 'effect': 'multiply prob by 0.820 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.73), 'effect': 'multiply prob by 1.595 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.37), 'effect': 'multiply prob by 0.741 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.1), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.3,0.73,0.37,0.15,0.0048457695,"{'timestamp': 1760866780.1943374, 'inputs': {'network_load': np.float64(0.3), 'relay_reputation': np.float64(0.73), 'budget_utilization': np.float64(0.37), 'recent_win_rate': np.float64(0.15)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0048457695), 'steps': [{'feature': 'network_load', 'value': np.float64(0.3), 'effect': 'multiply prob by 0.820 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.73), 'effect': 'multiply prob by 1.595 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.37), 'effect': 'multiply prob by 0.741 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.15), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.3,0.73,0.37,0.2,0.0048457695,"{'timestamp': 1760866780.1943648, 'inputs': {'network_load': np.float64(0.3), 'relay_reputation': np.float64(0.73), 'budget_utilization': np.float64(0.37), 'recent_win_rate': np.float64(0.2)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0048457695), 'steps': [{'feature': 'network_load', 'value': np.float64(0.3), 'effect': 'multiply prob by 0.820 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.73), 'effect': 'multiply prob by 1.595 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.37), 'effect': 'multiply prob by 0.741 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.2), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.3,0.73,0.37,0.25,0.0048457695,"{'timestamp': 1760866780.19439, 'inputs': {'network_load': np.float64(0.3), 'relay_reputation': np.float64(0.73), 'budget_utilization': np.float64(0.37), 'recent_win_rate': np.float64(0.25)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0048457695), 'steps': [{'feature': 'network_load', 'value': np.float64(0.3), 'effect': 'multiply prob by 0.820 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.73), 'effect': 'multiply prob by 1.595 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.37), 'effect': 'multiply prob by 0.741 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.25), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.3,0.73,0.37,0.3,0.0048457695,"{'timestamp': 1760866780.1944153, 'inputs': {'network_load': np.float64(0.3), 'relay_reputation': np.float64(0.73), 'budget_utilization': np.float64(0.37), 'recent_win_rate': np.float64(0.3)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0048457695), 'steps': [{'feature': 'network_load', 'value': np.float64(0.3), 'effect': 'multiply prob by 0.820 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.73), 'effect': 'multiply prob by 1.595 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.37), 'effect': 'multiply prob by 0.741 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.3), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.3,0.73,0.48,0.0,0.008684455913155439,"{'timestamp': 1760866780.1944466, 'inputs': {'network_load': np.float64(0.3), 'relay_reputation': np.float64(0.73), 'budget_utilization': np.float64(0.48), 'recent_win_rate': 1e-09}, 'base_prob': 0.01, 'final_prob': np.float64(0.008684455913155439), 'steps': [{'feature': 'network_load', 'value': np.float64(0.3), 'effect': 'multiply prob by 0.820 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.73), 'effect': 'multiply prob by 1.595 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.48), 'effect': 'multiply prob by 0.664 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': 1e-09, 'effect': 'multiply prob by 1.000 (higher recent wins -> lower prob)'}]}"
0.3,0.73,0.48,0.05,0.004342228,"{'timestamp': 1760866780.194474, 'inputs': {'network_load': np.float64(0.3), 'relay_reputation': np.float64(0.73), 'budget_utilization': np.float64(0.48), 'recent_win_rate': np.float64(0.05)}, 'base_prob': 0.01, 'final_prob': np.float64(0.004342228), 'steps': [{'feature': 'network_load', 'value': np.float64(0.3), 'effect': 'multiply prob by 0.820 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.73), 'effect': 'multiply prob by 1.595 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.48), 'effect': 'multiply prob by 0.664 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.05), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.3,0.73,0.48,0.1,0.004342228,"{'timestamp': 1760866780.1945055, 'inputs': {'network_load': np.float64(0.3), 'relay_reputation': np.float64(0.73), 'budget_utilization': np.float64(0.48), 'recent_win_rate': np.float64(0.1)}, 'base_prob': 0.01, 'final_prob': np.float64(0.004342228), 'steps': [{'feature': 'network_load', 'value': np.float64(0.3), 'effect': 'multiply prob by 0.820 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.73), 'effect': 'multiply prob by 1.595 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.48), 'effect': 'multiply prob by 0.664 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.1), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.3,0.73,0.48,0.15,0.004342228,"{'timestamp': 1760866780.1945343, 'inputs': {'network_load': np.float64(0.3), 'relay_reputation': np.float64(0.73), 'budget_utilization': np.float64(0.48), 'recent_win_rate': np.float64(0.15)}, 'base_prob': 0.01, 'final_prob': np.float64(0.004342228), 'steps': [{'feature': 'network_load', 'value': np.float64(0.3), 'effect': 'multiply prob by 0.820 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.73), 'effect': 'multiply prob by 1.595 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.48), 'effect': 'multiply prob by 0.664 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.15), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.3,0.73,0.48,0.2,0.004342228,"{'timestamp': 1760866780.19456, 'inputs': {'network_load': np.float64(0.3), 'relay_reputation': np.float64(0.73), 'budget_utilization': np.float64(0.48), 'recent_win_rate': np.float64(0.2)}, 'base_prob': 0.01, 'final_prob': np.float64(0.004342228), 'steps': [{'feature': 'network_load', 'value': np.float64(0.3), 'effect': 'multiply prob by 0.820 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.73), 'effect': 'multiply prob by 1.595 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.48), 'effect': 'multiply prob by 0.664 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.2), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.3,0.73,0.48,0.25,0.004342228,"{'timestamp': 1760866780.1945853, 'inputs': {'network_load': np.float64(0.3), 'relay_reputation': np.float64(0.73), 'budget_utilization': np.float64(0.48), 'recent_win_rate': np.float64(0.25)}, 'base_prob': 0.01, 'final_prob': np.float64(0.004342228), 'steps': [{'feature': 'network_load', 'value': np.float64(0.3), 'effect': 'multiply prob by 0.820 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.73), 'effect': 'multiply prob by 1.595 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.48), 'effect': 'multiply prob by 0.664 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.25), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.3,0.73,0.48,0.3,0.004342228,"{'timestamp': 1760866780.1946125, 'inputs': {'network_load': np.float64(0.3), 'relay_reputation': np.float64(0.73), 'budget_utilization': np.float64(0.48), 'recent_win_rate': np.float64(0.3)}, 'base_prob': 0.01, 'final_prob': np.float64(0.004342228), 'steps': [{'feature': 'network_load', 'value': np.float64(0.3), 'effect': 'multiply prob by 0.820 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.73), 'effect': 'multiply prob by 1.595 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.48), 'effect': 'multiply prob by 0.664 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.3), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.3,0.73,0.59,0.0,0.007677372923226269,"{'timestamp': 1760866780.19464, 'inputs': {'network_load': np.float64(0.3), 'relay_reputation': np.float64(0.73), 'budget_utilization': np.float64(0.59), 'recent_win_rate': 1e-09}, 'base_prob': 0.01, 'final_prob': np.float64(0.007677372923226269), 'steps': [{'feature': 'network_load', 'value': np.float64(0.3), 'effect': 'multiply prob by 0.820 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.73), 'effect': 'multiply prob by 1.595 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.59), 'effect': 'multiply prob by 0.587 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': 1e-09, 'effect': 'multiply prob by 1.000 (higher recent wins -> lower prob)'}]}"
0.3,0.73,0.59,0.05,0.0038386864999999997,"{'timestamp': 1760866780.1946652, 'inputs': {'network_load': np.float64(0.3), 'relay_reputation': np.float64(0.73), 'budget_utilization': np.float64(0.59), 'recent_win_rate': np.float64(0.05)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0038386864999999997), 'steps': [{'feature': 'network_load', 'value': np.float64(0.3), 'effect': 'multiply prob by 0.820 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.73), 'effect': 'multiply prob by 1.595 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.59), 'effect': 'multiply prob by 0.587 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.05), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.3,0.73,0.59,0.1,0.0038386864999999997,"{'timestamp': 1760866780.1946905, 'inputs': {'network_load': np.float64(0.3), 'relay_reputation': np.float64(0.73), 'budget_utilization': np.float64(0.59), 'recent_win_rate': np.float64(0.1)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0038386864999999997), 'steps': [{'feature': 'network_load', 'value': np.float64(0.3), 'effect': 'multiply prob by 0.820 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.73), 'effect': 'multiply prob by 1.595 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.59), 'effect': 'multiply prob by 0.587 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.1), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.3,0.73,0.59,0.15,0.0038386864999999997,"{'timestamp': 1760866780.1947176, 'inputs': {'network_load': np.float64(0.3), 'relay_reputation': np.float64(0.73), 'budget_utilization': np.float64(0.59), 'recent_win_rate': np.float64(0.15)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0038386864999999997), 'steps': [{'feature': 'network_load', 'value': np.float64(0.3), 'effect': 'multiply prob by 0.820 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.73), 'effect': 'multiply prob by 1.595 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.59), 'effect': 'multiply prob by 0.587 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.15), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.3,0.73,0.59,0.2,0.0038386864999999997,"{'timestamp': 1760866780.194747, 'inputs': {'network_load': np.float64(0.3), 'relay_reputation': np.float64(0.73), 'budget_utilization': np.float64(0.59), 'recent_win_rate': np.float64(0.2)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0038386864999999997), 'steps': [{'feature': 'network_load', 'value': np.float64(0.3), 'effect': 'multiply prob by 0.820 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.73), 'effect': 'multiply prob by 1.595 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.59), 'effect': 'multiply prob by 0.587 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.2), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.3,0.73,0.59,0.25,0.0038386864999999997,"{'timestamp': 1760866780.1947725, 'inputs': {'network_load': np.float64(0.3), 'relay_reputation': np.float64(0.73), 'budget_utilization': np.float64(0.59), 'recent_win_rate': np.float64(0.25)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0038386864999999997), 'steps': [{'feature': 'network_load', 'value': np.float64(0.3), 'effect': 'multiply prob by 0.820 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.73), 'effect': 'multiply prob by 1.595 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.59), 'effect': 'multiply prob by 0.587 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.25), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.3,0.73,0.59,0.3,0.0038386864999999997,"{'timestamp': 1760866780.1947978, 'inputs': {'network_load': np.float64(0.3), 'relay_reputation': np.float64(0.73), 'budget_utilization': np.float64(0.59), 'recent_win_rate': np.float64(0.3)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0038386864999999997), 'steps': [{'feature': 'network_load', 'value': np.float64(0.3), 'effect': 'multiply prob by 0.820 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.73), 'effect': 'multiply prob by 1.595 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.59), 'effect': 'multiply prob by 0.587 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.3), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.3,0.73,0.69,0.0,0.006761842932381572,"{'timestamp': 1760866780.194825, 'inputs': {'network_load': np.float64(0.3), 'relay_reputation': np.float64(0.73), 'budget_utilization': np.float64(0.69), 'recent_win_rate': 1e-09}, 'base_prob': 0.01, 'final_prob': np.float64(0.006761842932381572), 'steps': [{'feature': 'network_load', 'value': np.float64(0.3), 'effect': 'multiply prob by 0.820 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.73), 'effect': 'multiply prob by 1.595 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.69), 'effect': 'multiply prob by 0.517 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': 1e-09, 'effect': 'multiply prob by 1.000 (higher recent wins -> lower prob)'}]}"
0.3,0.73,0.69,0.05,0.003380921500000001,"{'timestamp': 1760866780.1948502, 'inputs': {'network_load': np.float64(0.3), 'relay_reputation': np.float64(0.73), 'budget_utilization': np.float64(0.69), 'recent_win_rate': np.float64(0.05)}, 'base_prob': 0.01, 'final_prob': np.float64(0.003380921500000001), 'steps': [{'feature': 'network_load', 'value': np.float64(0.3), 'effect': 'multiply prob by 0.820 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.73), 'effect': 'multiply prob by 1.595 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.69), 'effect': 'multiply prob by 0.517 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.05), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.3,0.73,0.69,0.1,0.003380921500000001,"{'timestamp': 1760866780.1948879, 'inputs': {'network_load': np.float64(0.3), 'relay_reputation': np.float64(0.73), 'budget_utilization': np.float64(0.69), 'recent_win_rate': np.float64(0.1)}, 'base_prob': 0.01, 'final_prob': np.float64(0.003380921500000001), 'steps': [{'feature': 'network_load', 'value': np.float64(0.3), 'effect': 'multiply prob by 0.820 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.73), 'effect': 'multiply prob by 1.595 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.69), 'effect': 'multiply prob by 0.517 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.1), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.3,0.73,0.69,0.15,0.003380921500000001,"{'timestamp': 1760866780.1949167, 'inputs': {'network_load': np.float64(0.3), 'relay_reputation': np.float64(0.73), 'budget_utilization': np.float64(0.69), 'recent_win_rate': np.float64(0.15)}, 'base_prob': 0.01, 'final_prob': np.float64(0.003380921500000001), 'steps': [{'feature': 'network_load', 'value': np.float64(0.3), 'effect': 'multiply prob by 0.820 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.73), 'effect': 'multiply prob by 1.595 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.69), 'effect': 'multiply prob by 0.517 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.15), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.3,0.73,0.69,0.2,0.003380921500000001,"{'timestamp': 1760866780.1949472, 'inputs': {'network_load': np.float64(0.3), 'relay_reputation': np.float64(0.73), 'budget_utilization': np.float64(0.69), 'recent_win_rate': np.float64(0.2)}, 'base_prob': 0.01, 'final_prob': np.float64(0.003380921500000001), 'steps': [{'feature': 'network_load', 'value': np.float64(0.3), 'effect': 'multiply prob by 0.820 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.73), 'effect': 'multiply prob by 1.595 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.69), 'effect': 'multiply prob by 0.517 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.2), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.3,0.73,0.69,0.25,0.003380921500000001,"{'timestamp': 1760866780.1949747, 'inputs': {'network_load': np.float64(0.3), 'relay_reputation': np.float64(0.73), 'budget_utilization': np.float64(0.69), 'recent_win_rate': np.float64(0.25)}, 'base_prob': 0.01, 'final_prob': np.float64(0.003380921500000001), 'steps': [{'feature': 'network_load', 'value': np.float64(0.3), 'effect': 'multiply prob by 0.820 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.73), 'effect': 'multiply prob by 1.595 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.69), 'effect': 'multiply prob by 0.517 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.25), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.3,0.73,0.69,0.3,0.003380921500000001,"{'timestamp': 1760866780.1950002, 'inputs': {'network_load': np.float64(0.3), 'relay_reputation': np.float64(0.73), 'budget_utilization': np.float64(0.69), 'recent_win_rate': np.float64(0.3)}, 'base_prob': 0.01, 'final_prob': np.float64(0.003380921500000001), 'steps': [{'feature': 'network_load', 'value': np.float64(0.3), 'effect': 'multiply prob by 0.820 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.73), 'effect': 'multiply prob by 1.595 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.69), 'effect': 'multiply prob by 0.517 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.3), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.3,0.73,0.8,0.0,0.005754759942452401,"{'timestamp': 1760866780.1950834, 'inputs': {'network_load': np.float64(0.3), 'relay_reputation': np.float64(0.73), 'budget_utilization': np.float64(0.8), 'recent_win_rate': 1e-09}, 'base_prob': 0.01, 'final_prob': np.float64(0.005754759942452401), 'steps': [{'feature': 'network_load', 'value': np.float64(0.3), 'effect': 'multiply prob by 0.820 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.73), 'effect': 'multiply prob by 1.595 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.8), 'effect': 'multiply prob by 0.440 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': 1e-09, 'effect': 'multiply prob by 1.000 (higher recent wins -> lower prob)'}]}"
0.3,0.73,0.8,0.05,0.0028773800000000006,"{'timestamp': 1760866780.195134, 'inputs': {'network_load': np.float64(0.3), 'relay_reputation': np.float64(0.73), 'budget_utilization': np.float64(0.8), 'recent_win_rate': np.float64(0.05)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0028773800000000006), 'steps': [{'feature': 'network_load', 'value': np.float64(0.3), 'effect': 'multiply prob by 0.820 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.73), 'effect': 'multiply prob by 1.595 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.8), 'effect': 'multiply prob by 0.440 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.05), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.3,0.73,0.8,0.1,0.0028773800000000006,"{'timestamp': 1760866780.1951702, 'inputs': {'network_load': np.float64(0.3), 'relay_reputation': np.float64(0.73), 'budget_utilization': np.float64(0.8), 'recent_win_rate': np.float64(0.1)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0028773800000000006), 'steps': [{'feature': 'network_load', 'value': np.float64(0.3), 'effect': 'multiply prob by 0.820 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.73), 'effect': 'multiply prob by 1.595 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.8), 'effect': 'multiply prob by 0.440 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.1), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.3,0.73,0.8,0.15,0.0028773800000000006,"{'timestamp': 1760866780.1951957, 'inputs': {'network_load': np.float64(0.3), 'relay_reputation': np.float64(0.73), 'budget_utilization': np.float64(0.8), 'recent_win_rate': np.float64(0.15)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0028773800000000006), 'steps': [{'feature': 'network_load', 'value': np.float64(0.3), 'effect': 'multiply prob by 0.820 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.73), 'effect': 'multiply prob by 1.595 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.8), 'effect': 'multiply prob by 0.440 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.15), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.3,0.73,0.8,0.2,0.0028773800000000006,"{'timestamp': 1760866780.1952205, 'inputs': {'network_load': np.float64(0.3), 'relay_reputation': np.float64(0.73), 'budget_utilization': np.float64(0.8), 'recent_win_rate': np.float64(0.2)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0028773800000000006), 'steps': [{'feature': 'network_load', 'value': np.float64(0.3), 'effect': 'multiply prob by 0.820 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.73), 'effect': 'multiply prob by 1.595 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.8), 'effect': 'multiply prob by 0.440 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.2), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.3,0.73,0.8,0.25,0.0028773800000000006,"{'timestamp': 1760866780.1952493, 'inputs': {'network_load': np.float64(0.3), 'relay_reputation': np.float64(0.73), 'budget_utilization': np.float64(0.8), 'recent_win_rate': np.float64(0.25)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0028773800000000006), 'steps': [{'feature': 'network_load', 'value': np.float64(0.3), 'effect': 'multiply prob by 0.820 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.73), 'effect': 'multiply prob by 1.595 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.8), 'effect': 'multiply prob by 0.440 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.25), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.3,0.73,0.8,0.3,0.0028773800000000006,"{'timestamp': 1760866780.1952763, 'inputs': {'network_load': np.float64(0.3), 'relay_reputation': np.float64(0.73), 'budget_utilization': np.float64(0.8), 'recent_win_rate': np.float64(0.3)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0028773800000000006), 'steps': [{'feature': 'network_load', 'value': np.float64(0.3), 'effect': 'multiply prob by 0.820 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.73), 'effect': 'multiply prob by 1.595 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.8), 'effect': 'multiply prob by 0.440 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.3), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.3,0.84,0.05,0.0,0.0139268798607312,"{'timestamp': 1760866780.195307, 'inputs': {'network_load': np.float64(0.3), 'relay_reputation': np.float64(0.84), 'budget_utilization': np.float64(0.05), 'recent_win_rate': 1e-09}, 'base_prob': 0.01, 'final_prob': np.float64(0.0139268798607312), 'steps': [{'feature': 'network_load', 'value': np.float64(0.3), 'effect': 'multiply prob by 0.820 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.84), 'effect': 'multiply prob by 1.760 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.05), 'effect': 'multiply prob by 0.965 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': 1e-09, 'effect': 'multiply prob by 1.000 (higher recent wins -> lower prob)'}]}"
0.3,0.84,0.05,0.05,0.00696344,"{'timestamp': 1760866780.1953325, 'inputs': {'network_load': np.float64(0.3), 'relay_reputation': np.float64(0.84), 'budget_utilization': np.float64(0.05), 'recent_win_rate': np.float64(0.05)}, 'base_prob': 0.01, 'final_prob': np.float64(0.00696344), 'steps': [{'feature': 'network_load', 'value': np.float64(0.3), 'effect': 'multiply prob by 0.820 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.84), 'effect': 'multiply prob by 1.760 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.05), 'effect': 'multiply prob by 0.965 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.05), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.3,0.84,0.05,0.1,0.00696344,"{'timestamp': 1760866780.1953578, 'inputs': {'network_load': np.float64(0.3), 'relay_reputation': np.float64(0.84), 'budget_utilization': np.float64(0.05), 'recent_win_rate': np.float64(0.1)}, 'base_prob': 0.01, 'final_prob': np.float64(0.00696344), 'steps': [{'feature': 'network_load', 'value': np.float64(0.3), 'effect': 'multiply prob by 0.820 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.84), 'effect': 'multiply prob by 1.760 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.05), 'effect': 'multiply prob by 0.965 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.1), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.3,0.84,0.05,0.15,0.00696344,"{'timestamp': 1760866780.195383, 'inputs': {'network_load': np.float64(0.3), 'relay_reputation': np.float64(0.84), 'budget_utilization': np.float64(0.05), 'recent_win_rate': np.float64(0.15)}, 'base_prob': 0.01, 'final_prob': np.float64(0.00696344), 'steps': [{'feature': 'network_load', 'value': np.float64(0.3), 'effect': 'multiply prob by 0.820 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.84), 'effect': 'multiply prob by 1.760 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.05), 'effect': 'multiply prob by 0.965 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.15), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.3,0.84,0.05,0.2,0.00696344,"{'timestamp': 1760866780.195408, 'inputs': {'network_load': np.float64(0.3), 'relay_reputation': np.float64(0.84), 'budget_utilization': np.float64(0.05), 'recent_win_rate': np.float64(0.2)}, 'base_prob': 0.01, 'final_prob': np.float64(0.00696344), 'steps': [{'feature': 'network_load', 'value': np.float64(0.3), 'effect': 'multiply prob by 0.820 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.84), 'effect': 'multiply prob by 1.760 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.05), 'effect': 'multiply prob by 0.965 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.2), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.3,0.84,0.05,0.25,0.00696344,"{'timestamp': 1760866780.1954355, 'inputs': {'network_load': np.float64(0.3), 'relay_reputation': np.float64(0.84), 'budget_utilization': np.float64(0.05), 'recent_win_rate': np.float64(0.25)}, 'base_prob': 0.01, 'final_prob': np.float64(0.00696344), 'steps': [{'feature': 'network_load', 'value': np.float64(0.3), 'effect': 'multiply prob by 0.820 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.84), 'effect': 'multiply prob by 1.760 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.05), 'effect': 'multiply prob by 0.965 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.25), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.3,0.84,0.05,0.3,0.00696344,"{'timestamp': 1760866780.1954625, 'inputs': {'network_load': np.float64(0.3), 'relay_reputation': np.float64(0.84), 'budget_utilization': np.float64(0.05), 'recent_win_rate': np.float64(0.3)}, 'base_prob': 0.01, 'final_prob': np.float64(0.00696344), 'steps': [{'feature': 'network_load', 'value': np.float64(0.3), 'effect': 'multiply prob by 0.820 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.84), 'effect': 'multiply prob by 1.760 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.05), 'effect': 'multiply prob by 0.965 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.3), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.3,0.84,0.16,0.0,0.01281561587184384,"{'timestamp': 1760866780.195491, 'inputs': {'network_load': np.float64(0.3), 'relay_reputation': np.float64(0.84), 'budget_utilization': np.float64(0.16), 'recent_win_rate': 1e-09}, 'base_prob': 0.01, 'final_prob': np.float64(0.01281561587184384), 'steps': [{'feature': 'network_load', 'value': np.float64(0.3), 'effect': 'multiply prob by 0.820 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.84), 'effect': 'multiply prob by 1.760 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.16), 'effect': 'multiply prob by 0.888 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': 1e-09, 'effect': 'multiply prob by 1.000 (higher recent wins -> lower prob)'}]}"
0.3,0.84,0.16,0.05,0.006407808000000001,"{'timestamp': 1760866780.195518, 'inputs': {'network_load': np.float64(0.3), 'relay_reputation': np.float64(0.84), 'budget_utilization': np.float64(0.16), 'recent_win_rate': np.float64(0.05)}, 'base_prob': 0.01, 'final_prob': np.float64(0.006407808000000001), 'steps': [{'feature': 'network_load', 'value': np.float64(0.3), 'effect': 'multiply prob by 0.820 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.84), 'effect': 'multiply prob by 1.760 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.16), 'effect': 'multiply prob by 0.888 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.05), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.3,0.84,0.16,0.1,0.006407808000000001,"{'timestamp': 1760866780.1955433, 'inputs': {'network_load': np.float64(0.3), 'relay_reputation': np.float64(0.84), 'budget_utilization': np.float64(0.16), 'recent_win_rate': np.float64(0.1)}, 'base_prob': 0.01, 'final_prob': np.float64(0.006407808000000001), 'steps': [{'feature': 'network_load', 'value': np.float64(0.3), 'effect': 'multiply prob by 0.820 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.84), 'effect': 'multiply prob by 1.760 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.16), 'effect': 'multiply prob by 0.888 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.1), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.3,0.84,0.16,0.15,0.006407808000000001,"{'timestamp': 1760866780.1955702, 'inputs': {'network_load': np.float64(0.3), 'relay_reputation': np.float64(0.84), 'budget_utilization': np.float64(0.16), 'recent_win_rate': np.float64(0.15)}, 'base_prob': 0.01, 'final_prob': np.float64(0.006407808000000001), 'steps': [{'feature': 'network_load', 'value': np.float64(0.3), 'effect': 'multiply prob by 0.820 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.84), 'effect': 'multiply prob by 1.760 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.16), 'effect': 'multiply prob by 0.888 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.15), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.3,0.84,0.16,0.2,0.006407808000000001,"{'timestamp': 1760866780.1955993, 'inputs': {'network_load': np.float64(0.3), 'relay_reputation': np.float64(0.84), 'budget_utilization': np.float64(0.16), 'recent_win_rate': np.float64(0.2)}, 'base_prob': 0.01, 'final_prob': np.float64(0.006407808000000001), 'steps': [{'feature': 'network_load', 'value': np.float64(0.3), 'effect': 'multiply prob by 0.820 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.84), 'effect': 'multiply prob by 1.760 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.16), 'effect': 'multiply prob by 0.888 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.2), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.3,0.84,0.16,0.25,0.006407808000000001,"{'timestamp': 1760866780.195624, 'inputs': {'network_load': np.float64(0.3), 'relay_reputation': np.float64(0.84), 'budget_utilization': np.float64(0.16), 'recent_win_rate': np.float64(0.25)}, 'base_prob': 0.01, 'final_prob': np.float64(0.006407808000000001), 'steps': [{'feature': 'network_load', 'value': np.float64(0.3), 'effect': 'multiply prob by 0.820 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.84), 'effect': 'multiply prob by 1.760 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.16), 'effect': 'multiply prob by 0.888 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.25), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.3,0.84,0.16,0.3,0.006407808000000001,"{'timestamp': 1760866780.1956494, 'inputs': {'network_load': np.float64(0.3), 'relay_reputation': np.float64(0.84), 'budget_utilization': np.float64(0.16), 'recent_win_rate': np.float64(0.3)}, 'base_prob': 0.01, 'final_prob': np.float64(0.006407808000000001), 'steps': [{'feature': 'network_load', 'value': np.float64(0.3), 'effect': 'multiply prob by 0.820 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.84), 'effect': 'multiply prob by 1.760 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.16), 'effect': 'multiply prob by 0.888 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.3), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.3,0.84,0.26,0.0,0.011805375881946242,"{'timestamp': 1760866780.1956794, 'inputs': {'network_load': np.float64(0.3), 'relay_reputation': np.float64(0.84), 'budget_utilization': np.float64(0.26), 'recent_win_rate': 1e-09}, 'base_prob': 0.01, 'final_prob': np.float64(0.011805375881946242), 'steps': [{'feature': 'network_load', 'value': np.float64(0.3), 'effect': 'multiply prob by 0.820 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.84), 'effect': 'multiply prob by 1.760 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.26), 'effect': 'multiply prob by 0.818 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': 1e-09, 'effect': 'multiply prob by 1.000 (higher recent wins -> lower prob)'}]}"
0.3,0.84,0.26,0.05,0.005902688000000001,"{'timestamp': 1760866780.1957066, 'inputs': {'network_load': np.float64(0.3), 'relay_reputation': np.float64(0.84), 'budget_utilization': np.float64(0.26), 'recent_win_rate': np.float64(0.05)}, 'base_prob': 0.01, 'final_prob': np.float64(0.005902688000000001), 'steps': [{'feature': 'network_load', 'value': np.float64(0.3), 'effect': 'multiply prob by 0.820 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.84), 'effect': 'multiply prob by 1.760 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.26), 'effect': 'multiply prob by 0.818 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.05), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.3,0.84,0.26,0.1,0.005902688000000001,"{'timestamp': 1760866780.1957316, 'inputs': {'network_load': np.float64(0.3), 'relay_reputation': np.float64(0.84), 'budget_utilization': np.float64(0.26), 'recent_win_rate': np.float64(0.1)}, 'base_prob': 0.01, 'final_prob': np.float64(0.005902688000000001), 'steps': [{'feature': 'network_load', 'value': np.float64(0.3), 'effect': 'multiply prob by 0.820 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.84), 'effect': 'multiply prob by 1.760 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.26), 'effect': 'multiply prob by 0.818 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.1), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.3,0.84,0.26,0.15,0.005902688000000001,"{'timestamp': 1760866780.1957572, 'inputs': {'network_load': np.float64(0.3), 'relay_reputation': np.float64(0.84), 'budget_utilization': np.float64(0.26), 'recent_win_rate': np.float64(0.15)}, 'base_prob': 0.01, 'final_prob': np.float64(0.005902688000000001), 'steps': [{'feature': 'network_load', 'value': np.float64(0.3), 'effect': 'multiply prob by 0.820 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.84), 'effect': 'multiply prob by 1.760 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.26), 'effect': 'multiply prob by 0.818 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.15), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.3,0.84,0.26,0.2,0.005902688000000001,"{'timestamp': 1760866780.1957822, 'inputs': {'network_load': np.float64(0.3), 'relay_reputation': np.float64(0.84), 'budget_utilization': np.float64(0.26), 'recent_win_rate': np.float64(0.2)}, 'base_prob': 0.01, 'final_prob': np.float64(0.005902688000000001), 'steps': [{'feature': 'network_load', 'value': np.float64(0.3), 'effect': 'multiply prob by 0.820 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.84), 'effect': 'multiply prob by 1.760 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.26), 'effect': 'multiply prob by 0.818 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.2), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.3,0.84,0.26,0.25,0.005902688000000001,"{'timestamp': 1760866780.1958072, 'inputs': {'network_load': np.float64(0.3), 'relay_reputation': np.float64(0.84), 'budget_utilization': np.float64(0.26), 'recent_win_rate': np.float64(0.25)}, 'base_prob': 0.01, 'final_prob': np.float64(0.005902688000000001), 'steps': [{'feature': 'network_load', 'value': np.float64(0.3), 'effect': 'multiply prob by 0.820 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.84), 'effect': 'multiply prob by 1.760 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.26), 'effect': 'multiply prob by 0.818 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.25), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.3,0.84,0.26,0.3,0.005902688000000001,"{'timestamp': 1760866780.1958342, 'inputs': {'network_load': np.float64(0.3), 'relay_reputation': np.float64(0.84), 'budget_utilization': np.float64(0.26), 'recent_win_rate': np.float64(0.3)}, 'base_prob': 0.01, 'final_prob': np.float64(0.005902688000000001), 'steps': [{'feature': 'network_load', 'value': np.float64(0.3), 'effect': 'multiply prob by 0.820 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.84), 'effect': 'multiply prob by 1.760 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.26), 'effect': 'multiply prob by 0.818 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.3), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.3,0.84,0.37,0.0,0.010694111893058881,"{'timestamp': 1760866780.1958613, 'inputs': {'network_load': np.float64(0.3), 'relay_reputation': np.float64(0.84), 'budget_utilization': np.float64(0.37), 'recent_win_rate': 1e-09}, 'base_prob': 0.01, 'final_prob': np.float64(0.010694111893058881), 'steps': [{'feature': 'network_load', 'value': np.float64(0.3), 'effect': 'multiply prob by 0.820 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.84), 'effect': 'multiply prob by 1.760 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.37), 'effect': 'multiply prob by 0.741 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': 1e-09, 'effect': 'multiply prob by 1.000 (higher recent wins -> lower prob)'}]}"
0.3,0.84,0.37,0.05,0.005347056000000001,"{'timestamp': 1760866780.1958883, 'inputs': {'network_load': np.float64(0.3), 'relay_reputation': np.float64(0.84), 'budget_utilization': np.float64(0.37), 'recent_win_rate': np.float64(0.05)}, 'base_prob': 0.01, 'final_prob': np.float64(0.005347056000000001), 'steps': [{'feature': 'network_load', 'value': np.float64(0.3), 'effect': 'multiply prob by 0.820 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.84), 'effect': 'multiply prob by 1.760 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.37), 'effect': 'multiply prob by 0.741 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.05), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.3,0.84,0.37,0.1,0.005347056000000001,"{'timestamp': 1760866780.1959155, 'inputs': {'network_load': np.float64(0.3), 'relay_reputation': np.float64(0.84), 'budget_utilization': np.float64(0.37), 'recent_win_rate': np.float64(0.1)}, 'base_prob': 0.01, 'final_prob': np.float64(0.005347056000000001), 'steps': [{'feature': 'network_load', 'value': np.float64(0.3), 'effect': 'multiply prob by 0.820 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.84), 'effect': 'multiply prob by 1.760 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.37), 'effect': 'multiply prob by 0.741 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.1), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.3,0.84,0.37,0.15,0.005347056000000001,"{'timestamp': 1760866780.195941, 'inputs': {'network_load': np.float64(0.3), 'relay_reputation': np.float64(0.84), 'budget_utilization': np.float64(0.37), 'recent_win_rate': np.float64(0.15)}, 'base_prob': 0.01, 'final_prob': np.float64(0.005347056000000001), 'steps': [{'feature': 'network_load', 'value': np.float64(0.3), 'effect': 'multiply prob by 0.820 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.84), 'effect': 'multiply prob by 1.760 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.37), 'effect': 'multiply prob by 0.741 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.15), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.3,0.84,0.37,0.2,0.005347056000000001,"{'timestamp': 1760866780.1959658, 'inputs': {'network_load': np.float64(0.3), 'relay_reputation': np.float64(0.84), 'budget_utilization': np.float64(0.37), 'recent_win_rate': np.float64(0.2)}, 'base_prob': 0.01, 'final_prob': np.float64(0.005347056000000001), 'steps': [{'feature': 'network_load', 'value': np.float64(0.3), 'effect': 'multiply prob by 0.820 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.84), 'effect': 'multiply prob by 1.760 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.37), 'effect': 'multiply prob by 0.741 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.2), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.3,0.84,0.37,0.25,0.005347056000000001,"{'timestamp': 1760866780.1960526, 'inputs': {'network_load': np.float64(0.3), 'relay_reputation': np.float64(0.84), 'budget_utilization': np.float64(0.37), 'recent_win_rate': np.float64(0.25)}, 'base_prob': 0.01, 'final_prob': np.float64(0.005347056000000001), 'steps': [{'feature': 'network_load', 'value': np.float64(0.3), 'effect': 'multiply prob by 0.820 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.84), 'effect': 'multiply prob by 1.760 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.37), 'effect': 'multiply prob by 0.741 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.25), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.3,0.84,0.37,0.3,0.005347056000000001,"{'timestamp': 1760866780.1960793, 'inputs': {'network_load': np.float64(0.3), 'relay_reputation': np.float64(0.84), 'budget_utilization': np.float64(0.37), 'recent_win_rate': np.float64(0.3)}, 'base_prob': 0.01, 'final_prob': np.float64(0.005347056000000001), 'steps': [{'feature': 'network_load', 'value': np.float64(0.3), 'effect': 'multiply prob by 0.820 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.84), 'effect': 'multiply prob by 1.760 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.37), 'effect': 'multiply prob by 0.741 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.3), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.3,0.84,0.48,0.0,0.009582847904171521,"{'timestamp': 1760866780.1961086, 'inputs': {'network_load': np.float64(0.3), 'relay_reputation': np.float64(0.84), 'budget_utilization': np.float64(0.48), 'recent_win_rate': 1e-09}, 'base_prob': 0.01, 'final_prob': np.float64(0.009582847904171521), 'steps': [{'feature': 'network_load', 'value': np.float64(0.3), 'effect': 'multiply prob by 0.820 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.84), 'effect': 'multiply prob by 1.760 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.48), 'effect': 'multiply prob by 0.664 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': 1e-09, 'effect': 'multiply prob by 1.000 (higher recent wins -> lower prob)'}]}"
0.3,0.84,0.48,0.05,0.004791424000000001,"{'timestamp': 1760866780.1961339, 'inputs': {'network_load': np.float64(0.3), 'relay_reputation': np.float64(0.84), 'budget_utilization': np.float64(0.48), 'recent_win_rate': np.float64(0.05)}, 'base_prob': 0.01, 'final_prob': np.float64(0.004791424000000001), 'steps': [{'feature': 'network_load', 'value': np.float64(0.3), 'effect': 'multiply prob by 0.820 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.84), 'effect': 'multiply prob by 1.760 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.48), 'effect': 'multiply prob by 0.664 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.05), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.3,0.84,0.48,0.1,0.004791424000000001,"{'timestamp': 1760866780.1961615, 'inputs': {'network_load': np.float64(0.3), 'relay_reputation': np.float64(0.84), 'budget_utilization': np.float64(0.48), 'recent_win_rate': np.float64(0.1)}, 'base_prob': 0.01, 'final_prob': np.float64(0.004791424000000001), 'steps': [{'feature': 'network_load', 'value': np.float64(0.3), 'effect': 'multiply prob by 0.820 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.84), 'effect': 'multiply prob by 1.760 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.48), 'effect': 'multiply prob by 0.664 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.1), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.3,0.84,0.48,0.15,0.004791424000000001,"{'timestamp': 1760866780.196189, 'inputs': {'network_load': np.float64(0.3), 'relay_reputation': np.float64(0.84), 'budget_utilization': np.float64(0.48), 'recent_win_rate': np.float64(0.15)}, 'base_prob': 0.01, 'final_prob': np.float64(0.004791424000000001), 'steps': [{'feature': 'network_load', 'value': np.float64(0.3), 'effect': 'multiply prob by 0.820 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.84), 'effect': 'multiply prob by 1.760 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.48), 'effect': 'multiply prob by 0.664 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.15), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.3,0.84,0.48,0.2,0.004791424000000001,"{'timestamp': 1760866780.1962142, 'inputs': {'network_load': np.float64(0.3), 'relay_reputation': np.float64(0.84), 'budget_utilization': np.float64(0.48), 'recent_win_rate': np.float64(0.2)}, 'base_prob': 0.01, 'final_prob': np.float64(0.004791424000000001), 'steps': [{'feature': 'network_load', 'value': np.float64(0.3), 'effect': 'multiply prob by 0.820 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.84), 'effect': 'multiply prob by 1.760 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.48), 'effect': 'multiply prob by 0.664 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.2), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.3,0.84,0.48,0.25,0.004791424000000001,"{'timestamp': 1760866780.1962435, 'inputs': {'network_load': np.float64(0.3), 'relay_reputation': np.float64(0.84), 'budget_utilization': np.float64(0.48), 'recent_win_rate': np.float64(0.25)}, 'base_prob': 0.01, 'final_prob': np.float64(0.004791424000000001), 'steps': [{'feature': 'network_load', 'value': np.float64(0.3), 'effect': 'multiply prob by 0.820 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.84), 'effect': 'multiply prob by 1.760 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.48), 'effect': 'multiply prob by 0.664 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.25), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.3,0.84,0.48,0.3,0.004791424000000001,"{'timestamp': 1760866780.1962688, 'inputs': {'network_load': np.float64(0.3), 'relay_reputation': np.float64(0.84), 'budget_utilization': np.float64(0.48), 'recent_win_rate': np.float64(0.3)}, 'base_prob': 0.01, 'final_prob': np.float64(0.004791424000000001), 'steps': [{'feature': 'network_load', 'value': np.float64(0.3), 'effect': 'multiply prob by 0.820 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.84), 'effect': 'multiply prob by 1.760 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.48), 'effect': 'multiply prob by 0.664 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.3), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.3,0.84,0.59,0.0,0.00847158391528416,"{'timestamp': 1760866780.196296, 'inputs': {'network_load': np.float64(0.3), 'relay_reputation': np.float64(0.84), 'budget_utilization': np.float64(0.59), 'recent_win_rate': 1e-09}, 'base_prob': 0.01, 'final_prob': np.float64(0.00847158391528416), 'steps': [{'feature': 'network_load', 'value': np.float64(0.3), 'effect': 'multiply prob by 0.820 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.84), 'effect': 'multiply prob by 1.760 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.59), 'effect': 'multiply prob by 0.587 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': 1e-09, 'effect': 'multiply prob by 1.000 (higher recent wins -> lower prob)'}]}"
0.3,0.84,0.59,0.05,0.004235792,"{'timestamp': 1760866780.1963232, 'inputs': {'network_load': np.float64(0.3), 'relay_reputation': np.float64(0.84), 'budget_utilization': np.float64(0.59), 'recent_win_rate': np.float64(0.05)}, 'base_prob': 0.01, 'final_prob': np.float64(0.004235792), 'steps': [{'feature': 'network_load', 'value': np.float64(0.3), 'effect': 'multiply prob by 0.820 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.84), 'effect': 'multiply prob by 1.760 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.59), 'effect': 'multiply prob by 0.587 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.05), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.3,0.84,0.59,0.1,0.004235792,"{'timestamp': 1760866780.1963487, 'inputs': {'network_load': np.float64(0.3), 'relay_reputation': np.float64(0.84), 'budget_utilization': np.float64(0.59), 'recent_win_rate': np.float64(0.1)}, 'base_prob': 0.01, 'final_prob': np.float64(0.004235792), 'steps': [{'feature': 'network_load', 'value': np.float64(0.3), 'effect': 'multiply prob by 0.820 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.84), 'effect': 'multiply prob by 1.760 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.59), 'effect': 'multiply prob by 0.587 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.1), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.3,0.84,0.59,0.15,0.004235792,"{'timestamp': 1760866780.1963758, 'inputs': {'network_load': np.float64(0.3), 'relay_reputation': np.float64(0.84), 'budget_utilization': np.float64(0.59), 'recent_win_rate': np.float64(0.15)}, 'base_prob': 0.01, 'final_prob': np.float64(0.004235792), 'steps': [{'feature': 'network_load', 'value': np.float64(0.3), 'effect': 'multiply prob by 0.820 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.84), 'effect': 'multiply prob by 1.760 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.59), 'effect': 'multiply prob by 0.587 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.15), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.3,0.84,0.59,0.2,0.004235792,"{'timestamp': 1760866780.1964052, 'inputs': {'network_load': np.float64(0.3), 'relay_reputation': np.float64(0.84), 'budget_utilization': np.float64(0.59), 'recent_win_rate': np.float64(0.2)}, 'base_prob': 0.01, 'final_prob': np.float64(0.004235792), 'steps': [{'feature': 'network_load', 'value': np.float64(0.3), 'effect': 'multiply prob by 0.820 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.84), 'effect': 'multiply prob by 1.760 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.59), 'effect': 'multiply prob by 0.587 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.2), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.3,0.84,0.59,0.25,0.004235792,"{'timestamp': 1760866780.196431, 'inputs': {'network_load': np.float64(0.3), 'relay_reputation': np.float64(0.84), 'budget_utilization': np.float64(0.59), 'recent_win_rate': np.float64(0.25)}, 'base_prob': 0.01, 'final_prob': np.float64(0.004235792), 'steps': [{'feature': 'network_load', 'value': np.float64(0.3), 'effect': 'multiply prob by 0.820 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.84), 'effect': 'multiply prob by 1.760 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.59), 'effect': 'multiply prob by 0.587 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.25), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.3,0.84,0.59,0.3,0.004235792,"{'timestamp': 1760866780.1964562, 'inputs': {'network_load': np.float64(0.3), 'relay_reputation': np.float64(0.84), 'budget_utilization': np.float64(0.59), 'recent_win_rate': np.float64(0.3)}, 'base_prob': 0.01, 'final_prob': np.float64(0.004235792), 'steps': [{'feature': 'network_load', 'value': np.float64(0.3), 'effect': 'multiply prob by 0.820 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.84), 'effect': 'multiply prob by 1.760 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.59), 'effect': 'multiply prob by 0.587 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.3), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.3,0.84,0.69,0.0,0.007461343925386562,"{'timestamp': 1760866780.1964848, 'inputs': {'network_load': np.float64(0.3), 'relay_reputation': np.float64(0.84), 'budget_utilization': np.float64(0.69), 'recent_win_rate': 1e-09}, 'base_prob': 0.01, 'final_prob': np.float64(0.007461343925386562), 'steps': [{'feature': 'network_load', 'value': np.float64(0.3), 'effect': 'multiply prob by 0.820 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.84), 'effect': 'multiply prob by 1.760 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.69), 'effect': 'multiply prob by 0.517 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': 1e-09, 'effect': 'multiply prob by 1.000 (higher recent wins -> lower prob)'}]}"
0.3,0.84,0.69,0.05,0.0037306720000000013,"{'timestamp': 1760866780.1965098, 'inputs': {'network_load': np.float64(0.3), 'relay_reputation': np.float64(0.84), 'budget_utilization': np.float64(0.69), 'recent_win_rate': np.float64(0.05)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0037306720000000013), 'steps': [{'feature': 'network_load', 'value': np.float64(0.3), 'effect': 'multiply prob by 0.820 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.84), 'effect': 'multiply prob by 1.760 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.69), 'effect': 'multiply prob by 0.517 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.05), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.3,0.84,0.69,0.1,0.0037306720000000013,"{'timestamp': 1760866780.1965368, 'inputs': {'network_load': np.float64(0.3), 'relay_reputation': np.float64(0.84), 'budget_utilization': np.float64(0.69), 'recent_win_rate': np.float64(0.1)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0037306720000000013), 'steps': [{'feature': 'network_load', 'value': np.float64(0.3), 'effect': 'multiply prob by 0.820 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.84), 'effect': 'multiply prob by 1.760 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.69), 'effect': 'multiply prob by 0.517 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.1), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.3,0.84,0.69,0.15,0.0037306720000000013,"{'timestamp': 1760866780.1965623, 'inputs': {'network_load': np.float64(0.3), 'relay_reputation': np.float64(0.84), 'budget_utilization': np.float64(0.69), 'recent_win_rate': np.float64(0.15)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0037306720000000013), 'steps': [{'feature': 'network_load', 'value': np.float64(0.3), 'effect': 'multiply prob by 0.820 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.84), 'effect': 'multiply prob by 1.760 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.69), 'effect': 'multiply prob by 0.517 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.15), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.3,0.84,0.69,0.2,0.0037306720000000013,"{'timestamp': 1760866780.1965892, 'inputs': {'network_load': np.float64(0.3), 'relay_reputation': np.float64(0.84), 'budget_utilization': np.float64(0.69), 'recent_win_rate': np.float64(0.2)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0037306720000000013), 'steps': [{'feature': 'network_load', 'value': np.float64(0.3), 'effect': 'multiply prob by 0.820 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.84), 'effect': 'multiply prob by 1.760 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.69), 'effect': 'multiply prob by 0.517 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.2), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.3,0.84,0.69,0.25,0.0037306720000000013,"{'timestamp': 1760866780.1966164, 'inputs': {'network_load': np.float64(0.3), 'relay_reputation': np.float64(0.84), 'budget_utilization': np.float64(0.69), 'recent_win_rate': np.float64(0.25)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0037306720000000013), 'steps': [{'feature': 'network_load', 'value': np.float64(0.3), 'effect': 'multiply prob by 0.820 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.84), 'effect': 'multiply prob by 1.760 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.69), 'effect': 'multiply prob by 0.517 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.25), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.3,0.84,0.69,0.3,0.0037306720000000013,"{'timestamp': 1760866780.1966414, 'inputs': {'network_load': np.float64(0.3), 'relay_reputation': np.float64(0.84), 'budget_utilization': np.float64(0.69), 'recent_win_rate': np.float64(0.3)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0037306720000000013), 'steps': [{'feature': 'network_load', 'value': np.float64(0.3), 'effect': 'multiply prob by 0.820 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.84), 'effect': 'multiply prob by 1.760 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.69), 'effect': 'multiply prob by 0.517 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.3), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.3,0.84,0.8,0.0,0.006350079936499202,"{'timestamp': 1760866780.1966684, 'inputs': {'network_load': np.float64(0.3), 'relay_reputation': np.float64(0.84), 'budget_utilization': np.float64(0.8), 'recent_win_rate': 1e-09}, 'base_prob': 0.01, 'final_prob': np.float64(0.006350079936499202), 'steps': [{'feature': 'network_load', 'value': np.float64(0.3), 'effect': 'multiply prob by 0.820 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.84), 'effect': 'multiply prob by 1.760 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.8), 'effect': 'multiply prob by 0.440 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': 1e-09, 'effect': 'multiply prob by 1.000 (higher recent wins -> lower prob)'}]}"
0.3,0.84,0.8,0.05,0.003175040000000001,"{'timestamp': 1760866780.1966937, 'inputs': {'network_load': np.float64(0.3), 'relay_reputation': np.float64(0.84), 'budget_utilization': np.float64(0.8), 'recent_win_rate': np.float64(0.05)}, 'base_prob': 0.01, 'final_prob': np.float64(0.003175040000000001), 'steps': [{'feature': 'network_load', 'value': np.float64(0.3), 'effect': 'multiply prob by 0.820 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.84), 'effect': 'multiply prob by 1.760 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.8), 'effect': 'multiply prob by 0.440 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.05), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.3,0.84,0.8,0.1,0.003175040000000001,"{'timestamp': 1760866780.1967192, 'inputs': {'network_load': np.float64(0.3), 'relay_reputation': np.float64(0.84), 'budget_utilization': np.float64(0.8), 'recent_win_rate': np.float64(0.1)}, 'base_prob': 0.01, 'final_prob': np.float64(0.003175040000000001), 'steps': [{'feature': 'network_load', 'value': np.float64(0.3), 'effect': 'multiply prob by 0.820 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.84), 'effect': 'multiply prob by 1.760 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.8), 'effect': 'multiply prob by 0.440 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.1), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.3,0.84,0.8,0.15,0.003175040000000001,"{'timestamp': 1760866780.1967466, 'inputs': {'network_load': np.float64(0.3), 'relay_reputation': np.float64(0.84), 'budget_utilization': np.float64(0.8), 'recent_win_rate': np.float64(0.15)}, 'base_prob': 0.01, 'final_prob': np.float64(0.003175040000000001), 'steps': [{'feature': 'network_load', 'value': np.float64(0.3), 'effect': 'multiply prob by 0.820 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.84), 'effect': 'multiply prob by 1.760 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.8), 'effect': 'multiply prob by 0.440 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.15), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.3,0.84,0.8,0.2,0.003175040000000001,"{'timestamp': 1760866780.196774, 'inputs': {'network_load': np.float64(0.3), 'relay_reputation': np.float64(0.84), 'budget_utilization': np.float64(0.8), 'recent_win_rate': np.float64(0.2)}, 'base_prob': 0.01, 'final_prob': np.float64(0.003175040000000001), 'steps': [{'feature': 'network_load', 'value': np.float64(0.3), 'effect': 'multiply prob by 0.820 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.84), 'effect': 'multiply prob by 1.760 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.8), 'effect': 'multiply prob by 0.440 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.2), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.3,0.84,0.8,0.25,0.003175040000000001,"{'timestamp': 1760866780.1968555, 'inputs': {'network_load': np.float64(0.3), 'relay_reputation': np.float64(0.84), 'budget_utilization': np.float64(0.8), 'recent_win_rate': np.float64(0.25)}, 'base_prob': 0.01, 'final_prob': np.float64(0.003175040000000001), 'steps': [{'feature': 'network_load', 'value': np.float64(0.3), 'effect': 'multiply prob by 0.820 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.84), 'effect': 'multiply prob by 1.760 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.8), 'effect': 'multiply prob by 0.440 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.25), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.3,0.84,0.8,0.3,0.003175040000000001,"{'timestamp': 1760866780.1968856, 'inputs': {'network_load': np.float64(0.3), 'relay_reputation': np.float64(0.84), 'budget_utilization': np.float64(0.8), 'recent_win_rate': np.float64(0.3)}, 'base_prob': 0.01, 'final_prob': np.float64(0.003175040000000001), 'steps': [{'feature': 'network_load', 'value': np.float64(0.3), 'effect': 'multiply prob by 0.820 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.84), 'effect': 'multiply prob by 1.760 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.8), 'effect': 'multiply prob by 0.440 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.3), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.3,0.95,0.05,0.0,0.015232524847674749,"{'timestamp': 1760866780.1969156, 'inputs': {'network_load': np.float64(0.3), 'relay_reputation': np.float64(0.95), 'budget_utilization': np.float64(0.05), 'recent_win_rate': 1e-09}, 'base_prob': 0.01, 'final_prob': np.float64(0.015232524847674749), 'steps': [{'feature': 'network_load', 'value': np.float64(0.3), 'effect': 'multiply prob by 0.820 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.95), 'effect': 'multiply prob by 1.925 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.05), 'effect': 'multiply prob by 0.965 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': 1e-09, 'effect': 'multiply prob by 1.000 (higher recent wins -> lower prob)'}]}"
0.3,0.95,0.05,0.05,0.0076162625,"{'timestamp': 1760866780.196943, 'inputs': {'network_load': np.float64(0.3), 'relay_reputation': np.float64(0.95), 'budget_utilization': np.float64(0.05), 'recent_win_rate': np.float64(0.05)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0076162625), 'steps': [{'feature': 'network_load', 'value': np.float64(0.3), 'effect': 'multiply prob by 0.820 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.95), 'effect': 'multiply prob by 1.925 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.05), 'effect': 'multiply prob by 0.965 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.05), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.3,0.95,0.05,0.1,0.0076162625,"{'timestamp': 1760866780.1969686, 'inputs': {'network_load': np.float64(0.3), 'relay_reputation': np.float64(0.95), 'budget_utilization': np.float64(0.05), 'recent_win_rate': np.float64(0.1)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0076162625), 'steps': [{'feature': 'network_load', 'value': np.float64(0.3), 'effect': 'multiply prob by 0.820 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.95), 'effect': 'multiply prob by 1.925 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.05), 'effect': 'multiply prob by 0.965 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.1), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.3,0.95,0.05,0.15,0.0076162625,"{'timestamp': 1760866780.1969936, 'inputs': {'network_load': np.float64(0.3), 'relay_reputation': np.float64(0.95), 'budget_utilization': np.float64(0.05), 'recent_win_rate': np.float64(0.15)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0076162625), 'steps': [{'feature': 'network_load', 'value': np.float64(0.3), 'effect': 'multiply prob by 0.820 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.95), 'effect': 'multiply prob by 1.925 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.05), 'effect': 'multiply prob by 0.965 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.15), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.3,0.95,0.05,0.2,0.0076162625,"{'timestamp': 1760866780.1970184, 'inputs': {'network_load': np.float64(0.3), 'relay_reputation': np.float64(0.95), 'budget_utilization': np.float64(0.05), 'recent_win_rate': np.float64(0.2)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0076162625), 'steps': [{'feature': 'network_load', 'value': np.float64(0.3), 'effect': 'multiply prob by 0.820 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.95), 'effect': 'multiply prob by 1.925 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.05), 'effect': 'multiply prob by 0.965 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.2), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.3,0.95,0.05,0.25,0.0076162625,"{'timestamp': 1760866780.1970434, 'inputs': {'network_load': np.float64(0.3), 'relay_reputation': np.float64(0.95), 'budget_utilization': np.float64(0.05), 'recent_win_rate': np.float64(0.25)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0076162625), 'steps': [{'feature': 'network_load', 'value': np.float64(0.3), 'effect': 'multiply prob by 0.820 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.95), 'effect': 'multiply prob by 1.925 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.05), 'effect': 'multiply prob by 0.965 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.25), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.3,0.95,0.05,0.3,0.0076162625,"{'timestamp': 1760866780.1970718, 'inputs': {'network_load': np.float64(0.3), 'relay_reputation': np.float64(0.95), 'budget_utilization': np.float64(0.05), 'recent_win_rate': np.float64(0.3)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0076162625), 'steps': [{'feature': 'network_load', 'value': np.float64(0.3), 'effect': 'multiply prob by 0.820 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.95), 'effect': 'multiply prob by 1.925 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.05), 'effect': 'multiply prob by 0.965 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.3), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.3,0.95,0.16,0.0,0.014017079859829201,"{'timestamp': 1760866780.1971004, 'inputs': {'network_load': np.float64(0.3), 'relay_reputation': np.float64(0.95), 'budget_utilization': np.float64(0.16), 'recent_win_rate': 1e-09}, 'base_prob': 0.01, 'final_prob': np.float64(0.014017079859829201), 'steps': [{'feature': 'network_load', 'value': np.float64(0.3), 'effect': 'multiply prob by 0.820 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.95), 'effect': 'multiply prob by 1.925 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.16), 'effect': 'multiply prob by 0.888 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': 1e-09, 'effect': 'multiply prob by 1.000 (higher recent wins -> lower prob)'}]}"
0.3,0.95,0.16,0.05,0.007008540000000001,"{'timestamp': 1760866780.1971543, 'inputs': {'network_load': np.float64(0.3), 'relay_reputation': np.float64(0.95), 'budget_utilization': np.float64(0.16), 'recent_win_rate': np.float64(0.05)}, 'base_prob': 0.01, 'final_prob': np.float64(0.007008540000000001), 'steps': [{'feature': 'network_load', 'value': np.float64(0.3), 'effect': 'multiply prob by 0.820 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.95), 'effect': 'multiply prob by 1.925 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.16), 'effect': 'multiply prob by 0.888 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.05), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.3,0.95,0.16,0.1,0.007008540000000001,"{'timestamp': 1760866780.1971834, 'inputs': {'network_load': np.float64(0.3), 'relay_reputation': np.float64(0.95), 'budget_utilization': np.float64(0.16), 'recent_win_rate': np.float64(0.1)}, 'base_prob': 0.01, 'final_prob': np.float64(0.007008540000000001), 'steps': [{'feature': 'network_load', 'value': np.float64(0.3), 'effect': 'multiply prob by 0.820 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.95), 'effect': 'multiply prob by 1.925 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.16), 'effect': 'multiply prob by 0.888 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.1), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.3,0.95,0.16,0.15,0.007008540000000001,"{'timestamp': 1760866780.197209, 'inputs': {'network_load': np.float64(0.3), 'relay_reputation': np.float64(0.95), 'budget_utilization': np.float64(0.16), 'recent_win_rate': np.float64(0.15)}, 'base_prob': 0.01, 'final_prob': np.float64(0.007008540000000001), 'steps': [{'feature': 'network_load', 'value': np.float64(0.3), 'effect': 'multiply prob by 0.820 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.95), 'effect': 'multiply prob by 1.925 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.16), 'effect': 'multiply prob by 0.888 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.15), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.3,0.95,0.16,0.2,0.007008540000000001,"{'timestamp': 1760866780.197234, 'inputs': {'network_load': np.float64(0.3), 'relay_reputation': np.float64(0.95), 'budget_utilization': np.float64(0.16), 'recent_win_rate': np.float64(0.2)}, 'base_prob': 0.01, 'final_prob': np.float64(0.007008540000000001), 'steps': [{'feature': 'network_load', 'value': np.float64(0.3), 'effect': 'multiply prob by 0.820 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.95), 'effect': 'multiply prob by 1.925 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.16), 'effect': 'multiply prob by 0.888 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.2), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.3,0.95,0.16,0.25,0.007008540000000001,"{'timestamp': 1760866780.1972628, 'inputs': {'network_load': np.float64(0.3), 'relay_reputation': np.float64(0.95), 'budget_utilization': np.float64(0.16), 'recent_win_rate': np.float64(0.25)}, 'base_prob': 0.01, 'final_prob': np.float64(0.007008540000000001), 'steps': [{'feature': 'network_load', 'value': np.float64(0.3), 'effect': 'multiply prob by 0.820 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.95), 'effect': 'multiply prob by 1.925 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.16), 'effect': 'multiply prob by 0.888 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.25), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.3,0.95,0.16,0.3,0.007008540000000001,"{'timestamp': 1760866780.1972878, 'inputs': {'network_load': np.float64(0.3), 'relay_reputation': np.float64(0.95), 'budget_utilization': np.float64(0.16), 'recent_win_rate': np.float64(0.3)}, 'base_prob': 0.01, 'final_prob': np.float64(0.007008540000000001), 'steps': [{'feature': 'network_load', 'value': np.float64(0.3), 'effect': 'multiply prob by 0.820 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.95), 'effect': 'multiply prob by 1.925 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.16), 'effect': 'multiply prob by 0.888 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.3), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.3,0.95,0.26,0.0,0.0129121298708787,"{'timestamp': 1760866780.1973205, 'inputs': {'network_load': np.float64(0.3), 'relay_reputation': np.float64(0.95), 'budget_utilization': np.float64(0.26), 'recent_win_rate': 1e-09}, 'base_prob': 0.01, 'final_prob': np.float64(0.0129121298708787), 'steps': [{'feature': 'network_load', 'value': np.float64(0.3), 'effect': 'multiply prob by 0.820 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.95), 'effect': 'multiply prob by 1.925 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.26), 'effect': 'multiply prob by 0.818 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': 1e-09, 'effect': 'multiply prob by 1.000 (higher recent wins -> lower prob)'}]}"
0.3,0.95,0.26,0.05,0.006456065,"{'timestamp': 1760866780.1973479, 'inputs': {'network_load': np.float64(0.3), 'relay_reputation': np.float64(0.95), 'budget_utilization': np.float64(0.26), 'recent_win_rate': np.float64(0.05)}, 'base_prob': 0.01, 'final_prob': np.float64(0.006456065), 'steps': [{'feature': 'network_load', 'value': np.float64(0.3), 'effect': 'multiply prob by 0.820 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.95), 'effect': 'multiply prob by 1.925 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.26), 'effect': 'multiply prob by 0.818 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.05), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.3,0.95,0.26,0.1,0.006456065,"{'timestamp': 1760866780.1973753, 'inputs': {'network_load': np.float64(0.3), 'relay_reputation': np.float64(0.95), 'budget_utilization': np.float64(0.26), 'recent_win_rate': np.float64(0.1)}, 'base_prob': 0.01, 'final_prob': np.float64(0.006456065), 'steps': [{'feature': 'network_load', 'value': np.float64(0.3), 'effect': 'multiply prob by 0.820 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.95), 'effect': 'multiply prob by 1.925 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.26), 'effect': 'multiply prob by 0.818 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.1), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.3,0.95,0.26,0.15,0.006456065,"{'timestamp': 1760866780.197402, 'inputs': {'network_load': np.float64(0.3), 'relay_reputation': np.float64(0.95), 'budget_utilization': np.float64(0.26), 'recent_win_rate': np.float64(0.15)}, 'base_prob': 0.01, 'final_prob': np.float64(0.006456065), 'steps': [{'feature': 'network_load', 'value': np.float64(0.3), 'effect': 'multiply prob by 0.820 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.95), 'effect': 'multiply prob by 1.925 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.26), 'effect': 'multiply prob by 0.818 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.15), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.3,0.95,0.26,0.2,0.006456065,"{'timestamp': 1760866780.1974273, 'inputs': {'network_load': np.float64(0.3), 'relay_reputation': np.float64(0.95), 'budget_utilization': np.float64(0.26), 'recent_win_rate': np.float64(0.2)}, 'base_prob': 0.01, 'final_prob': np.float64(0.006456065), 'steps': [{'feature': 'network_load', 'value': np.float64(0.3), 'effect': 'multiply prob by 0.820 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.95), 'effect': 'multiply prob by 1.925 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.26), 'effect': 'multiply prob by 0.818 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.2), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.3,0.95,0.26,0.25,0.006456065,"{'timestamp': 1760866780.1974545, 'inputs': {'network_load': np.float64(0.3), 'relay_reputation': np.float64(0.95), 'budget_utilization': np.float64(0.26), 'recent_win_rate': np.float64(0.25)}, 'base_prob': 0.01, 'final_prob': np.float64(0.006456065), 'steps': [{'feature': 'network_load', 'value': np.float64(0.3), 'effect': 'multiply prob by 0.820 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.95), 'effect': 'multiply prob by 1.925 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.26), 'effect': 'multiply prob by 0.818 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.25), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.3,0.95,0.26,0.3,0.006456065,"{'timestamp': 1760866780.1974921, 'inputs': {'network_load': np.float64(0.3), 'relay_reputation': np.float64(0.95), 'budget_utilization': np.float64(0.26), 'recent_win_rate': np.float64(0.3)}, 'base_prob': 0.01, 'final_prob': np.float64(0.006456065), 'steps': [{'feature': 'network_load', 'value': np.float64(0.3), 'effect': 'multiply prob by 0.820 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.95), 'effect': 'multiply prob by 1.925 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.26), 'effect': 'multiply prob by 0.818 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.3), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.3,0.95,0.37,0.0,0.011696684883033149,"{'timestamp': 1760866780.1975207, 'inputs': {'network_load': np.float64(0.3), 'relay_reputation': np.float64(0.95), 'budget_utilization': np.float64(0.37), 'recent_win_rate': 1e-09}, 'base_prob': 0.01, 'final_prob': np.float64(0.011696684883033149), 'steps': [{'feature': 'network_load', 'value': np.float64(0.3), 'effect': 'multiply prob by 0.820 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.95), 'effect': 'multiply prob by 1.925 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.37), 'effect': 'multiply prob by 0.741 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': 1e-09, 'effect': 'multiply prob by 1.000 (higher recent wins -> lower prob)'}]}"
0.3,0.95,0.37,0.05,0.0058483425,"{'timestamp': 1760866780.1975482, 'inputs': {'network_load': np.float64(0.3), 'relay_reputation': np.float64(0.95), 'budget_utilization': np.float64(0.37), 'recent_win_rate': np.float64(0.05)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0058483425), 'steps': [{'feature': 'network_load', 'value': np.float64(0.3), 'effect': 'multiply prob by 0.820 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.95), 'effect': 'multiply prob by 1.925 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.37), 'effect': 'multiply prob by 0.741 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.05), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.3,0.95,0.37,0.1,0.0058483425,"{'timestamp': 1760866780.1975749, 'inputs': {'network_load': np.float64(0.3), 'relay_reputation': np.float64(0.95), 'budget_utilization': np.float64(0.37), 'recent_win_rate': np.float64(0.1)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0058483425), 'steps': [{'feature': 'network_load', 'value': np.float64(0.3), 'effect': 'multiply prob by 0.820 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.95), 'effect': 'multiply prob by 1.925 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.37), 'effect': 'multiply prob by 0.741 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.1), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.3,0.95,0.37,0.15,0.0058483425,"{'timestamp': 1760866780.1976018, 'inputs': {'network_load': np.float64(0.3), 'relay_reputation': np.float64(0.95), 'budget_utilization': np.float64(0.37), 'recent_win_rate': np.float64(0.15)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0058483425), 'steps': [{'feature': 'network_load', 'value': np.float64(0.3), 'effect': 'multiply prob by 0.820 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.95), 'effect': 'multiply prob by 1.925 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.37), 'effect': 'multiply prob by 0.741 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.15), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.3,0.95,0.37,0.2,0.0058483425,"{'timestamp': 1760866780.197627, 'inputs': {'network_load': np.float64(0.3), 'relay_reputation': np.float64(0.95), 'budget_utilization': np.float64(0.37), 'recent_win_rate': np.float64(0.2)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0058483425), 'steps': [{'feature': 'network_load', 'value': np.float64(0.3), 'effect': 'multiply prob by 0.820 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.95), 'effect': 'multiply prob by 1.925 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.37), 'effect': 'multiply prob by 0.741 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.2), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.3,0.95,0.37,0.25,0.0058483425,"{'timestamp': 1760866780.1976523, 'inputs': {'network_load': np.float64(0.3), 'relay_reputation': np.float64(0.95), 'budget_utilization': np.float64(0.37), 'recent_win_rate': np.float64(0.25)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0058483425), 'steps': [{'feature': 'network_load', 'value': np.float64(0.3), 'effect': 'multiply prob by 0.820 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.95), 'effect': 'multiply prob by 1.925 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.37), 'effect': 'multiply prob by 0.741 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.25), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.3,0.95,0.37,0.3,0.0058483425,"{'timestamp': 1760866780.1976774, 'inputs': {'network_load': np.float64(0.3), 'relay_reputation': np.float64(0.95), 'budget_utilization': np.float64(0.37), 'recent_win_rate': np.float64(0.3)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0058483425), 'steps': [{'feature': 'network_load', 'value': np.float64(0.3), 'effect': 'multiply prob by 0.820 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.95), 'effect': 'multiply prob by 1.925 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.37), 'effect': 'multiply prob by 0.741 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.3), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.3,0.95,0.48,0.0,0.010481239895187601,"{'timestamp': 1760866780.1977065, 'inputs': {'network_load': np.float64(0.3), 'relay_reputation': np.float64(0.95), 'budget_utilization': np.float64(0.48), 'recent_win_rate': 1e-09}, 'base_prob': 0.01, 'final_prob': np.float64(0.010481239895187601), 'steps': [{'feature': 'network_load', 'value': np.float64(0.3), 'effect': 'multiply prob by 0.820 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.95), 'effect': 'multiply prob by 1.925 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.48), 'effect': 'multiply prob by 0.664 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': 1e-09, 'effect': 'multiply prob by 1.000 (higher recent wins -> lower prob)'}]}"
0.3,0.95,0.48,0.05,0.0052406200000000005,"{'timestamp': 1760866780.1977317, 'inputs': {'network_load': np.float64(0.3), 'relay_reputation': np.float64(0.95), 'budget_utilization': np.float64(0.48), 'recent_win_rate': np.float64(0.05)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0052406200000000005), 'steps': [{'feature': 'network_load', 'value': np.float64(0.3), 'effect': 'multiply prob by 0.820 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.95), 'effect': 'multiply prob by 1.925 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.48), 'effect': 'multiply prob by 0.664 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.05), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.3,0.95,0.48,0.1,0.0052406200000000005,"{'timestamp': 1760866780.1978145, 'inputs': {'network_load': np.float64(0.3), 'relay_reputation': np.float64(0.95), 'budget_utilization': np.float64(0.48), 'recent_win_rate': np.float64(0.1)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0052406200000000005), 'steps': [{'feature': 'network_load', 'value': np.float64(0.3), 'effect': 'multiply prob by 0.820 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.95), 'effect': 'multiply prob by 1.925 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.48), 'effect': 'multiply prob by 0.664 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.1), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.3,0.95,0.48,0.15,0.0052406200000000005,"{'timestamp': 1760866780.1978438, 'inputs': {'network_load': np.float64(0.3), 'relay_reputation': np.float64(0.95), 'budget_utilization': np.float64(0.48), 'recent_win_rate': np.float64(0.15)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0052406200000000005), 'steps': [{'feature': 'network_load', 'value': np.float64(0.3), 'effect': 'multiply prob by 0.820 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.95), 'effect': 'multiply prob by 1.925 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.48), 'effect': 'multiply prob by 0.664 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.15), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.3,0.95,0.48,0.2,0.0052406200000000005,"{'timestamp': 1760866780.1978693, 'inputs': {'network_load': np.float64(0.3), 'relay_reputation': np.float64(0.95), 'budget_utilization': np.float64(0.48), 'recent_win_rate': np.float64(0.2)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0052406200000000005), 'steps': [{'feature': 'network_load', 'value': np.float64(0.3), 'effect': 'multiply prob by 0.820 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.95), 'effect': 'multiply prob by 1.925 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.48), 'effect': 'multiply prob by 0.664 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.2), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.3,0.95,0.48,0.25,0.0052406200000000005,"{'timestamp': 1760866780.1978962, 'inputs': {'network_load': np.float64(0.3), 'relay_reputation': np.float64(0.95), 'budget_utilization': np.float64(0.48), 'recent_win_rate': np.float64(0.25)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0052406200000000005), 'steps': [{'feature': 'network_load', 'value': np.float64(0.3), 'effect': 'multiply prob by 0.820 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.95), 'effect': 'multiply prob by 1.925 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.48), 'effect': 'multiply prob by 0.664 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.25), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.3,0.95,0.48,0.3,0.0052406200000000005,"{'timestamp': 1760866780.1979215, 'inputs': {'network_load': np.float64(0.3), 'relay_reputation': np.float64(0.95), 'budget_utilization': np.float64(0.48), 'recent_win_rate': np.float64(0.3)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0052406200000000005), 'steps': [{'feature': 'network_load', 'value': np.float64(0.3), 'effect': 'multiply prob by 0.820 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.95), 'effect': 'multiply prob by 1.925 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.48), 'effect': 'multiply prob by 0.664 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.3), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.3,0.95,0.59,0.0,0.00926579490734205,"{'timestamp': 1760866780.1979527, 'inputs': {'network_load': np.float64(0.3), 'relay_reputation': np.float64(0.95), 'budget_utilization': np.float64(0.59), 'recent_win_rate': 1e-09}, 'base_prob': 0.01, 'final_prob': np.float64(0.00926579490734205), 'steps': [{'feature': 'network_load', 'value': np.float64(0.3), 'effect': 'multiply prob by 0.820 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.95), 'effect': 'multiply prob by 1.925 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.59), 'effect': 'multiply prob by 0.587 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': 1e-09, 'effect': 'multiply prob by 1.000 (higher recent wins -> lower prob)'}]}"
0.3,0.95,0.59,0.05,0.0046328975,"{'timestamp': 1760866780.1980348, 'inputs': {'network_load': np.float64(0.3), 'relay_reputation': np.float64(0.95), 'budget_utilization': np.float64(0.59), 'recent_win_rate': np.float64(0.05)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0046328975), 'steps': [{'feature': 'network_load', 'value': np.float64(0.3), 'effect': 'multiply prob by 0.820 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.95), 'effect': 'multiply prob by 1.925 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.59), 'effect': 'multiply prob by 0.587 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.05), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.3,0.95,0.59,0.1,0.0046328975,"{'timestamp': 1760866780.198062, 'inputs': {'network_load': np.float64(0.3), 'relay_reputation': np.float64(0.95), 'budget_utilization': np.float64(0.59), 'recent_win_rate': np.float64(0.1)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0046328975), 'steps': [{'feature': 'network_load', 'value': np.float64(0.3), 'effect': 'multiply prob by 0.820 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.95), 'effect': 'multiply prob by 1.925 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.59), 'effect': 'multiply prob by 0.587 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.1), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.3,0.95,0.59,0.15,0.0046328975,"{'timestamp': 1760866780.1980953, 'inputs': {'network_load': np.float64(0.3), 'relay_reputation': np.float64(0.95), 'budget_utilization': np.float64(0.59), 'recent_win_rate': np.float64(0.15)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0046328975), 'steps': [{'feature': 'network_load', 'value': np.float64(0.3), 'effect': 'multiply prob by 0.820 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.95), 'effect': 'multiply prob by 1.925 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.59), 'effect': 'multiply prob by 0.587 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.15), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.3,0.95,0.59,0.2,0.0046328975,"{'timestamp': 1760866780.1981227, 'inputs': {'network_load': np.float64(0.3), 'relay_reputation': np.float64(0.95), 'budget_utilization': np.float64(0.59), 'recent_win_rate': np.float64(0.2)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0046328975), 'steps': [{'feature': 'network_load', 'value': np.float64(0.3), 'effect': 'multiply prob by 0.820 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.95), 'effect': 'multiply prob by 1.925 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.59), 'effect': 'multiply prob by 0.587 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.2), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.3,0.95,0.59,0.25,0.0046328975,"{'timestamp': 1760866780.1981516, 'inputs': {'network_load': np.float64(0.3), 'relay_reputation': np.float64(0.95), 'budget_utilization': np.float64(0.59), 'recent_win_rate': np.float64(0.25)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0046328975), 'steps': [{'feature': 'network_load', 'value': np.float64(0.3), 'effect': 'multiply prob by 0.820 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.95), 'effect': 'multiply prob by 1.925 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.59), 'effect': 'multiply prob by 0.587 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.25), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.3,0.95,0.59,0.3,0.0046328975,"{'timestamp': 1760866780.1981769, 'inputs': {'network_load': np.float64(0.3), 'relay_reputation': np.float64(0.95), 'budget_utilization': np.float64(0.59), 'recent_win_rate': np.float64(0.3)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0046328975), 'steps': [{'feature': 'network_load', 'value': np.float64(0.3), 'effect': 'multiply prob by 0.820 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.95), 'effect': 'multiply prob by 1.925 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.59), 'effect': 'multiply prob by 0.587 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.3), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.3,0.95,0.69,0.0,0.00816084491839155,"{'timestamp': 1760866780.198208, 'inputs': {'network_load': np.float64(0.3), 'relay_reputation': np.float64(0.95), 'budget_utilization': np.float64(0.69), 'recent_win_rate': 1e-09}, 'base_prob': 0.01, 'final_prob': np.float64(0.00816084491839155), 'steps': [{'feature': 'network_load', 'value': np.float64(0.3), 'effect': 'multiply prob by 0.820 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.95), 'effect': 'multiply prob by 1.925 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.69), 'effect': 'multiply prob by 0.517 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': 1e-09, 'effect': 'multiply prob by 1.000 (higher recent wins -> lower prob)'}]}"
0.3,0.95,0.69,0.05,0.004080422500000001,"{'timestamp': 1760866780.198258, 'inputs': {'network_load': np.float64(0.3), 'relay_reputation': np.float64(0.95), 'budget_utilization': np.float64(0.69), 'recent_win_rate': np.float64(0.05)}, 'base_prob': 0.01, 'final_prob': np.float64(0.004080422500000001), 'steps': [{'feature': 'network_load', 'value': np.float64(0.3), 'effect': 'multiply prob by 0.820 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.95), 'effect': 'multiply prob by 1.925 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.69), 'effect': 'multiply prob by 0.517 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.05), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.3,0.95,0.69,0.1,0.004080422500000001,"{'timestamp': 1760866780.1982887, 'inputs': {'network_load': np.float64(0.3), 'relay_reputation': np.float64(0.95), 'budget_utilization': np.float64(0.69), 'recent_win_rate': np.float64(0.1)}, 'base_prob': 0.01, 'final_prob': np.float64(0.004080422500000001), 'steps': [{'feature': 'network_load', 'value': np.float64(0.3), 'effect': 'multiply prob by 0.820 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.95), 'effect': 'multiply prob by 1.925 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.69), 'effect': 'multiply prob by 0.517 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.1), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.3,0.95,0.69,0.15,0.004080422500000001,"{'timestamp': 1760866780.1983135, 'inputs': {'network_load': np.float64(0.3), 'relay_reputation': np.float64(0.95), 'budget_utilization': np.float64(0.69), 'recent_win_rate': np.float64(0.15)}, 'base_prob': 0.01, 'final_prob': np.float64(0.004080422500000001), 'steps': [{'feature': 'network_load', 'value': np.float64(0.3), 'effect': 'multiply prob by 0.820 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.95), 'effect': 'multiply prob by 1.925 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.69), 'effect': 'multiply prob by 0.517 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.15), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.3,0.95,0.69,0.2,0.004080422500000001,"{'timestamp': 1760866780.1983402, 'inputs': {'network_load': np.float64(0.3), 'relay_reputation': np.float64(0.95), 'budget_utilization': np.float64(0.69), 'recent_win_rate': np.float64(0.2)}, 'base_prob': 0.01, 'final_prob': np.float64(0.004080422500000001), 'steps': [{'feature': 'network_load', 'value': np.float64(0.3), 'effect': 'multiply prob by 0.820 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.95), 'effect': 'multiply prob by 1.925 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.69), 'effect': 'multiply prob by 0.517 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.2), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.3,0.95,0.69,0.25,0.004080422500000001,"{'timestamp': 1760866780.1983666, 'inputs': {'network_load': np.float64(0.3), 'relay_reputation': np.float64(0.95), 'budget_utilization': np.float64(0.69), 'recent_win_rate': np.float64(0.25)}, 'base_prob': 0.01, 'final_prob': np.float64(0.004080422500000001), 'steps': [{'feature': 'network_load', 'value': np.float64(0.3), 'effect': 'multiply prob by 0.820 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.95), 'effect': 'multiply prob by 1.925 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.69), 'effect': 'multiply prob by 0.517 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.25), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.3,0.95,0.69,0.3,0.004080422500000001,"{'timestamp': 1760866780.198392, 'inputs': {'network_load': np.float64(0.3), 'relay_reputation': np.float64(0.95), 'budget_utilization': np.float64(0.69), 'recent_win_rate': np.float64(0.3)}, 'base_prob': 0.01, 'final_prob': np.float64(0.004080422500000001), 'steps': [{'feature': 'network_load', 'value': np.float64(0.3), 'effect': 'multiply prob by 0.820 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.95), 'effect': 'multiply prob by 1.925 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.69), 'effect': 'multiply prob by 0.517 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.3), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.3,0.95,0.8,0.0,0.006945399930546,"{'timestamp': 1760866780.1984224, 'inputs': {'network_load': np.float64(0.3), 'relay_reputation': np.float64(0.95), 'budget_utilization': np.float64(0.8), 'recent_win_rate': 1e-09}, 'base_prob': 0.01, 'final_prob': np.float64(0.006945399930546), 'steps': [{'feature': 'network_load', 'value': np.float64(0.3), 'effect': 'multiply prob by 0.820 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.95), 'effect': 'multiply prob by 1.925 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.8), 'effect': 'multiply prob by 0.440 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': 1e-09, 'effect': 'multiply prob by 1.000 (higher recent wins -> lower prob)'}]}"
0.3,0.95,0.8,0.05,0.0034727000000000004,"{'timestamp': 1760866780.198448, 'inputs': {'network_load': np.float64(0.3), 'relay_reputation': np.float64(0.95), 'budget_utilization': np.float64(0.8), 'recent_win_rate': np.float64(0.05)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0034727000000000004), 'steps': [{'feature': 'network_load', 'value': np.float64(0.3), 'effect': 'multiply prob by 0.820 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.95), 'effect': 'multiply prob by 1.925 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.8), 'effect': 'multiply prob by 0.440 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.05), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.3,0.95,0.8,0.1,0.0034727000000000004,"{'timestamp': 1760866780.1984732, 'inputs': {'network_load': np.float64(0.3), 'relay_reputation': np.float64(0.95), 'budget_utilization': np.float64(0.8), 'recent_win_rate': np.float64(0.1)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0034727000000000004), 'steps': [{'feature': 'network_load', 'value': np.float64(0.3), 'effect': 'multiply prob by 0.820 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.95), 'effect': 'multiply prob by 1.925 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.8), 'effect': 'multiply prob by 0.440 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.1), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.3,0.95,0.8,0.15,0.0034727000000000004,"{'timestamp': 1760866780.1984982, 'inputs': {'network_load': np.float64(0.3), 'relay_reputation': np.float64(0.95), 'budget_utilization': np.float64(0.8), 'recent_win_rate': np.float64(0.15)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0034727000000000004), 'steps': [{'feature': 'network_load', 'value': np.float64(0.3), 'effect': 'multiply prob by 0.820 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.95), 'effect': 'multiply prob by 1.925 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.8), 'effect': 'multiply prob by 0.440 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.15), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.3,0.95,0.8,0.2,0.0034727000000000004,"{'timestamp': 1760866780.1985233, 'inputs': {'network_load': np.float64(0.3), 'relay_reputation': np.float64(0.95), 'budget_utilization': np.float64(0.8), 'recent_win_rate': np.float64(0.2)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0034727000000000004), 'steps': [{'feature': 'network_load', 'value': np.float64(0.3), 'effect': 'multiply prob by 0.820 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.95), 'effect': 'multiply prob by 1.925 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.8), 'effect': 'multiply prob by 0.440 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.2), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.3,0.95,0.8,0.25,0.0034727000000000004,"{'timestamp': 1760866780.1985557, 'inputs': {'network_load': np.float64(0.3), 'relay_reputation': np.float64(0.95), 'budget_utilization': np.float64(0.8), 'recent_win_rate': np.float64(0.25)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0034727000000000004), 'steps': [{'feature': 'network_load', 'value': np.float64(0.3), 'effect': 'multiply prob by 0.820 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.95), 'effect': 'multiply prob by 1.925 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.8), 'effect': 'multiply prob by 0.440 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.25), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.3,0.95,0.8,0.3,0.0034727000000000004,"{'timestamp': 1760866780.198603, 'inputs': {'network_load': np.float64(0.3), 'relay_reputation': np.float64(0.95), 'budget_utilization': np.float64(0.8), 'recent_win_rate': np.float64(0.3)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0034727000000000004), 'steps': [{'feature': 'network_load', 'value': np.float64(0.3), 'effect': 'multiply prob by 0.820 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.95), 'effect': 'multiply prob by 1.925 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.8), 'effect': 'multiply prob by 0.440 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.3), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.4,0.4,0.05,0.0,0.008067399919326,"{'timestamp': 1760866780.198637, 'inputs': {'network_load': np.float64(0.4), 'relay_reputation': np.float64(0.4), 'budget_utilization': np.float64(0.05), 'recent_win_rate': 1e-09}, 'base_prob': 0.01, 'final_prob': np.float64(0.008067399919326), 'steps': [{'feature': 'network_load', 'value': np.float64(0.4), 'effect': 'multiply prob by 0.760 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.4), 'effect': 'multiply prob by 1.100 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.05), 'effect': 'multiply prob by 0.965 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': 1e-09, 'effect': 'multiply prob by 1.000 (higher recent wins -> lower prob)'}]}"
0.4,0.4,0.05,0.05,0.0040337,"{'timestamp': 1760866780.1986623, 'inputs': {'network_load': np.float64(0.4), 'relay_reputation': np.float64(0.4), 'budget_utilization': np.float64(0.05), 'recent_win_rate': np.float64(0.05)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0040337), 'steps': [{'feature': 'network_load', 'value': np.float64(0.4), 'effect': 'multiply prob by 0.760 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.4), 'effect': 'multiply prob by 1.100 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.05), 'effect': 'multiply prob by 0.965 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.05), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.4,0.4,0.05,0.1,0.0040337,"{'timestamp': 1760866780.1986876, 'inputs': {'network_load': np.float64(0.4), 'relay_reputation': np.float64(0.4), 'budget_utilization': np.float64(0.05), 'recent_win_rate': np.float64(0.1)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0040337), 'steps': [{'feature': 'network_load', 'value': np.float64(0.4), 'effect': 'multiply prob by 0.760 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.4), 'effect': 'multiply prob by 1.100 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.05), 'effect': 'multiply prob by 0.965 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.1), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.4,0.4,0.05,0.15,0.0040337,"{'timestamp': 1760866780.1987126, 'inputs': {'network_load': np.float64(0.4), 'relay_reputation': np.float64(0.4), 'budget_utilization': np.float64(0.05), 'recent_win_rate': np.float64(0.15)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0040337), 'steps': [{'feature': 'network_load', 'value': np.float64(0.4), 'effect': 'multiply prob by 0.760 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.4), 'effect': 'multiply prob by 1.100 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.05), 'effect': 'multiply prob by 0.965 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.15), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.4,0.4,0.05,0.2,0.0040337,"{'timestamp': 1760866780.19874, 'inputs': {'network_load': np.float64(0.4), 'relay_reputation': np.float64(0.4), 'budget_utilization': np.float64(0.05), 'recent_win_rate': np.float64(0.2)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0040337), 'steps': [{'feature': 'network_load', 'value': np.float64(0.4), 'effect': 'multiply prob by 0.760 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.4), 'effect': 'multiply prob by 1.100 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.05), 'effect': 'multiply prob by 0.965 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.2), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.4,0.4,0.05,0.25,0.0040337,"{'timestamp': 1760866780.198813, 'inputs': {'network_load': np.float64(0.4), 'relay_reputation': np.float64(0.4), 'budget_utilization': np.float64(0.05), 'recent_win_rate': np.float64(0.25)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0040337), 'steps': [{'feature': 'network_load', 'value': np.float64(0.4), 'effect': 'multiply prob by 0.760 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.4), 'effect': 'multiply prob by 1.100 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.05), 'effect': 'multiply prob by 0.965 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.25), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.4,0.4,0.05,0.3,0.0040337,"{'timestamp': 1760866780.1988559, 'inputs': {'network_load': np.float64(0.4), 'relay_reputation': np.float64(0.4), 'budget_utilization': np.float64(0.05), 'recent_win_rate': np.float64(0.3)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0040337), 'steps': [{'feature': 'network_load', 'value': np.float64(0.4), 'effect': 'multiply prob by 0.760 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.4), 'effect': 'multiply prob by 1.100 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.05), 'effect': 'multiply prob by 0.965 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.3), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.4,0.4,0.16,0.0,0.0074236799257632,"{'timestamp': 1760866780.1988876, 'inputs': {'network_load': np.float64(0.4), 'relay_reputation': np.float64(0.4), 'budget_utilization': np.float64(0.16), 'recent_win_rate': 1e-09}, 'base_prob': 0.01, 'final_prob': np.float64(0.0074236799257632), 'steps': [{'feature': 'network_load', 'value': np.float64(0.4), 'effect': 'multiply prob by 0.760 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.4), 'effect': 'multiply prob by 1.100 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.16), 'effect': 'multiply prob by 0.888 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': 1e-09, 'effect': 'multiply prob by 1.000 (higher recent wins -> lower prob)'}]}"
0.4,0.4,0.16,0.05,0.0037118400000000005,"{'timestamp': 1760866780.198913, 'inputs': {'network_load': np.float64(0.4), 'relay_reputation': np.float64(0.4), 'budget_utilization': np.float64(0.16), 'recent_win_rate': np.float64(0.05)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0037118400000000005), 'steps': [{'feature': 'network_load', 'value': np.float64(0.4), 'effect': 'multiply prob by 0.760 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.4), 'effect': 'multiply prob by 1.100 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.16), 'effect': 'multiply prob by 0.888 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.05), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.4,0.4,0.16,0.1,0.0037118400000000005,"{'timestamp': 1760866780.1989405, 'inputs': {'network_load': np.float64(0.4), 'relay_reputation': np.float64(0.4), 'budget_utilization': np.float64(0.16), 'recent_win_rate': np.float64(0.1)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0037118400000000005), 'steps': [{'feature': 'network_load', 'value': np.float64(0.4), 'effect': 'multiply prob by 0.760 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.4), 'effect': 'multiply prob by 1.100 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.16), 'effect': 'multiply prob by 0.888 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.1), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.4,0.4,0.16,0.15,0.0037118400000000005,"{'timestamp': 1760866780.1989677, 'inputs': {'network_load': np.float64(0.4), 'relay_reputation': np.float64(0.4), 'budget_utilization': np.float64(0.16), 'recent_win_rate': np.float64(0.15)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0037118400000000005), 'steps': [{'feature': 'network_load', 'value': np.float64(0.4), 'effect': 'multiply prob by 0.760 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.4), 'effect': 'multiply prob by 1.100 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.16), 'effect': 'multiply prob by 0.888 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.15), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.4,0.4,0.16,0.2,0.0037118400000000005,"{'timestamp': 1760866780.1990042, 'inputs': {'network_load': np.float64(0.4), 'relay_reputation': np.float64(0.4), 'budget_utilization': np.float64(0.16), 'recent_win_rate': np.float64(0.2)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0037118400000000005), 'steps': [{'feature': 'network_load', 'value': np.float64(0.4), 'effect': 'multiply prob by 0.760 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.4), 'effect': 'multiply prob by 1.100 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.16), 'effect': 'multiply prob by 0.888 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.2), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.4,0.4,0.16,0.25,0.0037118400000000005,"{'timestamp': 1760866780.1990323, 'inputs': {'network_load': np.float64(0.4), 'relay_reputation': np.float64(0.4), 'budget_utilization': np.float64(0.16), 'recent_win_rate': np.float64(0.25)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0037118400000000005), 'steps': [{'feature': 'network_load', 'value': np.float64(0.4), 'effect': 'multiply prob by 0.760 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.4), 'effect': 'multiply prob by 1.100 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.16), 'effect': 'multiply prob by 0.888 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.25), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.4,0.4,0.16,0.3,0.0037118400000000005,"{'timestamp': 1760866780.1990628, 'inputs': {'network_load': np.float64(0.4), 'relay_reputation': np.float64(0.4), 'budget_utilization': np.float64(0.16), 'recent_win_rate': np.float64(0.3)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0037118400000000005), 'steps': [{'feature': 'network_load', 'value': np.float64(0.4), 'effect': 'multiply prob by 0.760 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.4), 'effect': 'multiply prob by 1.100 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.16), 'effect': 'multiply prob by 0.888 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.3), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.4,0.4,0.26,0.0,0.006838479931615201,"{'timestamp': 1760866780.199092, 'inputs': {'network_load': np.float64(0.4), 'relay_reputation': np.float64(0.4), 'budget_utilization': np.float64(0.26), 'recent_win_rate': 1e-09}, 'base_prob': 0.01, 'final_prob': np.float64(0.006838479931615201), 'steps': [{'feature': 'network_load', 'value': np.float64(0.4), 'effect': 'multiply prob by 0.760 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.4), 'effect': 'multiply prob by 1.100 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.26), 'effect': 'multiply prob by 0.818 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': 1e-09, 'effect': 'multiply prob by 1.000 (higher recent wins -> lower prob)'}]}"
0.4,0.4,0.26,0.05,0.003419240000000001,"{'timestamp': 1760866780.1991177, 'inputs': {'network_load': np.float64(0.4), 'relay_reputation': np.float64(0.4), 'budget_utilization': np.float64(0.26), 'recent_win_rate': np.float64(0.05)}, 'base_prob': 0.01, 'final_prob': np.float64(0.003419240000000001), 'steps': [{'feature': 'network_load', 'value': np.float64(0.4), 'effect': 'multiply prob by 0.760 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.4), 'effect': 'multiply prob by 1.100 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.26), 'effect': 'multiply prob by 0.818 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.05), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.4,0.4,0.26,0.1,0.003419240000000001,"{'timestamp': 1760866780.199175, 'inputs': {'network_load': np.float64(0.4), 'relay_reputation': np.float64(0.4), 'budget_utilization': np.float64(0.26), 'recent_win_rate': np.float64(0.1)}, 'base_prob': 0.01, 'final_prob': np.float64(0.003419240000000001), 'steps': [{'feature': 'network_load', 'value': np.float64(0.4), 'effect': 'multiply prob by 0.760 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.4), 'effect': 'multiply prob by 1.100 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.26), 'effect': 'multiply prob by 0.818 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.1), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.4,0.4,0.26,0.15,0.003419240000000001,"{'timestamp': 1760866780.199202, 'inputs': {'network_load': np.float64(0.4), 'relay_reputation': np.float64(0.4), 'budget_utilization': np.float64(0.26), 'recent_win_rate': np.float64(0.15)}, 'base_prob': 0.01, 'final_prob': np.float64(0.003419240000000001), 'steps': [{'feature': 'network_load', 'value': np.float64(0.4), 'effect': 'multiply prob by 0.760 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.4), 'effect': 'multiply prob by 1.100 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.26), 'effect': 'multiply prob by 0.818 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.15), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.4,0.4,0.26,0.2,0.003419240000000001,"{'timestamp': 1760866780.1992273, 'inputs': {'network_load': np.float64(0.4), 'relay_reputation': np.float64(0.4), 'budget_utilization': np.float64(0.26), 'recent_win_rate': np.float64(0.2)}, 'base_prob': 0.01, 'final_prob': np.float64(0.003419240000000001), 'steps': [{'feature': 'network_load', 'value': np.float64(0.4), 'effect': 'multiply prob by 0.760 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.4), 'effect': 'multiply prob by 1.100 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.26), 'effect': 'multiply prob by 0.818 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.2), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.4,0.4,0.26,0.25,0.003419240000000001,"{'timestamp': 1760866780.1992571, 'inputs': {'network_load': np.float64(0.4), 'relay_reputation': np.float64(0.4), 'budget_utilization': np.float64(0.26), 'recent_win_rate': np.float64(0.25)}, 'base_prob': 0.01, 'final_prob': np.float64(0.003419240000000001), 'steps': [{'feature': 'network_load', 'value': np.float64(0.4), 'effect': 'multiply prob by 0.760 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.4), 'effect': 'multiply prob by 1.100 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.26), 'effect': 'multiply prob by 0.818 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.25), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.4,0.4,0.26,0.3,0.003419240000000001,"{'timestamp': 1760866780.199284, 'inputs': {'network_load': np.float64(0.4), 'relay_reputation': np.float64(0.4), 'budget_utilization': np.float64(0.26), 'recent_win_rate': np.float64(0.3)}, 'base_prob': 0.01, 'final_prob': np.float64(0.003419240000000001), 'steps': [{'feature': 'network_load', 'value': np.float64(0.4), 'effect': 'multiply prob by 0.760 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.4), 'effect': 'multiply prob by 1.100 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.26), 'effect': 'multiply prob by 0.818 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.3), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.4,0.4,0.37,0.0,0.0061947599380524,"{'timestamp': 1760866780.1993146, 'inputs': {'network_load': np.float64(0.4), 'relay_reputation': np.float64(0.4), 'budget_utilization': np.float64(0.37), 'recent_win_rate': 1e-09}, 'base_prob': 0.01, 'final_prob': np.float64(0.0061947599380524), 'steps': [{'feature': 'network_load', 'value': np.float64(0.4), 'effect': 'multiply prob by 0.760 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.4), 'effect': 'multiply prob by 1.100 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.37), 'effect': 'multiply prob by 0.741 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': 1e-09, 'effect': 'multiply prob by 1.000 (higher recent wins -> lower prob)'}]}"
0.4,0.4,0.37,0.05,0.0030973800000000003,"{'timestamp': 1760866780.1993406, 'inputs': {'network_load': np.float64(0.4), 'relay_reputation': np.float64(0.4), 'budget_utilization': np.float64(0.37), 'recent_win_rate': np.float64(0.05)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0030973800000000003), 'steps': [{'feature': 'network_load', 'value': np.float64(0.4), 'effect': 'multiply prob by 0.760 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.4), 'effect': 'multiply prob by 1.100 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.37), 'effect': 'multiply prob by 0.741 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.05), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.4,0.4,0.37,0.1,0.0030973800000000003,"{'timestamp': 1760866780.1993692, 'inputs': {'network_load': np.float64(0.4), 'relay_reputation': np.float64(0.4), 'budget_utilization': np.float64(0.37), 'recent_win_rate': np.float64(0.1)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0030973800000000003), 'steps': [{'feature': 'network_load', 'value': np.float64(0.4), 'effect': 'multiply prob by 0.760 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.4), 'effect': 'multiply prob by 1.100 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.37), 'effect': 'multiply prob by 0.741 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.1), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.4,0.4,0.37,0.15,0.0030973800000000003,"{'timestamp': 1760866780.1993945, 'inputs': {'network_load': np.float64(0.4), 'relay_reputation': np.float64(0.4), 'budget_utilization': np.float64(0.37), 'recent_win_rate': np.float64(0.15)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0030973800000000003), 'steps': [{'feature': 'network_load', 'value': np.float64(0.4), 'effect': 'multiply prob by 0.760 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.4), 'effect': 'multiply prob by 1.100 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.37), 'effect': 'multiply prob by 0.741 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.15), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.4,0.4,0.37,0.2,0.0030973800000000003,"{'timestamp': 1760866780.1994216, 'inputs': {'network_load': np.float64(0.4), 'relay_reputation': np.float64(0.4), 'budget_utilization': np.float64(0.37), 'recent_win_rate': np.float64(0.2)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0030973800000000003), 'steps': [{'feature': 'network_load', 'value': np.float64(0.4), 'effect': 'multiply prob by 0.760 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.4), 'effect': 'multiply prob by 1.100 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.37), 'effect': 'multiply prob by 0.741 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.2), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.4,0.4,0.37,0.25,0.0030973800000000003,"{'timestamp': 1760866780.1994467, 'inputs': {'network_load': np.float64(0.4), 'relay_reputation': np.float64(0.4), 'budget_utilization': np.float64(0.37), 'recent_win_rate': np.float64(0.25)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0030973800000000003), 'steps': [{'feature': 'network_load', 'value': np.float64(0.4), 'effect': 'multiply prob by 0.760 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.4), 'effect': 'multiply prob by 1.100 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.37), 'effect': 'multiply prob by 0.741 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.25), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.4,0.4,0.37,0.3,0.0030973800000000003,"{'timestamp': 1760866780.1994739, 'inputs': {'network_load': np.float64(0.4), 'relay_reputation': np.float64(0.4), 'budget_utilization': np.float64(0.37), 'recent_win_rate': np.float64(0.3)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0030973800000000003), 'steps': [{'feature': 'network_load', 'value': np.float64(0.4), 'effect': 'multiply prob by 0.760 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.4), 'effect': 'multiply prob by 1.100 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.37), 'effect': 'multiply prob by 0.741 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.3), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.4,0.4,0.48,0.0,0.005551039944489601,"{'timestamp': 1760866780.1995008, 'inputs': {'network_load': np.float64(0.4), 'relay_reputation': np.float64(0.4), 'budget_utilization': np.float64(0.48), 'recent_win_rate': 1e-09}, 'base_prob': 0.01, 'final_prob': np.float64(0.005551039944489601), 'steps': [{'feature': 'network_load', 'value': np.float64(0.4), 'effect': 'multiply prob by 0.760 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.4), 'effect': 'multiply prob by 1.100 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.48), 'effect': 'multiply prob by 0.664 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': 1e-09, 'effect': 'multiply prob by 1.000 (higher recent wins -> lower prob)'}]}"
0.4,0.4,0.48,0.05,0.0027755200000000005,"{'timestamp': 1760866780.1995275, 'inputs': {'network_load': np.float64(0.4), 'relay_reputation': np.float64(0.4), 'budget_utilization': np.float64(0.48), 'recent_win_rate': np.float64(0.05)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0027755200000000005), 'steps': [{'feature': 'network_load', 'value': np.float64(0.4), 'effect': 'multiply prob by 0.760 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.4), 'effect': 'multiply prob by 1.100 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.48), 'effect': 'multiply prob by 0.664 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.05), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.4,0.4,0.48,0.1,0.0027755200000000005,"{'timestamp': 1760866780.1995542, 'inputs': {'network_load': np.float64(0.4), 'relay_reputation': np.float64(0.4), 'budget_utilization': np.float64(0.48), 'recent_win_rate': np.float64(0.1)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0027755200000000005), 'steps': [{'feature': 'network_load', 'value': np.float64(0.4), 'effect': 'multiply prob by 0.760 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.4), 'effect': 'multiply prob by 1.100 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.48), 'effect': 'multiply prob by 0.664 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.1), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.4,0.4,0.48,0.15,0.0027755200000000005,"{'timestamp': 1760866780.1995795, 'inputs': {'network_load': np.float64(0.4), 'relay_reputation': np.float64(0.4), 'budget_utilization': np.float64(0.48), 'recent_win_rate': np.float64(0.15)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0027755200000000005), 'steps': [{'feature': 'network_load', 'value': np.float64(0.4), 'effect': 'multiply prob by 0.760 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.4), 'effect': 'multiply prob by 1.100 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.48), 'effect': 'multiply prob by 0.664 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.15), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.4,0.4,0.48,0.2,0.0027755200000000005,"{'timestamp': 1760866780.1996045, 'inputs': {'network_load': np.float64(0.4), 'relay_reputation': np.float64(0.4), 'budget_utilization': np.float64(0.48), 'recent_win_rate': np.float64(0.2)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0027755200000000005), 'steps': [{'feature': 'network_load', 'value': np.float64(0.4), 'effect': 'multiply prob by 0.760 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.4), 'effect': 'multiply prob by 1.100 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.48), 'effect': 'multiply prob by 0.664 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.2), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.4,0.4,0.48,0.25,0.0027755200000000005,"{'timestamp': 1760866780.1996295, 'inputs': {'network_load': np.float64(0.4), 'relay_reputation': np.float64(0.4), 'budget_utilization': np.float64(0.48), 'recent_win_rate': np.float64(0.25)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0027755200000000005), 'steps': [{'feature': 'network_load', 'value': np.float64(0.4), 'effect': 'multiply prob by 0.760 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.4), 'effect': 'multiply prob by 1.100 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.48), 'effect': 'multiply prob by 0.664 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.25), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.4,0.4,0.48,0.3,0.0027755200000000005,"{'timestamp': 1760866780.1996546, 'inputs': {'network_load': np.float64(0.4), 'relay_reputation': np.float64(0.4), 'budget_utilization': np.float64(0.48), 'recent_win_rate': np.float64(0.3)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0027755200000000005), 'steps': [{'feature': 'network_load', 'value': np.float64(0.4), 'effect': 'multiply prob by 0.760 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.4), 'effect': 'multiply prob by 1.100 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.48), 'effect': 'multiply prob by 0.664 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.3), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.4,0.4,0.59,0.0,0.0049073199509268,"{'timestamp': 1760866780.1997428, 'inputs': {'network_load': np.float64(0.4), 'relay_reputation': np.float64(0.4), 'budget_utilization': np.float64(0.59), 'recent_win_rate': 1e-09}, 'base_prob': 0.01, 'final_prob': np.float64(0.0049073199509268), 'steps': [{'feature': 'network_load', 'value': np.float64(0.4), 'effect': 'multiply prob by 0.760 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.4), 'effect': 'multiply prob by 1.100 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.59), 'effect': 'multiply prob by 0.587 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': 1e-09, 'effect': 'multiply prob by 1.000 (higher recent wins -> lower prob)'}]}"
0.4,0.4,0.59,0.05,0.0024536600000000003,"{'timestamp': 1760866780.1997836, 'inputs': {'network_load': np.float64(0.4), 'relay_reputation': np.float64(0.4), 'budget_utilization': np.float64(0.59), 'recent_win_rate': np.float64(0.05)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0024536600000000003), 'steps': [{'feature': 'network_load', 'value': np.float64(0.4), 'effect': 'multiply prob by 0.760 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.4), 'effect': 'multiply prob by 1.100 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.59), 'effect': 'multiply prob by 0.587 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.05), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.4,0.4,0.59,0.1,0.0024536600000000003,"{'timestamp': 1760866780.199859, 'inputs': {'network_load': np.float64(0.4), 'relay_reputation': np.float64(0.4), 'budget_utilization': np.float64(0.59), 'recent_win_rate': np.float64(0.1)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0024536600000000003), 'steps': [{'feature': 'network_load', 'value': np.float64(0.4), 'effect': 'multiply prob by 0.760 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.4), 'effect': 'multiply prob by 1.100 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.59), 'effect': 'multiply prob by 0.587 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.1), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.4,0.4,0.59,0.15,0.0024536600000000003,"{'timestamp': 1760866780.1998897, 'inputs': {'network_load': np.float64(0.4), 'relay_reputation': np.float64(0.4), 'budget_utilization': np.float64(0.59), 'recent_win_rate': np.float64(0.15)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0024536600000000003), 'steps': [{'feature': 'network_load', 'value': np.float64(0.4), 'effect': 'multiply prob by 0.760 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.4), 'effect': 'multiply prob by 1.100 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.59), 'effect': 'multiply prob by 0.587 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.15), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.4,0.4,0.59,0.2,0.0024536600000000003,"{'timestamp': 1760866780.1999173, 'inputs': {'network_load': np.float64(0.4), 'relay_reputation': np.float64(0.4), 'budget_utilization': np.float64(0.59), 'recent_win_rate': np.float64(0.2)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0024536600000000003), 'steps': [{'feature': 'network_load', 'value': np.float64(0.4), 'effect': 'multiply prob by 0.760 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.4), 'effect': 'multiply prob by 1.100 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.59), 'effect': 'multiply prob by 0.587 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.2), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.4,0.4,0.59,0.25,0.0024536600000000003,"{'timestamp': 1760866780.1999426, 'inputs': {'network_load': np.float64(0.4), 'relay_reputation': np.float64(0.4), 'budget_utilization': np.float64(0.59), 'recent_win_rate': np.float64(0.25)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0024536600000000003), 'steps': [{'feature': 'network_load', 'value': np.float64(0.4), 'effect': 'multiply prob by 0.760 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.4), 'effect': 'multiply prob by 1.100 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.59), 'effect': 'multiply prob by 0.587 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.25), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.4,0.4,0.59,0.3,0.0024536600000000003,"{'timestamp': 1760866780.199974, 'inputs': {'network_load': np.float64(0.4), 'relay_reputation': np.float64(0.4), 'budget_utilization': np.float64(0.59), 'recent_win_rate': np.float64(0.3)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0024536600000000003), 'steps': [{'feature': 'network_load', 'value': np.float64(0.4), 'effect': 'multiply prob by 0.760 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.4), 'effect': 'multiply prob by 1.100 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.59), 'effect': 'multiply prob by 0.587 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.3), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.4,0.4,0.69,0.0,0.004322119956778801,"{'timestamp': 1760866780.200004, 'inputs': {'network_load': np.float64(0.4), 'relay_reputation': np.float64(0.4), 'budget_utilization': np.float64(0.69), 'recent_win_rate': 1e-09}, 'base_prob': 0.01, 'final_prob': np.float64(0.004322119956778801), 'steps': [{'feature': 'network_load', 'value': np.float64(0.4), 'effect': 'multiply prob by 0.760 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.4), 'effect': 'multiply prob by 1.100 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.69), 'effect': 'multiply prob by 0.517 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': 1e-09, 'effect': 'multiply prob by 1.000 (higher recent wins -> lower prob)'}]}"
0.4,0.4,0.69,0.05,0.0021610600000000007,"{'timestamp': 1760866780.2000296, 'inputs': {'network_load': np.float64(0.4), 'relay_reputation': np.float64(0.4), 'budget_utilization': np.float64(0.69), 'recent_win_rate': np.float64(0.05)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0021610600000000007), 'steps': [{'feature': 'network_load', 'value': np.float64(0.4), 'effect': 'multiply prob by 0.760 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.4), 'effect': 'multiply prob by 1.100 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.69), 'effect': 'multiply prob by 0.517 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.05), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.4,0.4,0.69,0.1,0.0021610600000000007,"{'timestamp': 1760866780.2000554, 'inputs': {'network_load': np.float64(0.4), 'relay_reputation': np.float64(0.4), 'budget_utilization': np.float64(0.69), 'recent_win_rate': np.float64(0.1)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0021610600000000007), 'steps': [{'feature': 'network_load', 'value': np.float64(0.4), 'effect': 'multiply prob by 0.760 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.4), 'effect': 'multiply prob by 1.100 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.69), 'effect': 'multiply prob by 0.517 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.1), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.4,0.4,0.69,0.15,0.0021610600000000007,"{'timestamp': 1760866780.2000825, 'inputs': {'network_load': np.float64(0.4), 'relay_reputation': np.float64(0.4), 'budget_utilization': np.float64(0.69), 'recent_win_rate': np.float64(0.15)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0021610600000000007), 'steps': [{'feature': 'network_load', 'value': np.float64(0.4), 'effect': 'multiply prob by 0.760 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.4), 'effect': 'multiply prob by 1.100 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.69), 'effect': 'multiply prob by 0.517 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.15), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.4,0.4,0.69,0.2,0.0021610600000000007,"{'timestamp': 1760866780.2001095, 'inputs': {'network_load': np.float64(0.4), 'relay_reputation': np.float64(0.4), 'budget_utilization': np.float64(0.69), 'recent_win_rate': np.float64(0.2)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0021610600000000007), 'steps': [{'feature': 'network_load', 'value': np.float64(0.4), 'effect': 'multiply prob by 0.760 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.4), 'effect': 'multiply prob by 1.100 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.69), 'effect': 'multiply prob by 0.517 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.2), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.4,0.4,0.69,0.25,0.0021610600000000007,"{'timestamp': 1760866780.2001348, 'inputs': {'network_load': np.float64(0.4), 'relay_reputation': np.float64(0.4), 'budget_utilization': np.float64(0.69), 'recent_win_rate': np.float64(0.25)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0021610600000000007), 'steps': [{'feature': 'network_load', 'value': np.float64(0.4), 'effect': 'multiply prob by 0.760 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.4), 'effect': 'multiply prob by 1.100 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.69), 'effect': 'multiply prob by 0.517 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.25), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.4,0.4,0.69,0.3,0.0021610600000000007,"{'timestamp': 1760866780.200162, 'inputs': {'network_load': np.float64(0.4), 'relay_reputation': np.float64(0.4), 'budget_utilization': np.float64(0.69), 'recent_win_rate': np.float64(0.3)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0021610600000000007), 'steps': [{'feature': 'network_load', 'value': np.float64(0.4), 'effect': 'multiply prob by 0.760 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.4), 'effect': 'multiply prob by 1.100 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.69), 'effect': 'multiply prob by 0.517 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.3), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.4,0.4,0.8,0.0,0.0036783999632160006,"{'timestamp': 1760866780.2001889, 'inputs': {'network_load': np.float64(0.4), 'relay_reputation': np.float64(0.4), 'budget_utilization': np.float64(0.8), 'recent_win_rate': 1e-09}, 'base_prob': 0.01, 'final_prob': np.float64(0.0036783999632160006), 'steps': [{'feature': 'network_load', 'value': np.float64(0.4), 'effect': 'multiply prob by 0.760 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.4), 'effect': 'multiply prob by 1.100 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.8), 'effect': 'multiply prob by 0.440 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': 1e-09, 'effect': 'multiply prob by 1.000 (higher recent wins -> lower prob)'}]}"
0.4,0.4,0.8,0.05,0.0018392000000000005,"{'timestamp': 1760866780.2002144, 'inputs': {'network_load': np.float64(0.4), 'relay_reputation': np.float64(0.4), 'budget_utilization': np.float64(0.8), 'recent_win_rate': np.float64(0.05)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0018392000000000005), 'steps': [{'feature': 'network_load', 'value': np.float64(0.4), 'effect': 'multiply prob by 0.760 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.4), 'effect': 'multiply prob by 1.100 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.8), 'effect': 'multiply prob by 0.440 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.05), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.4,0.4,0.8,0.1,0.0018392000000000005,"{'timestamp': 1760866780.2002418, 'inputs': {'network_load': np.float64(0.4), 'relay_reputation': np.float64(0.4), 'budget_utilization': np.float64(0.8), 'recent_win_rate': np.float64(0.1)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0018392000000000005), 'steps': [{'feature': 'network_load', 'value': np.float64(0.4), 'effect': 'multiply prob by 0.760 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.4), 'effect': 'multiply prob by 1.100 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.8), 'effect': 'multiply prob by 0.440 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.1), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.4,0.4,0.8,0.15,0.0018392000000000005,"{'timestamp': 1760866780.2002876, 'inputs': {'network_load': np.float64(0.4), 'relay_reputation': np.float64(0.4), 'budget_utilization': np.float64(0.8), 'recent_win_rate': np.float64(0.15)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0018392000000000005), 'steps': [{'feature': 'network_load', 'value': np.float64(0.4), 'effect': 'multiply prob by 0.760 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.4), 'effect': 'multiply prob by 1.100 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.8), 'effect': 'multiply prob by 0.440 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.15), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.4,0.4,0.8,0.2,0.0018392000000000005,"{'timestamp': 1760866780.200315, 'inputs': {'network_load': np.float64(0.4), 'relay_reputation': np.float64(0.4), 'budget_utilization': np.float64(0.8), 'recent_win_rate': np.float64(0.2)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0018392000000000005), 'steps': [{'feature': 'network_load', 'value': np.float64(0.4), 'effect': 'multiply prob by 0.760 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.4), 'effect': 'multiply prob by 1.100 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.8), 'effect': 'multiply prob by 0.440 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.2), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.4,0.4,0.8,0.25,0.0018392000000000005,"{'timestamp': 1760866780.2003405, 'inputs': {'network_load': np.float64(0.4), 'relay_reputation': np.float64(0.4), 'budget_utilization': np.float64(0.8), 'recent_win_rate': np.float64(0.25)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0018392000000000005), 'steps': [{'feature': 'network_load', 'value': np.float64(0.4), 'effect': 'multiply prob by 0.760 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.4), 'effect': 'multiply prob by 1.100 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.8), 'effect': 'multiply prob by 0.440 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.25), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.4,0.4,0.8,0.3,0.0018392000000000005,"{'timestamp': 1760866780.2003677, 'inputs': {'network_load': np.float64(0.4), 'relay_reputation': np.float64(0.4), 'budget_utilization': np.float64(0.8), 'recent_win_rate': np.float64(0.3)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0018392000000000005), 'steps': [{'feature': 'network_load', 'value': np.float64(0.4), 'effect': 'multiply prob by 0.760 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.4), 'effect': 'multiply prob by 1.100 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.8), 'effect': 'multiply prob by 0.440 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.3), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.4,0.51,0.05,0.0,0.0092775099072249,"{'timestamp': 1760866780.2003965, 'inputs': {'network_load': np.float64(0.4), 'relay_reputation': np.float64(0.51), 'budget_utilization': np.float64(0.05), 'recent_win_rate': 1e-09}, 'base_prob': 0.01, 'final_prob': np.float64(0.0092775099072249), 'steps': [{'feature': 'network_load', 'value': np.float64(0.4), 'effect': 'multiply prob by 0.760 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.51), 'effect': 'multiply prob by 1.265 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.05), 'effect': 'multiply prob by 0.965 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': 1e-09, 'effect': 'multiply prob by 1.000 (higher recent wins -> lower prob)'}]}"
0.4,0.51,0.05,0.05,0.0046387550000000005,"{'timestamp': 1760866780.2004237, 'inputs': {'network_load': np.float64(0.4), 'relay_reputation': np.float64(0.51), 'budget_utilization': np.float64(0.05), 'recent_win_rate': np.float64(0.05)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0046387550000000005), 'steps': [{'feature': 'network_load', 'value': np.float64(0.4), 'effect': 'multiply prob by 0.760 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.51), 'effect': 'multiply prob by 1.265 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.05), 'effect': 'multiply prob by 0.965 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.05), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.4,0.51,0.05,0.1,0.0046387550000000005,"{'timestamp': 1760866780.2004511, 'inputs': {'network_load': np.float64(0.4), 'relay_reputation': np.float64(0.51), 'budget_utilization': np.float64(0.05), 'recent_win_rate': np.float64(0.1)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0046387550000000005), 'steps': [{'feature': 'network_load', 'value': np.float64(0.4), 'effect': 'multiply prob by 0.760 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.51), 'effect': 'multiply prob by 1.265 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.05), 'effect': 'multiply prob by 0.965 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.1), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.4,0.51,0.05,0.15,0.0046387550000000005,"{'timestamp': 1760866780.2004783, 'inputs': {'network_load': np.float64(0.4), 'relay_reputation': np.float64(0.51), 'budget_utilization': np.float64(0.05), 'recent_win_rate': np.float64(0.15)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0046387550000000005), 'steps': [{'feature': 'network_load', 'value': np.float64(0.4), 'effect': 'multiply prob by 0.760 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.51), 'effect': 'multiply prob by 1.265 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.05), 'effect': 'multiply prob by 0.965 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.15), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.4,0.51,0.05,0.2,0.0046387550000000005,"{'timestamp': 1760866780.2005038, 'inputs': {'network_load': np.float64(0.4), 'relay_reputation': np.float64(0.51), 'budget_utilization': np.float64(0.05), 'recent_win_rate': np.float64(0.2)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0046387550000000005), 'steps': [{'feature': 'network_load', 'value': np.float64(0.4), 'effect': 'multiply prob by 0.760 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.51), 'effect': 'multiply prob by 1.265 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.05), 'effect': 'multiply prob by 0.965 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.2), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.4,0.51,0.05,0.25,0.0046387550000000005,"{'timestamp': 1760866780.200531, 'inputs': {'network_load': np.float64(0.4), 'relay_reputation': np.float64(0.51), 'budget_utilization': np.float64(0.05), 'recent_win_rate': np.float64(0.25)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0046387550000000005), 'steps': [{'feature': 'network_load', 'value': np.float64(0.4), 'effect': 'multiply prob by 0.760 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.51), 'effect': 'multiply prob by 1.265 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.05), 'effect': 'multiply prob by 0.965 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.25), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.4,0.51,0.05,0.3,0.0046387550000000005,"{'timestamp': 1760866780.2006164, 'inputs': {'network_load': np.float64(0.4), 'relay_reputation': np.float64(0.51), 'budget_utilization': np.float64(0.05), 'recent_win_rate': np.float64(0.3)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0046387550000000005), 'steps': [{'feature': 'network_load', 'value': np.float64(0.4), 'effect': 'multiply prob by 0.760 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.51), 'effect': 'multiply prob by 1.265 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.05), 'effect': 'multiply prob by 0.965 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.3), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.4,0.51,0.16,0.0,0.00853723191462768,"{'timestamp': 1760866780.2006466, 'inputs': {'network_load': np.float64(0.4), 'relay_reputation': np.float64(0.51), 'budget_utilization': np.float64(0.16), 'recent_win_rate': 1e-09}, 'base_prob': 0.01, 'final_prob': np.float64(0.00853723191462768), 'steps': [{'feature': 'network_load', 'value': np.float64(0.4), 'effect': 'multiply prob by 0.760 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.51), 'effect': 'multiply prob by 1.265 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.16), 'effect': 'multiply prob by 0.888 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': 1e-09, 'effect': 'multiply prob by 1.000 (higher recent wins -> lower prob)'}]}"
0.4,0.51,0.16,0.05,0.004268616,"{'timestamp': 1760866780.2006726, 'inputs': {'network_load': np.float64(0.4), 'relay_reputation': np.float64(0.51), 'budget_utilization': np.float64(0.16), 'recent_win_rate': np.float64(0.05)}, 'base_prob': 0.01, 'final_prob': np.float64(0.004268616), 'steps': [{'feature': 'network_load', 'value': np.float64(0.4), 'effect': 'multiply prob by 0.760 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.51), 'effect': 'multiply prob by 1.265 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.16), 'effect': 'multiply prob by 0.888 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.05), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.4,0.51,0.16,0.1,0.004268616,"{'timestamp': 1760866780.2006977, 'inputs': {'network_load': np.float64(0.4), 'relay_reputation': np.float64(0.51), 'budget_utilization': np.float64(0.16), 'recent_win_rate': np.float64(0.1)}, 'base_prob': 0.01, 'final_prob': np.float64(0.004268616), 'steps': [{'feature': 'network_load', 'value': np.float64(0.4), 'effect': 'multiply prob by 0.760 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.51), 'effect': 'multiply prob by 1.265 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.16), 'effect': 'multiply prob by 0.888 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.1), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.4,0.51,0.16,0.15,0.004268616,"{'timestamp': 1760866780.200723, 'inputs': {'network_load': np.float64(0.4), 'relay_reputation': np.float64(0.51), 'budget_utilization': np.float64(0.16), 'recent_win_rate': np.float64(0.15)}, 'base_prob': 0.01, 'final_prob': np.float64(0.004268616), 'steps': [{'feature': 'network_load', 'value': np.float64(0.4), 'effect': 'multiply prob by 0.760 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.51), 'effect': 'multiply prob by 1.265 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.16), 'effect': 'multiply prob by 0.888 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.15), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.4,0.51,0.16,0.2,0.004268616,"{'timestamp': 1760866780.2007518, 'inputs': {'network_load': np.float64(0.4), 'relay_reputation': np.float64(0.51), 'budget_utilization': np.float64(0.16), 'recent_win_rate': np.float64(0.2)}, 'base_prob': 0.01, 'final_prob': np.float64(0.004268616), 'steps': [{'feature': 'network_load', 'value': np.float64(0.4), 'effect': 'multiply prob by 0.760 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.51), 'effect': 'multiply prob by 1.265 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.16), 'effect': 'multiply prob by 0.888 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.2), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.4,0.51,0.16,0.25,0.004268616,"{'timestamp': 1760866780.2007773, 'inputs': {'network_load': np.float64(0.4), 'relay_reputation': np.float64(0.51), 'budget_utilization': np.float64(0.16), 'recent_win_rate': np.float64(0.25)}, 'base_prob': 0.01, 'final_prob': np.float64(0.004268616), 'steps': [{'feature': 'network_load', 'value': np.float64(0.4), 'effect': 'multiply prob by 0.760 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.51), 'effect': 'multiply prob by 1.265 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.16), 'effect': 'multiply prob by 0.888 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.25), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.4,0.51,0.16,0.3,0.004268616,"{'timestamp': 1760866780.2008085, 'inputs': {'network_load': np.float64(0.4), 'relay_reputation': np.float64(0.51), 'budget_utilization': np.float64(0.16), 'recent_win_rate': np.float64(0.3)}, 'base_prob': 0.01, 'final_prob': np.float64(0.004268616), 'steps': [{'feature': 'network_load', 'value': np.float64(0.4), 'effect': 'multiply prob by 0.760 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.51), 'effect': 'multiply prob by 1.265 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.16), 'effect': 'multiply prob by 0.888 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.3), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.4,0.51,0.26,0.0,0.007864251921357483,"{'timestamp': 1760866780.2008376, 'inputs': {'network_load': np.float64(0.4), 'relay_reputation': np.float64(0.51), 'budget_utilization': np.float64(0.26), 'recent_win_rate': 1e-09}, 'base_prob': 0.01, 'final_prob': np.float64(0.007864251921357483), 'steps': [{'feature': 'network_load', 'value': np.float64(0.4), 'effect': 'multiply prob by 0.760 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.51), 'effect': 'multiply prob by 1.265 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.26), 'effect': 'multiply prob by 0.818 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': 1e-09, 'effect': 'multiply prob by 1.000 (higher recent wins -> lower prob)'}]}"
0.4,0.51,0.26,0.05,0.003932126000000001,"{'timestamp': 1760866780.2008631, 'inputs': {'network_load': np.float64(0.4), 'relay_reputation': np.float64(0.51), 'budget_utilization': np.float64(0.26), 'recent_win_rate': np.float64(0.05)}, 'base_prob': 0.01, 'final_prob': np.float64(0.003932126000000001), 'steps': [{'feature': 'network_load', 'value': np.float64(0.4), 'effect': 'multiply prob by 0.760 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.51), 'effect': 'multiply prob by 1.265 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.26), 'effect': 'multiply prob by 0.818 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.05), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.4,0.51,0.26,0.1,0.003932126000000001,"{'timestamp': 1760866780.20089, 'inputs': {'network_load': np.float64(0.4), 'relay_reputation': np.float64(0.51), 'budget_utilization': np.float64(0.26), 'recent_win_rate': np.float64(0.1)}, 'base_prob': 0.01, 'final_prob': np.float64(0.003932126000000001), 'steps': [{'feature': 'network_load', 'value': np.float64(0.4), 'effect': 'multiply prob by 0.760 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.51), 'effect': 'multiply prob by 1.265 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.26), 'effect': 'multiply prob by 0.818 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.1), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.4,0.51,0.26,0.15,0.003932126000000001,"{'timestamp': 1760866780.2009158, 'inputs': {'network_load': np.float64(0.4), 'relay_reputation': np.float64(0.51), 'budget_utilization': np.float64(0.26), 'recent_win_rate': np.float64(0.15)}, 'base_prob': 0.01, 'final_prob': np.float64(0.003932126000000001), 'steps': [{'feature': 'network_load', 'value': np.float64(0.4), 'effect': 'multiply prob by 0.760 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.51), 'effect': 'multiply prob by 1.265 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.26), 'effect': 'multiply prob by 0.818 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.15), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.4,0.51,0.26,0.2,0.003932126000000001,"{'timestamp': 1760866780.2009408, 'inputs': {'network_load': np.float64(0.4), 'relay_reputation': np.float64(0.51), 'budget_utilization': np.float64(0.26), 'recent_win_rate': np.float64(0.2)}, 'base_prob': 0.01, 'final_prob': np.float64(0.003932126000000001), 'steps': [{'feature': 'network_load', 'value': np.float64(0.4), 'effect': 'multiply prob by 0.760 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.51), 'effect': 'multiply prob by 1.265 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.26), 'effect': 'multiply prob by 0.818 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.2), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.4,0.51,0.26,0.25,0.003932126000000001,"{'timestamp': 1760866780.2009661, 'inputs': {'network_load': np.float64(0.4), 'relay_reputation': np.float64(0.51), 'budget_utilization': np.float64(0.26), 'recent_win_rate': np.float64(0.25)}, 'base_prob': 0.01, 'final_prob': np.float64(0.003932126000000001), 'steps': [{'feature': 'network_load', 'value': np.float64(0.4), 'effect': 'multiply prob by 0.760 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.51), 'effect': 'multiply prob by 1.265 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.26), 'effect': 'multiply prob by 0.818 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.25), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.4,0.51,0.26,0.3,0.003932126000000001,"{'timestamp': 1760866780.2009914, 'inputs': {'network_load': np.float64(0.4), 'relay_reputation': np.float64(0.51), 'budget_utilization': np.float64(0.26), 'recent_win_rate': np.float64(0.3)}, 'base_prob': 0.01, 'final_prob': np.float64(0.003932126000000001), 'steps': [{'feature': 'network_load', 'value': np.float64(0.4), 'effect': 'multiply prob by 0.760 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.51), 'effect': 'multiply prob by 1.265 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.26), 'effect': 'multiply prob by 0.818 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.3), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.4,0.51,0.37,0.0,0.00712397392876026,"{'timestamp': 1760866780.2010236, 'inputs': {'network_load': np.float64(0.4), 'relay_reputation': np.float64(0.51), 'budget_utilization': np.float64(0.37), 'recent_win_rate': 1e-09}, 'base_prob': 0.01, 'final_prob': np.float64(0.00712397392876026), 'steps': [{'feature': 'network_load', 'value': np.float64(0.4), 'effect': 'multiply prob by 0.760 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.51), 'effect': 'multiply prob by 1.265 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.37), 'effect': 'multiply prob by 0.741 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': 1e-09, 'effect': 'multiply prob by 1.000 (higher recent wins -> lower prob)'}]}"
0.4,0.51,0.37,0.05,0.0035619870000000004,"{'timestamp': 1760866780.2010505, 'inputs': {'network_load': np.float64(0.4), 'relay_reputation': np.float64(0.51), 'budget_utilization': np.float64(0.37), 'recent_win_rate': np.float64(0.05)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0035619870000000004), 'steps': [{'feature': 'network_load', 'value': np.float64(0.4), 'effect': 'multiply prob by 0.760 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.51), 'effect': 'multiply prob by 1.265 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.37), 'effect': 'multiply prob by 0.741 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.05), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.4,0.51,0.37,0.1,0.0035619870000000004,"{'timestamp': 1760866780.2010758, 'inputs': {'network_load': np.float64(0.4), 'relay_reputation': np.float64(0.51), 'budget_utilization': np.float64(0.37), 'recent_win_rate': np.float64(0.1)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0035619870000000004), 'steps': [{'feature': 'network_load', 'value': np.float64(0.4), 'effect': 'multiply prob by 0.760 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.51), 'effect': 'multiply prob by 1.265 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.37), 'effect': 'multiply prob by 0.741 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.1), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.4,0.51,0.37,0.15,0.0035619870000000004,"{'timestamp': 1760866780.2011008, 'inputs': {'network_load': np.float64(0.4), 'relay_reputation': np.float64(0.51), 'budget_utilization': np.float64(0.37), 'recent_win_rate': np.float64(0.15)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0035619870000000004), 'steps': [{'feature': 'network_load', 'value': np.float64(0.4), 'effect': 'multiply prob by 0.760 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.51), 'effect': 'multiply prob by 1.265 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.37), 'effect': 'multiply prob by 0.741 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.15), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.4,0.51,0.37,0.2,0.0035619870000000004,"{'timestamp': 1760866780.201126, 'inputs': {'network_load': np.float64(0.4), 'relay_reputation': np.float64(0.51), 'budget_utilization': np.float64(0.37), 'recent_win_rate': np.float64(0.2)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0035619870000000004), 'steps': [{'feature': 'network_load', 'value': np.float64(0.4), 'effect': 'multiply prob by 0.760 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.51), 'effect': 'multiply prob by 1.265 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.37), 'effect': 'multiply prob by 0.741 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.2), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.4,0.51,0.37,0.25,0.0035619870000000004,"{'timestamp': 1760866780.201183, 'inputs': {'network_load': np.float64(0.4), 'relay_reputation': np.float64(0.51), 'budget_utilization': np.float64(0.37), 'recent_win_rate': np.float64(0.25)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0035619870000000004), 'steps': [{'feature': 'network_load', 'value': np.float64(0.4), 'effect': 'multiply prob by 0.760 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.51), 'effect': 'multiply prob by 1.265 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.37), 'effect': 'multiply prob by 0.741 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.25), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.4,0.51,0.37,0.3,0.0035619870000000004,"{'timestamp': 1760866780.2012143, 'inputs': {'network_load': np.float64(0.4), 'relay_reputation': np.float64(0.51), 'budget_utilization': np.float64(0.37), 'recent_win_rate': np.float64(0.3)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0035619870000000004), 'steps': [{'feature': 'network_load', 'value': np.float64(0.4), 'effect': 'multiply prob by 0.760 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.51), 'effect': 'multiply prob by 1.265 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.37), 'effect': 'multiply prob by 0.741 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.3), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.4,0.51,0.48,0.0,0.006383695936163041,"{'timestamp': 1760866780.2012432, 'inputs': {'network_load': np.float64(0.4), 'relay_reputation': np.float64(0.51), 'budget_utilization': np.float64(0.48), 'recent_win_rate': 1e-09}, 'base_prob': 0.01, 'final_prob': np.float64(0.006383695936163041), 'steps': [{'feature': 'network_load', 'value': np.float64(0.4), 'effect': 'multiply prob by 0.760 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.51), 'effect': 'multiply prob by 1.265 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.48), 'effect': 'multiply prob by 0.664 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': 1e-09, 'effect': 'multiply prob by 1.000 (higher recent wins -> lower prob)'}]}"
0.4,0.51,0.48,0.05,0.0031918480000000006,"{'timestamp': 1760866780.2012706, 'inputs': {'network_load': np.float64(0.4), 'relay_reputation': np.float64(0.51), 'budget_utilization': np.float64(0.48), 'recent_win_rate': np.float64(0.05)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0031918480000000006), 'steps': [{'feature': 'network_load', 'value': np.float64(0.4), 'effect': 'multiply prob by 0.760 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.51), 'effect': 'multiply prob by 1.265 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.48), 'effect': 'multiply prob by 0.664 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.05), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.4,0.51,0.48,0.1,0.0031918480000000006,"{'timestamp': 1760866780.2012978, 'inputs': {'network_load': np.float64(0.4), 'relay_reputation': np.float64(0.51), 'budget_utilization': np.float64(0.48), 'recent_win_rate': np.float64(0.1)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0031918480000000006), 'steps': [{'feature': 'network_load', 'value': np.float64(0.4), 'effect': 'multiply prob by 0.760 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.51), 'effect': 'multiply prob by 1.265 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.48), 'effect': 'multiply prob by 0.664 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.1), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.4,0.51,0.48,0.15,0.0031918480000000006,"{'timestamp': 1760866780.2013228, 'inputs': {'network_load': np.float64(0.4), 'relay_reputation': np.float64(0.51), 'budget_utilization': np.float64(0.48), 'recent_win_rate': np.float64(0.15)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0031918480000000006), 'steps': [{'feature': 'network_load', 'value': np.float64(0.4), 'effect': 'multiply prob by 0.760 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.51), 'effect': 'multiply prob by 1.265 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.48), 'effect': 'multiply prob by 0.664 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.15), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.4,0.51,0.48,0.2,0.0031918480000000006,"{'timestamp': 1760866780.201349, 'inputs': {'network_load': np.float64(0.4), 'relay_reputation': np.float64(0.51), 'budget_utilization': np.float64(0.48), 'recent_win_rate': np.float64(0.2)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0031918480000000006), 'steps': [{'feature': 'network_load', 'value': np.float64(0.4), 'effect': 'multiply prob by 0.760 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.51), 'effect': 'multiply prob by 1.265 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.48), 'effect': 'multiply prob by 0.664 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.2), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.4,0.51,0.48,0.25,0.0031918480000000006,"{'timestamp': 1760866780.2013745, 'inputs': {'network_load': np.float64(0.4), 'relay_reputation': np.float64(0.51), 'budget_utilization': np.float64(0.48), 'recent_win_rate': np.float64(0.25)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0031918480000000006), 'steps': [{'feature': 'network_load', 'value': np.float64(0.4), 'effect': 'multiply prob by 0.760 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.51), 'effect': 'multiply prob by 1.265 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.48), 'effect': 'multiply prob by 0.664 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.25), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.4,0.51,0.48,0.3,0.0031918480000000006,"{'timestamp': 1760866780.2013996, 'inputs': {'network_load': np.float64(0.4), 'relay_reputation': np.float64(0.51), 'budget_utilization': np.float64(0.48), 'recent_win_rate': np.float64(0.3)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0031918480000000006), 'steps': [{'feature': 'network_load', 'value': np.float64(0.4), 'effect': 'multiply prob by 0.760 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.51), 'effect': 'multiply prob by 1.265 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.48), 'effect': 'multiply prob by 0.664 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.3), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.4,0.51,0.59,0.0,0.00564341794356582,"{'timestamp': 1760866780.2014287, 'inputs': {'network_load': np.float64(0.4), 'relay_reputation': np.float64(0.51), 'budget_utilization': np.float64(0.59), 'recent_win_rate': 1e-09}, 'base_prob': 0.01, 'final_prob': np.float64(0.00564341794356582), 'steps': [{'feature': 'network_load', 'value': np.float64(0.4), 'effect': 'multiply prob by 0.760 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.51), 'effect': 'multiply prob by 1.265 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.59), 'effect': 'multiply prob by 0.587 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': 1e-09, 'effect': 'multiply prob by 1.000 (higher recent wins -> lower prob)'}]}"
0.4,0.51,0.59,0.05,0.002821709,"{'timestamp': 1760866780.201454, 'inputs': {'network_load': np.float64(0.4), 'relay_reputation': np.float64(0.51), 'budget_utilization': np.float64(0.59), 'recent_win_rate': np.float64(0.05)}, 'base_prob': 0.01, 'final_prob': np.float64(0.002821709), 'steps': [{'feature': 'network_load', 'value': np.float64(0.4), 'effect': 'multiply prob by 0.760 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.51), 'effect': 'multiply prob by 1.265 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.59), 'effect': 'multiply prob by 0.587 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.05), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.4,0.51,0.59,0.1,0.002821709,"{'timestamp': 1760866780.2014825, 'inputs': {'network_load': np.float64(0.4), 'relay_reputation': np.float64(0.51), 'budget_utilization': np.float64(0.59), 'recent_win_rate': np.float64(0.1)}, 'base_prob': 0.01, 'final_prob': np.float64(0.002821709), 'steps': [{'feature': 'network_load', 'value': np.float64(0.4), 'effect': 'multiply prob by 0.760 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.51), 'effect': 'multiply prob by 1.265 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.59), 'effect': 'multiply prob by 0.587 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.1), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.4,0.51,0.59,0.15,0.002821709,"{'timestamp': 1760866780.201566, 'inputs': {'network_load': np.float64(0.4), 'relay_reputation': np.float64(0.51), 'budget_utilization': np.float64(0.59), 'recent_win_rate': np.float64(0.15)}, 'base_prob': 0.01, 'final_prob': np.float64(0.002821709), 'steps': [{'feature': 'network_load', 'value': np.float64(0.4), 'effect': 'multiply prob by 0.760 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.51), 'effect': 'multiply prob by 1.265 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.59), 'effect': 'multiply prob by 0.587 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.15), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.4,0.51,0.59,0.2,0.002821709,"{'timestamp': 1760866780.201596, 'inputs': {'network_load': np.float64(0.4), 'relay_reputation': np.float64(0.51), 'budget_utilization': np.float64(0.59), 'recent_win_rate': np.float64(0.2)}, 'base_prob': 0.01, 'final_prob': np.float64(0.002821709), 'steps': [{'feature': 'network_load', 'value': np.float64(0.4), 'effect': 'multiply prob by 0.760 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.51), 'effect': 'multiply prob by 1.265 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.59), 'effect': 'multiply prob by 0.587 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.2), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.4,0.51,0.59,0.25,0.002821709,"{'timestamp': 1760866780.2016215, 'inputs': {'network_load': np.float64(0.4), 'relay_reputation': np.float64(0.51), 'budget_utilization': np.float64(0.59), 'recent_win_rate': np.float64(0.25)}, 'base_prob': 0.01, 'final_prob': np.float64(0.002821709), 'steps': [{'feature': 'network_load', 'value': np.float64(0.4), 'effect': 'multiply prob by 0.760 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.51), 'effect': 'multiply prob by 1.265 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.59), 'effect': 'multiply prob by 0.587 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.25), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.4,0.51,0.59,0.3,0.002821709,"{'timestamp': 1760866780.201651, 'inputs': {'network_load': np.float64(0.4), 'relay_reputation': np.float64(0.51), 'budget_utilization': np.float64(0.59), 'recent_win_rate': np.float64(0.3)}, 'base_prob': 0.01, 'final_prob': np.float64(0.002821709), 'steps': [{'feature': 'network_load', 'value': np.float64(0.4), 'effect': 'multiply prob by 0.760 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.51), 'effect': 'multiply prob by 1.265 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.59), 'effect': 'multiply prob by 0.587 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.3), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.4,0.51,0.69,0.0,0.004970437950295621,"{'timestamp': 1760866780.2016804, 'inputs': {'network_load': np.float64(0.4), 'relay_reputation': np.float64(0.51), 'budget_utilization': np.float64(0.69), 'recent_win_rate': 1e-09}, 'base_prob': 0.01, 'final_prob': np.float64(0.004970437950295621), 'steps': [{'feature': 'network_load', 'value': np.float64(0.4), 'effect': 'multiply prob by 0.760 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.51), 'effect': 'multiply prob by 1.265 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.69), 'effect': 'multiply prob by 0.517 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': 1e-09, 'effect': 'multiply prob by 1.000 (higher recent wins -> lower prob)'}]}"
0.4,0.51,0.69,0.05,0.0024852190000000008,"{'timestamp': 1760866780.201712, 'inputs': {'network_load': np.float64(0.4), 'relay_reputation': np.float64(0.51), 'budget_utilization': np.float64(0.69), 'recent_win_rate': np.float64(0.05)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0024852190000000008), 'steps': [{'feature': 'network_load', 'value': np.float64(0.4), 'effect': 'multiply prob by 0.760 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.51), 'effect': 'multiply prob by 1.265 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.69), 'effect': 'multiply prob by 0.517 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.05), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.4,0.51,0.69,0.1,0.0024852190000000008,"{'timestamp': 1760866780.201737, 'inputs': {'network_load': np.float64(0.4), 'relay_reputation': np.float64(0.51), 'budget_utilization': np.float64(0.69), 'recent_win_rate': np.float64(0.1)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0024852190000000008), 'steps': [{'feature': 'network_load', 'value': np.float64(0.4), 'effect': 'multiply prob by 0.760 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.51), 'effect': 'multiply prob by 1.265 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.69), 'effect': 'multiply prob by 0.517 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.1), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.4,0.51,0.69,0.15,0.0024852190000000008,"{'timestamp': 1760866780.201764, 'inputs': {'network_load': np.float64(0.4), 'relay_reputation': np.float64(0.51), 'budget_utilization': np.float64(0.69), 'recent_win_rate': np.float64(0.15)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0024852190000000008), 'steps': [{'feature': 'network_load', 'value': np.float64(0.4), 'effect': 'multiply prob by 0.760 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.51), 'effect': 'multiply prob by 1.265 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.69), 'effect': 'multiply prob by 0.517 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.15), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.4,0.51,0.69,0.2,0.0024852190000000008,"{'timestamp': 1760866780.2017915, 'inputs': {'network_load': np.float64(0.4), 'relay_reputation': np.float64(0.51), 'budget_utilization': np.float64(0.69), 'recent_win_rate': np.float64(0.2)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0024852190000000008), 'steps': [{'feature': 'network_load', 'value': np.float64(0.4), 'effect': 'multiply prob by 0.760 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.51), 'effect': 'multiply prob by 1.265 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.69), 'effect': 'multiply prob by 0.517 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.2), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.4,0.51,0.69,0.25,0.0024852190000000008,"{'timestamp': 1760866780.2018168, 'inputs': {'network_load': np.float64(0.4), 'relay_reputation': np.float64(0.51), 'budget_utilization': np.float64(0.69), 'recent_win_rate': np.float64(0.25)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0024852190000000008), 'steps': [{'feature': 'network_load', 'value': np.float64(0.4), 'effect': 'multiply prob by 0.760 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.51), 'effect': 'multiply prob by 1.265 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.69), 'effect': 'multiply prob by 0.517 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.25), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.4,0.51,0.69,0.3,0.0024852190000000008,"{'timestamp': 1760866780.2018437, 'inputs': {'network_load': np.float64(0.4), 'relay_reputation': np.float64(0.51), 'budget_utilization': np.float64(0.69), 'recent_win_rate': np.float64(0.3)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0024852190000000008), 'steps': [{'feature': 'network_load', 'value': np.float64(0.4), 'effect': 'multiply prob by 0.760 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.51), 'effect': 'multiply prob by 1.265 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.69), 'effect': 'multiply prob by 0.517 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.3), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.4,0.51,0.8,0.0,0.0042301599576984004,"{'timestamp': 1760866780.2018712, 'inputs': {'network_load': np.float64(0.4), 'relay_reputation': np.float64(0.51), 'budget_utilization': np.float64(0.8), 'recent_win_rate': 1e-09}, 'base_prob': 0.01, 'final_prob': np.float64(0.0042301599576984004), 'steps': [{'feature': 'network_load', 'value': np.float64(0.4), 'effect': 'multiply prob by 0.760 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.51), 'effect': 'multiply prob by 1.265 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.8), 'effect': 'multiply prob by 0.440 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': 1e-09, 'effect': 'multiply prob by 1.000 (higher recent wins -> lower prob)'}]}"
0.4,0.51,0.8,0.05,0.0021150800000000005,"{'timestamp': 1760866780.2018964, 'inputs': {'network_load': np.float64(0.4), 'relay_reputation': np.float64(0.51), 'budget_utilization': np.float64(0.8), 'recent_win_rate': np.float64(0.05)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0021150800000000005), 'steps': [{'feature': 'network_load', 'value': np.float64(0.4), 'effect': 'multiply prob by 0.760 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.51), 'effect': 'multiply prob by 1.265 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.8), 'effect': 'multiply prob by 0.440 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.05), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.4,0.51,0.8,0.1,0.0021150800000000005,"{'timestamp': 1760866780.2019217, 'inputs': {'network_load': np.float64(0.4), 'relay_reputation': np.float64(0.51), 'budget_utilization': np.float64(0.8), 'recent_win_rate': np.float64(0.1)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0021150800000000005), 'steps': [{'feature': 'network_load', 'value': np.float64(0.4), 'effect': 'multiply prob by 0.760 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.51), 'effect': 'multiply prob by 1.265 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.8), 'effect': 'multiply prob by 0.440 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.1), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.4,0.51,0.8,0.15,0.0021150800000000005,"{'timestamp': 1760866780.2019472, 'inputs': {'network_load': np.float64(0.4), 'relay_reputation': np.float64(0.51), 'budget_utilization': np.float64(0.8), 'recent_win_rate': np.float64(0.15)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0021150800000000005), 'steps': [{'feature': 'network_load', 'value': np.float64(0.4), 'effect': 'multiply prob by 0.760 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.51), 'effect': 'multiply prob by 1.265 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.8), 'effect': 'multiply prob by 0.440 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.15), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.4,0.51,0.8,0.2,0.0021150800000000005,"{'timestamp': 1760866780.2019742, 'inputs': {'network_load': np.float64(0.4), 'relay_reputation': np.float64(0.51), 'budget_utilization': np.float64(0.8), 'recent_win_rate': np.float64(0.2)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0021150800000000005), 'steps': [{'feature': 'network_load', 'value': np.float64(0.4), 'effect': 'multiply prob by 0.760 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.51), 'effect': 'multiply prob by 1.265 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.8), 'effect': 'multiply prob by 0.440 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.2), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.4,0.51,0.8,0.25,0.0021150800000000005,"{'timestamp': 1760866780.202001, 'inputs': {'network_load': np.float64(0.4), 'relay_reputation': np.float64(0.51), 'budget_utilization': np.float64(0.8), 'recent_win_rate': np.float64(0.25)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0021150800000000005), 'steps': [{'feature': 'network_load', 'value': np.float64(0.4), 'effect': 'multiply prob by 0.760 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.51), 'effect': 'multiply prob by 1.265 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.8), 'effect': 'multiply prob by 0.440 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.25), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.4,0.51,0.8,0.3,0.0021150800000000005,"{'timestamp': 1760866780.2020266, 'inputs': {'network_load': np.float64(0.4), 'relay_reputation': np.float64(0.51), 'budget_utilization': np.float64(0.8), 'recent_win_rate': np.float64(0.3)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0021150800000000005), 'steps': [{'feature': 'network_load', 'value': np.float64(0.4), 'effect': 'multiply prob by 0.760 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.51), 'effect': 'multiply prob by 1.265 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.8), 'effect': 'multiply prob by 0.440 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.3), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.4,0.62,0.05,0.0,0.0104876198951238,"{'timestamp': 1760866780.2020562, 'inputs': {'network_load': np.float64(0.4), 'relay_reputation': np.float64(0.62), 'budget_utilization': np.float64(0.05), 'recent_win_rate': 1e-09}, 'base_prob': 0.01, 'final_prob': np.float64(0.0104876198951238), 'steps': [{'feature': 'network_load', 'value': np.float64(0.4), 'effect': 'multiply prob by 0.760 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.62), 'effect': 'multiply prob by 1.430 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.05), 'effect': 'multiply prob by 0.965 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': 1e-09, 'effect': 'multiply prob by 1.000 (higher recent wins -> lower prob)'}]}"
0.4,0.62,0.05,0.05,0.00524381,"{'timestamp': 1760866780.2020833, 'inputs': {'network_load': np.float64(0.4), 'relay_reputation': np.float64(0.62), 'budget_utilization': np.float64(0.05), 'recent_win_rate': np.float64(0.05)}, 'base_prob': 0.01, 'final_prob': np.float64(0.00524381), 'steps': [{'feature': 'network_load', 'value': np.float64(0.4), 'effect': 'multiply prob by 0.760 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.62), 'effect': 'multiply prob by 1.430 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.05), 'effect': 'multiply prob by 0.965 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.05), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.4,0.62,0.05,0.1,0.00524381,"{'timestamp': 1760866780.2021086, 'inputs': {'network_load': np.float64(0.4), 'relay_reputation': np.float64(0.62), 'budget_utilization': np.float64(0.05), 'recent_win_rate': np.float64(0.1)}, 'base_prob': 0.01, 'final_prob': np.float64(0.00524381), 'steps': [{'feature': 'network_load', 'value': np.float64(0.4), 'effect': 'multiply prob by 0.760 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.62), 'effect': 'multiply prob by 1.430 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.05), 'effect': 'multiply prob by 0.965 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.1), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.4,0.62,0.05,0.15,0.00524381,"{'timestamp': 1760866780.2021356, 'inputs': {'network_load': np.float64(0.4), 'relay_reputation': np.float64(0.62), 'budget_utilization': np.float64(0.05), 'recent_win_rate': np.float64(0.15)}, 'base_prob': 0.01, 'final_prob': np.float64(0.00524381), 'steps': [{'feature': 'network_load', 'value': np.float64(0.4), 'effect': 'multiply prob by 0.760 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.62), 'effect': 'multiply prob by 1.430 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.05), 'effect': 'multiply prob by 0.965 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.15), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.4,0.62,0.05,0.2,0.00524381,"{'timestamp': 1760866780.2021627, 'inputs': {'network_load': np.float64(0.4), 'relay_reputation': np.float64(0.62), 'budget_utilization': np.float64(0.05), 'recent_win_rate': np.float64(0.2)}, 'base_prob': 0.01, 'final_prob': np.float64(0.00524381), 'steps': [{'feature': 'network_load', 'value': np.float64(0.4), 'effect': 'multiply prob by 0.760 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.62), 'effect': 'multiply prob by 1.430 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.05), 'effect': 'multiply prob by 0.965 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.2), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.4,0.62,0.05,0.25,0.00524381,"{'timestamp': 1760866780.20219, 'inputs': {'network_load': np.float64(0.4), 'relay_reputation': np.float64(0.62), 'budget_utilization': np.float64(0.05), 'recent_win_rate': np.float64(0.25)}, 'base_prob': 0.01, 'final_prob': np.float64(0.00524381), 'steps': [{'feature': 'network_load', 'value': np.float64(0.4), 'effect': 'multiply prob by 0.760 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.62), 'effect': 'multiply prob by 1.430 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.05), 'effect': 'multiply prob by 0.965 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.25), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.4,0.62,0.05,0.3,0.00524381,"{'timestamp': 1760866780.202217, 'inputs': {'network_load': np.float64(0.4), 'relay_reputation': np.float64(0.62), 'budget_utilization': np.float64(0.05), 'recent_win_rate': np.float64(0.3)}, 'base_prob': 0.01, 'final_prob': np.float64(0.00524381), 'steps': [{'feature': 'network_load', 'value': np.float64(0.4), 'effect': 'multiply prob by 0.760 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.62), 'effect': 'multiply prob by 1.430 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.05), 'effect': 'multiply prob by 0.965 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.3), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.4,0.62,0.16,0.0,0.00965078390349216,"{'timestamp': 1760866780.2022443, 'inputs': {'network_load': np.float64(0.4), 'relay_reputation': np.float64(0.62), 'budget_utilization': np.float64(0.16), 'recent_win_rate': 1e-09}, 'base_prob': 0.01, 'final_prob': np.float64(0.00965078390349216), 'steps': [{'feature': 'network_load', 'value': np.float64(0.4), 'effect': 'multiply prob by 0.760 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.62), 'effect': 'multiply prob by 1.430 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.16), 'effect': 'multiply prob by 0.888 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': 1e-09, 'effect': 'multiply prob by 1.000 (higher recent wins -> lower prob)'}]}"
0.4,0.62,0.16,0.05,0.0048253919999999995,"{'timestamp': 1760866780.2022715, 'inputs': {'network_load': np.float64(0.4), 'relay_reputation': np.float64(0.62), 'budget_utilization': np.float64(0.16), 'recent_win_rate': np.float64(0.05)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0048253919999999995), 'steps': [{'feature': 'network_load', 'value': np.float64(0.4), 'effect': 'multiply prob by 0.760 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.62), 'effect': 'multiply prob by 1.430 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.16), 'effect': 'multiply prob by 0.888 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.05), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.4,0.62,0.16,0.1,0.0048253919999999995,"{'timestamp': 1760866780.2022967, 'inputs': {'network_load': np.float64(0.4), 'relay_reputation': np.float64(0.62), 'budget_utilization': np.float64(0.16), 'recent_win_rate': np.float64(0.1)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0048253919999999995), 'steps': [{'feature': 'network_load', 'value': np.float64(0.4), 'effect': 'multiply prob by 0.760 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.62), 'effect': 'multiply prob by 1.430 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.16), 'effect': 'multiply prob by 0.888 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.1), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.4,0.62,0.16,0.15,0.0048253919999999995,"{'timestamp': 1760866780.2023222, 'inputs': {'network_load': np.float64(0.4), 'relay_reputation': np.float64(0.62), 'budget_utilization': np.float64(0.16), 'recent_win_rate': np.float64(0.15)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0048253919999999995), 'steps': [{'feature': 'network_load', 'value': np.float64(0.4), 'effect': 'multiply prob by 0.760 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.62), 'effect': 'multiply prob by 1.430 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.16), 'effect': 'multiply prob by 0.888 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.15), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.4,0.62,0.16,0.2,0.0048253919999999995,"{'timestamp': 1760866780.2023473, 'inputs': {'network_load': np.float64(0.4), 'relay_reputation': np.float64(0.62), 'budget_utilization': np.float64(0.16), 'recent_win_rate': np.float64(0.2)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0048253919999999995), 'steps': [{'feature': 'network_load', 'value': np.float64(0.4), 'effect': 'multiply prob by 0.760 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.62), 'effect': 'multiply prob by 1.430 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.16), 'effect': 'multiply prob by 0.888 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.2), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.4,0.62,0.16,0.25,0.0048253919999999995,"{'timestamp': 1760866780.2023726, 'inputs': {'network_load': np.float64(0.4), 'relay_reputation': np.float64(0.62), 'budget_utilization': np.float64(0.16), 'recent_win_rate': np.float64(0.25)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0048253919999999995), 'steps': [{'feature': 'network_load', 'value': np.float64(0.4), 'effect': 'multiply prob by 0.760 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.62), 'effect': 'multiply prob by 1.430 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.16), 'effect': 'multiply prob by 0.888 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.25), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.4,0.62,0.16,0.3,0.0048253919999999995,"{'timestamp': 1760866780.202449, 'inputs': {'network_load': np.float64(0.4), 'relay_reputation': np.float64(0.62), 'budget_utilization': np.float64(0.16), 'recent_win_rate': np.float64(0.3)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0048253919999999995), 'steps': [{'feature': 'network_load', 'value': np.float64(0.4), 'effect': 'multiply prob by 0.760 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.62), 'effect': 'multiply prob by 1.430 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.16), 'effect': 'multiply prob by 0.888 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.3), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.4,0.62,0.26,0.0,0.00889002391109976,"{'timestamp': 1760866780.2024891, 'inputs': {'network_load': np.float64(0.4), 'relay_reputation': np.float64(0.62), 'budget_utilization': np.float64(0.26), 'recent_win_rate': 1e-09}, 'base_prob': 0.01, 'final_prob': np.float64(0.00889002391109976), 'steps': [{'feature': 'network_load', 'value': np.float64(0.4), 'effect': 'multiply prob by 0.760 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.62), 'effect': 'multiply prob by 1.430 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.26), 'effect': 'multiply prob by 0.818 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': 1e-09, 'effect': 'multiply prob by 1.000 (higher recent wins -> lower prob)'}]}"
0.4,0.62,0.26,0.05,0.004445012,"{'timestamp': 1760866780.202515, 'inputs': {'network_load': np.float64(0.4), 'relay_reputation': np.float64(0.62), 'budget_utilization': np.float64(0.26), 'recent_win_rate': np.float64(0.05)}, 'base_prob': 0.01, 'final_prob': np.float64(0.004445012), 'steps': [{'feature': 'network_load', 'value': np.float64(0.4), 'effect': 'multiply prob by 0.760 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.62), 'effect': 'multiply prob by 1.430 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.26), 'effect': 'multiply prob by 0.818 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.05), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.4,0.62,0.26,0.1,0.004445012,"{'timestamp': 1760866780.2025406, 'inputs': {'network_load': np.float64(0.4), 'relay_reputation': np.float64(0.62), 'budget_utilization': np.float64(0.26), 'recent_win_rate': np.float64(0.1)}, 'base_prob': 0.01, 'final_prob': np.float64(0.004445012), 'steps': [{'feature': 'network_load', 'value': np.float64(0.4), 'effect': 'multiply prob by 0.760 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.62), 'effect': 'multiply prob by 1.430 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.26), 'effect': 'multiply prob by 0.818 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.1), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.4,0.62,0.26,0.15,0.004445012,"{'timestamp': 1760866780.202566, 'inputs': {'network_load': np.float64(0.4), 'relay_reputation': np.float64(0.62), 'budget_utilization': np.float64(0.26), 'recent_win_rate': np.float64(0.15)}, 'base_prob': 0.01, 'final_prob': np.float64(0.004445012), 'steps': [{'feature': 'network_load', 'value': np.float64(0.4), 'effect': 'multiply prob by 0.760 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.62), 'effect': 'multiply prob by 1.430 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.26), 'effect': 'multiply prob by 0.818 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.15), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.4,0.62,0.26,0.2,0.004445012,"{'timestamp': 1760866780.2025912, 'inputs': {'network_load': np.float64(0.4), 'relay_reputation': np.float64(0.62), 'budget_utilization': np.float64(0.26), 'recent_win_rate': np.float64(0.2)}, 'base_prob': 0.01, 'final_prob': np.float64(0.004445012), 'steps': [{'feature': 'network_load', 'value': np.float64(0.4), 'effect': 'multiply prob by 0.760 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.62), 'effect': 'multiply prob by 1.430 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.26), 'effect': 'multiply prob by 0.818 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.2), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.4,0.62,0.26,0.25,0.004445012,"{'timestamp': 1760866780.202621, 'inputs': {'network_load': np.float64(0.4), 'relay_reputation': np.float64(0.62), 'budget_utilization': np.float64(0.26), 'recent_win_rate': np.float64(0.25)}, 'base_prob': 0.01, 'final_prob': np.float64(0.004445012), 'steps': [{'feature': 'network_load', 'value': np.float64(0.4), 'effect': 'multiply prob by 0.760 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.62), 'effect': 'multiply prob by 1.430 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.26), 'effect': 'multiply prob by 0.818 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.25), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.4,0.62,0.26,0.3,0.004445012,"{'timestamp': 1760866780.2026465, 'inputs': {'network_load': np.float64(0.4), 'relay_reputation': np.float64(0.62), 'budget_utilization': np.float64(0.26), 'recent_win_rate': np.float64(0.3)}, 'base_prob': 0.01, 'final_prob': np.float64(0.004445012), 'steps': [{'feature': 'network_load', 'value': np.float64(0.4), 'effect': 'multiply prob by 0.760 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.62), 'effect': 'multiply prob by 1.430 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.26), 'effect': 'multiply prob by 0.818 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.3), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.4,0.62,0.37,0.0,0.00805318791946812,"{'timestamp': 1760866780.2026772, 'inputs': {'network_load': np.float64(0.4), 'relay_reputation': np.float64(0.62), 'budget_utilization': np.float64(0.37), 'recent_win_rate': 1e-09}, 'base_prob': 0.01, 'final_prob': np.float64(0.00805318791946812), 'steps': [{'feature': 'network_load', 'value': np.float64(0.4), 'effect': 'multiply prob by 0.760 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.62), 'effect': 'multiply prob by 1.430 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.37), 'effect': 'multiply prob by 0.741 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': 1e-09, 'effect': 'multiply prob by 1.000 (higher recent wins -> lower prob)'}]}"
0.4,0.62,0.37,0.05,0.004026594,"{'timestamp': 1760866780.2027044, 'inputs': {'network_load': np.float64(0.4), 'relay_reputation': np.float64(0.62), 'budget_utilization': np.float64(0.37), 'recent_win_rate': np.float64(0.05)}, 'base_prob': 0.01, 'final_prob': np.float64(0.004026594), 'steps': [{'feature': 'network_load', 'value': np.float64(0.4), 'effect': 'multiply prob by 0.760 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.62), 'effect': 'multiply prob by 1.430 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.37), 'effect': 'multiply prob by 0.741 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.05), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.4,0.62,0.37,0.1,0.004026594,"{'timestamp': 1760866780.2027302, 'inputs': {'network_load': np.float64(0.4), 'relay_reputation': np.float64(0.62), 'budget_utilization': np.float64(0.37), 'recent_win_rate': np.float64(0.1)}, 'base_prob': 0.01, 'final_prob': np.float64(0.004026594), 'steps': [{'feature': 'network_load', 'value': np.float64(0.4), 'effect': 'multiply prob by 0.760 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.62), 'effect': 'multiply prob by 1.430 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.37), 'effect': 'multiply prob by 0.741 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.1), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.4,0.62,0.37,0.15,0.004026594,"{'timestamp': 1760866780.202759, 'inputs': {'network_load': np.float64(0.4), 'relay_reputation': np.float64(0.62), 'budget_utilization': np.float64(0.37), 'recent_win_rate': np.float64(0.15)}, 'base_prob': 0.01, 'final_prob': np.float64(0.004026594), 'steps': [{'feature': 'network_load', 'value': np.float64(0.4), 'effect': 'multiply prob by 0.760 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.62), 'effect': 'multiply prob by 1.430 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.37), 'effect': 'multiply prob by 0.741 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.15), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.4,0.62,0.37,0.2,0.004026594,"{'timestamp': 1760866780.2027843, 'inputs': {'network_load': np.float64(0.4), 'relay_reputation': np.float64(0.62), 'budget_utilization': np.float64(0.37), 'recent_win_rate': np.float64(0.2)}, 'base_prob': 0.01, 'final_prob': np.float64(0.004026594), 'steps': [{'feature': 'network_load', 'value': np.float64(0.4), 'effect': 'multiply prob by 0.760 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.62), 'effect': 'multiply prob by 1.430 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.37), 'effect': 'multiply prob by 0.741 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.2), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.4,0.62,0.37,0.25,0.004026594,"{'timestamp': 1760866780.2028096, 'inputs': {'network_load': np.float64(0.4), 'relay_reputation': np.float64(0.62), 'budget_utilization': np.float64(0.37), 'recent_win_rate': np.float64(0.25)}, 'base_prob': 0.01, 'final_prob': np.float64(0.004026594), 'steps': [{'feature': 'network_load', 'value': np.float64(0.4), 'effect': 'multiply prob by 0.760 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.62), 'effect': 'multiply prob by 1.430 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.37), 'effect': 'multiply prob by 0.741 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.25), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.4,0.62,0.37,0.3,0.004026594,"{'timestamp': 1760866780.2028475, 'inputs': {'network_load': np.float64(0.4), 'relay_reputation': np.float64(0.62), 'budget_utilization': np.float64(0.37), 'recent_win_rate': np.float64(0.3)}, 'base_prob': 0.01, 'final_prob': np.float64(0.004026594), 'steps': [{'feature': 'network_load', 'value': np.float64(0.4), 'effect': 'multiply prob by 0.760 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.62), 'effect': 'multiply prob by 1.430 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.37), 'effect': 'multiply prob by 0.741 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.3), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.4,0.62,0.48,0.0,0.00721635192783648,"{'timestamp': 1760866780.2028751, 'inputs': {'network_load': np.float64(0.4), 'relay_reputation': np.float64(0.62), 'budget_utilization': np.float64(0.48), 'recent_win_rate': 1e-09}, 'base_prob': 0.01, 'final_prob': np.float64(0.00721635192783648), 'steps': [{'feature': 'network_load', 'value': np.float64(0.4), 'effect': 'multiply prob by 0.760 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.62), 'effect': 'multiply prob by 1.430 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.48), 'effect': 'multiply prob by 0.664 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': 1e-09, 'effect': 'multiply prob by 1.000 (higher recent wins -> lower prob)'}]}"
0.4,0.62,0.48,0.05,0.003608176,"{'timestamp': 1760866780.202905, 'inputs': {'network_load': np.float64(0.4), 'relay_reputation': np.float64(0.62), 'budget_utilization': np.float64(0.48), 'recent_win_rate': np.float64(0.05)}, 'base_prob': 0.01, 'final_prob': np.float64(0.003608176), 'steps': [{'feature': 'network_load', 'value': np.float64(0.4), 'effect': 'multiply prob by 0.760 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.62), 'effect': 'multiply prob by 1.430 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.48), 'effect': 'multiply prob by 0.664 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.05), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.4,0.62,0.48,0.1,0.003608176,"{'timestamp': 1760866780.2029302, 'inputs': {'network_load': np.float64(0.4), 'relay_reputation': np.float64(0.62), 'budget_utilization': np.float64(0.48), 'recent_win_rate': np.float64(0.1)}, 'base_prob': 0.01, 'final_prob': np.float64(0.003608176), 'steps': [{'feature': 'network_load', 'value': np.float64(0.4), 'effect': 'multiply prob by 0.760 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.62), 'effect': 'multiply prob by 1.430 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.48), 'effect': 'multiply prob by 0.664 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.1), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.4,0.62,0.48,0.15,0.003608176,"{'timestamp': 1760866780.2029555, 'inputs': {'network_load': np.float64(0.4), 'relay_reputation': np.float64(0.62), 'budget_utilization': np.float64(0.48), 'recent_win_rate': np.float64(0.15)}, 'base_prob': 0.01, 'final_prob': np.float64(0.003608176), 'steps': [{'feature': 'network_load', 'value': np.float64(0.4), 'effect': 'multiply prob by 0.760 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.62), 'effect': 'multiply prob by 1.430 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.48), 'effect': 'multiply prob by 0.664 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.15), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.4,0.62,0.48,0.2,0.003608176,"{'timestamp': 1760866780.2029808, 'inputs': {'network_load': np.float64(0.4), 'relay_reputation': np.float64(0.62), 'budget_utilization': np.float64(0.48), 'recent_win_rate': np.float64(0.2)}, 'base_prob': 0.01, 'final_prob': np.float64(0.003608176), 'steps': [{'feature': 'network_load', 'value': np.float64(0.4), 'effect': 'multiply prob by 0.760 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.62), 'effect': 'multiply prob by 1.430 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.48), 'effect': 'multiply prob by 0.664 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.2), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.4,0.62,0.48,0.25,0.003608176,"{'timestamp': 1760866780.2030065, 'inputs': {'network_load': np.float64(0.4), 'relay_reputation': np.float64(0.62), 'budget_utilization': np.float64(0.48), 'recent_win_rate': np.float64(0.25)}, 'base_prob': 0.01, 'final_prob': np.float64(0.003608176), 'steps': [{'feature': 'network_load', 'value': np.float64(0.4), 'effect': 'multiply prob by 0.760 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.62), 'effect': 'multiply prob by 1.430 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.48), 'effect': 'multiply prob by 0.664 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.25), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.4,0.62,0.48,0.3,0.003608176,"{'timestamp': 1760866780.2030318, 'inputs': {'network_load': np.float64(0.4), 'relay_reputation': np.float64(0.62), 'budget_utilization': np.float64(0.48), 'recent_win_rate': np.float64(0.3)}, 'base_prob': 0.01, 'final_prob': np.float64(0.003608176), 'steps': [{'feature': 'network_load', 'value': np.float64(0.4), 'effect': 'multiply prob by 0.760 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.62), 'effect': 'multiply prob by 1.430 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.48), 'effect': 'multiply prob by 0.664 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.3), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.4,0.62,0.59,0.0,0.006379515936204839,"{'timestamp': 1760866780.2030606, 'inputs': {'network_load': np.float64(0.4), 'relay_reputation': np.float64(0.62), 'budget_utilization': np.float64(0.59), 'recent_win_rate': 1e-09}, 'base_prob': 0.01, 'final_prob': np.float64(0.006379515936204839), 'steps': [{'feature': 'network_load', 'value': np.float64(0.4), 'effect': 'multiply prob by 0.760 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.62), 'effect': 'multiply prob by 1.430 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.59), 'effect': 'multiply prob by 0.587 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': 1e-09, 'effect': 'multiply prob by 1.000 (higher recent wins -> lower prob)'}]}"
0.4,0.62,0.59,0.05,0.0031897579999999996,"{'timestamp': 1760866780.2030864, 'inputs': {'network_load': np.float64(0.4), 'relay_reputation': np.float64(0.62), 'budget_utilization': np.float64(0.59), 'recent_win_rate': np.float64(0.05)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0031897579999999996), 'steps': [{'feature': 'network_load', 'value': np.float64(0.4), 'effect': 'multiply prob by 0.760 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.62), 'effect': 'multiply prob by 1.430 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.59), 'effect': 'multiply prob by 0.587 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.05), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.4,0.62,0.59,0.1,0.0031897579999999996,"{'timestamp': 1760866780.2031136, 'inputs': {'network_load': np.float64(0.4), 'relay_reputation': np.float64(0.62), 'budget_utilization': np.float64(0.59), 'recent_win_rate': np.float64(0.1)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0031897579999999996), 'steps': [{'feature': 'network_load', 'value': np.float64(0.4), 'effect': 'multiply prob by 0.760 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.62), 'effect': 'multiply prob by 1.430 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.59), 'effect': 'multiply prob by 0.587 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.1), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.4,0.62,0.59,0.15,0.0031897579999999996,"{'timestamp': 1760866780.2031622, 'inputs': {'network_load': np.float64(0.4), 'relay_reputation': np.float64(0.62), 'budget_utilization': np.float64(0.59), 'recent_win_rate': np.float64(0.15)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0031897579999999996), 'steps': [{'feature': 'network_load', 'value': np.float64(0.4), 'effect': 'multiply prob by 0.760 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.62), 'effect': 'multiply prob by 1.430 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.59), 'effect': 'multiply prob by 0.587 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.15), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.4,0.62,0.59,0.2,0.0031897579999999996,"{'timestamp': 1760866780.2032, 'inputs': {'network_load': np.float64(0.4), 'relay_reputation': np.float64(0.62), 'budget_utilization': np.float64(0.59), 'recent_win_rate': np.float64(0.2)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0031897579999999996), 'steps': [{'feature': 'network_load', 'value': np.float64(0.4), 'effect': 'multiply prob by 0.760 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.62), 'effect': 'multiply prob by 1.430 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.59), 'effect': 'multiply prob by 0.587 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.2), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.4,0.62,0.59,0.25,0.0031897579999999996,"{'timestamp': 1760866780.20323, 'inputs': {'network_load': np.float64(0.4), 'relay_reputation': np.float64(0.62), 'budget_utilization': np.float64(0.59), 'recent_win_rate': np.float64(0.25)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0031897579999999996), 'steps': [{'feature': 'network_load', 'value': np.float64(0.4), 'effect': 'multiply prob by 0.760 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.62), 'effect': 'multiply prob by 1.430 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.59), 'effect': 'multiply prob by 0.587 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.25), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.4,0.62,0.59,0.3,0.0031897579999999996,"{'timestamp': 1760866780.2032554, 'inputs': {'network_load': np.float64(0.4), 'relay_reputation': np.float64(0.62), 'budget_utilization': np.float64(0.59), 'recent_win_rate': np.float64(0.3)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0031897579999999996), 'steps': [{'feature': 'network_load', 'value': np.float64(0.4), 'effect': 'multiply prob by 0.760 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.62), 'effect': 'multiply prob by 1.430 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.59), 'effect': 'multiply prob by 0.587 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.3), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.4,0.62,0.69,0.0,0.00561875594381244,"{'timestamp': 1760866780.2033453, 'inputs': {'network_load': np.float64(0.4), 'relay_reputation': np.float64(0.62), 'budget_utilization': np.float64(0.69), 'recent_win_rate': 1e-09}, 'base_prob': 0.01, 'final_prob': np.float64(0.00561875594381244), 'steps': [{'feature': 'network_load', 'value': np.float64(0.4), 'effect': 'multiply prob by 0.760 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.62), 'effect': 'multiply prob by 1.430 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.69), 'effect': 'multiply prob by 0.517 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': 1e-09, 'effect': 'multiply prob by 1.000 (higher recent wins -> lower prob)'}]}"
0.4,0.62,0.69,0.05,0.0028093780000000004,"{'timestamp': 1760866780.2033727, 'inputs': {'network_load': np.float64(0.4), 'relay_reputation': np.float64(0.62), 'budget_utilization': np.float64(0.69), 'recent_win_rate': np.float64(0.05)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0028093780000000004), 'steps': [{'feature': 'network_load', 'value': np.float64(0.4), 'effect': 'multiply prob by 0.760 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.62), 'effect': 'multiply prob by 1.430 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.69), 'effect': 'multiply prob by 0.517 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.05), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.4,0.62,0.69,0.1,0.0028093780000000004,"{'timestamp': 1760866780.2033982, 'inputs': {'network_load': np.float64(0.4), 'relay_reputation': np.float64(0.62), 'budget_utilization': np.float64(0.69), 'recent_win_rate': np.float64(0.1)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0028093780000000004), 'steps': [{'feature': 'network_load', 'value': np.float64(0.4), 'effect': 'multiply prob by 0.760 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.62), 'effect': 'multiply prob by 1.430 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.69), 'effect': 'multiply prob by 0.517 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.1), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.4,0.62,0.69,0.15,0.0028093780000000004,"{'timestamp': 1760866780.2034266, 'inputs': {'network_load': np.float64(0.4), 'relay_reputation': np.float64(0.62), 'budget_utilization': np.float64(0.69), 'recent_win_rate': np.float64(0.15)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0028093780000000004), 'steps': [{'feature': 'network_load', 'value': np.float64(0.4), 'effect': 'multiply prob by 0.760 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.62), 'effect': 'multiply prob by 1.430 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.69), 'effect': 'multiply prob by 0.517 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.15), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.4,0.62,0.69,0.2,0.0028093780000000004,"{'timestamp': 1760866780.2034519, 'inputs': {'network_load': np.float64(0.4), 'relay_reputation': np.float64(0.62), 'budget_utilization': np.float64(0.69), 'recent_win_rate': np.float64(0.2)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0028093780000000004), 'steps': [{'feature': 'network_load', 'value': np.float64(0.4), 'effect': 'multiply prob by 0.760 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.62), 'effect': 'multiply prob by 1.430 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.69), 'effect': 'multiply prob by 0.517 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.2), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.4,0.62,0.69,0.25,0.0028093780000000004,"{'timestamp': 1760866780.2034771, 'inputs': {'network_load': np.float64(0.4), 'relay_reputation': np.float64(0.62), 'budget_utilization': np.float64(0.69), 'recent_win_rate': np.float64(0.25)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0028093780000000004), 'steps': [{'feature': 'network_load', 'value': np.float64(0.4), 'effect': 'multiply prob by 0.760 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.62), 'effect': 'multiply prob by 1.430 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.69), 'effect': 'multiply prob by 0.517 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.25), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.4,0.62,0.69,0.3,0.0028093780000000004,"{'timestamp': 1760866780.2035024, 'inputs': {'network_load': np.float64(0.4), 'relay_reputation': np.float64(0.62), 'budget_utilization': np.float64(0.69), 'recent_win_rate': np.float64(0.3)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0028093780000000004), 'steps': [{'feature': 'network_load', 'value': np.float64(0.4), 'effect': 'multiply prob by 0.760 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.62), 'effect': 'multiply prob by 1.430 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.69), 'effect': 'multiply prob by 0.517 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.3), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.4,0.62,0.8,0.0,0.0047819199521808,"{'timestamp': 1760866780.2035294, 'inputs': {'network_load': np.float64(0.4), 'relay_reputation': np.float64(0.62), 'budget_utilization': np.float64(0.8), 'recent_win_rate': 1e-09}, 'base_prob': 0.01, 'final_prob': np.float64(0.0047819199521808), 'steps': [{'feature': 'network_load', 'value': np.float64(0.4), 'effect': 'multiply prob by 0.760 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.62), 'effect': 'multiply prob by 1.430 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.8), 'effect': 'multiply prob by 0.440 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': 1e-09, 'effect': 'multiply prob by 1.000 (higher recent wins -> lower prob)'}]}"
0.4,0.62,0.8,0.05,0.00239096,"{'timestamp': 1760866780.2035568, 'inputs': {'network_load': np.float64(0.4), 'relay_reputation': np.float64(0.62), 'budget_utilization': np.float64(0.8), 'recent_win_rate': np.float64(0.05)}, 'base_prob': 0.01, 'final_prob': np.float64(0.00239096), 'steps': [{'feature': 'network_load', 'value': np.float64(0.4), 'effect': 'multiply prob by 0.760 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.62), 'effect': 'multiply prob by 1.430 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.8), 'effect': 'multiply prob by 0.440 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.05), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.4,0.62,0.8,0.1,0.00239096,"{'timestamp': 1760866780.2035825, 'inputs': {'network_load': np.float64(0.4), 'relay_reputation': np.float64(0.62), 'budget_utilization': np.float64(0.8), 'recent_win_rate': np.float64(0.1)}, 'base_prob': 0.01, 'final_prob': np.float64(0.00239096), 'steps': [{'feature': 'network_load', 'value': np.float64(0.4), 'effect': 'multiply prob by 0.760 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.62), 'effect': 'multiply prob by 1.430 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.8), 'effect': 'multiply prob by 0.440 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.1), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.4,0.62,0.8,0.15,0.00239096,"{'timestamp': 1760866780.2036076, 'inputs': {'network_load': np.float64(0.4), 'relay_reputation': np.float64(0.62), 'budget_utilization': np.float64(0.8), 'recent_win_rate': np.float64(0.15)}, 'base_prob': 0.01, 'final_prob': np.float64(0.00239096), 'steps': [{'feature': 'network_load', 'value': np.float64(0.4), 'effect': 'multiply prob by 0.760 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.62), 'effect': 'multiply prob by 1.430 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.8), 'effect': 'multiply prob by 0.440 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.15), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.4,0.62,0.8,0.2,0.00239096,"{'timestamp': 1760866780.2036345, 'inputs': {'network_load': np.float64(0.4), 'relay_reputation': np.float64(0.62), 'budget_utilization': np.float64(0.8), 'recent_win_rate': np.float64(0.2)}, 'base_prob': 0.01, 'final_prob': np.float64(0.00239096), 'steps': [{'feature': 'network_load', 'value': np.float64(0.4), 'effect': 'multiply prob by 0.760 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.62), 'effect': 'multiply prob by 1.430 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.8), 'effect': 'multiply prob by 0.440 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.2), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.4,0.62,0.8,0.25,0.00239096,"{'timestamp': 1760866780.2036612, 'inputs': {'network_load': np.float64(0.4), 'relay_reputation': np.float64(0.62), 'budget_utilization': np.float64(0.8), 'recent_win_rate': np.float64(0.25)}, 'base_prob': 0.01, 'final_prob': np.float64(0.00239096), 'steps': [{'feature': 'network_load', 'value': np.float64(0.4), 'effect': 'multiply prob by 0.760 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.62), 'effect': 'multiply prob by 1.430 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.8), 'effect': 'multiply prob by 0.440 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.25), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.4,0.62,0.8,0.3,0.00239096,"{'timestamp': 1760866780.2036867, 'inputs': {'network_load': np.float64(0.4), 'relay_reputation': np.float64(0.62), 'budget_utilization': np.float64(0.8), 'recent_win_rate': np.float64(0.3)}, 'base_prob': 0.01, 'final_prob': np.float64(0.00239096), 'steps': [{'feature': 'network_load', 'value': np.float64(0.4), 'effect': 'multiply prob by 0.760 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.62), 'effect': 'multiply prob by 1.430 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.8), 'effect': 'multiply prob by 0.440 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.3), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.4,0.73,0.05,0.0,0.011697729883022697,"{'timestamp': 1760866780.2037182, 'inputs': {'network_load': np.float64(0.4), 'relay_reputation': np.float64(0.73), 'budget_utilization': np.float64(0.05), 'recent_win_rate': 1e-09}, 'base_prob': 0.01, 'final_prob': np.float64(0.011697729883022697), 'steps': [{'feature': 'network_load', 'value': np.float64(0.4), 'effect': 'multiply prob by 0.760 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.73), 'effect': 'multiply prob by 1.595 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.05), 'effect': 'multiply prob by 0.965 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': 1e-09, 'effect': 'multiply prob by 1.000 (higher recent wins -> lower prob)'}]}"
0.4,0.73,0.05,0.05,0.005848864999999999,"{'timestamp': 1760866780.2037437, 'inputs': {'network_load': np.float64(0.4), 'relay_reputation': np.float64(0.73), 'budget_utilization': np.float64(0.05), 'recent_win_rate': np.float64(0.05)}, 'base_prob': 0.01, 'final_prob': np.float64(0.005848864999999999), 'steps': [{'feature': 'network_load', 'value': np.float64(0.4), 'effect': 'multiply prob by 0.760 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.73), 'effect': 'multiply prob by 1.595 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.05), 'effect': 'multiply prob by 0.965 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.05), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.4,0.73,0.05,0.1,0.005848864999999999,"{'timestamp': 1760866780.2037692, 'inputs': {'network_load': np.float64(0.4), 'relay_reputation': np.float64(0.73), 'budget_utilization': np.float64(0.05), 'recent_win_rate': np.float64(0.1)}, 'base_prob': 0.01, 'final_prob': np.float64(0.005848864999999999), 'steps': [{'feature': 'network_load', 'value': np.float64(0.4), 'effect': 'multiply prob by 0.760 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.73), 'effect': 'multiply prob by 1.595 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.05), 'effect': 'multiply prob by 0.965 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.1), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.4,0.73,0.05,0.15,0.005848864999999999,"{'timestamp': 1760866780.2037945, 'inputs': {'network_load': np.float64(0.4), 'relay_reputation': np.float64(0.73), 'budget_utilization': np.float64(0.05), 'recent_win_rate': np.float64(0.15)}, 'base_prob': 0.01, 'final_prob': np.float64(0.005848864999999999), 'steps': [{'feature': 'network_load', 'value': np.float64(0.4), 'effect': 'multiply prob by 0.760 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.73), 'effect': 'multiply prob by 1.595 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.05), 'effect': 'multiply prob by 0.965 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.15), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.4,0.73,0.05,0.2,0.005848864999999999,"{'timestamp': 1760866780.2038195, 'inputs': {'network_load': np.float64(0.4), 'relay_reputation': np.float64(0.73), 'budget_utilization': np.float64(0.05), 'recent_win_rate': np.float64(0.2)}, 'base_prob': 0.01, 'final_prob': np.float64(0.005848864999999999), 'steps': [{'feature': 'network_load', 'value': np.float64(0.4), 'effect': 'multiply prob by 0.760 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.73), 'effect': 'multiply prob by 1.595 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.05), 'effect': 'multiply prob by 0.965 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.2), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.4,0.73,0.05,0.25,0.005848864999999999,"{'timestamp': 1760866780.2038481, 'inputs': {'network_load': np.float64(0.4), 'relay_reputation': np.float64(0.73), 'budget_utilization': np.float64(0.05), 'recent_win_rate': np.float64(0.25)}, 'base_prob': 0.01, 'final_prob': np.float64(0.005848864999999999), 'steps': [{'feature': 'network_load', 'value': np.float64(0.4), 'effect': 'multiply prob by 0.760 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.73), 'effect': 'multiply prob by 1.595 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.05), 'effect': 'multiply prob by 0.965 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.25), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.4,0.73,0.05,0.3,0.005848864999999999,"{'timestamp': 1760866780.2038734, 'inputs': {'network_load': np.float64(0.4), 'relay_reputation': np.float64(0.73), 'budget_utilization': np.float64(0.05), 'recent_win_rate': np.float64(0.3)}, 'base_prob': 0.01, 'final_prob': np.float64(0.005848864999999999), 'steps': [{'feature': 'network_load', 'value': np.float64(0.4), 'effect': 'multiply prob by 0.760 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.73), 'effect': 'multiply prob by 1.595 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.05), 'effect': 'multiply prob by 0.965 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.3), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.4,0.73,0.16,0.0,0.010764335892356638,"{'timestamp': 1760866780.2039025, 'inputs': {'network_load': np.float64(0.4), 'relay_reputation': np.float64(0.73), 'budget_utilization': np.float64(0.16), 'recent_win_rate': 1e-09}, 'base_prob': 0.01, 'final_prob': np.float64(0.010764335892356638), 'steps': [{'feature': 'network_load', 'value': np.float64(0.4), 'effect': 'multiply prob by 0.760 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.73), 'effect': 'multiply prob by 1.595 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.16), 'effect': 'multiply prob by 0.888 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': 1e-09, 'effect': 'multiply prob by 1.000 (higher recent wins -> lower prob)'}]}"
0.4,0.73,0.16,0.05,0.005382168,"{'timestamp': 1760866780.2039301, 'inputs': {'network_load': np.float64(0.4), 'relay_reputation': np.float64(0.73), 'budget_utilization': np.float64(0.16), 'recent_win_rate': np.float64(0.05)}, 'base_prob': 0.01, 'final_prob': np.float64(0.005382168), 'steps': [{'feature': 'network_load', 'value': np.float64(0.4), 'effect': 'multiply prob by 0.760 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.73), 'effect': 'multiply prob by 1.595 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.16), 'effect': 'multiply prob by 0.888 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.05), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.4,0.73,0.16,0.1,0.005382168,"{'timestamp': 1760866780.2039552, 'inputs': {'network_load': np.float64(0.4), 'relay_reputation': np.float64(0.73), 'budget_utilization': np.float64(0.16), 'recent_win_rate': np.float64(0.1)}, 'base_prob': 0.01, 'final_prob': np.float64(0.005382168), 'steps': [{'feature': 'network_load', 'value': np.float64(0.4), 'effect': 'multiply prob by 0.760 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.73), 'effect': 'multiply prob by 1.595 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.16), 'effect': 'multiply prob by 0.888 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.1), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.4,0.73,0.16,0.15,0.005382168,"{'timestamp': 1760866780.2039824, 'inputs': {'network_load': np.float64(0.4), 'relay_reputation': np.float64(0.73), 'budget_utilization': np.float64(0.16), 'recent_win_rate': np.float64(0.15)}, 'base_prob': 0.01, 'final_prob': np.float64(0.005382168), 'steps': [{'feature': 'network_load', 'value': np.float64(0.4), 'effect': 'multiply prob by 0.760 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.73), 'effect': 'multiply prob by 1.595 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.16), 'effect': 'multiply prob by 0.888 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.15), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.4,0.73,0.16,0.2,0.005382168,"{'timestamp': 1760866780.2040074, 'inputs': {'network_load': np.float64(0.4), 'relay_reputation': np.float64(0.73), 'budget_utilization': np.float64(0.16), 'recent_win_rate': np.float64(0.2)}, 'base_prob': 0.01, 'final_prob': np.float64(0.005382168), 'steps': [{'feature': 'network_load', 'value': np.float64(0.4), 'effect': 'multiply prob by 0.760 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.73), 'effect': 'multiply prob by 1.595 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.16), 'effect': 'multiply prob by 0.888 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.2), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.4,0.73,0.16,0.25,0.005382168,"{'timestamp': 1760866780.2040324, 'inputs': {'network_load': np.float64(0.4), 'relay_reputation': np.float64(0.73), 'budget_utilization': np.float64(0.16), 'recent_win_rate': np.float64(0.25)}, 'base_prob': 0.01, 'final_prob': np.float64(0.005382168), 'steps': [{'feature': 'network_load', 'value': np.float64(0.4), 'effect': 'multiply prob by 0.760 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.73), 'effect': 'multiply prob by 1.595 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.16), 'effect': 'multiply prob by 0.888 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.25), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.4,0.73,0.16,0.3,0.005382168,"{'timestamp': 1760866780.20406, 'inputs': {'network_load': np.float64(0.4), 'relay_reputation': np.float64(0.73), 'budget_utilization': np.float64(0.16), 'recent_win_rate': np.float64(0.3)}, 'base_prob': 0.01, 'final_prob': np.float64(0.005382168), 'steps': [{'feature': 'network_load', 'value': np.float64(0.4), 'effect': 'multiply prob by 0.760 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.73), 'effect': 'multiply prob by 1.595 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.16), 'effect': 'multiply prob by 0.888 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.3), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.4,0.73,0.26,0.0,0.009915795900842038,"{'timestamp': 1760866780.2040908, 'inputs': {'network_load': np.float64(0.4), 'relay_reputation': np.float64(0.73), 'budget_utilization': np.float64(0.26), 'recent_win_rate': 1e-09}, 'base_prob': 0.01, 'final_prob': np.float64(0.009915795900842038), 'steps': [{'feature': 'network_load', 'value': np.float64(0.4), 'effect': 'multiply prob by 0.760 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.73), 'effect': 'multiply prob by 1.595 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.26), 'effect': 'multiply prob by 0.818 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': 1e-09, 'effect': 'multiply prob by 1.000 (higher recent wins -> lower prob)'}]}"
0.4,0.73,0.26,0.05,0.004957898,"{'timestamp': 1760866780.2041166, 'inputs': {'network_load': np.float64(0.4), 'relay_reputation': np.float64(0.73), 'budget_utilization': np.float64(0.26), 'recent_win_rate': np.float64(0.05)}, 'base_prob': 0.01, 'final_prob': np.float64(0.004957898), 'steps': [{'feature': 'network_load', 'value': np.float64(0.4), 'effect': 'multiply prob by 0.760 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.73), 'effect': 'multiply prob by 1.595 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.26), 'effect': 'multiply prob by 0.818 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.05), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.4,0.73,0.26,0.1,0.004957898,"{'timestamp': 1760866780.2041988, 'inputs': {'network_load': np.float64(0.4), 'relay_reputation': np.float64(0.73), 'budget_utilization': np.float64(0.26), 'recent_win_rate': np.float64(0.1)}, 'base_prob': 0.01, 'final_prob': np.float64(0.004957898), 'steps': [{'feature': 'network_load', 'value': np.float64(0.4), 'effect': 'multiply prob by 0.760 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.73), 'effect': 'multiply prob by 1.595 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.26), 'effect': 'multiply prob by 0.818 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.1), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.4,0.73,0.26,0.15,0.004957898,"{'timestamp': 1760866780.2042255, 'inputs': {'network_load': np.float64(0.4), 'relay_reputation': np.float64(0.73), 'budget_utilization': np.float64(0.26), 'recent_win_rate': np.float64(0.15)}, 'base_prob': 0.01, 'final_prob': np.float64(0.004957898), 'steps': [{'feature': 'network_load', 'value': np.float64(0.4), 'effect': 'multiply prob by 0.760 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.73), 'effect': 'multiply prob by 1.595 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.26), 'effect': 'multiply prob by 0.818 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.15), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.4,0.73,0.26,0.2,0.004957898,"{'timestamp': 1760866780.204254, 'inputs': {'network_load': np.float64(0.4), 'relay_reputation': np.float64(0.73), 'budget_utilization': np.float64(0.26), 'recent_win_rate': np.float64(0.2)}, 'base_prob': 0.01, 'final_prob': np.float64(0.004957898), 'steps': [{'feature': 'network_load', 'value': np.float64(0.4), 'effect': 'multiply prob by 0.760 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.73), 'effect': 'multiply prob by 1.595 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.26), 'effect': 'multiply prob by 0.818 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.2), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.4,0.73,0.26,0.25,0.004957898,"{'timestamp': 1760866780.2042797, 'inputs': {'network_load': np.float64(0.4), 'relay_reputation': np.float64(0.73), 'budget_utilization': np.float64(0.26), 'recent_win_rate': np.float64(0.25)}, 'base_prob': 0.01, 'final_prob': np.float64(0.004957898), 'steps': [{'feature': 'network_load', 'value': np.float64(0.4), 'effect': 'multiply prob by 0.760 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.73), 'effect': 'multiply prob by 1.595 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.26), 'effect': 'multiply prob by 0.818 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.25), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.4,0.73,0.26,0.3,0.004957898,"{'timestamp': 1760866780.2043047, 'inputs': {'network_load': np.float64(0.4), 'relay_reputation': np.float64(0.73), 'budget_utilization': np.float64(0.26), 'recent_win_rate': np.float64(0.3)}, 'base_prob': 0.01, 'final_prob': np.float64(0.004957898), 'steps': [{'feature': 'network_load', 'value': np.float64(0.4), 'effect': 'multiply prob by 0.760 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.73), 'effect': 'multiply prob by 1.595 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.26), 'effect': 'multiply prob by 0.818 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.3), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.4,0.73,0.37,0.0,0.008982401910175979,"{'timestamp': 1760866780.204337, 'inputs': {'network_load': np.float64(0.4), 'relay_reputation': np.float64(0.73), 'budget_utilization': np.float64(0.37), 'recent_win_rate': 1e-09}, 'base_prob': 0.01, 'final_prob': np.float64(0.008982401910175979), 'steps': [{'feature': 'network_load', 'value': np.float64(0.4), 'effect': 'multiply prob by 0.760 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.73), 'effect': 'multiply prob by 1.595 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.37), 'effect': 'multiply prob by 0.741 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': 1e-09, 'effect': 'multiply prob by 1.000 (higher recent wins -> lower prob)'}]}"
0.4,0.73,0.37,0.05,0.004491200999999999,"{'timestamp': 1760866780.2043629, 'inputs': {'network_load': np.float64(0.4), 'relay_reputation': np.float64(0.73), 'budget_utilization': np.float64(0.37), 'recent_win_rate': np.float64(0.05)}, 'base_prob': 0.01, 'final_prob': np.float64(0.004491200999999999), 'steps': [{'feature': 'network_load', 'value': np.float64(0.4), 'effect': 'multiply prob by 0.760 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.73), 'effect': 'multiply prob by 1.595 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.37), 'effect': 'multiply prob by 0.741 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.05), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.4,0.73,0.37,0.1,0.004491200999999999,"{'timestamp': 1760866780.2043884, 'inputs': {'network_load': np.float64(0.4), 'relay_reputation': np.float64(0.73), 'budget_utilization': np.float64(0.37), 'recent_win_rate': np.float64(0.1)}, 'base_prob': 0.01, 'final_prob': np.float64(0.004491200999999999), 'steps': [{'feature': 'network_load', 'value': np.float64(0.4), 'effect': 'multiply prob by 0.760 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.73), 'effect': 'multiply prob by 1.595 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.37), 'effect': 'multiply prob by 0.741 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.1), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.4,0.73,0.37,0.15,0.004491200999999999,"{'timestamp': 1760866780.2044137, 'inputs': {'network_load': np.float64(0.4), 'relay_reputation': np.float64(0.73), 'budget_utilization': np.float64(0.37), 'recent_win_rate': np.float64(0.15)}, 'base_prob': 0.01, 'final_prob': np.float64(0.004491200999999999), 'steps': [{'feature': 'network_load', 'value': np.float64(0.4), 'effect': 'multiply prob by 0.760 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.73), 'effect': 'multiply prob by 1.595 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.37), 'effect': 'multiply prob by 0.741 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.15), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.4,0.73,0.37,0.2,0.004491200999999999,"{'timestamp': 1760866780.204439, 'inputs': {'network_load': np.float64(0.4), 'relay_reputation': np.float64(0.73), 'budget_utilization': np.float64(0.37), 'recent_win_rate': np.float64(0.2)}, 'base_prob': 0.01, 'final_prob': np.float64(0.004491200999999999), 'steps': [{'feature': 'network_load', 'value': np.float64(0.4), 'effect': 'multiply prob by 0.760 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.73), 'effect': 'multiply prob by 1.595 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.37), 'effect': 'multiply prob by 0.741 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.2), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.4,0.73,0.37,0.25,0.004491200999999999,"{'timestamp': 1760866780.2044685, 'inputs': {'network_load': np.float64(0.4), 'relay_reputation': np.float64(0.73), 'budget_utilization': np.float64(0.37), 'recent_win_rate': np.float64(0.25)}, 'base_prob': 0.01, 'final_prob': np.float64(0.004491200999999999), 'steps': [{'feature': 'network_load', 'value': np.float64(0.4), 'effect': 'multiply prob by 0.760 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.73), 'effect': 'multiply prob by 1.595 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.37), 'effect': 'multiply prob by 0.741 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.25), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.4,0.73,0.37,0.3,0.004491200999999999,"{'timestamp': 1760866780.2044938, 'inputs': {'network_load': np.float64(0.4), 'relay_reputation': np.float64(0.73), 'budget_utilization': np.float64(0.37), 'recent_win_rate': np.float64(0.3)}, 'base_prob': 0.01, 'final_prob': np.float64(0.004491200999999999), 'steps': [{'feature': 'network_load', 'value': np.float64(0.4), 'effect': 'multiply prob by 0.760 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.73), 'effect': 'multiply prob by 1.595 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.37), 'effect': 'multiply prob by 0.741 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.3), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.4,0.73,0.48,0.0,0.00804900791950992,"{'timestamp': 1760866780.204521, 'inputs': {'network_load': np.float64(0.4), 'relay_reputation': np.float64(0.73), 'budget_utilization': np.float64(0.48), 'recent_win_rate': 1e-09}, 'base_prob': 0.01, 'final_prob': np.float64(0.00804900791950992), 'steps': [{'feature': 'network_load', 'value': np.float64(0.4), 'effect': 'multiply prob by 0.760 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.73), 'effect': 'multiply prob by 1.595 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.48), 'effect': 'multiply prob by 0.664 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': 1e-09, 'effect': 'multiply prob by 1.000 (higher recent wins -> lower prob)'}]}"
0.4,0.73,0.48,0.05,0.004024504,"{'timestamp': 1760866780.2045498, 'inputs': {'network_load': np.float64(0.4), 'relay_reputation': np.float64(0.73), 'budget_utilization': np.float64(0.48), 'recent_win_rate': np.float64(0.05)}, 'base_prob': 0.01, 'final_prob': np.float64(0.004024504), 'steps': [{'feature': 'network_load', 'value': np.float64(0.4), 'effect': 'multiply prob by 0.760 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.73), 'effect': 'multiply prob by 1.595 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.48), 'effect': 'multiply prob by 0.664 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.05), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.4,0.73,0.48,0.1,0.004024504,"{'timestamp': 1760866780.204577, 'inputs': {'network_load': np.float64(0.4), 'relay_reputation': np.float64(0.73), 'budget_utilization': np.float64(0.48), 'recent_win_rate': np.float64(0.1)}, 'base_prob': 0.01, 'final_prob': np.float64(0.004024504), 'steps': [{'feature': 'network_load', 'value': np.float64(0.4), 'effect': 'multiply prob by 0.760 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.73), 'effect': 'multiply prob by 1.595 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.48), 'effect': 'multiply prob by 0.664 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.1), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.4,0.73,0.48,0.15,0.004024504,"{'timestamp': 1760866780.204604, 'inputs': {'network_load': np.float64(0.4), 'relay_reputation': np.float64(0.73), 'budget_utilization': np.float64(0.48), 'recent_win_rate': np.float64(0.15)}, 'base_prob': 0.01, 'final_prob': np.float64(0.004024504), 'steps': [{'feature': 'network_load', 'value': np.float64(0.4), 'effect': 'multiply prob by 0.760 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.73), 'effect': 'multiply prob by 1.595 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.48), 'effect': 'multiply prob by 0.664 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.15), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.4,0.73,0.48,0.2,0.004024504,"{'timestamp': 1760866780.2046297, 'inputs': {'network_load': np.float64(0.4), 'relay_reputation': np.float64(0.73), 'budget_utilization': np.float64(0.48), 'recent_win_rate': np.float64(0.2)}, 'base_prob': 0.01, 'final_prob': np.float64(0.004024504), 'steps': [{'feature': 'network_load', 'value': np.float64(0.4), 'effect': 'multiply prob by 0.760 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.73), 'effect': 'multiply prob by 1.595 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.48), 'effect': 'multiply prob by 0.664 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.2), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.4,0.73,0.48,0.25,0.004024504,"{'timestamp': 1760866780.2046554, 'inputs': {'network_load': np.float64(0.4), 'relay_reputation': np.float64(0.73), 'budget_utilization': np.float64(0.48), 'recent_win_rate': np.float64(0.25)}, 'base_prob': 0.01, 'final_prob': np.float64(0.004024504), 'steps': [{'feature': 'network_load', 'value': np.float64(0.4), 'effect': 'multiply prob by 0.760 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.73), 'effect': 'multiply prob by 1.595 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.48), 'effect': 'multiply prob by 0.664 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.25), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.4,0.73,0.48,0.3,0.004024504,"{'timestamp': 1760866780.2046804, 'inputs': {'network_load': np.float64(0.4), 'relay_reputation': np.float64(0.73), 'budget_utilization': np.float64(0.48), 'recent_win_rate': np.float64(0.3)}, 'base_prob': 0.01, 'final_prob': np.float64(0.004024504), 'steps': [{'feature': 'network_load', 'value': np.float64(0.4), 'effect': 'multiply prob by 0.760 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.73), 'effect': 'multiply prob by 1.595 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.48), 'effect': 'multiply prob by 0.664 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.3), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.4,0.73,0.59,0.0,0.007115613928843859,"{'timestamp': 1760866780.2047076, 'inputs': {'network_load': np.float64(0.4), 'relay_reputation': np.float64(0.73), 'budget_utilization': np.float64(0.59), 'recent_win_rate': 1e-09}, 'base_prob': 0.01, 'final_prob': np.float64(0.007115613928843859), 'steps': [{'feature': 'network_load', 'value': np.float64(0.4), 'effect': 'multiply prob by 0.760 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.73), 'effect': 'multiply prob by 1.595 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.59), 'effect': 'multiply prob by 0.587 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': 1e-09, 'effect': 'multiply prob by 1.000 (higher recent wins -> lower prob)'}]}"
0.4,0.73,0.59,0.05,0.0035578069999999996,"{'timestamp': 1760866780.204735, 'inputs': {'network_load': np.float64(0.4), 'relay_reputation': np.float64(0.73), 'budget_utilization': np.float64(0.59), 'recent_win_rate': np.float64(0.05)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0035578069999999996), 'steps': [{'feature': 'network_load', 'value': np.float64(0.4), 'effect': 'multiply prob by 0.760 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.73), 'effect': 'multiply prob by 1.595 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.59), 'effect': 'multiply prob by 0.587 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.05), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.4,0.73,0.59,0.1,0.0035578069999999996,"{'timestamp': 1760866780.2047632, 'inputs': {'network_load': np.float64(0.4), 'relay_reputation': np.float64(0.73), 'budget_utilization': np.float64(0.59), 'recent_win_rate': np.float64(0.1)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0035578069999999996), 'steps': [{'feature': 'network_load', 'value': np.float64(0.4), 'effect': 'multiply prob by 0.760 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.73), 'effect': 'multiply prob by 1.595 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.59), 'effect': 'multiply prob by 0.587 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.1), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.4,0.73,0.59,0.15,0.0035578069999999996,"{'timestamp': 1760866780.2047884, 'inputs': {'network_load': np.float64(0.4), 'relay_reputation': np.float64(0.73), 'budget_utilization': np.float64(0.59), 'recent_win_rate': np.float64(0.15)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0035578069999999996), 'steps': [{'feature': 'network_load', 'value': np.float64(0.4), 'effect': 'multiply prob by 0.760 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.73), 'effect': 'multiply prob by 1.595 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.59), 'effect': 'multiply prob by 0.587 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.15), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.4,0.73,0.59,0.2,0.0035578069999999996,"{'timestamp': 1760866780.2048135, 'inputs': {'network_load': np.float64(0.4), 'relay_reputation': np.float64(0.73), 'budget_utilization': np.float64(0.59), 'recent_win_rate': np.float64(0.2)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0035578069999999996), 'steps': [{'feature': 'network_load', 'value': np.float64(0.4), 'effect': 'multiply prob by 0.760 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.73), 'effect': 'multiply prob by 1.595 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.59), 'effect': 'multiply prob by 0.587 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.2), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.4,0.73,0.59,0.25,0.0035578069999999996,"{'timestamp': 1760866780.204839, 'inputs': {'network_load': np.float64(0.4), 'relay_reputation': np.float64(0.73), 'budget_utilization': np.float64(0.59), 'recent_win_rate': np.float64(0.25)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0035578069999999996), 'steps': [{'feature': 'network_load', 'value': np.float64(0.4), 'effect': 'multiply prob by 0.760 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.73), 'effect': 'multiply prob by 1.595 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.59), 'effect': 'multiply prob by 0.587 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.25), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.4,0.73,0.59,0.3,0.0035578069999999996,"{'timestamp': 1760866780.2048852, 'inputs': {'network_load': np.float64(0.4), 'relay_reputation': np.float64(0.73), 'budget_utilization': np.float64(0.59), 'recent_win_rate': np.float64(0.3)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0035578069999999996), 'steps': [{'feature': 'network_load', 'value': np.float64(0.4), 'effect': 'multiply prob by 0.760 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.73), 'effect': 'multiply prob by 1.595 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.59), 'effect': 'multiply prob by 0.587 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.3), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.4,0.73,0.69,0.0,0.006267073937329261,"{'timestamp': 1760866780.2049327, 'inputs': {'network_load': np.float64(0.4), 'relay_reputation': np.float64(0.73), 'budget_utilization': np.float64(0.69), 'recent_win_rate': 1e-09}, 'base_prob': 0.01, 'final_prob': np.float64(0.006267073937329261), 'steps': [{'feature': 'network_load', 'value': np.float64(0.4), 'effect': 'multiply prob by 0.760 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.73), 'effect': 'multiply prob by 1.595 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.69), 'effect': 'multiply prob by 0.517 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': 1e-09, 'effect': 'multiply prob by 1.000 (higher recent wins -> lower prob)'}]}"
0.4,0.73,0.69,0.05,0.0031335370000000005,"{'timestamp': 1760866780.204959, 'inputs': {'network_load': np.float64(0.4), 'relay_reputation': np.float64(0.73), 'budget_utilization': np.float64(0.69), 'recent_win_rate': np.float64(0.05)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0031335370000000005), 'steps': [{'feature': 'network_load', 'value': np.float64(0.4), 'effect': 'multiply prob by 0.760 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.73), 'effect': 'multiply prob by 1.595 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.69), 'effect': 'multiply prob by 0.517 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.05), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.4,0.73,0.69,0.1,0.0031335370000000005,"{'timestamp': 1760866780.2049844, 'inputs': {'network_load': np.float64(0.4), 'relay_reputation': np.float64(0.73), 'budget_utilization': np.float64(0.69), 'recent_win_rate': np.float64(0.1)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0031335370000000005), 'steps': [{'feature': 'network_load', 'value': np.float64(0.4), 'effect': 'multiply prob by 0.760 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.73), 'effect': 'multiply prob by 1.595 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.69), 'effect': 'multiply prob by 0.517 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.1), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.4,0.73,0.69,0.15,0.0031335370000000005,"{'timestamp': 1760866780.2050138, 'inputs': {'network_load': np.float64(0.4), 'relay_reputation': np.float64(0.73), 'budget_utilization': np.float64(0.69), 'recent_win_rate': np.float64(0.15)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0031335370000000005), 'steps': [{'feature': 'network_load', 'value': np.float64(0.4), 'effect': 'multiply prob by 0.760 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.73), 'effect': 'multiply prob by 1.595 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.69), 'effect': 'multiply prob by 0.517 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.15), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.4,0.73,0.69,0.2,0.0031335370000000005,"{'timestamp': 1760866780.2050877, 'inputs': {'network_load': np.float64(0.4), 'relay_reputation': np.float64(0.73), 'budget_utilization': np.float64(0.69), 'recent_win_rate': np.float64(0.2)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0031335370000000005), 'steps': [{'feature': 'network_load', 'value': np.float64(0.4), 'effect': 'multiply prob by 0.760 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.73), 'effect': 'multiply prob by 1.595 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.69), 'effect': 'multiply prob by 0.517 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.2), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.4,0.73,0.69,0.25,0.0031335370000000005,"{'timestamp': 1760866780.205187, 'inputs': {'network_load': np.float64(0.4), 'relay_reputation': np.float64(0.73), 'budget_utilization': np.float64(0.69), 'recent_win_rate': np.float64(0.25)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0031335370000000005), 'steps': [{'feature': 'network_load', 'value': np.float64(0.4), 'effect': 'multiply prob by 0.760 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.73), 'effect': 'multiply prob by 1.595 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.69), 'effect': 'multiply prob by 0.517 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.25), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.4,0.73,0.69,0.3,0.0031335370000000005,"{'timestamp': 1760866780.2052276, 'inputs': {'network_load': np.float64(0.4), 'relay_reputation': np.float64(0.73), 'budget_utilization': np.float64(0.69), 'recent_win_rate': np.float64(0.3)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0031335370000000005), 'steps': [{'feature': 'network_load', 'value': np.float64(0.4), 'effect': 'multiply prob by 0.760 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.73), 'effect': 'multiply prob by 1.595 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.69), 'effect': 'multiply prob by 0.517 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.3), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.4,0.73,0.8,0.0,0.0053336799466632,"{'timestamp': 1760866780.2052577, 'inputs': {'network_load': np.float64(0.4), 'relay_reputation': np.float64(0.73), 'budget_utilization': np.float64(0.8), 'recent_win_rate': 1e-09}, 'base_prob': 0.01, 'final_prob': np.float64(0.0053336799466632), 'steps': [{'feature': 'network_load', 'value': np.float64(0.4), 'effect': 'multiply prob by 0.760 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.73), 'effect': 'multiply prob by 1.595 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.8), 'effect': 'multiply prob by 0.440 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': 1e-09, 'effect': 'multiply prob by 1.000 (higher recent wins -> lower prob)'}]}"
0.4,0.73,0.8,0.05,0.00266684,"{'timestamp': 1760866780.2052894, 'inputs': {'network_load': np.float64(0.4), 'relay_reputation': np.float64(0.73), 'budget_utilization': np.float64(0.8), 'recent_win_rate': np.float64(0.05)}, 'base_prob': 0.01, 'final_prob': np.float64(0.00266684), 'steps': [{'feature': 'network_load', 'value': np.float64(0.4), 'effect': 'multiply prob by 0.760 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.73), 'effect': 'multiply prob by 1.595 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.8), 'effect': 'multiply prob by 0.440 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.05), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.4,0.73,0.8,0.1,0.00266684,"{'timestamp': 1760866780.2053149, 'inputs': {'network_load': np.float64(0.4), 'relay_reputation': np.float64(0.73), 'budget_utilization': np.float64(0.8), 'recent_win_rate': np.float64(0.1)}, 'base_prob': 0.01, 'final_prob': np.float64(0.00266684), 'steps': [{'feature': 'network_load', 'value': np.float64(0.4), 'effect': 'multiply prob by 0.760 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.73), 'effect': 'multiply prob by 1.595 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.8), 'effect': 'multiply prob by 0.440 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.1), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.4,0.73,0.8,0.15,0.00266684,"{'timestamp': 1760866780.20534, 'inputs': {'network_load': np.float64(0.4), 'relay_reputation': np.float64(0.73), 'budget_utilization': np.float64(0.8), 'recent_win_rate': np.float64(0.15)}, 'base_prob': 0.01, 'final_prob': np.float64(0.00266684), 'steps': [{'feature': 'network_load', 'value': np.float64(0.4), 'effect': 'multiply prob by 0.760 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.73), 'effect': 'multiply prob by 1.595 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.8), 'effect': 'multiply prob by 0.440 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.15), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.4,0.73,0.8,0.2,0.00266684,"{'timestamp': 1760866780.205368, 'inputs': {'network_load': np.float64(0.4), 'relay_reputation': np.float64(0.73), 'budget_utilization': np.float64(0.8), 'recent_win_rate': np.float64(0.2)}, 'base_prob': 0.01, 'final_prob': np.float64(0.00266684), 'steps': [{'feature': 'network_load', 'value': np.float64(0.4), 'effect': 'multiply prob by 0.760 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.73), 'effect': 'multiply prob by 1.595 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.8), 'effect': 'multiply prob by 0.440 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.2), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.4,0.73,0.8,0.25,0.00266684,"{'timestamp': 1760866780.205395, 'inputs': {'network_load': np.float64(0.4), 'relay_reputation': np.float64(0.73), 'budget_utilization': np.float64(0.8), 'recent_win_rate': np.float64(0.25)}, 'base_prob': 0.01, 'final_prob': np.float64(0.00266684), 'steps': [{'feature': 'network_load', 'value': np.float64(0.4), 'effect': 'multiply prob by 0.760 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.73), 'effect': 'multiply prob by 1.595 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.8), 'effect': 'multiply prob by 0.440 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.25), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.4,0.73,0.8,0.3,0.00266684,"{'timestamp': 1760866780.2054203, 'inputs': {'network_load': np.float64(0.4), 'relay_reputation': np.float64(0.73), 'budget_utilization': np.float64(0.8), 'recent_win_rate': np.float64(0.3)}, 'base_prob': 0.01, 'final_prob': np.float64(0.00266684), 'steps': [{'feature': 'network_load', 'value': np.float64(0.4), 'effect': 'multiply prob by 0.760 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.73), 'effect': 'multiply prob by 1.595 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.8), 'effect': 'multiply prob by 0.440 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.3), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.4,0.84,0.05,0.0,0.0129078398709216,"{'timestamp': 1760866780.205448, 'inputs': {'network_load': np.float64(0.4), 'relay_reputation': np.float64(0.84), 'budget_utilization': np.float64(0.05), 'recent_win_rate': 1e-09}, 'base_prob': 0.01, 'final_prob': np.float64(0.0129078398709216), 'steps': [{'feature': 'network_load', 'value': np.float64(0.4), 'effect': 'multiply prob by 0.760 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.84), 'effect': 'multiply prob by 1.760 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.05), 'effect': 'multiply prob by 0.965 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': 1e-09, 'effect': 'multiply prob by 1.000 (higher recent wins -> lower prob)'}]}"
0.4,0.84,0.05,0.05,0.00645392,"{'timestamp': 1760866780.2054732, 'inputs': {'network_load': np.float64(0.4), 'relay_reputation': np.float64(0.84), 'budget_utilization': np.float64(0.05), 'recent_win_rate': np.float64(0.05)}, 'base_prob': 0.01, 'final_prob': np.float64(0.00645392), 'steps': [{'feature': 'network_load', 'value': np.float64(0.4), 'effect': 'multiply prob by 0.760 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.84), 'effect': 'multiply prob by 1.760 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.05), 'effect': 'multiply prob by 0.965 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.05), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.4,0.84,0.05,0.1,0.00645392,"{'timestamp': 1760866780.2055008, 'inputs': {'network_load': np.float64(0.4), 'relay_reputation': np.float64(0.84), 'budget_utilization': np.float64(0.05), 'recent_win_rate': np.float64(0.1)}, 'base_prob': 0.01, 'final_prob': np.float64(0.00645392), 'steps': [{'feature': 'network_load', 'value': np.float64(0.4), 'effect': 'multiply prob by 0.760 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.84), 'effect': 'multiply prob by 1.760 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.05), 'effect': 'multiply prob by 0.965 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.1), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.4,0.84,0.05,0.15,0.00645392,"{'timestamp': 1760866780.2058153, 'inputs': {'network_load': np.float64(0.4), 'relay_reputation': np.float64(0.84), 'budget_utilization': np.float64(0.05), 'recent_win_rate': np.float64(0.15)}, 'base_prob': 0.01, 'final_prob': np.float64(0.00645392), 'steps': [{'feature': 'network_load', 'value': np.float64(0.4), 'effect': 'multiply prob by 0.760 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.84), 'effect': 'multiply prob by 1.760 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.05), 'effect': 'multiply prob by 0.965 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.15), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.4,0.84,0.05,0.2,0.00645392,"{'timestamp': 1760866780.205841, 'inputs': {'network_load': np.float64(0.4), 'relay_reputation': np.float64(0.84), 'budget_utilization': np.float64(0.05), 'recent_win_rate': np.float64(0.2)}, 'base_prob': 0.01, 'final_prob': np.float64(0.00645392), 'steps': [{'feature': 'network_load', 'value': np.float64(0.4), 'effect': 'multiply prob by 0.760 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.84), 'effect': 'multiply prob by 1.760 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.05), 'effect': 'multiply prob by 0.965 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.2), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.4,0.84,0.05,0.25,0.00645392,"{'timestamp': 1760866780.2058702, 'inputs': {'network_load': np.float64(0.4), 'relay_reputation': np.float64(0.84), 'budget_utilization': np.float64(0.05), 'recent_win_rate': np.float64(0.25)}, 'base_prob': 0.01, 'final_prob': np.float64(0.00645392), 'steps': [{'feature': 'network_load', 'value': np.float64(0.4), 'effect': 'multiply prob by 0.760 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.84), 'effect': 'multiply prob by 1.760 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.05), 'effect': 'multiply prob by 0.965 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.25), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.4,0.84,0.05,0.3,0.00645392,"{'timestamp': 1760866780.2058978, 'inputs': {'network_load': np.float64(0.4), 'relay_reputation': np.float64(0.84), 'budget_utilization': np.float64(0.05), 'recent_win_rate': np.float64(0.3)}, 'base_prob': 0.01, 'final_prob': np.float64(0.00645392), 'steps': [{'feature': 'network_load', 'value': np.float64(0.4), 'effect': 'multiply prob by 0.760 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.84), 'effect': 'multiply prob by 1.760 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.05), 'effect': 'multiply prob by 0.965 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.3), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.4,0.84,0.16,0.0,0.01187788788122112,"{'timestamp': 1760866780.205927, 'inputs': {'network_load': np.float64(0.4), 'relay_reputation': np.float64(0.84), 'budget_utilization': np.float64(0.16), 'recent_win_rate': 1e-09}, 'base_prob': 0.01, 'final_prob': np.float64(0.01187788788122112), 'steps': [{'feature': 'network_load', 'value': np.float64(0.4), 'effect': 'multiply prob by 0.760 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.84), 'effect': 'multiply prob by 1.760 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.16), 'effect': 'multiply prob by 0.888 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': 1e-09, 'effect': 'multiply prob by 1.000 (higher recent wins -> lower prob)'}]}"
0.4,0.84,0.16,0.05,0.005938944000000001,"{'timestamp': 1760866780.2059522, 'inputs': {'network_load': np.float64(0.4), 'relay_reputation': np.float64(0.84), 'budget_utilization': np.float64(0.16), 'recent_win_rate': np.float64(0.05)}, 'base_prob': 0.01, 'final_prob': np.float64(0.005938944000000001), 'steps': [{'feature': 'network_load', 'value': np.float64(0.4), 'effect': 'multiply prob by 0.760 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.84), 'effect': 'multiply prob by 1.760 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.16), 'effect': 'multiply prob by 0.888 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.05), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.4,0.84,0.16,0.1,0.005938944000000001,"{'timestamp': 1760866780.2059882, 'inputs': {'network_load': np.float64(0.4), 'relay_reputation': np.float64(0.84), 'budget_utilization': np.float64(0.16), 'recent_win_rate': np.float64(0.1)}, 'base_prob': 0.01, 'final_prob': np.float64(0.005938944000000001), 'steps': [{'feature': 'network_load', 'value': np.float64(0.4), 'effect': 'multiply prob by 0.760 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.84), 'effect': 'multiply prob by 1.760 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.16), 'effect': 'multiply prob by 0.888 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.1), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.4,0.84,0.16,0.15,0.005938944000000001,"{'timestamp': 1760866780.206236, 'inputs': {'network_load': np.float64(0.4), 'relay_reputation': np.float64(0.84), 'budget_utilization': np.float64(0.16), 'recent_win_rate': np.float64(0.15)}, 'base_prob': 0.01, 'final_prob': np.float64(0.005938944000000001), 'steps': [{'feature': 'network_load', 'value': np.float64(0.4), 'effect': 'multiply prob by 0.760 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.84), 'effect': 'multiply prob by 1.760 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.16), 'effect': 'multiply prob by 0.888 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.15), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.4,0.84,0.16,0.2,0.005938944000000001,"{'timestamp': 1760866780.2062647, 'inputs': {'network_load': np.float64(0.4), 'relay_reputation': np.float64(0.84), 'budget_utilization': np.float64(0.16), 'recent_win_rate': np.float64(0.2)}, 'base_prob': 0.01, 'final_prob': np.float64(0.005938944000000001), 'steps': [{'feature': 'network_load', 'value': np.float64(0.4), 'effect': 'multiply prob by 0.760 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.84), 'effect': 'multiply prob by 1.760 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.16), 'effect': 'multiply prob by 0.888 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.2), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.4,0.84,0.16,0.25,0.005938944000000001,"{'timestamp': 1760866780.2062907, 'inputs': {'network_load': np.float64(0.4), 'relay_reputation': np.float64(0.84), 'budget_utilization': np.float64(0.16), 'recent_win_rate': np.float64(0.25)}, 'base_prob': 0.01, 'final_prob': np.float64(0.005938944000000001), 'steps': [{'feature': 'network_load', 'value': np.float64(0.4), 'effect': 'multiply prob by 0.760 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.84), 'effect': 'multiply prob by 1.760 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.16), 'effect': 'multiply prob by 0.888 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.25), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.4,0.84,0.16,0.3,0.005938944000000001,"{'timestamp': 1760866780.2063305, 'inputs': {'network_load': np.float64(0.4), 'relay_reputation': np.float64(0.84), 'budget_utilization': np.float64(0.16), 'recent_win_rate': np.float64(0.3)}, 'base_prob': 0.01, 'final_prob': np.float64(0.005938944000000001), 'steps': [{'feature': 'network_load', 'value': np.float64(0.4), 'effect': 'multiply prob by 0.760 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.84), 'effect': 'multiply prob by 1.760 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.16), 'effect': 'multiply prob by 0.888 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.3), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.4,0.84,0.26,0.0,0.01094156789058432,"{'timestamp': 1760866780.2063637, 'inputs': {'network_load': np.float64(0.4), 'relay_reputation': np.float64(0.84), 'budget_utilization': np.float64(0.26), 'recent_win_rate': 1e-09}, 'base_prob': 0.01, 'final_prob': np.float64(0.01094156789058432), 'steps': [{'feature': 'network_load', 'value': np.float64(0.4), 'effect': 'multiply prob by 0.760 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.84), 'effect': 'multiply prob by 1.760 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.26), 'effect': 'multiply prob by 0.818 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': 1e-09, 'effect': 'multiply prob by 1.000 (higher recent wins -> lower prob)'}]}"
0.4,0.84,0.26,0.05,0.005470784000000001,"{'timestamp': 1760866780.2063956, 'inputs': {'network_load': np.float64(0.4), 'relay_reputation': np.float64(0.84), 'budget_utilization': np.float64(0.26), 'recent_win_rate': np.float64(0.05)}, 'base_prob': 0.01, 'final_prob': np.float64(0.005470784000000001), 'steps': [{'feature': 'network_load', 'value': np.float64(0.4), 'effect': 'multiply prob by 0.760 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.84), 'effect': 'multiply prob by 1.760 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.26), 'effect': 'multiply prob by 0.818 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.05), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.4,0.84,0.26,0.1,0.005470784000000001,"{'timestamp': 1760866780.2064226, 'inputs': {'network_load': np.float64(0.4), 'relay_reputation': np.float64(0.84), 'budget_utilization': np.float64(0.26), 'recent_win_rate': np.float64(0.1)}, 'base_prob': 0.01, 'final_prob': np.float64(0.005470784000000001), 'steps': [{'feature': 'network_load', 'value': np.float64(0.4), 'effect': 'multiply prob by 0.760 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.84), 'effect': 'multiply prob by 1.760 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.26), 'effect': 'multiply prob by 0.818 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.1), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.4,0.84,0.26,0.15,0.005470784000000001,"{'timestamp': 1760866780.206448, 'inputs': {'network_load': np.float64(0.4), 'relay_reputation': np.float64(0.84), 'budget_utilization': np.float64(0.26), 'recent_win_rate': np.float64(0.15)}, 'base_prob': 0.01, 'final_prob': np.float64(0.005470784000000001), 'steps': [{'feature': 'network_load', 'value': np.float64(0.4), 'effect': 'multiply prob by 0.760 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.84), 'effect': 'multiply prob by 1.760 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.26), 'effect': 'multiply prob by 0.818 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.15), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.4,0.84,0.26,0.2,0.005470784000000001,"{'timestamp': 1760866780.206475, 'inputs': {'network_load': np.float64(0.4), 'relay_reputation': np.float64(0.84), 'budget_utilization': np.float64(0.26), 'recent_win_rate': np.float64(0.2)}, 'base_prob': 0.01, 'final_prob': np.float64(0.005470784000000001), 'steps': [{'feature': 'network_load', 'value': np.float64(0.4), 'effect': 'multiply prob by 0.760 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.84), 'effect': 'multiply prob by 1.760 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.26), 'effect': 'multiply prob by 0.818 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.2), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.4,0.84,0.26,0.25,0.005470784000000001,"{'timestamp': 1760866780.2065003, 'inputs': {'network_load': np.float64(0.4), 'relay_reputation': np.float64(0.84), 'budget_utilization': np.float64(0.26), 'recent_win_rate': np.float64(0.25)}, 'base_prob': 0.01, 'final_prob': np.float64(0.005470784000000001), 'steps': [{'feature': 'network_load', 'value': np.float64(0.4), 'effect': 'multiply prob by 0.760 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.84), 'effect': 'multiply prob by 1.760 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.26), 'effect': 'multiply prob by 0.818 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.25), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.4,0.84,0.26,0.3,0.005470784000000001,"{'timestamp': 1760866780.2065253, 'inputs': {'network_load': np.float64(0.4), 'relay_reputation': np.float64(0.84), 'budget_utilization': np.float64(0.26), 'recent_win_rate': np.float64(0.3)}, 'base_prob': 0.01, 'final_prob': np.float64(0.005470784000000001), 'steps': [{'feature': 'network_load', 'value': np.float64(0.4), 'effect': 'multiply prob by 0.760 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.84), 'effect': 'multiply prob by 1.760 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.26), 'effect': 'multiply prob by 0.818 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.3), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.4,0.84,0.37,0.0,0.00991161590088384,"{'timestamp': 1760866780.2066474, 'inputs': {'network_load': np.float64(0.4), 'relay_reputation': np.float64(0.84), 'budget_utilization': np.float64(0.37), 'recent_win_rate': 1e-09}, 'base_prob': 0.01, 'final_prob': np.float64(0.00991161590088384), 'steps': [{'feature': 'network_load', 'value': np.float64(0.4), 'effect': 'multiply prob by 0.760 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.84), 'effect': 'multiply prob by 1.760 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.37), 'effect': 'multiply prob by 0.741 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': 1e-09, 'effect': 'multiply prob by 1.000 (higher recent wins -> lower prob)'}]}"
0.4,0.84,0.37,0.05,0.004955808,"{'timestamp': 1760866780.2066767, 'inputs': {'network_load': np.float64(0.4), 'relay_reputation': np.float64(0.84), 'budget_utilization': np.float64(0.37), 'recent_win_rate': np.float64(0.05)}, 'base_prob': 0.01, 'final_prob': np.float64(0.004955808), 'steps': [{'feature': 'network_load', 'value': np.float64(0.4), 'effect': 'multiply prob by 0.760 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.84), 'effect': 'multiply prob by 1.760 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.37), 'effect': 'multiply prob by 0.741 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.05), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.4,0.84,0.37,0.1,0.004955808,"{'timestamp': 1760866780.2067041, 'inputs': {'network_load': np.float64(0.4), 'relay_reputation': np.float64(0.84), 'budget_utilization': np.float64(0.37), 'recent_win_rate': np.float64(0.1)}, 'base_prob': 0.01, 'final_prob': np.float64(0.004955808), 'steps': [{'feature': 'network_load', 'value': np.float64(0.4), 'effect': 'multiply prob by 0.760 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.84), 'effect': 'multiply prob by 1.760 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.37), 'effect': 'multiply prob by 0.741 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.1), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.4,0.84,0.37,0.15,0.004955808,"{'timestamp': 1760866780.2067292, 'inputs': {'network_load': np.float64(0.4), 'relay_reputation': np.float64(0.84), 'budget_utilization': np.float64(0.37), 'recent_win_rate': np.float64(0.15)}, 'base_prob': 0.01, 'final_prob': np.float64(0.004955808), 'steps': [{'feature': 'network_load', 'value': np.float64(0.4), 'effect': 'multiply prob by 0.760 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.84), 'effect': 'multiply prob by 1.760 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.37), 'effect': 'multiply prob by 0.741 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.15), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.4,0.84,0.37,0.2,0.004955808,"{'timestamp': 1760866780.2067542, 'inputs': {'network_load': np.float64(0.4), 'relay_reputation': np.float64(0.84), 'budget_utilization': np.float64(0.37), 'recent_win_rate': np.float64(0.2)}, 'base_prob': 0.01, 'final_prob': np.float64(0.004955808), 'steps': [{'feature': 'network_load', 'value': np.float64(0.4), 'effect': 'multiply prob by 0.760 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.84), 'effect': 'multiply prob by 1.760 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.37), 'effect': 'multiply prob by 0.741 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.2), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.4,0.84,0.37,0.25,0.004955808,"{'timestamp': 1760866780.2067792, 'inputs': {'network_load': np.float64(0.4), 'relay_reputation': np.float64(0.84), 'budget_utilization': np.float64(0.37), 'recent_win_rate': np.float64(0.25)}, 'base_prob': 0.01, 'final_prob': np.float64(0.004955808), 'steps': [{'feature': 'network_load', 'value': np.float64(0.4), 'effect': 'multiply prob by 0.760 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.84), 'effect': 'multiply prob by 1.760 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.37), 'effect': 'multiply prob by 0.741 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.25), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.4,0.84,0.37,0.3,0.004955808,"{'timestamp': 1760866780.2068043, 'inputs': {'network_load': np.float64(0.4), 'relay_reputation': np.float64(0.84), 'budget_utilization': np.float64(0.37), 'recent_win_rate': np.float64(0.3)}, 'base_prob': 0.01, 'final_prob': np.float64(0.004955808), 'steps': [{'feature': 'network_load', 'value': np.float64(0.4), 'effect': 'multiply prob by 0.760 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.84), 'effect': 'multiply prob by 1.760 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.37), 'effect': 'multiply prob by 0.741 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.3), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.4,0.84,0.48,0.0,0.008881663911183361,"{'timestamp': 1760866780.2068348, 'inputs': {'network_load': np.float64(0.4), 'relay_reputation': np.float64(0.84), 'budget_utilization': np.float64(0.48), 'recent_win_rate': 1e-09}, 'base_prob': 0.01, 'final_prob': np.float64(0.008881663911183361), 'steps': [{'feature': 'network_load', 'value': np.float64(0.4), 'effect': 'multiply prob by 0.760 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.84), 'effect': 'multiply prob by 1.760 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.48), 'effect': 'multiply prob by 0.664 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': 1e-09, 'effect': 'multiply prob by 1.000 (higher recent wins -> lower prob)'}]}"
0.4,0.84,0.48,0.05,0.0044408320000000005,"{'timestamp': 1760866780.2068615, 'inputs': {'network_load': np.float64(0.4), 'relay_reputation': np.float64(0.84), 'budget_utilization': np.float64(0.48), 'recent_win_rate': np.float64(0.05)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0044408320000000005), 'steps': [{'feature': 'network_load', 'value': np.float64(0.4), 'effect': 'multiply prob by 0.760 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.84), 'effect': 'multiply prob by 1.760 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.48), 'effect': 'multiply prob by 0.664 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.05), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.4,0.84,0.48,0.1,0.0044408320000000005,"{'timestamp': 1760866780.206887, 'inputs': {'network_load': np.float64(0.4), 'relay_reputation': np.float64(0.84), 'budget_utilization': np.float64(0.48), 'recent_win_rate': np.float64(0.1)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0044408320000000005), 'steps': [{'feature': 'network_load', 'value': np.float64(0.4), 'effect': 'multiply prob by 0.760 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.84), 'effect': 'multiply prob by 1.760 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.48), 'effect': 'multiply prob by 0.664 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.1), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.4,0.84,0.48,0.15,0.0044408320000000005,"{'timestamp': 1760866780.206912, 'inputs': {'network_load': np.float64(0.4), 'relay_reputation': np.float64(0.84), 'budget_utilization': np.float64(0.48), 'recent_win_rate': np.float64(0.15)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0044408320000000005), 'steps': [{'feature': 'network_load', 'value': np.float64(0.4), 'effect': 'multiply prob by 0.760 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.84), 'effect': 'multiply prob by 1.760 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.48), 'effect': 'multiply prob by 0.664 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.15), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.4,0.84,0.48,0.2,0.0044408320000000005,"{'timestamp': 1760866780.206937, 'inputs': {'network_load': np.float64(0.4), 'relay_reputation': np.float64(0.84), 'budget_utilization': np.float64(0.48), 'recent_win_rate': np.float64(0.2)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0044408320000000005), 'steps': [{'feature': 'network_load', 'value': np.float64(0.4), 'effect': 'multiply prob by 0.760 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.84), 'effect': 'multiply prob by 1.760 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.48), 'effect': 'multiply prob by 0.664 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.2), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.4,0.84,0.48,0.25,0.0044408320000000005,"{'timestamp': 1760866780.206962, 'inputs': {'network_load': np.float64(0.4), 'relay_reputation': np.float64(0.84), 'budget_utilization': np.float64(0.48), 'recent_win_rate': np.float64(0.25)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0044408320000000005), 'steps': [{'feature': 'network_load', 'value': np.float64(0.4), 'effect': 'multiply prob by 0.760 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.84), 'effect': 'multiply prob by 1.760 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.48), 'effect': 'multiply prob by 0.664 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.25), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.4,0.84,0.48,0.3,0.0044408320000000005,"{'timestamp': 1760866780.2069914, 'inputs': {'network_load': np.float64(0.4), 'relay_reputation': np.float64(0.84), 'budget_utilization': np.float64(0.48), 'recent_win_rate': np.float64(0.3)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0044408320000000005), 'steps': [{'feature': 'network_load', 'value': np.float64(0.4), 'effect': 'multiply prob by 0.760 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.84), 'effect': 'multiply prob by 1.760 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.48), 'effect': 'multiply prob by 0.664 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.3), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.4,0.84,0.59,0.0,0.00785171192148288,"{'timestamp': 1760866780.2070186, 'inputs': {'network_load': np.float64(0.4), 'relay_reputation': np.float64(0.84), 'budget_utilization': np.float64(0.59), 'recent_win_rate': 1e-09}, 'base_prob': 0.01, 'final_prob': np.float64(0.00785171192148288), 'steps': [{'feature': 'network_load', 'value': np.float64(0.4), 'effect': 'multiply prob by 0.760 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.84), 'effect': 'multiply prob by 1.760 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.59), 'effect': 'multiply prob by 0.587 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': 1e-09, 'effect': 'multiply prob by 1.000 (higher recent wins -> lower prob)'}]}"
0.4,0.84,0.59,0.05,0.003925856,"{'timestamp': 1760866780.207044, 'inputs': {'network_load': np.float64(0.4), 'relay_reputation': np.float64(0.84), 'budget_utilization': np.float64(0.59), 'recent_win_rate': np.float64(0.05)}, 'base_prob': 0.01, 'final_prob': np.float64(0.003925856), 'steps': [{'feature': 'network_load', 'value': np.float64(0.4), 'effect': 'multiply prob by 0.760 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.84), 'effect': 'multiply prob by 1.760 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.59), 'effect': 'multiply prob by 0.587 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.05), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.4,0.84,0.59,0.1,0.003925856,"{'timestamp': 1760866780.2070732, 'inputs': {'network_load': np.float64(0.4), 'relay_reputation': np.float64(0.84), 'budget_utilization': np.float64(0.59), 'recent_win_rate': np.float64(0.1)}, 'base_prob': 0.01, 'final_prob': np.float64(0.003925856), 'steps': [{'feature': 'network_load', 'value': np.float64(0.4), 'effect': 'multiply prob by 0.760 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.84), 'effect': 'multiply prob by 1.760 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.59), 'effect': 'multiply prob by 0.587 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.1), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.4,0.84,0.59,0.15,0.003925856,"{'timestamp': 1760866780.2071002, 'inputs': {'network_load': np.float64(0.4), 'relay_reputation': np.float64(0.84), 'budget_utilization': np.float64(0.59), 'recent_win_rate': np.float64(0.15)}, 'base_prob': 0.01, 'final_prob': np.float64(0.003925856), 'steps': [{'feature': 'network_load', 'value': np.float64(0.4), 'effect': 'multiply prob by 0.760 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.84), 'effect': 'multiply prob by 1.760 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.59), 'effect': 'multiply prob by 0.587 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.15), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.4,0.84,0.59,0.2,0.003925856,"{'timestamp': 1760866780.2071273, 'inputs': {'network_load': np.float64(0.4), 'relay_reputation': np.float64(0.84), 'budget_utilization': np.float64(0.59), 'recent_win_rate': np.float64(0.2)}, 'base_prob': 0.01, 'final_prob': np.float64(0.003925856), 'steps': [{'feature': 'network_load', 'value': np.float64(0.4), 'effect': 'multiply prob by 0.760 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.84), 'effect': 'multiply prob by 1.760 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.59), 'effect': 'multiply prob by 0.587 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.2), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.4,0.84,0.59,0.25,0.003925856,"{'timestamp': 1760866780.2071526, 'inputs': {'network_load': np.float64(0.4), 'relay_reputation': np.float64(0.84), 'budget_utilization': np.float64(0.59), 'recent_win_rate': np.float64(0.25)}, 'base_prob': 0.01, 'final_prob': np.float64(0.003925856), 'steps': [{'feature': 'network_load', 'value': np.float64(0.4), 'effect': 'multiply prob by 0.760 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.84), 'effect': 'multiply prob by 1.760 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.59), 'effect': 'multiply prob by 0.587 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.25), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.4,0.84,0.59,0.3,0.003925856,"{'timestamp': 1760866780.207211, 'inputs': {'network_load': np.float64(0.4), 'relay_reputation': np.float64(0.84), 'budget_utilization': np.float64(0.59), 'recent_win_rate': np.float64(0.3)}, 'base_prob': 0.01, 'final_prob': np.float64(0.003925856), 'steps': [{'feature': 'network_load', 'value': np.float64(0.4), 'effect': 'multiply prob by 0.760 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.84), 'effect': 'multiply prob by 1.760 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.59), 'effect': 'multiply prob by 0.587 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.3), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.4,0.84,0.69,0.0,0.0069153919308460815,"{'timestamp': 1760866780.2072413, 'inputs': {'network_load': np.float64(0.4), 'relay_reputation': np.float64(0.84), 'budget_utilization': np.float64(0.69), 'recent_win_rate': 1e-09}, 'base_prob': 0.01, 'final_prob': np.float64(0.0069153919308460815), 'steps': [{'feature': 'network_load', 'value': np.float64(0.4), 'effect': 'multiply prob by 0.760 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.84), 'effect': 'multiply prob by 1.760 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.69), 'effect': 'multiply prob by 0.517 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': 1e-09, 'effect': 'multiply prob by 1.000 (higher recent wins -> lower prob)'}]}"
0.4,0.84,0.69,0.05,0.003457696000000001,"{'timestamp': 1760866780.2072666, 'inputs': {'network_load': np.float64(0.4), 'relay_reputation': np.float64(0.84), 'budget_utilization': np.float64(0.69), 'recent_win_rate': np.float64(0.05)}, 'base_prob': 0.01, 'final_prob': np.float64(0.003457696000000001), 'steps': [{'feature': 'network_load', 'value': np.float64(0.4), 'effect': 'multiply prob by 0.760 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.84), 'effect': 'multiply prob by 1.760 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.69), 'effect': 'multiply prob by 0.517 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.05), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.4,0.84,0.69,0.1,0.003457696000000001,"{'timestamp': 1760866780.2072992, 'inputs': {'network_load': np.float64(0.4), 'relay_reputation': np.float64(0.84), 'budget_utilization': np.float64(0.69), 'recent_win_rate': np.float64(0.1)}, 'base_prob': 0.01, 'final_prob': np.float64(0.003457696000000001), 'steps': [{'feature': 'network_load', 'value': np.float64(0.4), 'effect': 'multiply prob by 0.760 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.84), 'effect': 'multiply prob by 1.760 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.69), 'effect': 'multiply prob by 0.517 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.1), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.4,0.84,0.69,0.15,0.003457696000000001,"{'timestamp': 1760866780.2073247, 'inputs': {'network_load': np.float64(0.4), 'relay_reputation': np.float64(0.84), 'budget_utilization': np.float64(0.69), 'recent_win_rate': np.float64(0.15)}, 'base_prob': 0.01, 'final_prob': np.float64(0.003457696000000001), 'steps': [{'feature': 'network_load', 'value': np.float64(0.4), 'effect': 'multiply prob by 0.760 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.84), 'effect': 'multiply prob by 1.760 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.69), 'effect': 'multiply prob by 0.517 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.15), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.4,0.84,0.69,0.2,0.003457696000000001,"{'timestamp': 1760866780.20735, 'inputs': {'network_load': np.float64(0.4), 'relay_reputation': np.float64(0.84), 'budget_utilization': np.float64(0.69), 'recent_win_rate': np.float64(0.2)}, 'base_prob': 0.01, 'final_prob': np.float64(0.003457696000000001), 'steps': [{'feature': 'network_load', 'value': np.float64(0.4), 'effect': 'multiply prob by 0.760 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.84), 'effect': 'multiply prob by 1.760 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.69), 'effect': 'multiply prob by 0.517 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.2), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.4,0.84,0.69,0.25,0.003457696000000001,"{'timestamp': 1760866780.2073748, 'inputs': {'network_load': np.float64(0.4), 'relay_reputation': np.float64(0.84), 'budget_utilization': np.float64(0.69), 'recent_win_rate': np.float64(0.25)}, 'base_prob': 0.01, 'final_prob': np.float64(0.003457696000000001), 'steps': [{'feature': 'network_load', 'value': np.float64(0.4), 'effect': 'multiply prob by 0.760 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.84), 'effect': 'multiply prob by 1.760 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.69), 'effect': 'multiply prob by 0.517 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.25), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.4,0.84,0.69,0.3,0.003457696000000001,"{'timestamp': 1760866780.207402, 'inputs': {'network_load': np.float64(0.4), 'relay_reputation': np.float64(0.84), 'budget_utilization': np.float64(0.69), 'recent_win_rate': np.float64(0.3)}, 'base_prob': 0.01, 'final_prob': np.float64(0.003457696000000001), 'steps': [{'feature': 'network_load', 'value': np.float64(0.4), 'effect': 'multiply prob by 0.760 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.84), 'effect': 'multiply prob by 1.760 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.69), 'effect': 'multiply prob by 0.517 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.3), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.4,0.84,0.8,0.0,0.005885439941145601,"{'timestamp': 1760866780.207429, 'inputs': {'network_load': np.float64(0.4), 'relay_reputation': np.float64(0.84), 'budget_utilization': np.float64(0.8), 'recent_win_rate': 1e-09}, 'base_prob': 0.01, 'final_prob': np.float64(0.005885439941145601), 'steps': [{'feature': 'network_load', 'value': np.float64(0.4), 'effect': 'multiply prob by 0.760 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.84), 'effect': 'multiply prob by 1.760 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.8), 'effect': 'multiply prob by 0.440 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': 1e-09, 'effect': 'multiply prob by 1.000 (higher recent wins -> lower prob)'}]}"
0.4,0.84,0.8,0.05,0.0029427200000000007,"{'timestamp': 1760866780.2074564, 'inputs': {'network_load': np.float64(0.4), 'relay_reputation': np.float64(0.84), 'budget_utilization': np.float64(0.8), 'recent_win_rate': np.float64(0.05)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0029427200000000007), 'steps': [{'feature': 'network_load', 'value': np.float64(0.4), 'effect': 'multiply prob by 0.760 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.84), 'effect': 'multiply prob by 1.760 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.8), 'effect': 'multiply prob by 0.440 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.05), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.4,0.84,0.8,0.1,0.0029427200000000007,"{'timestamp': 1760866780.2074814, 'inputs': {'network_load': np.float64(0.4), 'relay_reputation': np.float64(0.84), 'budget_utilization': np.float64(0.8), 'recent_win_rate': np.float64(0.1)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0029427200000000007), 'steps': [{'feature': 'network_load', 'value': np.float64(0.4), 'effect': 'multiply prob by 0.760 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.84), 'effect': 'multiply prob by 1.760 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.8), 'effect': 'multiply prob by 0.440 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.1), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.4,0.84,0.8,0.15,0.0029427200000000007,"{'timestamp': 1760866780.2075527, 'inputs': {'network_load': np.float64(0.4), 'relay_reputation': np.float64(0.84), 'budget_utilization': np.float64(0.8), 'recent_win_rate': np.float64(0.15)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0029427200000000007), 'steps': [{'feature': 'network_load', 'value': np.float64(0.4), 'effect': 'multiply prob by 0.760 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.84), 'effect': 'multiply prob by 1.760 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.8), 'effect': 'multiply prob by 0.440 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.15), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.4,0.84,0.8,0.2,0.0029427200000000007,"{'timestamp': 1760866780.2075934, 'inputs': {'network_load': np.float64(0.4), 'relay_reputation': np.float64(0.84), 'budget_utilization': np.float64(0.8), 'recent_win_rate': np.float64(0.2)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0029427200000000007), 'steps': [{'feature': 'network_load', 'value': np.float64(0.4), 'effect': 'multiply prob by 0.760 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.84), 'effect': 'multiply prob by 1.760 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.8), 'effect': 'multiply prob by 0.440 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.2), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.4,0.84,0.8,0.25,0.0029427200000000007,"{'timestamp': 1760866780.207622, 'inputs': {'network_load': np.float64(0.4), 'relay_reputation': np.float64(0.84), 'budget_utilization': np.float64(0.8), 'recent_win_rate': np.float64(0.25)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0029427200000000007), 'steps': [{'feature': 'network_load', 'value': np.float64(0.4), 'effect': 'multiply prob by 0.760 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.84), 'effect': 'multiply prob by 1.760 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.8), 'effect': 'multiply prob by 0.440 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.25), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.4,0.84,0.8,0.3,0.0029427200000000007,"{'timestamp': 1760866780.2076495, 'inputs': {'network_load': np.float64(0.4), 'relay_reputation': np.float64(0.84), 'budget_utilization': np.float64(0.8), 'recent_win_rate': np.float64(0.3)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0029427200000000007), 'steps': [{'feature': 'network_load', 'value': np.float64(0.4), 'effect': 'multiply prob by 0.760 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.84), 'effect': 'multiply prob by 1.760 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.8), 'effect': 'multiply prob by 0.440 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.3), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.4,0.95,0.05,0.0,0.014117949858820499,"{'timestamp': 1760866780.2076802, 'inputs': {'network_load': np.float64(0.4), 'relay_reputation': np.float64(0.95), 'budget_utilization': np.float64(0.05), 'recent_win_rate': 1e-09}, 'base_prob': 0.01, 'final_prob': np.float64(0.014117949858820499), 'steps': [{'feature': 'network_load', 'value': np.float64(0.4), 'effect': 'multiply prob by 0.760 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.95), 'effect': 'multiply prob by 1.925 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.05), 'effect': 'multiply prob by 0.965 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': 1e-09, 'effect': 'multiply prob by 1.000 (higher recent wins -> lower prob)'}]}"
0.4,0.95,0.05,0.05,0.0070589749999999995,"{'timestamp': 1760866780.2077062, 'inputs': {'network_load': np.float64(0.4), 'relay_reputation': np.float64(0.95), 'budget_utilization': np.float64(0.05), 'recent_win_rate': np.float64(0.05)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0070589749999999995), 'steps': [{'feature': 'network_load', 'value': np.float64(0.4), 'effect': 'multiply prob by 0.760 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.95), 'effect': 'multiply prob by 1.925 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.05), 'effect': 'multiply prob by 0.965 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.05), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.4,0.95,0.05,0.1,0.0070589749999999995,"{'timestamp': 1760866780.2077339, 'inputs': {'network_load': np.float64(0.4), 'relay_reputation': np.float64(0.95), 'budget_utilization': np.float64(0.05), 'recent_win_rate': np.float64(0.1)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0070589749999999995), 'steps': [{'feature': 'network_load', 'value': np.float64(0.4), 'effect': 'multiply prob by 0.760 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.95), 'effect': 'multiply prob by 1.925 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.05), 'effect': 'multiply prob by 0.965 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.1), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.4,0.95,0.05,0.15,0.0070589749999999995,"{'timestamp': 1760866780.2077594, 'inputs': {'network_load': np.float64(0.4), 'relay_reputation': np.float64(0.95), 'budget_utilization': np.float64(0.05), 'recent_win_rate': np.float64(0.15)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0070589749999999995), 'steps': [{'feature': 'network_load', 'value': np.float64(0.4), 'effect': 'multiply prob by 0.760 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.95), 'effect': 'multiply prob by 1.925 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.05), 'effect': 'multiply prob by 0.965 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.15), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.4,0.95,0.05,0.2,0.0070589749999999995,"{'timestamp': 1760866780.2077885, 'inputs': {'network_load': np.float64(0.4), 'relay_reputation': np.float64(0.95), 'budget_utilization': np.float64(0.05), 'recent_win_rate': np.float64(0.2)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0070589749999999995), 'steps': [{'feature': 'network_load', 'value': np.float64(0.4), 'effect': 'multiply prob by 0.760 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.95), 'effect': 'multiply prob by 1.925 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.05), 'effect': 'multiply prob by 0.965 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.2), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.4,0.95,0.05,0.25,0.0070589749999999995,"{'timestamp': 1760866780.2078142, 'inputs': {'network_load': np.float64(0.4), 'relay_reputation': np.float64(0.95), 'budget_utilization': np.float64(0.05), 'recent_win_rate': np.float64(0.25)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0070589749999999995), 'steps': [{'feature': 'network_load', 'value': np.float64(0.4), 'effect': 'multiply prob by 0.760 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.95), 'effect': 'multiply prob by 1.925 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.05), 'effect': 'multiply prob by 0.965 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.25), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.4,0.95,0.05,0.3,0.0070589749999999995,"{'timestamp': 1760866780.2078397, 'inputs': {'network_load': np.float64(0.4), 'relay_reputation': np.float64(0.95), 'budget_utilization': np.float64(0.05), 'recent_win_rate': np.float64(0.3)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0070589749999999995), 'steps': [{'feature': 'network_load', 'value': np.float64(0.4), 'effect': 'multiply prob by 0.760 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.95), 'effect': 'multiply prob by 1.925 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.05), 'effect': 'multiply prob by 0.965 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.3), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.4,0.95,0.16,0.0,0.0129914398700856,"{'timestamp': 1760866780.207867, 'inputs': {'network_load': np.float64(0.4), 'relay_reputation': np.float64(0.95), 'budget_utilization': np.float64(0.16), 'recent_win_rate': 1e-09}, 'base_prob': 0.01, 'final_prob': np.float64(0.0129914398700856), 'steps': [{'feature': 'network_load', 'value': np.float64(0.4), 'effect': 'multiply prob by 0.760 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.95), 'effect': 'multiply prob by 1.925 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.16), 'effect': 'multiply prob by 0.888 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': 1e-09, 'effect': 'multiply prob by 1.000 (higher recent wins -> lower prob)'}]}"
0.4,0.95,0.16,0.05,0.00649572,"{'timestamp': 1760866780.2078922, 'inputs': {'network_load': np.float64(0.4), 'relay_reputation': np.float64(0.95), 'budget_utilization': np.float64(0.16), 'recent_win_rate': np.float64(0.05)}, 'base_prob': 0.01, 'final_prob': np.float64(0.00649572), 'steps': [{'feature': 'network_load', 'value': np.float64(0.4), 'effect': 'multiply prob by 0.760 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.95), 'effect': 'multiply prob by 1.925 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.16), 'effect': 'multiply prob by 0.888 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.05), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.4,0.95,0.16,0.1,0.00649572,"{'timestamp': 1760866780.2079196, 'inputs': {'network_load': np.float64(0.4), 'relay_reputation': np.float64(0.95), 'budget_utilization': np.float64(0.16), 'recent_win_rate': np.float64(0.1)}, 'base_prob': 0.01, 'final_prob': np.float64(0.00649572), 'steps': [{'feature': 'network_load', 'value': np.float64(0.4), 'effect': 'multiply prob by 0.760 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.95), 'effect': 'multiply prob by 1.925 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.16), 'effect': 'multiply prob by 0.888 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.1), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.4,0.95,0.16,0.15,0.00649572,"{'timestamp': 1760866780.2079456, 'inputs': {'network_load': np.float64(0.4), 'relay_reputation': np.float64(0.95), 'budget_utilization': np.float64(0.16), 'recent_win_rate': np.float64(0.15)}, 'base_prob': 0.01, 'final_prob': np.float64(0.00649572), 'steps': [{'feature': 'network_load', 'value': np.float64(0.4), 'effect': 'multiply prob by 0.760 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.95), 'effect': 'multiply prob by 1.925 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.16), 'effect': 'multiply prob by 0.888 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.15), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.4,0.95,0.16,0.2,0.00649572,"{'timestamp': 1760866780.2079709, 'inputs': {'network_load': np.float64(0.4), 'relay_reputation': np.float64(0.95), 'budget_utilization': np.float64(0.16), 'recent_win_rate': np.float64(0.2)}, 'base_prob': 0.01, 'final_prob': np.float64(0.00649572), 'steps': [{'feature': 'network_load', 'value': np.float64(0.4), 'effect': 'multiply prob by 0.760 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.95), 'effect': 'multiply prob by 1.925 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.16), 'effect': 'multiply prob by 0.888 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.2), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.4,0.95,0.16,0.25,0.00649572,"{'timestamp': 1760866780.2079997, 'inputs': {'network_load': np.float64(0.4), 'relay_reputation': np.float64(0.95), 'budget_utilization': np.float64(0.16), 'recent_win_rate': np.float64(0.25)}, 'base_prob': 0.01, 'final_prob': np.float64(0.00649572), 'steps': [{'feature': 'network_load', 'value': np.float64(0.4), 'effect': 'multiply prob by 0.760 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.95), 'effect': 'multiply prob by 1.925 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.16), 'effect': 'multiply prob by 0.888 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.25), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.4,0.95,0.16,0.3,0.00649572,"{'timestamp': 1760866780.208025, 'inputs': {'network_load': np.float64(0.4), 'relay_reputation': np.float64(0.95), 'budget_utilization': np.float64(0.16), 'recent_win_rate': np.float64(0.3)}, 'base_prob': 0.01, 'final_prob': np.float64(0.00649572), 'steps': [{'feature': 'network_load', 'value': np.float64(0.4), 'effect': 'multiply prob by 0.760 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.95), 'effect': 'multiply prob by 1.925 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.16), 'effect': 'multiply prob by 0.888 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.3), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.4,0.95,0.26,0.0,0.011967339880326599,"{'timestamp': 1760866780.208054, 'inputs': {'network_load': np.float64(0.4), 'relay_reputation': np.float64(0.95), 'budget_utilization': np.float64(0.26), 'recent_win_rate': 1e-09}, 'base_prob': 0.01, 'final_prob': np.float64(0.011967339880326599), 'steps': [{'feature': 'network_load', 'value': np.float64(0.4), 'effect': 'multiply prob by 0.760 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.95), 'effect': 'multiply prob by 1.925 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.26), 'effect': 'multiply prob by 0.818 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': 1e-09, 'effect': 'multiply prob by 1.000 (higher recent wins -> lower prob)'}]}"
0.4,0.95,0.26,0.05,0.00598367,"{'timestamp': 1760866780.2080848, 'inputs': {'network_load': np.float64(0.4), 'relay_reputation': np.float64(0.95), 'budget_utilization': np.float64(0.26), 'recent_win_rate': np.float64(0.05)}, 'base_prob': 0.01, 'final_prob': np.float64(0.00598367), 'steps': [{'feature': 'network_load', 'value': np.float64(0.4), 'effect': 'multiply prob by 0.760 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.95), 'effect': 'multiply prob by 1.925 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.26), 'effect': 'multiply prob by 0.818 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.05), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.4,0.95,0.26,0.1,0.00598367,"{'timestamp': 1760866780.2081103, 'inputs': {'network_load': np.float64(0.4), 'relay_reputation': np.float64(0.95), 'budget_utilization': np.float64(0.26), 'recent_win_rate': np.float64(0.1)}, 'base_prob': 0.01, 'final_prob': np.float64(0.00598367), 'steps': [{'feature': 'network_load', 'value': np.float64(0.4), 'effect': 'multiply prob by 0.760 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.95), 'effect': 'multiply prob by 1.925 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.26), 'effect': 'multiply prob by 0.818 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.1), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.4,0.95,0.26,0.15,0.00598367,"{'timestamp': 1760866780.2081358, 'inputs': {'network_load': np.float64(0.4), 'relay_reputation': np.float64(0.95), 'budget_utilization': np.float64(0.26), 'recent_win_rate': np.float64(0.15)}, 'base_prob': 0.01, 'final_prob': np.float64(0.00598367), 'steps': [{'feature': 'network_load', 'value': np.float64(0.4), 'effect': 'multiply prob by 0.760 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.95), 'effect': 'multiply prob by 1.925 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.26), 'effect': 'multiply prob by 0.818 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.15), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.4,0.95,0.26,0.2,0.00598367,"{'timestamp': 1760866780.208161, 'inputs': {'network_load': np.float64(0.4), 'relay_reputation': np.float64(0.95), 'budget_utilization': np.float64(0.26), 'recent_win_rate': np.float64(0.2)}, 'base_prob': 0.01, 'final_prob': np.float64(0.00598367), 'steps': [{'feature': 'network_load', 'value': np.float64(0.4), 'effect': 'multiply prob by 0.760 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.95), 'effect': 'multiply prob by 1.925 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.26), 'effect': 'multiply prob by 0.818 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.2), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.4,0.95,0.26,0.25,0.00598367,"{'timestamp': 1760866780.2081864, 'inputs': {'network_load': np.float64(0.4), 'relay_reputation': np.float64(0.95), 'budget_utilization': np.float64(0.26), 'recent_win_rate': np.float64(0.25)}, 'base_prob': 0.01, 'final_prob': np.float64(0.00598367), 'steps': [{'feature': 'network_load', 'value': np.float64(0.4), 'effect': 'multiply prob by 0.760 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.95), 'effect': 'multiply prob by 1.925 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.26), 'effect': 'multiply prob by 0.818 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.25), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.4,0.95,0.26,0.3,0.00598367,"{'timestamp': 1760866780.2082155, 'inputs': {'network_load': np.float64(0.4), 'relay_reputation': np.float64(0.95), 'budget_utilization': np.float64(0.26), 'recent_win_rate': np.float64(0.3)}, 'base_prob': 0.01, 'final_prob': np.float64(0.00598367), 'steps': [{'feature': 'network_load', 'value': np.float64(0.4), 'effect': 'multiply prob by 0.760 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.95), 'effect': 'multiply prob by 1.925 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.26), 'effect': 'multiply prob by 0.818 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.3), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.4,0.95,0.37,0.0,0.0108408298915917,"{'timestamp': 1760866780.208243, 'inputs': {'network_load': np.float64(0.4), 'relay_reputation': np.float64(0.95), 'budget_utilization': np.float64(0.37), 'recent_win_rate': 1e-09}, 'base_prob': 0.01, 'final_prob': np.float64(0.0108408298915917), 'steps': [{'feature': 'network_load', 'value': np.float64(0.4), 'effect': 'multiply prob by 0.760 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.95), 'effect': 'multiply prob by 1.925 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.37), 'effect': 'multiply prob by 0.741 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': 1e-09, 'effect': 'multiply prob by 1.000 (higher recent wins -> lower prob)'}]}"
0.4,0.95,0.37,0.05,0.005420415,"{'timestamp': 1760866780.2082684, 'inputs': {'network_load': np.float64(0.4), 'relay_reputation': np.float64(0.95), 'budget_utilization': np.float64(0.37), 'recent_win_rate': np.float64(0.05)}, 'base_prob': 0.01, 'final_prob': np.float64(0.005420415), 'steps': [{'feature': 'network_load', 'value': np.float64(0.4), 'effect': 'multiply prob by 0.760 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.95), 'effect': 'multiply prob by 1.925 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.37), 'effect': 'multiply prob by 0.741 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.05), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.4,0.95,0.37,0.1,0.005420415,"{'timestamp': 1760866780.2082956, 'inputs': {'network_load': np.float64(0.4), 'relay_reputation': np.float64(0.95), 'budget_utilization': np.float64(0.37), 'recent_win_rate': np.float64(0.1)}, 'base_prob': 0.01, 'final_prob': np.float64(0.005420415), 'steps': [{'feature': 'network_load', 'value': np.float64(0.4), 'effect': 'multiply prob by 0.760 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.95), 'effect': 'multiply prob by 1.925 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.37), 'effect': 'multiply prob by 0.741 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.1), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.4,0.95,0.37,0.15,0.005420415,"{'timestamp': 1760866780.208321, 'inputs': {'network_load': np.float64(0.4), 'relay_reputation': np.float64(0.95), 'budget_utilization': np.float64(0.37), 'recent_win_rate': np.float64(0.15)}, 'base_prob': 0.01, 'final_prob': np.float64(0.005420415), 'steps': [{'feature': 'network_load', 'value': np.float64(0.4), 'effect': 'multiply prob by 0.760 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.95), 'effect': 'multiply prob by 1.925 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.37), 'effect': 'multiply prob by 0.741 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.15), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.4,0.95,0.37,0.2,0.005420415,"{'timestamp': 1760866780.2083912, 'inputs': {'network_load': np.float64(0.4), 'relay_reputation': np.float64(0.95), 'budget_utilization': np.float64(0.37), 'recent_win_rate': np.float64(0.2)}, 'base_prob': 0.01, 'final_prob': np.float64(0.005420415), 'steps': [{'feature': 'network_load', 'value': np.float64(0.4), 'effect': 'multiply prob by 0.760 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.95), 'effect': 'multiply prob by 1.925 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.37), 'effect': 'multiply prob by 0.741 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.2), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.4,0.95,0.37,0.25,0.005420415,"{'timestamp': 1760866780.208429, 'inputs': {'network_load': np.float64(0.4), 'relay_reputation': np.float64(0.95), 'budget_utilization': np.float64(0.37), 'recent_win_rate': np.float64(0.25)}, 'base_prob': 0.01, 'final_prob': np.float64(0.005420415), 'steps': [{'feature': 'network_load', 'value': np.float64(0.4), 'effect': 'multiply prob by 0.760 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.95), 'effect': 'multiply prob by 1.925 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.37), 'effect': 'multiply prob by 0.741 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.25), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.4,0.95,0.37,0.3,0.005420415,"{'timestamp': 1760866780.208455, 'inputs': {'network_load': np.float64(0.4), 'relay_reputation': np.float64(0.95), 'budget_utilization': np.float64(0.37), 'recent_win_rate': np.float64(0.3)}, 'base_prob': 0.01, 'final_prob': np.float64(0.005420415), 'steps': [{'feature': 'network_load', 'value': np.float64(0.4), 'effect': 'multiply prob by 0.760 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.95), 'effect': 'multiply prob by 1.925 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.37), 'effect': 'multiply prob by 0.741 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.3), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.4,0.95,0.48,0.0,0.0097143199028568,"{'timestamp': 1760866780.2084873, 'inputs': {'network_load': np.float64(0.4), 'relay_reputation': np.float64(0.95), 'budget_utilization': np.float64(0.48), 'recent_win_rate': 1e-09}, 'base_prob': 0.01, 'final_prob': np.float64(0.0097143199028568), 'steps': [{'feature': 'network_load', 'value': np.float64(0.4), 'effect': 'multiply prob by 0.760 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.95), 'effect': 'multiply prob by 1.925 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.48), 'effect': 'multiply prob by 0.664 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': 1e-09, 'effect': 'multiply prob by 1.000 (higher recent wins -> lower prob)'}]}"
0.4,0.95,0.48,0.05,0.00485716,"{'timestamp': 1760866780.208513, 'inputs': {'network_load': np.float64(0.4), 'relay_reputation': np.float64(0.95), 'budget_utilization': np.float64(0.48), 'recent_win_rate': np.float64(0.05)}, 'base_prob': 0.01, 'final_prob': np.float64(0.00485716), 'steps': [{'feature': 'network_load', 'value': np.float64(0.4), 'effect': 'multiply prob by 0.760 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.95), 'effect': 'multiply prob by 1.925 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.48), 'effect': 'multiply prob by 0.664 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.05), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.4,0.95,0.48,0.1,0.00485716,"{'timestamp': 1760866780.2085412, 'inputs': {'network_load': np.float64(0.4), 'relay_reputation': np.float64(0.95), 'budget_utilization': np.float64(0.48), 'recent_win_rate': np.float64(0.1)}, 'base_prob': 0.01, 'final_prob': np.float64(0.00485716), 'steps': [{'feature': 'network_load', 'value': np.float64(0.4), 'effect': 'multiply prob by 0.760 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.95), 'effect': 'multiply prob by 1.925 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.48), 'effect': 'multiply prob by 0.664 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.1), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.4,0.95,0.48,0.15,0.00485716,"{'timestamp': 1760866780.2085698, 'inputs': {'network_load': np.float64(0.4), 'relay_reputation': np.float64(0.95), 'budget_utilization': np.float64(0.48), 'recent_win_rate': np.float64(0.15)}, 'base_prob': 0.01, 'final_prob': np.float64(0.00485716), 'steps': [{'feature': 'network_load', 'value': np.float64(0.4), 'effect': 'multiply prob by 0.760 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.95), 'effect': 'multiply prob by 1.925 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.48), 'effect': 'multiply prob by 0.664 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.15), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.4,0.95,0.48,0.2,0.00485716,"{'timestamp': 1760866780.2085958, 'inputs': {'network_load': np.float64(0.4), 'relay_reputation': np.float64(0.95), 'budget_utilization': np.float64(0.48), 'recent_win_rate': np.float64(0.2)}, 'base_prob': 0.01, 'final_prob': np.float64(0.00485716), 'steps': [{'feature': 'network_load', 'value': np.float64(0.4), 'effect': 'multiply prob by 0.760 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.95), 'effect': 'multiply prob by 1.925 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.48), 'effect': 'multiply prob by 0.664 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.2), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.4,0.95,0.48,0.25,0.00485716,"{'timestamp': 1760866780.208623, 'inputs': {'network_load': np.float64(0.4), 'relay_reputation': np.float64(0.95), 'budget_utilization': np.float64(0.48), 'recent_win_rate': np.float64(0.25)}, 'base_prob': 0.01, 'final_prob': np.float64(0.00485716), 'steps': [{'feature': 'network_load', 'value': np.float64(0.4), 'effect': 'multiply prob by 0.760 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.95), 'effect': 'multiply prob by 1.925 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.48), 'effect': 'multiply prob by 0.664 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.25), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.4,0.95,0.48,0.3,0.00485716,"{'timestamp': 1760866780.2086487, 'inputs': {'network_load': np.float64(0.4), 'relay_reputation': np.float64(0.95), 'budget_utilization': np.float64(0.48), 'recent_win_rate': np.float64(0.3)}, 'base_prob': 0.01, 'final_prob': np.float64(0.00485716), 'steps': [{'feature': 'network_load', 'value': np.float64(0.4), 'effect': 'multiply prob by 0.760 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.95), 'effect': 'multiply prob by 1.925 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.48), 'effect': 'multiply prob by 0.664 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.3), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.4,0.95,0.59,0.0,0.0085878099141219,"{'timestamp': 1760866780.2086904, 'inputs': {'network_load': np.float64(0.4), 'relay_reputation': np.float64(0.95), 'budget_utilization': np.float64(0.59), 'recent_win_rate': 1e-09}, 'base_prob': 0.01, 'final_prob': np.float64(0.0085878099141219), 'steps': [{'feature': 'network_load', 'value': np.float64(0.4), 'effect': 'multiply prob by 0.760 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.95), 'effect': 'multiply prob by 1.925 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.59), 'effect': 'multiply prob by 0.587 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': 1e-09, 'effect': 'multiply prob by 1.000 (higher recent wins -> lower prob)'}]}"
0.4,0.95,0.59,0.05,0.004293905,"{'timestamp': 1760866780.2087204, 'inputs': {'network_load': np.float64(0.4), 'relay_reputation': np.float64(0.95), 'budget_utilization': np.float64(0.59), 'recent_win_rate': np.float64(0.05)}, 'base_prob': 0.01, 'final_prob': np.float64(0.004293905), 'steps': [{'feature': 'network_load', 'value': np.float64(0.4), 'effect': 'multiply prob by 0.760 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.95), 'effect': 'multiply prob by 1.925 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.59), 'effect': 'multiply prob by 0.587 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.05), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.4,0.95,0.59,0.1,0.004293905,"{'timestamp': 1760866780.2087457, 'inputs': {'network_load': np.float64(0.4), 'relay_reputation': np.float64(0.95), 'budget_utilization': np.float64(0.59), 'recent_win_rate': np.float64(0.1)}, 'base_prob': 0.01, 'final_prob': np.float64(0.004293905), 'steps': [{'feature': 'network_load', 'value': np.float64(0.4), 'effect': 'multiply prob by 0.760 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.95), 'effect': 'multiply prob by 1.925 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.59), 'effect': 'multiply prob by 0.587 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.1), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.4,0.95,0.59,0.15,0.004293905,"{'timestamp': 1760866780.2087712, 'inputs': {'network_load': np.float64(0.4), 'relay_reputation': np.float64(0.95), 'budget_utilization': np.float64(0.59), 'recent_win_rate': np.float64(0.15)}, 'base_prob': 0.01, 'final_prob': np.float64(0.004293905), 'steps': [{'feature': 'network_load', 'value': np.float64(0.4), 'effect': 'multiply prob by 0.760 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.95), 'effect': 'multiply prob by 1.925 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.59), 'effect': 'multiply prob by 0.587 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.15), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.4,0.95,0.59,0.2,0.004293905,"{'timestamp': 1760866780.208797, 'inputs': {'network_load': np.float64(0.4), 'relay_reputation': np.float64(0.95), 'budget_utilization': np.float64(0.59), 'recent_win_rate': np.float64(0.2)}, 'base_prob': 0.01, 'final_prob': np.float64(0.004293905), 'steps': [{'feature': 'network_load', 'value': np.float64(0.4), 'effect': 'multiply prob by 0.760 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.95), 'effect': 'multiply prob by 1.925 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.59), 'effect': 'multiply prob by 0.587 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.2), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.4,0.95,0.59,0.25,0.004293905,"{'timestamp': 1760866780.2088223, 'inputs': {'network_load': np.float64(0.4), 'relay_reputation': np.float64(0.95), 'budget_utilization': np.float64(0.59), 'recent_win_rate': np.float64(0.25)}, 'base_prob': 0.01, 'final_prob': np.float64(0.004293905), 'steps': [{'feature': 'network_load', 'value': np.float64(0.4), 'effect': 'multiply prob by 0.760 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.95), 'effect': 'multiply prob by 1.925 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.59), 'effect': 'multiply prob by 0.587 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.25), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.4,0.95,0.59,0.3,0.004293905,"{'timestamp': 1760866780.20885, 'inputs': {'network_load': np.float64(0.4), 'relay_reputation': np.float64(0.95), 'budget_utilization': np.float64(0.59), 'recent_win_rate': np.float64(0.3)}, 'base_prob': 0.01, 'final_prob': np.float64(0.004293905), 'steps': [{'feature': 'network_load', 'value': np.float64(0.4), 'effect': 'multiply prob by 0.760 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.95), 'effect': 'multiply prob by 1.925 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.59), 'effect': 'multiply prob by 0.587 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.3), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.4,0.95,0.69,0.0,0.0075637099243629005,"{'timestamp': 1760866780.208877, 'inputs': {'network_load': np.float64(0.4), 'relay_reputation': np.float64(0.95), 'budget_utilization': np.float64(0.69), 'recent_win_rate': 1e-09}, 'base_prob': 0.01, 'final_prob': np.float64(0.0075637099243629005), 'steps': [{'feature': 'network_load', 'value': np.float64(0.4), 'effect': 'multiply prob by 0.760 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.95), 'effect': 'multiply prob by 1.925 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.69), 'effect': 'multiply prob by 0.517 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': 1e-09, 'effect': 'multiply prob by 1.000 (higher recent wins -> lower prob)'}]}"
0.4,0.95,0.69,0.05,0.0037818550000000006,"{'timestamp': 1760866780.2089026, 'inputs': {'network_load': np.float64(0.4), 'relay_reputation': np.float64(0.95), 'budget_utilization': np.float64(0.69), 'recent_win_rate': np.float64(0.05)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0037818550000000006), 'steps': [{'feature': 'network_load', 'value': np.float64(0.4), 'effect': 'multiply prob by 0.760 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.95), 'effect': 'multiply prob by 1.925 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.69), 'effect': 'multiply prob by 0.517 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.05), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.4,0.95,0.69,0.1,0.0037818550000000006,"{'timestamp': 1760866780.2089343, 'inputs': {'network_load': np.float64(0.4), 'relay_reputation': np.float64(0.95), 'budget_utilization': np.float64(0.69), 'recent_win_rate': np.float64(0.1)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0037818550000000006), 'steps': [{'feature': 'network_load', 'value': np.float64(0.4), 'effect': 'multiply prob by 0.760 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.95), 'effect': 'multiply prob by 1.925 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.69), 'effect': 'multiply prob by 0.517 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.1), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.4,0.95,0.69,0.15,0.0037818550000000006,"{'timestamp': 1760866780.2089615, 'inputs': {'network_load': np.float64(0.4), 'relay_reputation': np.float64(0.95), 'budget_utilization': np.float64(0.69), 'recent_win_rate': np.float64(0.15)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0037818550000000006), 'steps': [{'feature': 'network_load', 'value': np.float64(0.4), 'effect': 'multiply prob by 0.760 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.95), 'effect': 'multiply prob by 1.925 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.69), 'effect': 'multiply prob by 0.517 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.15), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.4,0.95,0.69,0.2,0.0037818550000000006,"{'timestamp': 1760866780.2089887, 'inputs': {'network_load': np.float64(0.4), 'relay_reputation': np.float64(0.95), 'budget_utilization': np.float64(0.69), 'recent_win_rate': np.float64(0.2)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0037818550000000006), 'steps': [{'feature': 'network_load', 'value': np.float64(0.4), 'effect': 'multiply prob by 0.760 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.95), 'effect': 'multiply prob by 1.925 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.69), 'effect': 'multiply prob by 0.517 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.2), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.4,0.95,0.69,0.25,0.0037818550000000006,"{'timestamp': 1760866780.2090144, 'inputs': {'network_load': np.float64(0.4), 'relay_reputation': np.float64(0.95), 'budget_utilization': np.float64(0.69), 'recent_win_rate': np.float64(0.25)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0037818550000000006), 'steps': [{'feature': 'network_load', 'value': np.float64(0.4), 'effect': 'multiply prob by 0.760 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.95), 'effect': 'multiply prob by 1.925 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.69), 'effect': 'multiply prob by 0.517 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.25), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.4,0.95,0.69,0.3,0.0037818550000000006,"{'timestamp': 1760866780.2090402, 'inputs': {'network_load': np.float64(0.4), 'relay_reputation': np.float64(0.95), 'budget_utilization': np.float64(0.69), 'recent_win_rate': np.float64(0.3)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0037818550000000006), 'steps': [{'feature': 'network_load', 'value': np.float64(0.4), 'effect': 'multiply prob by 0.760 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.95), 'effect': 'multiply prob by 1.925 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.69), 'effect': 'multiply prob by 0.517 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.3), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.4,0.95,0.8,0.0,0.006437199935628001,"{'timestamp': 1760866780.2090673, 'inputs': {'network_load': np.float64(0.4), 'relay_reputation': np.float64(0.95), 'budget_utilization': np.float64(0.8), 'recent_win_rate': 1e-09}, 'base_prob': 0.01, 'final_prob': np.float64(0.006437199935628001), 'steps': [{'feature': 'network_load', 'value': np.float64(0.4), 'effect': 'multiply prob by 0.760 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.95), 'effect': 'multiply prob by 1.925 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.8), 'effect': 'multiply prob by 0.440 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': 1e-09, 'effect': 'multiply prob by 1.000 (higher recent wins -> lower prob)'}]}"
0.4,0.95,0.8,0.05,0.0032186000000000003,"{'timestamp': 1760866780.2090926, 'inputs': {'network_load': np.float64(0.4), 'relay_reputation': np.float64(0.95), 'budget_utilization': np.float64(0.8), 'recent_win_rate': np.float64(0.05)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0032186000000000003), 'steps': [{'feature': 'network_load', 'value': np.float64(0.4), 'effect': 'multiply prob by 0.760 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.95), 'effect': 'multiply prob by 1.925 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.8), 'effect': 'multiply prob by 0.440 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.05), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.4,0.95,0.8,0.1,0.0032186000000000003,"{'timestamp': 1760866780.2091217, 'inputs': {'network_load': np.float64(0.4), 'relay_reputation': np.float64(0.95), 'budget_utilization': np.float64(0.8), 'recent_win_rate': np.float64(0.1)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0032186000000000003), 'steps': [{'feature': 'network_load', 'value': np.float64(0.4), 'effect': 'multiply prob by 0.760 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.95), 'effect': 'multiply prob by 1.925 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.8), 'effect': 'multiply prob by 0.440 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.1), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.4,0.95,0.8,0.15,0.0032186000000000003,"{'timestamp': 1760866780.209201, 'inputs': {'network_load': np.float64(0.4), 'relay_reputation': np.float64(0.95), 'budget_utilization': np.float64(0.8), 'recent_win_rate': np.float64(0.15)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0032186000000000003), 'steps': [{'feature': 'network_load', 'value': np.float64(0.4), 'effect': 'multiply prob by 0.760 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.95), 'effect': 'multiply prob by 1.925 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.8), 'effect': 'multiply prob by 0.440 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.15), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.4,0.95,0.8,0.2,0.0032186000000000003,"{'timestamp': 1760866780.2092385, 'inputs': {'network_load': np.float64(0.4), 'relay_reputation': np.float64(0.95), 'budget_utilization': np.float64(0.8), 'recent_win_rate': np.float64(0.2)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0032186000000000003), 'steps': [{'feature': 'network_load', 'value': np.float64(0.4), 'effect': 'multiply prob by 0.760 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.95), 'effect': 'multiply prob by 1.925 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.8), 'effect': 'multiply prob by 0.440 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.2), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.4,0.95,0.8,0.25,0.0032186000000000003,"{'timestamp': 1760866780.2092648, 'inputs': {'network_load': np.float64(0.4), 'relay_reputation': np.float64(0.95), 'budget_utilization': np.float64(0.8), 'recent_win_rate': np.float64(0.25)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0032186000000000003), 'steps': [{'feature': 'network_load', 'value': np.float64(0.4), 'effect': 'multiply prob by 0.760 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.95), 'effect': 'multiply prob by 1.925 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.8), 'effect': 'multiply prob by 0.440 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.25), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.4,0.95,0.8,0.3,0.0032186000000000003,"{'timestamp': 1760866780.2092903, 'inputs': {'network_load': np.float64(0.4), 'relay_reputation': np.float64(0.95), 'budget_utilization': np.float64(0.8), 'recent_win_rate': np.float64(0.3)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0032186000000000003), 'steps': [{'feature': 'network_load', 'value': np.float64(0.4), 'effect': 'multiply prob by 0.760 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.95), 'effect': 'multiply prob by 1.925 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.8), 'effect': 'multiply prob by 0.440 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.3), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.5,0.4,0.05,0.0,0.007430499925694999,"{'timestamp': 1760866780.2093217, 'inputs': {'network_load': np.float64(0.5), 'relay_reputation': np.float64(0.4), 'budget_utilization': np.float64(0.05), 'recent_win_rate': 1e-09}, 'base_prob': 0.01, 'final_prob': np.float64(0.007430499925694999), 'steps': [{'feature': 'network_load', 'value': np.float64(0.5), 'effect': 'multiply prob by 0.700 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.4), 'effect': 'multiply prob by 1.100 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.05), 'effect': 'multiply prob by 0.965 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': 1e-09, 'effect': 'multiply prob by 1.000 (higher recent wins -> lower prob)'}]}"
0.5,0.4,0.05,0.05,0.00371525,"{'timestamp': 1760866780.2093544, 'inputs': {'network_load': np.float64(0.5), 'relay_reputation': np.float64(0.4), 'budget_utilization': np.float64(0.05), 'recent_win_rate': np.float64(0.05)}, 'base_prob': 0.01, 'final_prob': np.float64(0.00371525), 'steps': [{'feature': 'network_load', 'value': np.float64(0.5), 'effect': 'multiply prob by 0.700 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.4), 'effect': 'multiply prob by 1.100 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.05), 'effect': 'multiply prob by 0.965 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.05), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.5,0.4,0.05,0.1,0.00371525,"{'timestamp': 1760866780.2093801, 'inputs': {'network_load': np.float64(0.5), 'relay_reputation': np.float64(0.4), 'budget_utilization': np.float64(0.05), 'recent_win_rate': np.float64(0.1)}, 'base_prob': 0.01, 'final_prob': np.float64(0.00371525), 'steps': [{'feature': 'network_load', 'value': np.float64(0.5), 'effect': 'multiply prob by 0.700 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.4), 'effect': 'multiply prob by 1.100 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.05), 'effect': 'multiply prob by 0.965 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.1), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.5,0.4,0.05,0.15,0.00371525,"{'timestamp': 1760866780.2094054, 'inputs': {'network_load': np.float64(0.5), 'relay_reputation': np.float64(0.4), 'budget_utilization': np.float64(0.05), 'recent_win_rate': np.float64(0.15)}, 'base_prob': 0.01, 'final_prob': np.float64(0.00371525), 'steps': [{'feature': 'network_load', 'value': np.float64(0.5), 'effect': 'multiply prob by 0.700 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.4), 'effect': 'multiply prob by 1.100 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.05), 'effect': 'multiply prob by 0.965 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.15), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.5,0.4,0.05,0.2,0.00371525,"{'timestamp': 1760866780.2094328, 'inputs': {'network_load': np.float64(0.5), 'relay_reputation': np.float64(0.4), 'budget_utilization': np.float64(0.05), 'recent_win_rate': np.float64(0.2)}, 'base_prob': 0.01, 'final_prob': np.float64(0.00371525), 'steps': [{'feature': 'network_load', 'value': np.float64(0.5), 'effect': 'multiply prob by 0.700 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.4), 'effect': 'multiply prob by 1.100 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.05), 'effect': 'multiply prob by 0.965 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.2), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.5,0.4,0.05,0.25,0.00371525,"{'timestamp': 1760866780.20946, 'inputs': {'network_load': np.float64(0.5), 'relay_reputation': np.float64(0.4), 'budget_utilization': np.float64(0.05), 'recent_win_rate': np.float64(0.25)}, 'base_prob': 0.01, 'final_prob': np.float64(0.00371525), 'steps': [{'feature': 'network_load', 'value': np.float64(0.5), 'effect': 'multiply prob by 0.700 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.4), 'effect': 'multiply prob by 1.100 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.05), 'effect': 'multiply prob by 0.965 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.25), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.5,0.4,0.05,0.3,0.00371525,"{'timestamp': 1760866780.2094872, 'inputs': {'network_load': np.float64(0.5), 'relay_reputation': np.float64(0.4), 'budget_utilization': np.float64(0.05), 'recent_win_rate': np.float64(0.3)}, 'base_prob': 0.01, 'final_prob': np.float64(0.00371525), 'steps': [{'feature': 'network_load', 'value': np.float64(0.5), 'effect': 'multiply prob by 0.700 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.4), 'effect': 'multiply prob by 1.100 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.05), 'effect': 'multiply prob by 0.965 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.3), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.5,0.4,0.16,0.0,0.006837599931624,"{'timestamp': 1760866780.2095149, 'inputs': {'network_load': np.float64(0.5), 'relay_reputation': np.float64(0.4), 'budget_utilization': np.float64(0.16), 'recent_win_rate': 1e-09}, 'base_prob': 0.01, 'final_prob': np.float64(0.006837599931624), 'steps': [{'feature': 'network_load', 'value': np.float64(0.5), 'effect': 'multiply prob by 0.700 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.4), 'effect': 'multiply prob by 1.100 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.16), 'effect': 'multiply prob by 0.888 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': 1e-09, 'effect': 'multiply prob by 1.000 (higher recent wins -> lower prob)'}]}"
0.5,0.4,0.16,0.05,0.0034188,"{'timestamp': 1760866780.2095401, 'inputs': {'network_load': np.float64(0.5), 'relay_reputation': np.float64(0.4), 'budget_utilization': np.float64(0.16), 'recent_win_rate': np.float64(0.05)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0034188), 'steps': [{'feature': 'network_load', 'value': np.float64(0.5), 'effect': 'multiply prob by 0.700 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.4), 'effect': 'multiply prob by 1.100 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.16), 'effect': 'multiply prob by 0.888 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.05), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.5,0.4,0.16,0.1,0.0034188,"{'timestamp': 1760866780.2095656, 'inputs': {'network_load': np.float64(0.5), 'relay_reputation': np.float64(0.4), 'budget_utilization': np.float64(0.16), 'recent_win_rate': np.float64(0.1)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0034188), 'steps': [{'feature': 'network_load', 'value': np.float64(0.5), 'effect': 'multiply prob by 0.700 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.4), 'effect': 'multiply prob by 1.100 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.16), 'effect': 'multiply prob by 0.888 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.1), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.5,0.4,0.16,0.15,0.0034188,"{'timestamp': 1760866780.2095933, 'inputs': {'network_load': np.float64(0.5), 'relay_reputation': np.float64(0.4), 'budget_utilization': np.float64(0.16), 'recent_win_rate': np.float64(0.15)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0034188), 'steps': [{'feature': 'network_load', 'value': np.float64(0.5), 'effect': 'multiply prob by 0.700 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.4), 'effect': 'multiply prob by 1.100 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.16), 'effect': 'multiply prob by 0.888 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.15), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.5,0.4,0.16,0.2,0.0034188,"{'timestamp': 1760866780.209619, 'inputs': {'network_load': np.float64(0.5), 'relay_reputation': np.float64(0.4), 'budget_utilization': np.float64(0.16), 'recent_win_rate': np.float64(0.2)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0034188), 'steps': [{'feature': 'network_load', 'value': np.float64(0.5), 'effect': 'multiply prob by 0.700 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.4), 'effect': 'multiply prob by 1.100 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.16), 'effect': 'multiply prob by 0.888 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.2), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.5,0.4,0.16,0.25,0.0034188,"{'timestamp': 1760866780.209648, 'inputs': {'network_load': np.float64(0.5), 'relay_reputation': np.float64(0.4), 'budget_utilization': np.float64(0.16), 'recent_win_rate': np.float64(0.25)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0034188), 'steps': [{'feature': 'network_load', 'value': np.float64(0.5), 'effect': 'multiply prob by 0.700 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.4), 'effect': 'multiply prob by 1.100 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.16), 'effect': 'multiply prob by 0.888 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.25), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.5,0.4,0.16,0.3,0.0034188,"{'timestamp': 1760866780.2096748, 'inputs': {'network_load': np.float64(0.5), 'relay_reputation': np.float64(0.4), 'budget_utilization': np.float64(0.16), 'recent_win_rate': np.float64(0.3)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0034188), 'steps': [{'feature': 'network_load', 'value': np.float64(0.5), 'effect': 'multiply prob by 0.700 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.4), 'effect': 'multiply prob by 1.100 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.16), 'effect': 'multiply prob by 0.888 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.3), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.5,0.4,0.26,0.0,0.0062985999370140005,"{'timestamp': 1760866780.2097058, 'inputs': {'network_load': np.float64(0.5), 'relay_reputation': np.float64(0.4), 'budget_utilization': np.float64(0.26), 'recent_win_rate': 1e-09}, 'base_prob': 0.01, 'final_prob': np.float64(0.0062985999370140005), 'steps': [{'feature': 'network_load', 'value': np.float64(0.5), 'effect': 'multiply prob by 0.700 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.4), 'effect': 'multiply prob by 1.100 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.26), 'effect': 'multiply prob by 0.818 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': 1e-09, 'effect': 'multiply prob by 1.000 (higher recent wins -> lower prob)'}]}"
0.5,0.4,0.26,0.05,0.0031493000000000003,"{'timestamp': 1760866780.209731, 'inputs': {'network_load': np.float64(0.5), 'relay_reputation': np.float64(0.4), 'budget_utilization': np.float64(0.26), 'recent_win_rate': np.float64(0.05)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0031493000000000003), 'steps': [{'feature': 'network_load', 'value': np.float64(0.5), 'effect': 'multiply prob by 0.700 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.4), 'effect': 'multiply prob by 1.100 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.26), 'effect': 'multiply prob by 0.818 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.05), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.5,0.4,0.26,0.1,0.0031493000000000003,"{'timestamp': 1760866780.2097564, 'inputs': {'network_load': np.float64(0.5), 'relay_reputation': np.float64(0.4), 'budget_utilization': np.float64(0.26), 'recent_win_rate': np.float64(0.1)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0031493000000000003), 'steps': [{'feature': 'network_load', 'value': np.float64(0.5), 'effect': 'multiply prob by 0.700 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.4), 'effect': 'multiply prob by 1.100 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.26), 'effect': 'multiply prob by 0.818 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.1), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.5,0.4,0.26,0.15,0.0031493000000000003,"{'timestamp': 1760866780.2097836, 'inputs': {'network_load': np.float64(0.5), 'relay_reputation': np.float64(0.4), 'budget_utilization': np.float64(0.26), 'recent_win_rate': np.float64(0.15)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0031493000000000003), 'steps': [{'feature': 'network_load', 'value': np.float64(0.5), 'effect': 'multiply prob by 0.700 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.4), 'effect': 'multiply prob by 1.100 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.26), 'effect': 'multiply prob by 0.818 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.15), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.5,0.4,0.26,0.2,0.0031493000000000003,"{'timestamp': 1760866780.209873, 'inputs': {'network_load': np.float64(0.5), 'relay_reputation': np.float64(0.4), 'budget_utilization': np.float64(0.26), 'recent_win_rate': np.float64(0.2)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0031493000000000003), 'steps': [{'feature': 'network_load', 'value': np.float64(0.5), 'effect': 'multiply prob by 0.700 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.4), 'effect': 'multiply prob by 1.100 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.26), 'effect': 'multiply prob by 0.818 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.2), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.5,0.4,0.26,0.25,0.0031493000000000003,"{'timestamp': 1760866780.2099094, 'inputs': {'network_load': np.float64(0.5), 'relay_reputation': np.float64(0.4), 'budget_utilization': np.float64(0.26), 'recent_win_rate': np.float64(0.25)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0031493000000000003), 'steps': [{'feature': 'network_load', 'value': np.float64(0.5), 'effect': 'multiply prob by 0.700 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.4), 'effect': 'multiply prob by 1.100 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.26), 'effect': 'multiply prob by 0.818 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.25), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.5,0.4,0.26,0.3,0.0031493000000000003,"{'timestamp': 1760866780.2099395, 'inputs': {'network_load': np.float64(0.5), 'relay_reputation': np.float64(0.4), 'budget_utilization': np.float64(0.26), 'recent_win_rate': np.float64(0.3)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0031493000000000003), 'steps': [{'feature': 'network_load', 'value': np.float64(0.5), 'effect': 'multiply prob by 0.700 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.4), 'effect': 'multiply prob by 1.100 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.26), 'effect': 'multiply prob by 0.818 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.3), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.5,0.4,0.37,0.0,0.0057056999429429996,"{'timestamp': 1760866780.2099707, 'inputs': {'network_load': np.float64(0.5), 'relay_reputation': np.float64(0.4), 'budget_utilization': np.float64(0.37), 'recent_win_rate': 1e-09}, 'base_prob': 0.01, 'final_prob': np.float64(0.0057056999429429996), 'steps': [{'feature': 'network_load', 'value': np.float64(0.5), 'effect': 'multiply prob by 0.700 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.4), 'effect': 'multiply prob by 1.100 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.37), 'effect': 'multiply prob by 0.741 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': 1e-09, 'effect': 'multiply prob by 1.000 (higher recent wins -> lower prob)'}]}"
0.5,0.4,0.37,0.05,0.00285285,"{'timestamp': 1760866780.2099986, 'inputs': {'network_load': np.float64(0.5), 'relay_reputation': np.float64(0.4), 'budget_utilization': np.float64(0.37), 'recent_win_rate': np.float64(0.05)}, 'base_prob': 0.01, 'final_prob': np.float64(0.00285285), 'steps': [{'feature': 'network_load', 'value': np.float64(0.5), 'effect': 'multiply prob by 0.700 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.4), 'effect': 'multiply prob by 1.100 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.37), 'effect': 'multiply prob by 0.741 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.05), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.5,0.4,0.37,0.1,0.00285285,"{'timestamp': 1760866780.210024, 'inputs': {'network_load': np.float64(0.5), 'relay_reputation': np.float64(0.4), 'budget_utilization': np.float64(0.37), 'recent_win_rate': np.float64(0.1)}, 'base_prob': 0.01, 'final_prob': np.float64(0.00285285), 'steps': [{'feature': 'network_load', 'value': np.float64(0.5), 'effect': 'multiply prob by 0.700 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.4), 'effect': 'multiply prob by 1.100 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.37), 'effect': 'multiply prob by 0.741 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.1), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.5,0.4,0.37,0.15,0.00285285,"{'timestamp': 1760866780.2100496, 'inputs': {'network_load': np.float64(0.5), 'relay_reputation': np.float64(0.4), 'budget_utilization': np.float64(0.37), 'recent_win_rate': np.float64(0.15)}, 'base_prob': 0.01, 'final_prob': np.float64(0.00285285), 'steps': [{'feature': 'network_load', 'value': np.float64(0.5), 'effect': 'multiply prob by 0.700 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.4), 'effect': 'multiply prob by 1.100 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.37), 'effect': 'multiply prob by 0.741 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.15), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.5,0.4,0.37,0.2,0.00285285,"{'timestamp': 1760866780.2100747, 'inputs': {'network_load': np.float64(0.5), 'relay_reputation': np.float64(0.4), 'budget_utilization': np.float64(0.37), 'recent_win_rate': np.float64(0.2)}, 'base_prob': 0.01, 'final_prob': np.float64(0.00285285), 'steps': [{'feature': 'network_load', 'value': np.float64(0.5), 'effect': 'multiply prob by 0.700 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.4), 'effect': 'multiply prob by 1.100 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.37), 'effect': 'multiply prob by 0.741 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.2), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.5,0.4,0.37,0.25,0.00285285,"{'timestamp': 1760866780.2101, 'inputs': {'network_load': np.float64(0.5), 'relay_reputation': np.float64(0.4), 'budget_utilization': np.float64(0.37), 'recent_win_rate': np.float64(0.25)}, 'base_prob': 0.01, 'final_prob': np.float64(0.00285285), 'steps': [{'feature': 'network_load', 'value': np.float64(0.5), 'effect': 'multiply prob by 0.700 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.4), 'effect': 'multiply prob by 1.100 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.37), 'effect': 'multiply prob by 0.741 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.25), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.5,0.4,0.37,0.3,0.00285285,"{'timestamp': 1760866780.210125, 'inputs': {'network_load': np.float64(0.5), 'relay_reputation': np.float64(0.4), 'budget_utilization': np.float64(0.37), 'recent_win_rate': np.float64(0.3)}, 'base_prob': 0.01, 'final_prob': np.float64(0.00285285), 'steps': [{'feature': 'network_load', 'value': np.float64(0.5), 'effect': 'multiply prob by 0.700 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.4), 'effect': 'multiply prob by 1.100 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.37), 'effect': 'multiply prob by 0.741 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.3), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.5,0.4,0.48,0.0,0.005112799948872,"{'timestamp': 1760866780.2101555, 'inputs': {'network_load': np.float64(0.5), 'relay_reputation': np.float64(0.4), 'budget_utilization': np.float64(0.48), 'recent_win_rate': 1e-09}, 'base_prob': 0.01, 'final_prob': np.float64(0.005112799948872), 'steps': [{'feature': 'network_load', 'value': np.float64(0.5), 'effect': 'multiply prob by 0.700 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.4), 'effect': 'multiply prob by 1.100 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.48), 'effect': 'multiply prob by 0.664 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': 1e-09, 'effect': 'multiply prob by 1.000 (higher recent wins -> lower prob)'}]}"
0.5,0.4,0.48,0.05,0.0025564000000000003,"{'timestamp': 1760866780.2101808, 'inputs': {'network_load': np.float64(0.5), 'relay_reputation': np.float64(0.4), 'budget_utilization': np.float64(0.48), 'recent_win_rate': np.float64(0.05)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0025564000000000003), 'steps': [{'feature': 'network_load', 'value': np.float64(0.5), 'effect': 'multiply prob by 0.700 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.4), 'effect': 'multiply prob by 1.100 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.48), 'effect': 'multiply prob by 0.664 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.05), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.5,0.4,0.48,0.1,0.0025564000000000003,"{'timestamp': 1760866780.2102063, 'inputs': {'network_load': np.float64(0.5), 'relay_reputation': np.float64(0.4), 'budget_utilization': np.float64(0.48), 'recent_win_rate': np.float64(0.1)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0025564000000000003), 'steps': [{'feature': 'network_load', 'value': np.float64(0.5), 'effect': 'multiply prob by 0.700 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.4), 'effect': 'multiply prob by 1.100 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.48), 'effect': 'multiply prob by 0.664 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.1), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.5,0.4,0.48,0.15,0.0025564000000000003,"{'timestamp': 1760866780.2102904, 'inputs': {'network_load': np.float64(0.5), 'relay_reputation': np.float64(0.4), 'budget_utilization': np.float64(0.48), 'recent_win_rate': np.float64(0.15)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0025564000000000003), 'steps': [{'feature': 'network_load', 'value': np.float64(0.5), 'effect': 'multiply prob by 0.700 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.4), 'effect': 'multiply prob by 1.100 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.48), 'effect': 'multiply prob by 0.664 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.15), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.5,0.4,0.48,0.2,0.0025564000000000003,"{'timestamp': 1760866780.210318, 'inputs': {'network_load': np.float64(0.5), 'relay_reputation': np.float64(0.4), 'budget_utilization': np.float64(0.48), 'recent_win_rate': np.float64(0.2)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0025564000000000003), 'steps': [{'feature': 'network_load', 'value': np.float64(0.5), 'effect': 'multiply prob by 0.700 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.4), 'effect': 'multiply prob by 1.100 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.48), 'effect': 'multiply prob by 0.664 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.2), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.5,0.4,0.48,0.25,0.0025564000000000003,"{'timestamp': 1760866780.210346, 'inputs': {'network_load': np.float64(0.5), 'relay_reputation': np.float64(0.4), 'budget_utilization': np.float64(0.48), 'recent_win_rate': np.float64(0.25)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0025564000000000003), 'steps': [{'feature': 'network_load', 'value': np.float64(0.5), 'effect': 'multiply prob by 0.700 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.4), 'effect': 'multiply prob by 1.100 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.48), 'effect': 'multiply prob by 0.664 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.25), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.5,0.4,0.48,0.3,0.0025564000000000003,"{'timestamp': 1760866780.2103732, 'inputs': {'network_load': np.float64(0.5), 'relay_reputation': np.float64(0.4), 'budget_utilization': np.float64(0.48), 'recent_win_rate': np.float64(0.3)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0025564000000000003), 'steps': [{'feature': 'network_load', 'value': np.float64(0.5), 'effect': 'multiply prob by 0.700 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.4), 'effect': 'multiply prob by 1.100 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.48), 'effect': 'multiply prob by 0.664 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.3), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.5,0.4,0.59,0.0,0.004519899954801,"{'timestamp': 1760866780.2104023, 'inputs': {'network_load': np.float64(0.5), 'relay_reputation': np.float64(0.4), 'budget_utilization': np.float64(0.59), 'recent_win_rate': 1e-09}, 'base_prob': 0.01, 'final_prob': np.float64(0.004519899954801), 'steps': [{'feature': 'network_load', 'value': np.float64(0.5), 'effect': 'multiply prob by 0.700 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.4), 'effect': 'multiply prob by 1.100 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.59), 'effect': 'multiply prob by 0.587 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': 1e-09, 'effect': 'multiply prob by 1.000 (higher recent wins -> lower prob)'}]}"
0.5,0.4,0.59,0.05,0.00225995,"{'timestamp': 1760866780.21043, 'inputs': {'network_load': np.float64(0.5), 'relay_reputation': np.float64(0.4), 'budget_utilization': np.float64(0.59), 'recent_win_rate': np.float64(0.05)}, 'base_prob': 0.01, 'final_prob': np.float64(0.00225995), 'steps': [{'feature': 'network_load', 'value': np.float64(0.5), 'effect': 'multiply prob by 0.700 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.4), 'effect': 'multiply prob by 1.100 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.59), 'effect': 'multiply prob by 0.587 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.05), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.5,0.4,0.59,0.1,0.00225995,"{'timestamp': 1760866780.2104576, 'inputs': {'network_load': np.float64(0.5), 'relay_reputation': np.float64(0.4), 'budget_utilization': np.float64(0.59), 'recent_win_rate': np.float64(0.1)}, 'base_prob': 0.01, 'final_prob': np.float64(0.00225995), 'steps': [{'feature': 'network_load', 'value': np.float64(0.5), 'effect': 'multiply prob by 0.700 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.4), 'effect': 'multiply prob by 1.100 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.59), 'effect': 'multiply prob by 0.587 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.1), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.5,0.4,0.59,0.15,0.00225995,"{'timestamp': 1760866780.210485, 'inputs': {'network_load': np.float64(0.5), 'relay_reputation': np.float64(0.4), 'budget_utilization': np.float64(0.59), 'recent_win_rate': np.float64(0.15)}, 'base_prob': 0.01, 'final_prob': np.float64(0.00225995), 'steps': [{'feature': 'network_load', 'value': np.float64(0.5), 'effect': 'multiply prob by 0.700 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.4), 'effect': 'multiply prob by 1.100 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.59), 'effect': 'multiply prob by 0.587 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.15), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.5,0.4,0.59,0.2,0.00225995,"{'timestamp': 1760866780.2105105, 'inputs': {'network_load': np.float64(0.5), 'relay_reputation': np.float64(0.4), 'budget_utilization': np.float64(0.59), 'recent_win_rate': np.float64(0.2)}, 'base_prob': 0.01, 'final_prob': np.float64(0.00225995), 'steps': [{'feature': 'network_load', 'value': np.float64(0.5), 'effect': 'multiply prob by 0.700 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.4), 'effect': 'multiply prob by 1.100 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.59), 'effect': 'multiply prob by 0.587 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.2), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.5,0.4,0.59,0.25,0.00225995,"{'timestamp': 1760866780.2105358, 'inputs': {'network_load': np.float64(0.5), 'relay_reputation': np.float64(0.4), 'budget_utilization': np.float64(0.59), 'recent_win_rate': np.float64(0.25)}, 'base_prob': 0.01, 'final_prob': np.float64(0.00225995), 'steps': [{'feature': 'network_load', 'value': np.float64(0.5), 'effect': 'multiply prob by 0.700 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.4), 'effect': 'multiply prob by 1.100 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.59), 'effect': 'multiply prob by 0.587 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.25), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.5,0.4,0.59,0.3,0.00225995,"{'timestamp': 1760866780.2105613, 'inputs': {'network_load': np.float64(0.5), 'relay_reputation': np.float64(0.4), 'budget_utilization': np.float64(0.59), 'recent_win_rate': np.float64(0.3)}, 'base_prob': 0.01, 'final_prob': np.float64(0.00225995), 'steps': [{'feature': 'network_load', 'value': np.float64(0.5), 'effect': 'multiply prob by 0.700 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.4), 'effect': 'multiply prob by 1.100 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.59), 'effect': 'multiply prob by 0.587 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.3), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.5,0.4,0.69,0.0,0.003980899960191001,"{'timestamp': 1760866780.2105885, 'inputs': {'network_load': np.float64(0.5), 'relay_reputation': np.float64(0.4), 'budget_utilization': np.float64(0.69), 'recent_win_rate': 1e-09}, 'base_prob': 0.01, 'final_prob': np.float64(0.003980899960191001), 'steps': [{'feature': 'network_load', 'value': np.float64(0.5), 'effect': 'multiply prob by 0.700 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.4), 'effect': 'multiply prob by 1.100 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.69), 'effect': 'multiply prob by 0.517 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': 1e-09, 'effect': 'multiply prob by 1.000 (higher recent wins -> lower prob)'}]}"
0.5,0.4,0.69,0.05,0.0019904500000000004,"{'timestamp': 1760866780.2106156, 'inputs': {'network_load': np.float64(0.5), 'relay_reputation': np.float64(0.4), 'budget_utilization': np.float64(0.69), 'recent_win_rate': np.float64(0.05)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0019904500000000004), 'steps': [{'feature': 'network_load', 'value': np.float64(0.5), 'effect': 'multiply prob by 0.700 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.4), 'effect': 'multiply prob by 1.100 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.69), 'effect': 'multiply prob by 0.517 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.05), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.5,0.4,0.69,0.1,0.0019904500000000004,"{'timestamp': 1760866780.210645, 'inputs': {'network_load': np.float64(0.5), 'relay_reputation': np.float64(0.4), 'budget_utilization': np.float64(0.69), 'recent_win_rate': np.float64(0.1)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0019904500000000004), 'steps': [{'feature': 'network_load', 'value': np.float64(0.5), 'effect': 'multiply prob by 0.700 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.4), 'effect': 'multiply prob by 1.100 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.69), 'effect': 'multiply prob by 0.517 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.1), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.5,0.4,0.69,0.15,0.0019904500000000004,"{'timestamp': 1760866780.2106702, 'inputs': {'network_load': np.float64(0.5), 'relay_reputation': np.float64(0.4), 'budget_utilization': np.float64(0.69), 'recent_win_rate': np.float64(0.15)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0019904500000000004), 'steps': [{'feature': 'network_load', 'value': np.float64(0.5), 'effect': 'multiply prob by 0.700 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.4), 'effect': 'multiply prob by 1.100 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.69), 'effect': 'multiply prob by 0.517 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.15), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.5,0.4,0.69,0.2,0.0019904500000000004,"{'timestamp': 1760866780.2106957, 'inputs': {'network_load': np.float64(0.5), 'relay_reputation': np.float64(0.4), 'budget_utilization': np.float64(0.69), 'recent_win_rate': np.float64(0.2)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0019904500000000004), 'steps': [{'feature': 'network_load', 'value': np.float64(0.5), 'effect': 'multiply prob by 0.700 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.4), 'effect': 'multiply prob by 1.100 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.69), 'effect': 'multiply prob by 0.517 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.2), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.5,0.4,0.69,0.25,0.0019904500000000004,"{'timestamp': 1760866780.2107208, 'inputs': {'network_load': np.float64(0.5), 'relay_reputation': np.float64(0.4), 'budget_utilization': np.float64(0.69), 'recent_win_rate': np.float64(0.25)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0019904500000000004), 'steps': [{'feature': 'network_load', 'value': np.float64(0.5), 'effect': 'multiply prob by 0.700 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.4), 'effect': 'multiply prob by 1.100 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.69), 'effect': 'multiply prob by 0.517 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.25), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.5,0.4,0.69,0.3,0.0019904500000000004,"{'timestamp': 1760866780.210746, 'inputs': {'network_load': np.float64(0.5), 'relay_reputation': np.float64(0.4), 'budget_utilization': np.float64(0.69), 'recent_win_rate': np.float64(0.3)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0019904500000000004), 'steps': [{'feature': 'network_load', 'value': np.float64(0.5), 'effect': 'multiply prob by 0.700 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.4), 'effect': 'multiply prob by 1.100 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.69), 'effect': 'multiply prob by 0.517 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.3), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.5,0.4,0.8,0.0,0.00338799996612,"{'timestamp': 1760866780.210777, 'inputs': {'network_load': np.float64(0.5), 'relay_reputation': np.float64(0.4), 'budget_utilization': np.float64(0.8), 'recent_win_rate': 1e-09}, 'base_prob': 0.01, 'final_prob': np.float64(0.00338799996612), 'steps': [{'feature': 'network_load', 'value': np.float64(0.5), 'effect': 'multiply prob by 0.700 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.4), 'effect': 'multiply prob by 1.100 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.8), 'effect': 'multiply prob by 0.440 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': 1e-09, 'effect': 'multiply prob by 1.000 (higher recent wins -> lower prob)'}]}"
0.5,0.4,0.8,0.05,0.0016940000000000002,"{'timestamp': 1760866780.2108028, 'inputs': {'network_load': np.float64(0.5), 'relay_reputation': np.float64(0.4), 'budget_utilization': np.float64(0.8), 'recent_win_rate': np.float64(0.05)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0016940000000000002), 'steps': [{'feature': 'network_load', 'value': np.float64(0.5), 'effect': 'multiply prob by 0.700 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.4), 'effect': 'multiply prob by 1.100 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.8), 'effect': 'multiply prob by 0.440 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.05), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.5,0.4,0.8,0.1,0.0016940000000000002,"{'timestamp': 1760866780.210828, 'inputs': {'network_load': np.float64(0.5), 'relay_reputation': np.float64(0.4), 'budget_utilization': np.float64(0.8), 'recent_win_rate': np.float64(0.1)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0016940000000000002), 'steps': [{'feature': 'network_load', 'value': np.float64(0.5), 'effect': 'multiply prob by 0.700 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.4), 'effect': 'multiply prob by 1.100 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.8), 'effect': 'multiply prob by 0.440 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.1), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.5,0.4,0.8,0.15,0.0016940000000000002,"{'timestamp': 1760866780.210857, 'inputs': {'network_load': np.float64(0.5), 'relay_reputation': np.float64(0.4), 'budget_utilization': np.float64(0.8), 'recent_win_rate': np.float64(0.15)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0016940000000000002), 'steps': [{'feature': 'network_load', 'value': np.float64(0.5), 'effect': 'multiply prob by 0.700 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.4), 'effect': 'multiply prob by 1.100 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.8), 'effect': 'multiply prob by 0.440 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.15), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.5,0.4,0.8,0.2,0.0016940000000000002,"{'timestamp': 1760866780.2108862, 'inputs': {'network_load': np.float64(0.5), 'relay_reputation': np.float64(0.4), 'budget_utilization': np.float64(0.8), 'recent_win_rate': np.float64(0.2)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0016940000000000002), 'steps': [{'feature': 'network_load', 'value': np.float64(0.5), 'effect': 'multiply prob by 0.700 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.4), 'effect': 'multiply prob by 1.100 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.8), 'effect': 'multiply prob by 0.440 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.2), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.5,0.4,0.8,0.25,0.0016940000000000002,"{'timestamp': 1760866780.2109132, 'inputs': {'network_load': np.float64(0.5), 'relay_reputation': np.float64(0.4), 'budget_utilization': np.float64(0.8), 'recent_win_rate': np.float64(0.25)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0016940000000000002), 'steps': [{'feature': 'network_load', 'value': np.float64(0.5), 'effect': 'multiply prob by 0.700 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.4), 'effect': 'multiply prob by 1.100 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.8), 'effect': 'multiply prob by 0.440 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.25), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.5,0.4,0.8,0.3,0.0016940000000000002,"{'timestamp': 1760866780.2109385, 'inputs': {'network_load': np.float64(0.5), 'relay_reputation': np.float64(0.4), 'budget_utilization': np.float64(0.8), 'recent_win_rate': np.float64(0.3)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0016940000000000002), 'steps': [{'feature': 'network_load', 'value': np.float64(0.5), 'effect': 'multiply prob by 0.700 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.4), 'effect': 'multiply prob by 1.100 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.8), 'effect': 'multiply prob by 0.440 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.3), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.5,0.51,0.05,0.0,0.008545074914549249,"{'timestamp': 1760866780.2109666, 'inputs': {'network_load': np.float64(0.5), 'relay_reputation': np.float64(0.51), 'budget_utilization': np.float64(0.05), 'recent_win_rate': 1e-09}, 'base_prob': 0.01, 'final_prob': np.float64(0.008545074914549249), 'steps': [{'feature': 'network_load', 'value': np.float64(0.5), 'effect': 'multiply prob by 0.700 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.51), 'effect': 'multiply prob by 1.265 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.05), 'effect': 'multiply prob by 0.965 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': 1e-09, 'effect': 'multiply prob by 1.000 (higher recent wins -> lower prob)'}]}"
0.5,0.51,0.05,0.05,0.0042725375,"{'timestamp': 1760866780.210992, 'inputs': {'network_load': np.float64(0.5), 'relay_reputation': np.float64(0.51), 'budget_utilization': np.float64(0.05), 'recent_win_rate': np.float64(0.05)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0042725375), 'steps': [{'feature': 'network_load', 'value': np.float64(0.5), 'effect': 'multiply prob by 0.700 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.51), 'effect': 'multiply prob by 1.265 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.05), 'effect': 'multiply prob by 0.965 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.05), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.5,0.51,0.05,0.1,0.0042725375,"{'timestamp': 1760866780.2110178, 'inputs': {'network_load': np.float64(0.5), 'relay_reputation': np.float64(0.51), 'budget_utilization': np.float64(0.05), 'recent_win_rate': np.float64(0.1)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0042725375), 'steps': [{'feature': 'network_load', 'value': np.float64(0.5), 'effect': 'multiply prob by 0.700 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.51), 'effect': 'multiply prob by 1.265 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.05), 'effect': 'multiply prob by 0.965 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.1), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.5,0.51,0.05,0.15,0.0042725375,"{'timestamp': 1760866780.2110891, 'inputs': {'network_load': np.float64(0.5), 'relay_reputation': np.float64(0.51), 'budget_utilization': np.float64(0.05), 'recent_win_rate': np.float64(0.15)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0042725375), 'steps': [{'feature': 'network_load', 'value': np.float64(0.5), 'effect': 'multiply prob by 0.700 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.51), 'effect': 'multiply prob by 1.265 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.05), 'effect': 'multiply prob by 0.965 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.15), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.5,0.51,0.05,0.2,0.0042725375,"{'timestamp': 1760866780.21113, 'inputs': {'network_load': np.float64(0.5), 'relay_reputation': np.float64(0.51), 'budget_utilization': np.float64(0.05), 'recent_win_rate': np.float64(0.2)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0042725375), 'steps': [{'feature': 'network_load', 'value': np.float64(0.5), 'effect': 'multiply prob by 0.700 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.51), 'effect': 'multiply prob by 1.265 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.05), 'effect': 'multiply prob by 0.965 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.2), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.5,0.51,0.05,0.25,0.0042725375,"{'timestamp': 1760866780.2111573, 'inputs': {'network_load': np.float64(0.5), 'relay_reputation': np.float64(0.51), 'budget_utilization': np.float64(0.05), 'recent_win_rate': np.float64(0.25)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0042725375), 'steps': [{'feature': 'network_load', 'value': np.float64(0.5), 'effect': 'multiply prob by 0.700 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.51), 'effect': 'multiply prob by 1.265 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.05), 'effect': 'multiply prob by 0.965 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.25), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.5,0.51,0.05,0.3,0.0042725375,"{'timestamp': 1760866780.2112126, 'inputs': {'network_load': np.float64(0.5), 'relay_reputation': np.float64(0.51), 'budget_utilization': np.float64(0.05), 'recent_win_rate': np.float64(0.3)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0042725375), 'steps': [{'feature': 'network_load', 'value': np.float64(0.5), 'effect': 'multiply prob by 0.700 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.51), 'effect': 'multiply prob by 1.265 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.05), 'effect': 'multiply prob by 0.965 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.3), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.5,0.51,0.16,0.0,0.0078632399213676,"{'timestamp': 1760866780.2112436, 'inputs': {'network_load': np.float64(0.5), 'relay_reputation': np.float64(0.51), 'budget_utilization': np.float64(0.16), 'recent_win_rate': 1e-09}, 'base_prob': 0.01, 'final_prob': np.float64(0.0078632399213676), 'steps': [{'feature': 'network_load', 'value': np.float64(0.5), 'effect': 'multiply prob by 0.700 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.51), 'effect': 'multiply prob by 1.265 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.16), 'effect': 'multiply prob by 0.888 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': 1e-09, 'effect': 'multiply prob by 1.000 (higher recent wins -> lower prob)'}]}"
0.5,0.51,0.16,0.05,0.00393162,"{'timestamp': 1760866780.2112694, 'inputs': {'network_load': np.float64(0.5), 'relay_reputation': np.float64(0.51), 'budget_utilization': np.float64(0.16), 'recent_win_rate': np.float64(0.05)}, 'base_prob': 0.01, 'final_prob': np.float64(0.00393162), 'steps': [{'feature': 'network_load', 'value': np.float64(0.5), 'effect': 'multiply prob by 0.700 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.51), 'effect': 'multiply prob by 1.265 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.16), 'effect': 'multiply prob by 0.888 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.05), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.5,0.51,0.16,0.1,0.00393162,"{'timestamp': 1760866780.2112985, 'inputs': {'network_load': np.float64(0.5), 'relay_reputation': np.float64(0.51), 'budget_utilization': np.float64(0.16), 'recent_win_rate': np.float64(0.1)}, 'base_prob': 0.01, 'final_prob': np.float64(0.00393162), 'steps': [{'feature': 'network_load', 'value': np.float64(0.5), 'effect': 'multiply prob by 0.700 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.51), 'effect': 'multiply prob by 1.265 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.16), 'effect': 'multiply prob by 0.888 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.1), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.5,0.51,0.16,0.15,0.00393162,"{'timestamp': 1760866780.2113364, 'inputs': {'network_load': np.float64(0.5), 'relay_reputation': np.float64(0.51), 'budget_utilization': np.float64(0.16), 'recent_win_rate': np.float64(0.15)}, 'base_prob': 0.01, 'final_prob': np.float64(0.00393162), 'steps': [{'feature': 'network_load', 'value': np.float64(0.5), 'effect': 'multiply prob by 0.700 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.51), 'effect': 'multiply prob by 1.265 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.16), 'effect': 'multiply prob by 0.888 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.15), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.5,0.51,0.16,0.2,0.00393162,"{'timestamp': 1760866780.2113638, 'inputs': {'network_load': np.float64(0.5), 'relay_reputation': np.float64(0.51), 'budget_utilization': np.float64(0.16), 'recent_win_rate': np.float64(0.2)}, 'base_prob': 0.01, 'final_prob': np.float64(0.00393162), 'steps': [{'feature': 'network_load', 'value': np.float64(0.5), 'effect': 'multiply prob by 0.700 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.51), 'effect': 'multiply prob by 1.265 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.16), 'effect': 'multiply prob by 0.888 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.2), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.5,0.51,0.16,0.25,0.00393162,"{'timestamp': 1760866780.2113905, 'inputs': {'network_load': np.float64(0.5), 'relay_reputation': np.float64(0.51), 'budget_utilization': np.float64(0.16), 'recent_win_rate': np.float64(0.25)}, 'base_prob': 0.01, 'final_prob': np.float64(0.00393162), 'steps': [{'feature': 'network_load', 'value': np.float64(0.5), 'effect': 'multiply prob by 0.700 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.51), 'effect': 'multiply prob by 1.265 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.16), 'effect': 'multiply prob by 0.888 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.25), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.5,0.51,0.16,0.3,0.00393162,"{'timestamp': 1760866780.2114174, 'inputs': {'network_load': np.float64(0.5), 'relay_reputation': np.float64(0.51), 'budget_utilization': np.float64(0.16), 'recent_win_rate': np.float64(0.3)}, 'base_prob': 0.01, 'final_prob': np.float64(0.00393162), 'steps': [{'feature': 'network_load', 'value': np.float64(0.5), 'effect': 'multiply prob by 0.700 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.51), 'effect': 'multiply prob by 1.265 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.16), 'effect': 'multiply prob by 0.888 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.3), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.5,0.51,0.26,0.0,0.007243389927566101,"{'timestamp': 1760866780.2114465, 'inputs': {'network_load': np.float64(0.5), 'relay_reputation': np.float64(0.51), 'budget_utilization': np.float64(0.26), 'recent_win_rate': 1e-09}, 'base_prob': 0.01, 'final_prob': np.float64(0.007243389927566101), 'steps': [{'feature': 'network_load', 'value': np.float64(0.5), 'effect': 'multiply prob by 0.700 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.51), 'effect': 'multiply prob by 1.265 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.26), 'effect': 'multiply prob by 0.818 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': 1e-09, 'effect': 'multiply prob by 1.000 (higher recent wins -> lower prob)'}]}"
0.5,0.51,0.26,0.05,0.0036216950000000003,"{'timestamp': 1760866780.2114716, 'inputs': {'network_load': np.float64(0.5), 'relay_reputation': np.float64(0.51), 'budget_utilization': np.float64(0.26), 'recent_win_rate': np.float64(0.05)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0036216950000000003), 'steps': [{'feature': 'network_load', 'value': np.float64(0.5), 'effect': 'multiply prob by 0.700 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.51), 'effect': 'multiply prob by 1.265 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.26), 'effect': 'multiply prob by 0.818 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.05), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.5,0.51,0.26,0.1,0.0036216950000000003,"{'timestamp': 1760866780.2114966, 'inputs': {'network_load': np.float64(0.5), 'relay_reputation': np.float64(0.51), 'budget_utilization': np.float64(0.26), 'recent_win_rate': np.float64(0.1)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0036216950000000003), 'steps': [{'feature': 'network_load', 'value': np.float64(0.5), 'effect': 'multiply prob by 0.700 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.51), 'effect': 'multiply prob by 1.265 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.26), 'effect': 'multiply prob by 0.818 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.1), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.5,0.51,0.26,0.15,0.0036216950000000003,"{'timestamp': 1760866780.2115276, 'inputs': {'network_load': np.float64(0.5), 'relay_reputation': np.float64(0.51), 'budget_utilization': np.float64(0.26), 'recent_win_rate': np.float64(0.15)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0036216950000000003), 'steps': [{'feature': 'network_load', 'value': np.float64(0.5), 'effect': 'multiply prob by 0.700 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.51), 'effect': 'multiply prob by 1.265 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.26), 'effect': 'multiply prob by 0.818 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.15), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.5,0.51,0.26,0.2,0.0036216950000000003,"{'timestamp': 1760866780.2115529, 'inputs': {'network_load': np.float64(0.5), 'relay_reputation': np.float64(0.51), 'budget_utilization': np.float64(0.26), 'recent_win_rate': np.float64(0.2)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0036216950000000003), 'steps': [{'feature': 'network_load', 'value': np.float64(0.5), 'effect': 'multiply prob by 0.700 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.51), 'effect': 'multiply prob by 1.265 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.26), 'effect': 'multiply prob by 0.818 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.2), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.5,0.51,0.26,0.25,0.0036216950000000003,"{'timestamp': 1760866780.2115796, 'inputs': {'network_load': np.float64(0.5), 'relay_reputation': np.float64(0.51), 'budget_utilization': np.float64(0.26), 'recent_win_rate': np.float64(0.25)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0036216950000000003), 'steps': [{'feature': 'network_load', 'value': np.float64(0.5), 'effect': 'multiply prob by 0.700 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.51), 'effect': 'multiply prob by 1.265 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.26), 'effect': 'multiply prob by 0.818 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.25), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.5,0.51,0.26,0.3,0.0036216950000000003,"{'timestamp': 1760866780.2116065, 'inputs': {'network_load': np.float64(0.5), 'relay_reputation': np.float64(0.51), 'budget_utilization': np.float64(0.26), 'recent_win_rate': np.float64(0.3)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0036216950000000003), 'steps': [{'feature': 'network_load', 'value': np.float64(0.5), 'effect': 'multiply prob by 0.700 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.51), 'effect': 'multiply prob by 1.265 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.26), 'effect': 'multiply prob by 0.818 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.3), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.5,0.51,0.37,0.0,0.00656155493438445,"{'timestamp': 1760866780.2116334, 'inputs': {'network_load': np.float64(0.5), 'relay_reputation': np.float64(0.51), 'budget_utilization': np.float64(0.37), 'recent_win_rate': 1e-09}, 'base_prob': 0.01, 'final_prob': np.float64(0.00656155493438445), 'steps': [{'feature': 'network_load', 'value': np.float64(0.5), 'effect': 'multiply prob by 0.700 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.51), 'effect': 'multiply prob by 1.265 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.37), 'effect': 'multiply prob by 0.741 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': 1e-09, 'effect': 'multiply prob by 1.000 (higher recent wins -> lower prob)'}]}"
0.5,0.51,0.37,0.05,0.0032807775,"{'timestamp': 1760866780.2116587, 'inputs': {'network_load': np.float64(0.5), 'relay_reputation': np.float64(0.51), 'budget_utilization': np.float64(0.37), 'recent_win_rate': np.float64(0.05)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0032807775), 'steps': [{'feature': 'network_load', 'value': np.float64(0.5), 'effect': 'multiply prob by 0.700 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.51), 'effect': 'multiply prob by 1.265 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.37), 'effect': 'multiply prob by 0.741 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.05), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.5,0.51,0.37,0.1,0.0032807775,"{'timestamp': 1760866780.2117004, 'inputs': {'network_load': np.float64(0.5), 'relay_reputation': np.float64(0.51), 'budget_utilization': np.float64(0.37), 'recent_win_rate': np.float64(0.1)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0032807775), 'steps': [{'feature': 'network_load', 'value': np.float64(0.5), 'effect': 'multiply prob by 0.700 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.51), 'effect': 'multiply prob by 1.265 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.37), 'effect': 'multiply prob by 0.741 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.1), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.5,0.51,0.37,0.15,0.0032807775,"{'timestamp': 1760866780.2117403, 'inputs': {'network_load': np.float64(0.5), 'relay_reputation': np.float64(0.51), 'budget_utilization': np.float64(0.37), 'recent_win_rate': np.float64(0.15)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0032807775), 'steps': [{'feature': 'network_load', 'value': np.float64(0.5), 'effect': 'multiply prob by 0.700 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.51), 'effect': 'multiply prob by 1.265 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.37), 'effect': 'multiply prob by 0.741 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.15), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.5,0.51,0.37,0.2,0.0032807775,"{'timestamp': 1760866780.211766, 'inputs': {'network_load': np.float64(0.5), 'relay_reputation': np.float64(0.51), 'budget_utilization': np.float64(0.37), 'recent_win_rate': np.float64(0.2)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0032807775), 'steps': [{'feature': 'network_load', 'value': np.float64(0.5), 'effect': 'multiply prob by 0.700 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.51), 'effect': 'multiply prob by 1.265 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.37), 'effect': 'multiply prob by 0.741 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.2), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.5,0.51,0.37,0.25,0.0032807775,"{'timestamp': 1760866780.2117913, 'inputs': {'network_load': np.float64(0.5), 'relay_reputation': np.float64(0.51), 'budget_utilization': np.float64(0.37), 'recent_win_rate': np.float64(0.25)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0032807775), 'steps': [{'feature': 'network_load', 'value': np.float64(0.5), 'effect': 'multiply prob by 0.700 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.51), 'effect': 'multiply prob by 1.265 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.37), 'effect': 'multiply prob by 0.741 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.25), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.5,0.51,0.37,0.3,0.0032807775,"{'timestamp': 1760866780.2118163, 'inputs': {'network_load': np.float64(0.5), 'relay_reputation': np.float64(0.51), 'budget_utilization': np.float64(0.37), 'recent_win_rate': np.float64(0.3)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0032807775), 'steps': [{'feature': 'network_load', 'value': np.float64(0.5), 'effect': 'multiply prob by 0.700 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.51), 'effect': 'multiply prob by 1.265 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.37), 'effect': 'multiply prob by 0.741 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.3), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.5,0.51,0.48,0.0,0.0058797199412028,"{'timestamp': 1760866780.2118473, 'inputs': {'network_load': np.float64(0.5), 'relay_reputation': np.float64(0.51), 'budget_utilization': np.float64(0.48), 'recent_win_rate': 1e-09}, 'base_prob': 0.01, 'final_prob': np.float64(0.0058797199412028), 'steps': [{'feature': 'network_load', 'value': np.float64(0.5), 'effect': 'multiply prob by 0.700 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.51), 'effect': 'multiply prob by 1.265 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.48), 'effect': 'multiply prob by 0.664 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': 1e-09, 'effect': 'multiply prob by 1.000 (higher recent wins -> lower prob)'}]}"
0.5,0.51,0.48,0.05,0.0029398600000000003,"{'timestamp': 1760866780.2118764, 'inputs': {'network_load': np.float64(0.5), 'relay_reputation': np.float64(0.51), 'budget_utilization': np.float64(0.48), 'recent_win_rate': np.float64(0.05)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0029398600000000003), 'steps': [{'feature': 'network_load', 'value': np.float64(0.5), 'effect': 'multiply prob by 0.700 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.51), 'effect': 'multiply prob by 1.265 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.48), 'effect': 'multiply prob by 0.664 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.05), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.5,0.51,0.48,0.1,0.0029398600000000003,"{'timestamp': 1760866780.2119033, 'inputs': {'network_load': np.float64(0.5), 'relay_reputation': np.float64(0.51), 'budget_utilization': np.float64(0.48), 'recent_win_rate': np.float64(0.1)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0029398600000000003), 'steps': [{'feature': 'network_load', 'value': np.float64(0.5), 'effect': 'multiply prob by 0.700 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.51), 'effect': 'multiply prob by 1.265 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.48), 'effect': 'multiply prob by 0.664 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.1), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.5,0.51,0.48,0.15,0.0029398600000000003,"{'timestamp': 1760866780.2119284, 'inputs': {'network_load': np.float64(0.5), 'relay_reputation': np.float64(0.51), 'budget_utilization': np.float64(0.48), 'recent_win_rate': np.float64(0.15)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0029398600000000003), 'steps': [{'feature': 'network_load', 'value': np.float64(0.5), 'effect': 'multiply prob by 0.700 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.51), 'effect': 'multiply prob by 1.265 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.48), 'effect': 'multiply prob by 0.664 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.15), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.5,0.51,0.48,0.2,0.0029398600000000003,"{'timestamp': 1760866780.2119532, 'inputs': {'network_load': np.float64(0.5), 'relay_reputation': np.float64(0.51), 'budget_utilization': np.float64(0.48), 'recent_win_rate': np.float64(0.2)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0029398600000000003), 'steps': [{'feature': 'network_load', 'value': np.float64(0.5), 'effect': 'multiply prob by 0.700 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.51), 'effect': 'multiply prob by 1.265 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.48), 'effect': 'multiply prob by 0.664 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.2), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.5,0.51,0.48,0.25,0.0029398600000000003,"{'timestamp': 1760866780.2119782, 'inputs': {'network_load': np.float64(0.5), 'relay_reputation': np.float64(0.51), 'budget_utilization': np.float64(0.48), 'recent_win_rate': np.float64(0.25)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0029398600000000003), 'steps': [{'feature': 'network_load', 'value': np.float64(0.5), 'effect': 'multiply prob by 0.700 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.51), 'effect': 'multiply prob by 1.265 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.48), 'effect': 'multiply prob by 0.664 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.25), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.5,0.51,0.48,0.3,0.0029398600000000003,"{'timestamp': 1760866780.2120032, 'inputs': {'network_load': np.float64(0.5), 'relay_reputation': np.float64(0.51), 'budget_utilization': np.float64(0.48), 'recent_win_rate': np.float64(0.3)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0029398600000000003), 'steps': [{'feature': 'network_load', 'value': np.float64(0.5), 'effect': 'multiply prob by 0.700 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.51), 'effect': 'multiply prob by 1.265 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.48), 'effect': 'multiply prob by 0.664 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.3), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.5,0.51,0.59,0.0,0.005197884948021149,"{'timestamp': 1760866780.21209, 'inputs': {'network_load': np.float64(0.5), 'relay_reputation': np.float64(0.51), 'budget_utilization': np.float64(0.59), 'recent_win_rate': 1e-09}, 'base_prob': 0.01, 'final_prob': np.float64(0.005197884948021149), 'steps': [{'feature': 'network_load', 'value': np.float64(0.5), 'effect': 'multiply prob by 0.700 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.51), 'effect': 'multiply prob by 1.265 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.59), 'effect': 'multiply prob by 0.587 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': 1e-09, 'effect': 'multiply prob by 1.000 (higher recent wins -> lower prob)'}]}"
0.5,0.51,0.59,0.05,0.0025989424999999997,"{'timestamp': 1760866780.2121193, 'inputs': {'network_load': np.float64(0.5), 'relay_reputation': np.float64(0.51), 'budget_utilization': np.float64(0.59), 'recent_win_rate': np.float64(0.05)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0025989424999999997), 'steps': [{'feature': 'network_load', 'value': np.float64(0.5), 'effect': 'multiply prob by 0.700 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.51), 'effect': 'multiply prob by 1.265 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.59), 'effect': 'multiply prob by 0.587 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.05), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.5,0.51,0.59,0.1,0.0025989424999999997,"{'timestamp': 1760866780.212145, 'inputs': {'network_load': np.float64(0.5), 'relay_reputation': np.float64(0.51), 'budget_utilization': np.float64(0.59), 'recent_win_rate': np.float64(0.1)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0025989424999999997), 'steps': [{'feature': 'network_load', 'value': np.float64(0.5), 'effect': 'multiply prob by 0.700 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.51), 'effect': 'multiply prob by 1.265 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.59), 'effect': 'multiply prob by 0.587 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.1), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.5,0.51,0.59,0.15,0.0025989424999999997,"{'timestamp': 1760866780.2121706, 'inputs': {'network_load': np.float64(0.5), 'relay_reputation': np.float64(0.51), 'budget_utilization': np.float64(0.59), 'recent_win_rate': np.float64(0.15)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0025989424999999997), 'steps': [{'feature': 'network_load', 'value': np.float64(0.5), 'effect': 'multiply prob by 0.700 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.51), 'effect': 'multiply prob by 1.265 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.59), 'effect': 'multiply prob by 0.587 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.15), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.5,0.51,0.59,0.2,0.0025989424999999997,"{'timestamp': 1760866780.2121983, 'inputs': {'network_load': np.float64(0.5), 'relay_reputation': np.float64(0.51), 'budget_utilization': np.float64(0.59), 'recent_win_rate': np.float64(0.2)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0025989424999999997), 'steps': [{'feature': 'network_load', 'value': np.float64(0.5), 'effect': 'multiply prob by 0.700 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.51), 'effect': 'multiply prob by 1.265 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.59), 'effect': 'multiply prob by 0.587 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.2), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.5,0.51,0.59,0.25,0.0025989424999999997,"{'timestamp': 1760866780.212225, 'inputs': {'network_load': np.float64(0.5), 'relay_reputation': np.float64(0.51), 'budget_utilization': np.float64(0.59), 'recent_win_rate': np.float64(0.25)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0025989424999999997), 'steps': [{'feature': 'network_load', 'value': np.float64(0.5), 'effect': 'multiply prob by 0.700 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.51), 'effect': 'multiply prob by 1.265 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.59), 'effect': 'multiply prob by 0.587 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.25), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.5,0.51,0.59,0.3,0.0025989424999999997,"{'timestamp': 1760866780.2122505, 'inputs': {'network_load': np.float64(0.5), 'relay_reputation': np.float64(0.51), 'budget_utilization': np.float64(0.59), 'recent_win_rate': np.float64(0.3)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0025989424999999997), 'steps': [{'feature': 'network_load', 'value': np.float64(0.5), 'effect': 'multiply prob by 0.700 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.51), 'effect': 'multiply prob by 1.265 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.59), 'effect': 'multiply prob by 0.587 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.3), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.5,0.51,0.69,0.0,0.004578034954219651,"{'timestamp': 1760866780.2122777, 'inputs': {'network_load': np.float64(0.5), 'relay_reputation': np.float64(0.51), 'budget_utilization': np.float64(0.69), 'recent_win_rate': 1e-09}, 'base_prob': 0.01, 'final_prob': np.float64(0.004578034954219651), 'steps': [{'feature': 'network_load', 'value': np.float64(0.5), 'effect': 'multiply prob by 0.700 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.51), 'effect': 'multiply prob by 1.265 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.69), 'effect': 'multiply prob by 0.517 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': 1e-09, 'effect': 'multiply prob by 1.000 (higher recent wins -> lower prob)'}]}"
0.5,0.51,0.69,0.05,0.0022890175000000006,"{'timestamp': 1760866780.212303, 'inputs': {'network_load': np.float64(0.5), 'relay_reputation': np.float64(0.51), 'budget_utilization': np.float64(0.69), 'recent_win_rate': np.float64(0.05)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0022890175000000006), 'steps': [{'feature': 'network_load', 'value': np.float64(0.5), 'effect': 'multiply prob by 0.700 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.51), 'effect': 'multiply prob by 1.265 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.69), 'effect': 'multiply prob by 0.517 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.05), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.5,0.51,0.69,0.1,0.0022890175000000006,"{'timestamp': 1760866780.2123303, 'inputs': {'network_load': np.float64(0.5), 'relay_reputation': np.float64(0.51), 'budget_utilization': np.float64(0.69), 'recent_win_rate': np.float64(0.1)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0022890175000000006), 'steps': [{'feature': 'network_load', 'value': np.float64(0.5), 'effect': 'multiply prob by 0.700 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.51), 'effect': 'multiply prob by 1.265 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.69), 'effect': 'multiply prob by 0.517 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.1), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.5,0.51,0.69,0.15,0.0022890175000000006,"{'timestamp': 1760866780.2123594, 'inputs': {'network_load': np.float64(0.5), 'relay_reputation': np.float64(0.51), 'budget_utilization': np.float64(0.69), 'recent_win_rate': np.float64(0.15)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0022890175000000006), 'steps': [{'feature': 'network_load', 'value': np.float64(0.5), 'effect': 'multiply prob by 0.700 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.51), 'effect': 'multiply prob by 1.265 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.69), 'effect': 'multiply prob by 0.517 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.15), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.5,0.51,0.69,0.2,0.0022890175000000006,"{'timestamp': 1760866780.2123864, 'inputs': {'network_load': np.float64(0.5), 'relay_reputation': np.float64(0.51), 'budget_utilization': np.float64(0.69), 'recent_win_rate': np.float64(0.2)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0022890175000000006), 'steps': [{'feature': 'network_load', 'value': np.float64(0.5), 'effect': 'multiply prob by 0.700 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.51), 'effect': 'multiply prob by 1.265 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.69), 'effect': 'multiply prob by 0.517 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.2), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.5,0.51,0.69,0.25,0.0022890175000000006,"{'timestamp': 1760866780.2124116, 'inputs': {'network_load': np.float64(0.5), 'relay_reputation': np.float64(0.51), 'budget_utilization': np.float64(0.69), 'recent_win_rate': np.float64(0.25)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0022890175000000006), 'steps': [{'feature': 'network_load', 'value': np.float64(0.5), 'effect': 'multiply prob by 0.700 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.51), 'effect': 'multiply prob by 1.265 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.69), 'effect': 'multiply prob by 0.517 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.25), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.5,0.51,0.69,0.3,0.0022890175000000006,"{'timestamp': 1760866780.2124383, 'inputs': {'network_load': np.float64(0.5), 'relay_reputation': np.float64(0.51), 'budget_utilization': np.float64(0.69), 'recent_win_rate': np.float64(0.3)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0022890175000000006), 'steps': [{'feature': 'network_load', 'value': np.float64(0.5), 'effect': 'multiply prob by 0.700 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.51), 'effect': 'multiply prob by 1.265 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.69), 'effect': 'multiply prob by 0.517 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.3), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.5,0.51,0.8,0.0,0.0038961999610380004,"{'timestamp': 1760866780.2124655, 'inputs': {'network_load': np.float64(0.5), 'relay_reputation': np.float64(0.51), 'budget_utilization': np.float64(0.8), 'recent_win_rate': 1e-09}, 'base_prob': 0.01, 'final_prob': np.float64(0.0038961999610380004), 'steps': [{'feature': 'network_load', 'value': np.float64(0.5), 'effect': 'multiply prob by 0.700 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.51), 'effect': 'multiply prob by 1.265 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.8), 'effect': 'multiply prob by 0.440 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': 1e-09, 'effect': 'multiply prob by 1.000 (higher recent wins -> lower prob)'}]}"
0.5,0.51,0.8,0.05,0.0019481000000000004,"{'timestamp': 1760866780.2124908, 'inputs': {'network_load': np.float64(0.5), 'relay_reputation': np.float64(0.51), 'budget_utilization': np.float64(0.8), 'recent_win_rate': np.float64(0.05)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0019481000000000004), 'steps': [{'feature': 'network_load', 'value': np.float64(0.5), 'effect': 'multiply prob by 0.700 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.51), 'effect': 'multiply prob by 1.265 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.8), 'effect': 'multiply prob by 0.440 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.05), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.5,0.51,0.8,0.1,0.0019481000000000004,"{'timestamp': 1760866780.212518, 'inputs': {'network_load': np.float64(0.5), 'relay_reputation': np.float64(0.51), 'budget_utilization': np.float64(0.8), 'recent_win_rate': np.float64(0.1)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0019481000000000004), 'steps': [{'feature': 'network_load', 'value': np.float64(0.5), 'effect': 'multiply prob by 0.700 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.51), 'effect': 'multiply prob by 1.265 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.8), 'effect': 'multiply prob by 0.440 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.1), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.5,0.51,0.8,0.15,0.0019481000000000004,"{'timestamp': 1760866780.2125444, 'inputs': {'network_load': np.float64(0.5), 'relay_reputation': np.float64(0.51), 'budget_utilization': np.float64(0.8), 'recent_win_rate': np.float64(0.15)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0019481000000000004), 'steps': [{'feature': 'network_load', 'value': np.float64(0.5), 'effect': 'multiply prob by 0.700 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.51), 'effect': 'multiply prob by 1.265 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.8), 'effect': 'multiply prob by 0.440 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.15), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.5,0.51,0.8,0.2,0.0019481000000000004,"{'timestamp': 1760866780.2125697, 'inputs': {'network_load': np.float64(0.5), 'relay_reputation': np.float64(0.51), 'budget_utilization': np.float64(0.8), 'recent_win_rate': np.float64(0.2)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0019481000000000004), 'steps': [{'feature': 'network_load', 'value': np.float64(0.5), 'effect': 'multiply prob by 0.700 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.51), 'effect': 'multiply prob by 1.265 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.8), 'effect': 'multiply prob by 0.440 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.2), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.5,0.51,0.8,0.25,0.0019481000000000004,"{'timestamp': 1760866780.2125947, 'inputs': {'network_load': np.float64(0.5), 'relay_reputation': np.float64(0.51), 'budget_utilization': np.float64(0.8), 'recent_win_rate': np.float64(0.25)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0019481000000000004), 'steps': [{'feature': 'network_load', 'value': np.float64(0.5), 'effect': 'multiply prob by 0.700 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.51), 'effect': 'multiply prob by 1.265 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.8), 'effect': 'multiply prob by 0.440 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.25), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.5,0.51,0.8,0.3,0.0019481000000000004,"{'timestamp': 1760866780.21262, 'inputs': {'network_load': np.float64(0.5), 'relay_reputation': np.float64(0.51), 'budget_utilization': np.float64(0.8), 'recent_win_rate': np.float64(0.3)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0019481000000000004), 'steps': [{'feature': 'network_load', 'value': np.float64(0.5), 'effect': 'multiply prob by 0.700 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.51), 'effect': 'multiply prob by 1.265 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.8), 'effect': 'multiply prob by 0.440 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.3), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.5,0.62,0.05,0.0,0.009659649903403497,"{'timestamp': 1760866780.2126513, 'inputs': {'network_load': np.float64(0.5), 'relay_reputation': np.float64(0.62), 'budget_utilization': np.float64(0.05), 'recent_win_rate': 1e-09}, 'base_prob': 0.01, 'final_prob': np.float64(0.009659649903403497), 'steps': [{'feature': 'network_load', 'value': np.float64(0.5), 'effect': 'multiply prob by 0.700 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.62), 'effect': 'multiply prob by 1.430 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.05), 'effect': 'multiply prob by 0.965 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': 1e-09, 'effect': 'multiply prob by 1.000 (higher recent wins -> lower prob)'}]}"
0.5,0.62,0.05,0.05,0.0048298249999999985,"{'timestamp': 1760866780.2126765, 'inputs': {'network_load': np.float64(0.5), 'relay_reputation': np.float64(0.62), 'budget_utilization': np.float64(0.05), 'recent_win_rate': np.float64(0.05)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0048298249999999985), 'steps': [{'feature': 'network_load', 'value': np.float64(0.5), 'effect': 'multiply prob by 0.700 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.62), 'effect': 'multiply prob by 1.430 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.05), 'effect': 'multiply prob by 0.965 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.05), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.5,0.62,0.05,0.1,0.0048298249999999985,"{'timestamp': 1760866780.212702, 'inputs': {'network_load': np.float64(0.5), 'relay_reputation': np.float64(0.62), 'budget_utilization': np.float64(0.05), 'recent_win_rate': np.float64(0.1)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0048298249999999985), 'steps': [{'feature': 'network_load', 'value': np.float64(0.5), 'effect': 'multiply prob by 0.700 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.62), 'effect': 'multiply prob by 1.430 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.05), 'effect': 'multiply prob by 0.965 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.1), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.5,0.62,0.05,0.15,0.0048298249999999985,"{'timestamp': 1760866780.212727, 'inputs': {'network_load': np.float64(0.5), 'relay_reputation': np.float64(0.62), 'budget_utilization': np.float64(0.05), 'recent_win_rate': np.float64(0.15)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0048298249999999985), 'steps': [{'feature': 'network_load', 'value': np.float64(0.5), 'effect': 'multiply prob by 0.700 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.62), 'effect': 'multiply prob by 1.430 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.05), 'effect': 'multiply prob by 0.965 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.15), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.5,0.62,0.05,0.2,0.0048298249999999985,"{'timestamp': 1760866780.212756, 'inputs': {'network_load': np.float64(0.5), 'relay_reputation': np.float64(0.62), 'budget_utilization': np.float64(0.05), 'recent_win_rate': np.float64(0.2)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0048298249999999985), 'steps': [{'feature': 'network_load', 'value': np.float64(0.5), 'effect': 'multiply prob by 0.700 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.62), 'effect': 'multiply prob by 1.430 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.05), 'effect': 'multiply prob by 0.965 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.2), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.5,0.62,0.05,0.25,0.0048298249999999985,"{'timestamp': 1760866780.2128296, 'inputs': {'network_load': np.float64(0.5), 'relay_reputation': np.float64(0.62), 'budget_utilization': np.float64(0.05), 'recent_win_rate': np.float64(0.25)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0048298249999999985), 'steps': [{'feature': 'network_load', 'value': np.float64(0.5), 'effect': 'multiply prob by 0.700 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.62), 'effect': 'multiply prob by 1.430 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.05), 'effect': 'multiply prob by 0.965 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.25), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.5,0.62,0.05,0.3,0.0048298249999999985,"{'timestamp': 1760866780.21287, 'inputs': {'network_load': np.float64(0.5), 'relay_reputation': np.float64(0.62), 'budget_utilization': np.float64(0.05), 'recent_win_rate': np.float64(0.3)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0048298249999999985), 'steps': [{'feature': 'network_load', 'value': np.float64(0.5), 'effect': 'multiply prob by 0.700 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.62), 'effect': 'multiply prob by 1.430 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.05), 'effect': 'multiply prob by 0.965 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.3), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.5,0.62,0.16,0.0,0.008888879911111197,"{'timestamp': 1760866780.2128994, 'inputs': {'network_load': np.float64(0.5), 'relay_reputation': np.float64(0.62), 'budget_utilization': np.float64(0.16), 'recent_win_rate': 1e-09}, 'base_prob': 0.01, 'final_prob': np.float64(0.008888879911111197), 'steps': [{'feature': 'network_load', 'value': np.float64(0.5), 'effect': 'multiply prob by 0.700 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.62), 'effect': 'multiply prob by 1.430 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.16), 'effect': 'multiply prob by 0.888 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': 1e-09, 'effect': 'multiply prob by 1.000 (higher recent wins -> lower prob)'}]}"
0.5,0.62,0.16,0.05,0.004444439999999999,"{'timestamp': 1760866780.212925, 'inputs': {'network_load': np.float64(0.5), 'relay_reputation': np.float64(0.62), 'budget_utilization': np.float64(0.16), 'recent_win_rate': np.float64(0.05)}, 'base_prob': 0.01, 'final_prob': np.float64(0.004444439999999999), 'steps': [{'feature': 'network_load', 'value': np.float64(0.5), 'effect': 'multiply prob by 0.700 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.62), 'effect': 'multiply prob by 1.430 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.16), 'effect': 'multiply prob by 0.888 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.05), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.5,0.62,0.16,0.1,0.004444439999999999,"{'timestamp': 1760866780.21295, 'inputs': {'network_load': np.float64(0.5), 'relay_reputation': np.float64(0.62), 'budget_utilization': np.float64(0.16), 'recent_win_rate': np.float64(0.1)}, 'base_prob': 0.01, 'final_prob': np.float64(0.004444439999999999), 'steps': [{'feature': 'network_load', 'value': np.float64(0.5), 'effect': 'multiply prob by 0.700 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.62), 'effect': 'multiply prob by 1.430 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.16), 'effect': 'multiply prob by 0.888 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.1), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.5,0.62,0.16,0.15,0.004444439999999999,"{'timestamp': 1760866780.2129784, 'inputs': {'network_load': np.float64(0.5), 'relay_reputation': np.float64(0.62), 'budget_utilization': np.float64(0.16), 'recent_win_rate': np.float64(0.15)}, 'base_prob': 0.01, 'final_prob': np.float64(0.004444439999999999), 'steps': [{'feature': 'network_load', 'value': np.float64(0.5), 'effect': 'multiply prob by 0.700 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.62), 'effect': 'multiply prob by 1.430 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.16), 'effect': 'multiply prob by 0.888 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.15), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.5,0.62,0.16,0.2,0.004444439999999999,"{'timestamp': 1760866780.2130055, 'inputs': {'network_load': np.float64(0.5), 'relay_reputation': np.float64(0.62), 'budget_utilization': np.float64(0.16), 'recent_win_rate': np.float64(0.2)}, 'base_prob': 0.01, 'final_prob': np.float64(0.004444439999999999), 'steps': [{'feature': 'network_load', 'value': np.float64(0.5), 'effect': 'multiply prob by 0.700 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.62), 'effect': 'multiply prob by 1.430 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.16), 'effect': 'multiply prob by 0.888 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.2), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.5,0.62,0.16,0.25,0.004444439999999999,"{'timestamp': 1760866780.2130325, 'inputs': {'network_load': np.float64(0.5), 'relay_reputation': np.float64(0.62), 'budget_utilization': np.float64(0.16), 'recent_win_rate': np.float64(0.25)}, 'base_prob': 0.01, 'final_prob': np.float64(0.004444439999999999), 'steps': [{'feature': 'network_load', 'value': np.float64(0.5), 'effect': 'multiply prob by 0.700 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.62), 'effect': 'multiply prob by 1.430 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.16), 'effect': 'multiply prob by 0.888 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.25), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.5,0.62,0.16,0.3,0.004444439999999999,"{'timestamp': 1760866780.2130575, 'inputs': {'network_load': np.float64(0.5), 'relay_reputation': np.float64(0.62), 'budget_utilization': np.float64(0.16), 'recent_win_rate': np.float64(0.3)}, 'base_prob': 0.01, 'final_prob': np.float64(0.004444439999999999), 'steps': [{'feature': 'network_load', 'value': np.float64(0.5), 'effect': 'multiply prob by 0.700 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.62), 'effect': 'multiply prob by 1.430 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.16), 'effect': 'multiply prob by 0.888 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.3), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.5,0.62,0.26,0.0,0.0081881799181182,"{'timestamp': 1760866780.2130845, 'inputs': {'network_load': np.float64(0.5), 'relay_reputation': np.float64(0.62), 'budget_utilization': np.float64(0.26), 'recent_win_rate': 1e-09}, 'base_prob': 0.01, 'final_prob': np.float64(0.0081881799181182), 'steps': [{'feature': 'network_load', 'value': np.float64(0.5), 'effect': 'multiply prob by 0.700 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.62), 'effect': 'multiply prob by 1.430 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.26), 'effect': 'multiply prob by 0.818 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': 1e-09, 'effect': 'multiply prob by 1.000 (higher recent wins -> lower prob)'}]}"
0.5,0.62,0.26,0.05,0.00409409,"{'timestamp': 1760866780.2131097, 'inputs': {'network_load': np.float64(0.5), 'relay_reputation': np.float64(0.62), 'budget_utilization': np.float64(0.26), 'recent_win_rate': np.float64(0.05)}, 'base_prob': 0.01, 'final_prob': np.float64(0.00409409), 'steps': [{'feature': 'network_load', 'value': np.float64(0.5), 'effect': 'multiply prob by 0.700 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.62), 'effect': 'multiply prob by 1.430 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.26), 'effect': 'multiply prob by 0.818 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.05), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.5,0.62,0.26,0.1,0.00409409,"{'timestamp': 1760866780.213137, 'inputs': {'network_load': np.float64(0.5), 'relay_reputation': np.float64(0.62), 'budget_utilization': np.float64(0.26), 'recent_win_rate': np.float64(0.1)}, 'base_prob': 0.01, 'final_prob': np.float64(0.00409409), 'steps': [{'feature': 'network_load', 'value': np.float64(0.5), 'effect': 'multiply prob by 0.700 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.62), 'effect': 'multiply prob by 1.430 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.26), 'effect': 'multiply prob by 0.818 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.1), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.5,0.62,0.26,0.15,0.00409409,"{'timestamp': 1760866780.213162, 'inputs': {'network_load': np.float64(0.5), 'relay_reputation': np.float64(0.62), 'budget_utilization': np.float64(0.26), 'recent_win_rate': np.float64(0.15)}, 'base_prob': 0.01, 'final_prob': np.float64(0.00409409), 'steps': [{'feature': 'network_load', 'value': np.float64(0.5), 'effect': 'multiply prob by 0.700 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.62), 'effect': 'multiply prob by 1.430 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.26), 'effect': 'multiply prob by 0.818 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.15), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.5,0.62,0.26,0.2,0.00409409,"{'timestamp': 1760866780.2132614, 'inputs': {'network_load': np.float64(0.5), 'relay_reputation': np.float64(0.62), 'budget_utilization': np.float64(0.26), 'recent_win_rate': np.float64(0.2)}, 'base_prob': 0.01, 'final_prob': np.float64(0.00409409), 'steps': [{'feature': 'network_load', 'value': np.float64(0.5), 'effect': 'multiply prob by 0.700 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.62), 'effect': 'multiply prob by 1.430 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.26), 'effect': 'multiply prob by 0.818 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.2), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.5,0.62,0.26,0.25,0.00409409,"{'timestamp': 1760866780.213304, 'inputs': {'network_load': np.float64(0.5), 'relay_reputation': np.float64(0.62), 'budget_utilization': np.float64(0.26), 'recent_win_rate': np.float64(0.25)}, 'base_prob': 0.01, 'final_prob': np.float64(0.00409409), 'steps': [{'feature': 'network_load', 'value': np.float64(0.5), 'effect': 'multiply prob by 0.700 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.62), 'effect': 'multiply prob by 1.430 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.26), 'effect': 'multiply prob by 0.818 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.25), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.5,0.62,0.26,0.3,0.00409409,"{'timestamp': 1760866780.213332, 'inputs': {'network_load': np.float64(0.5), 'relay_reputation': np.float64(0.62), 'budget_utilization': np.float64(0.26), 'recent_win_rate': np.float64(0.3)}, 'base_prob': 0.01, 'final_prob': np.float64(0.00409409), 'steps': [{'feature': 'network_load', 'value': np.float64(0.5), 'effect': 'multiply prob by 0.700 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.62), 'effect': 'multiply prob by 1.430 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.26), 'effect': 'multiply prob by 0.818 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.3), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.5,0.62,0.37,0.0,0.007417409925825898,"{'timestamp': 1760866780.2133644, 'inputs': {'network_load': np.float64(0.5), 'relay_reputation': np.float64(0.62), 'budget_utilization': np.float64(0.37), 'recent_win_rate': 1e-09}, 'base_prob': 0.01, 'final_prob': np.float64(0.007417409925825898), 'steps': [{'feature': 'network_load', 'value': np.float64(0.5), 'effect': 'multiply prob by 0.700 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.62), 'effect': 'multiply prob by 1.430 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.37), 'effect': 'multiply prob by 0.741 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': 1e-09, 'effect': 'multiply prob by 1.000 (higher recent wins -> lower prob)'}]}"
0.5,0.62,0.37,0.05,0.003708704999999999,"{'timestamp': 1760866780.21339, 'inputs': {'network_load': np.float64(0.5), 'relay_reputation': np.float64(0.62), 'budget_utilization': np.float64(0.37), 'recent_win_rate': np.float64(0.05)}, 'base_prob': 0.01, 'final_prob': np.float64(0.003708704999999999), 'steps': [{'feature': 'network_load', 'value': np.float64(0.5), 'effect': 'multiply prob by 0.700 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.62), 'effect': 'multiply prob by 1.430 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.37), 'effect': 'multiply prob by 0.741 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.05), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.5,0.62,0.37,0.1,0.003708704999999999,"{'timestamp': 1760866780.2134154, 'inputs': {'network_load': np.float64(0.5), 'relay_reputation': np.float64(0.62), 'budget_utilization': np.float64(0.37), 'recent_win_rate': np.float64(0.1)}, 'base_prob': 0.01, 'final_prob': np.float64(0.003708704999999999), 'steps': [{'feature': 'network_load', 'value': np.float64(0.5), 'effect': 'multiply prob by 0.700 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.62), 'effect': 'multiply prob by 1.430 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.37), 'effect': 'multiply prob by 0.741 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.1), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.5,0.62,0.37,0.15,0.003708704999999999,"{'timestamp': 1760866780.2134404, 'inputs': {'network_load': np.float64(0.5), 'relay_reputation': np.float64(0.62), 'budget_utilization': np.float64(0.37), 'recent_win_rate': np.float64(0.15)}, 'base_prob': 0.01, 'final_prob': np.float64(0.003708704999999999), 'steps': [{'feature': 'network_load', 'value': np.float64(0.5), 'effect': 'multiply prob by 0.700 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.62), 'effect': 'multiply prob by 1.430 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.37), 'effect': 'multiply prob by 0.741 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.15), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.5,0.62,0.37,0.2,0.003708704999999999,"{'timestamp': 1760866780.2134676, 'inputs': {'network_load': np.float64(0.5), 'relay_reputation': np.float64(0.62), 'budget_utilization': np.float64(0.37), 'recent_win_rate': np.float64(0.2)}, 'base_prob': 0.01, 'final_prob': np.float64(0.003708704999999999), 'steps': [{'feature': 'network_load', 'value': np.float64(0.5), 'effect': 'multiply prob by 0.700 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.62), 'effect': 'multiply prob by 1.430 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.37), 'effect': 'multiply prob by 0.741 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.2), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.5,0.62,0.37,0.25,0.003708704999999999,"{'timestamp': 1760866780.2134926, 'inputs': {'network_load': np.float64(0.5), 'relay_reputation': np.float64(0.62), 'budget_utilization': np.float64(0.37), 'recent_win_rate': np.float64(0.25)}, 'base_prob': 0.01, 'final_prob': np.float64(0.003708704999999999), 'steps': [{'feature': 'network_load', 'value': np.float64(0.5), 'effect': 'multiply prob by 0.700 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.62), 'effect': 'multiply prob by 1.430 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.37), 'effect': 'multiply prob by 0.741 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.25), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.5,0.62,0.37,0.3,0.003708704999999999,"{'timestamp': 1760866780.2135196, 'inputs': {'network_load': np.float64(0.5), 'relay_reputation': np.float64(0.62), 'budget_utilization': np.float64(0.37), 'recent_win_rate': np.float64(0.3)}, 'base_prob': 0.01, 'final_prob': np.float64(0.003708704999999999), 'steps': [{'feature': 'network_load', 'value': np.float64(0.5), 'effect': 'multiply prob by 0.700 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.62), 'effect': 'multiply prob by 1.430 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.37), 'effect': 'multiply prob by 0.741 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.3), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.5,0.62,0.48,0.0,0.006646639933533599,"{'timestamp': 1760866780.21355, 'inputs': {'network_load': np.float64(0.5), 'relay_reputation': np.float64(0.62), 'budget_utilization': np.float64(0.48), 'recent_win_rate': 1e-09}, 'base_prob': 0.01, 'final_prob': np.float64(0.006646639933533599), 'steps': [{'feature': 'network_load', 'value': np.float64(0.5), 'effect': 'multiply prob by 0.700 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.62), 'effect': 'multiply prob by 1.430 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.48), 'effect': 'multiply prob by 0.664 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': 1e-09, 'effect': 'multiply prob by 1.000 (higher recent wins -> lower prob)'}]}"
0.5,0.62,0.48,0.05,0.0033233199999999994,"{'timestamp': 1760866780.2135754, 'inputs': {'network_load': np.float64(0.5), 'relay_reputation': np.float64(0.62), 'budget_utilization': np.float64(0.48), 'recent_win_rate': np.float64(0.05)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0033233199999999994), 'steps': [{'feature': 'network_load', 'value': np.float64(0.5), 'effect': 'multiply prob by 0.700 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.62), 'effect': 'multiply prob by 1.430 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.48), 'effect': 'multiply prob by 0.664 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.05), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.5,0.62,0.48,0.1,0.0033233199999999994,"{'timestamp': 1760866780.2136004, 'inputs': {'network_load': np.float64(0.5), 'relay_reputation': np.float64(0.62), 'budget_utilization': np.float64(0.48), 'recent_win_rate': np.float64(0.1)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0033233199999999994), 'steps': [{'feature': 'network_load', 'value': np.float64(0.5), 'effect': 'multiply prob by 0.700 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.62), 'effect': 'multiply prob by 1.430 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.48), 'effect': 'multiply prob by 0.664 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.1), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.5,0.62,0.48,0.15,0.0033233199999999994,"{'timestamp': 1760866780.2136257, 'inputs': {'network_load': np.float64(0.5), 'relay_reputation': np.float64(0.62), 'budget_utilization': np.float64(0.48), 'recent_win_rate': np.float64(0.15)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0033233199999999994), 'steps': [{'feature': 'network_load', 'value': np.float64(0.5), 'effect': 'multiply prob by 0.700 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.62), 'effect': 'multiply prob by 1.430 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.48), 'effect': 'multiply prob by 0.664 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.15), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.5,0.62,0.48,0.2,0.0033233199999999994,"{'timestamp': 1760866780.2136528, 'inputs': {'network_load': np.float64(0.5), 'relay_reputation': np.float64(0.62), 'budget_utilization': np.float64(0.48), 'recent_win_rate': np.float64(0.2)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0033233199999999994), 'steps': [{'feature': 'network_load', 'value': np.float64(0.5), 'effect': 'multiply prob by 0.700 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.62), 'effect': 'multiply prob by 1.430 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.48), 'effect': 'multiply prob by 0.664 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.2), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.5,0.62,0.48,0.25,0.0033233199999999994,"{'timestamp': 1760866780.213678, 'inputs': {'network_load': np.float64(0.5), 'relay_reputation': np.float64(0.62), 'budget_utilization': np.float64(0.48), 'recent_win_rate': np.float64(0.25)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0033233199999999994), 'steps': [{'feature': 'network_load', 'value': np.float64(0.5), 'effect': 'multiply prob by 0.700 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.62), 'effect': 'multiply prob by 1.430 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.48), 'effect': 'multiply prob by 0.664 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.25), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.5,0.62,0.48,0.3,0.0033233199999999994,"{'timestamp': 1760866780.213703, 'inputs': {'network_load': np.float64(0.5), 'relay_reputation': np.float64(0.62), 'budget_utilization': np.float64(0.48), 'recent_win_rate': np.float64(0.3)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0033233199999999994), 'steps': [{'feature': 'network_load', 'value': np.float64(0.5), 'effect': 'multiply prob by 0.700 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.62), 'effect': 'multiply prob by 1.430 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.48), 'effect': 'multiply prob by 0.664 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.3), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.5,0.62,0.59,0.0,0.005875869941241298,"{'timestamp': 1760866780.2137296, 'inputs': {'network_load': np.float64(0.5), 'relay_reputation': np.float64(0.62), 'budget_utilization': np.float64(0.59), 'recent_win_rate': 1e-09}, 'base_prob': 0.01, 'final_prob': np.float64(0.005875869941241298), 'steps': [{'feature': 'network_load', 'value': np.float64(0.5), 'effect': 'multiply prob by 0.700 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.62), 'effect': 'multiply prob by 1.430 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.59), 'effect': 'multiply prob by 0.587 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': 1e-09, 'effect': 'multiply prob by 1.000 (higher recent wins -> lower prob)'}]}"
0.5,0.62,0.59,0.05,0.002937934999999999,"{'timestamp': 1760866780.2137566, 'inputs': {'network_load': np.float64(0.5), 'relay_reputation': np.float64(0.62), 'budget_utilization': np.float64(0.59), 'recent_win_rate': np.float64(0.05)}, 'base_prob': 0.01, 'final_prob': np.float64(0.002937934999999999), 'steps': [{'feature': 'network_load', 'value': np.float64(0.5), 'effect': 'multiply prob by 0.700 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.62), 'effect': 'multiply prob by 1.430 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.59), 'effect': 'multiply prob by 0.587 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.05), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.5,0.62,0.59,0.1,0.002937934999999999,"{'timestamp': 1760866780.213829, 'inputs': {'network_load': np.float64(0.5), 'relay_reputation': np.float64(0.62), 'budget_utilization': np.float64(0.59), 'recent_win_rate': np.float64(0.1)}, 'base_prob': 0.01, 'final_prob': np.float64(0.002937934999999999), 'steps': [{'feature': 'network_load', 'value': np.float64(0.5), 'effect': 'multiply prob by 0.700 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.62), 'effect': 'multiply prob by 1.430 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.59), 'effect': 'multiply prob by 0.587 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.1), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.5,0.62,0.59,0.15,0.002937934999999999,"{'timestamp': 1760866780.2138672, 'inputs': {'network_load': np.float64(0.5), 'relay_reputation': np.float64(0.62), 'budget_utilization': np.float64(0.59), 'recent_win_rate': np.float64(0.15)}, 'base_prob': 0.01, 'final_prob': np.float64(0.002937934999999999), 'steps': [{'feature': 'network_load', 'value': np.float64(0.5), 'effect': 'multiply prob by 0.700 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.62), 'effect': 'multiply prob by 1.430 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.59), 'effect': 'multiply prob by 0.587 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.15), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.5,0.62,0.59,0.2,0.002937934999999999,"{'timestamp': 1760866780.2138965, 'inputs': {'network_load': np.float64(0.5), 'relay_reputation': np.float64(0.62), 'budget_utilization': np.float64(0.59), 'recent_win_rate': np.float64(0.2)}, 'base_prob': 0.01, 'final_prob': np.float64(0.002937934999999999), 'steps': [{'feature': 'network_load', 'value': np.float64(0.5), 'effect': 'multiply prob by 0.700 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.62), 'effect': 'multiply prob by 1.430 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.59), 'effect': 'multiply prob by 0.587 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.2), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.5,0.62,0.59,0.25,0.002937934999999999,"{'timestamp': 1760866780.2139218, 'inputs': {'network_load': np.float64(0.5), 'relay_reputation': np.float64(0.62), 'budget_utilization': np.float64(0.59), 'recent_win_rate': np.float64(0.25)}, 'base_prob': 0.01, 'final_prob': np.float64(0.002937934999999999), 'steps': [{'feature': 'network_load', 'value': np.float64(0.5), 'effect': 'multiply prob by 0.700 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.62), 'effect': 'multiply prob by 1.430 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.59), 'effect': 'multiply prob by 0.587 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.25), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.5,0.62,0.59,0.3,0.002937934999999999,"{'timestamp': 1760866780.213947, 'inputs': {'network_load': np.float64(0.5), 'relay_reputation': np.float64(0.62), 'budget_utilization': np.float64(0.59), 'recent_win_rate': np.float64(0.3)}, 'base_prob': 0.01, 'final_prob': np.float64(0.002937934999999999), 'steps': [{'feature': 'network_load', 'value': np.float64(0.5), 'effect': 'multiply prob by 0.700 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.62), 'effect': 'multiply prob by 1.430 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.59), 'effect': 'multiply prob by 0.587 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.3), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.5,0.62,0.69,0.0,0.0051751699482483005,"{'timestamp': 1760866780.2139888, 'inputs': {'network_load': np.float64(0.5), 'relay_reputation': np.float64(0.62), 'budget_utilization': np.float64(0.69), 'recent_win_rate': 1e-09}, 'base_prob': 0.01, 'final_prob': np.float64(0.0051751699482483005), 'steps': [{'feature': 'network_load', 'value': np.float64(0.5), 'effect': 'multiply prob by 0.700 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.62), 'effect': 'multiply prob by 1.430 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.69), 'effect': 'multiply prob by 0.517 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': 1e-09, 'effect': 'multiply prob by 1.000 (higher recent wins -> lower prob)'}]}"
0.5,0.62,0.69,0.05,0.0025875850000000003,"{'timestamp': 1760866780.2140167, 'inputs': {'network_load': np.float64(0.5), 'relay_reputation': np.float64(0.62), 'budget_utilization': np.float64(0.69), 'recent_win_rate': np.float64(0.05)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0025875850000000003), 'steps': [{'feature': 'network_load', 'value': np.float64(0.5), 'effect': 'multiply prob by 0.700 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.62), 'effect': 'multiply prob by 1.430 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.69), 'effect': 'multiply prob by 0.517 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.05), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.5,0.62,0.69,0.1,0.0025875850000000003,"{'timestamp': 1760866780.2140439, 'inputs': {'network_load': np.float64(0.5), 'relay_reputation': np.float64(0.62), 'budget_utilization': np.float64(0.69), 'recent_win_rate': np.float64(0.1)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0025875850000000003), 'steps': [{'feature': 'network_load', 'value': np.float64(0.5), 'effect': 'multiply prob by 0.700 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.62), 'effect': 'multiply prob by 1.430 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.69), 'effect': 'multiply prob by 0.517 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.1), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.5,0.62,0.69,0.15,0.0025875850000000003,"{'timestamp': 1760866780.214069, 'inputs': {'network_load': np.float64(0.5), 'relay_reputation': np.float64(0.62), 'budget_utilization': np.float64(0.69), 'recent_win_rate': np.float64(0.15)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0025875850000000003), 'steps': [{'feature': 'network_load', 'value': np.float64(0.5), 'effect': 'multiply prob by 0.700 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.62), 'effect': 'multiply prob by 1.430 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.69), 'effect': 'multiply prob by 0.517 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.15), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.5,0.62,0.69,0.2,0.0025875850000000003,"{'timestamp': 1760866780.2140996, 'inputs': {'network_load': np.float64(0.5), 'relay_reputation': np.float64(0.62), 'budget_utilization': np.float64(0.69), 'recent_win_rate': np.float64(0.2)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0025875850000000003), 'steps': [{'feature': 'network_load', 'value': np.float64(0.5), 'effect': 'multiply prob by 0.700 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.62), 'effect': 'multiply prob by 1.430 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.69), 'effect': 'multiply prob by 0.517 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.2), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.5,0.62,0.69,0.25,0.0025875850000000003,"{'timestamp': 1760866780.214125, 'inputs': {'network_load': np.float64(0.5), 'relay_reputation': np.float64(0.62), 'budget_utilization': np.float64(0.69), 'recent_win_rate': np.float64(0.25)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0025875850000000003), 'steps': [{'feature': 'network_load', 'value': np.float64(0.5), 'effect': 'multiply prob by 0.700 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.62), 'effect': 'multiply prob by 1.430 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.69), 'effect': 'multiply prob by 0.517 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.25), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.5,0.62,0.69,0.3,0.0025875850000000003,"{'timestamp': 1760866780.2141516, 'inputs': {'network_load': np.float64(0.5), 'relay_reputation': np.float64(0.62), 'budget_utilization': np.float64(0.69), 'recent_win_rate': np.float64(0.3)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0025875850000000003), 'steps': [{'feature': 'network_load', 'value': np.float64(0.5), 'effect': 'multiply prob by 0.700 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.62), 'effect': 'multiply prob by 1.430 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.69), 'effect': 'multiply prob by 0.517 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.3), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.5,0.62,0.8,0.0,0.004404399955956,"{'timestamp': 1760866780.2141786, 'inputs': {'network_load': np.float64(0.5), 'relay_reputation': np.float64(0.62), 'budget_utilization': np.float64(0.8), 'recent_win_rate': 1e-09}, 'base_prob': 0.01, 'final_prob': np.float64(0.004404399955956), 'steps': [{'feature': 'network_load', 'value': np.float64(0.5), 'effect': 'multiply prob by 0.700 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.62), 'effect': 'multiply prob by 1.430 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.8), 'effect': 'multiply prob by 0.440 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': 1e-09, 'effect': 'multiply prob by 1.000 (higher recent wins -> lower prob)'}]}"
0.5,0.62,0.8,0.05,0.0022022,"{'timestamp': 1760866780.2142038, 'inputs': {'network_load': np.float64(0.5), 'relay_reputation': np.float64(0.62), 'budget_utilization': np.float64(0.8), 'recent_win_rate': np.float64(0.05)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0022022), 'steps': [{'feature': 'network_load', 'value': np.float64(0.5), 'effect': 'multiply prob by 0.700 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.62), 'effect': 'multiply prob by 1.430 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.8), 'effect': 'multiply prob by 0.440 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.05), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.5,0.62,0.8,0.1,0.0022022,"{'timestamp': 1760866780.2142293, 'inputs': {'network_load': np.float64(0.5), 'relay_reputation': np.float64(0.62), 'budget_utilization': np.float64(0.8), 'recent_win_rate': np.float64(0.1)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0022022), 'steps': [{'feature': 'network_load', 'value': np.float64(0.5), 'effect': 'multiply prob by 0.700 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.62), 'effect': 'multiply prob by 1.430 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.8), 'effect': 'multiply prob by 0.440 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.1), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.5,0.62,0.8,0.15,0.0022022,"{'timestamp': 1760866780.2142563, 'inputs': {'network_load': np.float64(0.5), 'relay_reputation': np.float64(0.62), 'budget_utilization': np.float64(0.8), 'recent_win_rate': np.float64(0.15)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0022022), 'steps': [{'feature': 'network_load', 'value': np.float64(0.5), 'effect': 'multiply prob by 0.700 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.62), 'effect': 'multiply prob by 1.430 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.8), 'effect': 'multiply prob by 0.440 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.15), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.5,0.62,0.8,0.2,0.0022022,"{'timestamp': 1760866780.2142851, 'inputs': {'network_load': np.float64(0.5), 'relay_reputation': np.float64(0.62), 'budget_utilization': np.float64(0.8), 'recent_win_rate': np.float64(0.2)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0022022), 'steps': [{'feature': 'network_load', 'value': np.float64(0.5), 'effect': 'multiply prob by 0.700 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.62), 'effect': 'multiply prob by 1.430 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.8), 'effect': 'multiply prob by 0.440 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.2), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.5,0.62,0.8,0.25,0.0022022,"{'timestamp': 1760866780.2143104, 'inputs': {'network_load': np.float64(0.5), 'relay_reputation': np.float64(0.62), 'budget_utilization': np.float64(0.8), 'recent_win_rate': np.float64(0.25)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0022022), 'steps': [{'feature': 'network_load', 'value': np.float64(0.5), 'effect': 'multiply prob by 0.700 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.62), 'effect': 'multiply prob by 1.430 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.8), 'effect': 'multiply prob by 0.440 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.25), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.5,0.62,0.8,0.3,0.0022022,"{'timestamp': 1760866780.214336, 'inputs': {'network_load': np.float64(0.5), 'relay_reputation': np.float64(0.62), 'budget_utilization': np.float64(0.8), 'recent_win_rate': np.float64(0.3)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0022022), 'steps': [{'feature': 'network_load', 'value': np.float64(0.5), 'effect': 'multiply prob by 0.700 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.62), 'effect': 'multiply prob by 1.430 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.8), 'effect': 'multiply prob by 0.440 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.3), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.5,0.73,0.05,0.0,0.010774224892257748,"{'timestamp': 1760866780.2143636, 'inputs': {'network_load': np.float64(0.5), 'relay_reputation': np.float64(0.73), 'budget_utilization': np.float64(0.05), 'recent_win_rate': 1e-09}, 'base_prob': 0.01, 'final_prob': np.float64(0.010774224892257748), 'steps': [{'feature': 'network_load', 'value': np.float64(0.5), 'effect': 'multiply prob by 0.700 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.73), 'effect': 'multiply prob by 1.595 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.05), 'effect': 'multiply prob by 0.965 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': 1e-09, 'effect': 'multiply prob by 1.000 (higher recent wins -> lower prob)'}]}"
0.5,0.73,0.05,0.05,0.005387112499999999,"{'timestamp': 1760866780.214389, 'inputs': {'network_load': np.float64(0.5), 'relay_reputation': np.float64(0.73), 'budget_utilization': np.float64(0.05), 'recent_win_rate': np.float64(0.05)}, 'base_prob': 0.01, 'final_prob': np.float64(0.005387112499999999), 'steps': [{'feature': 'network_load', 'value': np.float64(0.5), 'effect': 'multiply prob by 0.700 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.73), 'effect': 'multiply prob by 1.595 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.05), 'effect': 'multiply prob by 0.965 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.05), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.5,0.73,0.05,0.1,0.005387112499999999,"{'timestamp': 1760866780.214418, 'inputs': {'network_load': np.float64(0.5), 'relay_reputation': np.float64(0.73), 'budget_utilization': np.float64(0.05), 'recent_win_rate': np.float64(0.1)}, 'base_prob': 0.01, 'final_prob': np.float64(0.005387112499999999), 'steps': [{'feature': 'network_load', 'value': np.float64(0.5), 'effect': 'multiply prob by 0.700 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.73), 'effect': 'multiply prob by 1.595 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.05), 'effect': 'multiply prob by 0.965 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.1), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.5,0.73,0.05,0.15,0.005387112499999999,"{'timestamp': 1760866780.2144432, 'inputs': {'network_load': np.float64(0.5), 'relay_reputation': np.float64(0.73), 'budget_utilization': np.float64(0.05), 'recent_win_rate': np.float64(0.15)}, 'base_prob': 0.01, 'final_prob': np.float64(0.005387112499999999), 'steps': [{'feature': 'network_load', 'value': np.float64(0.5), 'effect': 'multiply prob by 0.700 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.73), 'effect': 'multiply prob by 1.595 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.05), 'effect': 'multiply prob by 0.965 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.15), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.5,0.73,0.05,0.2,0.005387112499999999,"{'timestamp': 1760866780.2144704, 'inputs': {'network_load': np.float64(0.5), 'relay_reputation': np.float64(0.73), 'budget_utilization': np.float64(0.05), 'recent_win_rate': np.float64(0.2)}, 'base_prob': 0.01, 'final_prob': np.float64(0.005387112499999999), 'steps': [{'feature': 'network_load', 'value': np.float64(0.5), 'effect': 'multiply prob by 0.700 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.73), 'effect': 'multiply prob by 1.595 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.05), 'effect': 'multiply prob by 0.965 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.2), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.5,0.73,0.05,0.25,0.005387112499999999,"{'timestamp': 1760866780.2144954, 'inputs': {'network_load': np.float64(0.5), 'relay_reputation': np.float64(0.73), 'budget_utilization': np.float64(0.05), 'recent_win_rate': np.float64(0.25)}, 'base_prob': 0.01, 'final_prob': np.float64(0.005387112499999999), 'steps': [{'feature': 'network_load', 'value': np.float64(0.5), 'effect': 'multiply prob by 0.700 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.73), 'effect': 'multiply prob by 1.595 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.05), 'effect': 'multiply prob by 0.965 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.25), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.5,0.73,0.05,0.3,0.005387112499999999,"{'timestamp': 1760866780.2145207, 'inputs': {'network_load': np.float64(0.5), 'relay_reputation': np.float64(0.73), 'budget_utilization': np.float64(0.05), 'recent_win_rate': np.float64(0.3)}, 'base_prob': 0.01, 'final_prob': np.float64(0.005387112499999999), 'steps': [{'feature': 'network_load', 'value': np.float64(0.5), 'effect': 'multiply prob by 0.700 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.73), 'effect': 'multiply prob by 1.595 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.05), 'effect': 'multiply prob by 0.965 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.3), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.5,0.73,0.16,0.0,0.009914519900854797,"{'timestamp': 1760866780.2145472, 'inputs': {'network_load': np.float64(0.5), 'relay_reputation': np.float64(0.73), 'budget_utilization': np.float64(0.16), 'recent_win_rate': 1e-09}, 'base_prob': 0.01, 'final_prob': np.float64(0.009914519900854797), 'steps': [{'feature': 'network_load', 'value': np.float64(0.5), 'effect': 'multiply prob by 0.700 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.73), 'effect': 'multiply prob by 1.595 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.16), 'effect': 'multiply prob by 0.888 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': 1e-09, 'effect': 'multiply prob by 1.000 (higher recent wins -> lower prob)'}]}"
0.5,0.73,0.16,0.05,0.004957259999999999,"{'timestamp': 1760866780.2145765, 'inputs': {'network_load': np.float64(0.5), 'relay_reputation': np.float64(0.73), 'budget_utilization': np.float64(0.16), 'recent_win_rate': np.float64(0.05)}, 'base_prob': 0.01, 'final_prob': np.float64(0.004957259999999999), 'steps': [{'feature': 'network_load', 'value': np.float64(0.5), 'effect': 'multiply prob by 0.700 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.73), 'effect': 'multiply prob by 1.595 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.16), 'effect': 'multiply prob by 0.888 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.05), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.5,0.73,0.16,0.1,0.004957259999999999,"{'timestamp': 1760866780.2146015, 'inputs': {'network_load': np.float64(0.5), 'relay_reputation': np.float64(0.73), 'budget_utilization': np.float64(0.16), 'recent_win_rate': np.float64(0.1)}, 'base_prob': 0.01, 'final_prob': np.float64(0.004957259999999999), 'steps': [{'feature': 'network_load', 'value': np.float64(0.5), 'effect': 'multiply prob by 0.700 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.73), 'effect': 'multiply prob by 1.595 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.16), 'effect': 'multiply prob by 0.888 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.1), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.5,0.73,0.16,0.15,0.004957259999999999,"{'timestamp': 1760866780.2146268, 'inputs': {'network_load': np.float64(0.5), 'relay_reputation': np.float64(0.73), 'budget_utilization': np.float64(0.16), 'recent_win_rate': np.float64(0.15)}, 'base_prob': 0.01, 'final_prob': np.float64(0.004957259999999999), 'steps': [{'feature': 'network_load', 'value': np.float64(0.5), 'effect': 'multiply prob by 0.700 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.73), 'effect': 'multiply prob by 1.595 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.16), 'effect': 'multiply prob by 0.888 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.15), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.5,0.73,0.16,0.2,0.004957259999999999,"{'timestamp': 1760866780.2146518, 'inputs': {'network_load': np.float64(0.5), 'relay_reputation': np.float64(0.73), 'budget_utilization': np.float64(0.16), 'recent_win_rate': np.float64(0.2)}, 'base_prob': 0.01, 'final_prob': np.float64(0.004957259999999999), 'steps': [{'feature': 'network_load', 'value': np.float64(0.5), 'effect': 'multiply prob by 0.700 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.73), 'effect': 'multiply prob by 1.595 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.16), 'effect': 'multiply prob by 0.888 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.2), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.5,0.73,0.16,0.25,0.004957259999999999,"{'timestamp': 1760866780.2147355, 'inputs': {'network_load': np.float64(0.5), 'relay_reputation': np.float64(0.73), 'budget_utilization': np.float64(0.16), 'recent_win_rate': np.float64(0.25)}, 'base_prob': 0.01, 'final_prob': np.float64(0.004957259999999999), 'steps': [{'feature': 'network_load', 'value': np.float64(0.5), 'effect': 'multiply prob by 0.700 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.73), 'effect': 'multiply prob by 1.595 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.16), 'effect': 'multiply prob by 0.888 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.25), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.5,0.73,0.16,0.3,0.004957259999999999,"{'timestamp': 1760866780.2147672, 'inputs': {'network_load': np.float64(0.5), 'relay_reputation': np.float64(0.73), 'budget_utilization': np.float64(0.16), 'recent_win_rate': np.float64(0.3)}, 'base_prob': 0.01, 'final_prob': np.float64(0.004957259999999999), 'steps': [{'feature': 'network_load', 'value': np.float64(0.5), 'effect': 'multiply prob by 0.700 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.73), 'effect': 'multiply prob by 1.595 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.16), 'effect': 'multiply prob by 0.888 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.3), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.5,0.73,0.26,0.0,0.009132969908670298,"{'timestamp': 1760866780.2147965, 'inputs': {'network_load': np.float64(0.5), 'relay_reputation': np.float64(0.73), 'budget_utilization': np.float64(0.26), 'recent_win_rate': 1e-09}, 'base_prob': 0.01, 'final_prob': np.float64(0.009132969908670298), 'steps': [{'feature': 'network_load', 'value': np.float64(0.5), 'effect': 'multiply prob by 0.700 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.73), 'effect': 'multiply prob by 1.595 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.26), 'effect': 'multiply prob by 0.818 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': 1e-09, 'effect': 'multiply prob by 1.000 (higher recent wins -> lower prob)'}]}"
0.5,0.73,0.26,0.05,0.0045664849999999995,"{'timestamp': 1760866780.2148218, 'inputs': {'network_load': np.float64(0.5), 'relay_reputation': np.float64(0.73), 'budget_utilization': np.float64(0.26), 'recent_win_rate': np.float64(0.05)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0045664849999999995), 'steps': [{'feature': 'network_load', 'value': np.float64(0.5), 'effect': 'multiply prob by 0.700 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.73), 'effect': 'multiply prob by 1.595 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.26), 'effect': 'multiply prob by 0.818 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.05), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.5,0.73,0.26,0.1,0.0045664849999999995,"{'timestamp': 1760866780.214847, 'inputs': {'network_load': np.float64(0.5), 'relay_reputation': np.float64(0.73), 'budget_utilization': np.float64(0.26), 'recent_win_rate': np.float64(0.1)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0045664849999999995), 'steps': [{'feature': 'network_load', 'value': np.float64(0.5), 'effect': 'multiply prob by 0.700 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.73), 'effect': 'multiply prob by 1.595 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.26), 'effect': 'multiply prob by 0.818 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.1), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.5,0.73,0.26,0.15,0.0045664849999999995,"{'timestamp': 1760866780.2148721, 'inputs': {'network_load': np.float64(0.5), 'relay_reputation': np.float64(0.73), 'budget_utilization': np.float64(0.26), 'recent_win_rate': np.float64(0.15)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0045664849999999995), 'steps': [{'feature': 'network_load', 'value': np.float64(0.5), 'effect': 'multiply prob by 0.700 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.73), 'effect': 'multiply prob by 1.595 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.26), 'effect': 'multiply prob by 0.818 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.15), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.5,0.73,0.26,0.2,0.0045664849999999995,"{'timestamp': 1760866780.214901, 'inputs': {'network_load': np.float64(0.5), 'relay_reputation': np.float64(0.73), 'budget_utilization': np.float64(0.26), 'recent_win_rate': np.float64(0.2)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0045664849999999995), 'steps': [{'feature': 'network_load', 'value': np.float64(0.5), 'effect': 'multiply prob by 0.700 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.73), 'effect': 'multiply prob by 1.595 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.26), 'effect': 'multiply prob by 0.818 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.2), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.5,0.73,0.26,0.25,0.0045664849999999995,"{'timestamp': 1760866780.214928, 'inputs': {'network_load': np.float64(0.5), 'relay_reputation': np.float64(0.73), 'budget_utilization': np.float64(0.26), 'recent_win_rate': np.float64(0.25)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0045664849999999995), 'steps': [{'feature': 'network_load', 'value': np.float64(0.5), 'effect': 'multiply prob by 0.700 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.73), 'effect': 'multiply prob by 1.595 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.26), 'effect': 'multiply prob by 0.818 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.25), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.5,0.73,0.26,0.3,0.0045664849999999995,"{'timestamp': 1760866780.2149532, 'inputs': {'network_load': np.float64(0.5), 'relay_reputation': np.float64(0.73), 'budget_utilization': np.float64(0.26), 'recent_win_rate': np.float64(0.3)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0045664849999999995), 'steps': [{'feature': 'network_load', 'value': np.float64(0.5), 'effect': 'multiply prob by 0.700 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.73), 'effect': 'multiply prob by 1.595 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.26), 'effect': 'multiply prob by 0.818 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.3), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.5,0.73,0.37,0.0,0.008273264917267348,"{'timestamp': 1760866780.2149818, 'inputs': {'network_load': np.float64(0.5), 'relay_reputation': np.float64(0.73), 'budget_utilization': np.float64(0.37), 'recent_win_rate': 1e-09}, 'base_prob': 0.01, 'final_prob': np.float64(0.008273264917267348), 'steps': [{'feature': 'network_load', 'value': np.float64(0.5), 'effect': 'multiply prob by 0.700 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.73), 'effect': 'multiply prob by 1.595 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.37), 'effect': 'multiply prob by 0.741 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': 1e-09, 'effect': 'multiply prob by 1.000 (higher recent wins -> lower prob)'}]}"
0.5,0.73,0.37,0.05,0.004136632499999999,"{'timestamp': 1760866780.215007, 'inputs': {'network_load': np.float64(0.5), 'relay_reputation': np.float64(0.73), 'budget_utilization': np.float64(0.37), 'recent_win_rate': np.float64(0.05)}, 'base_prob': 0.01, 'final_prob': np.float64(0.004136632499999999), 'steps': [{'feature': 'network_load', 'value': np.float64(0.5), 'effect': 'multiply prob by 0.700 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.73), 'effect': 'multiply prob by 1.595 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.37), 'effect': 'multiply prob by 0.741 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.05), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.5,0.73,0.37,0.1,0.004136632499999999,"{'timestamp': 1760866780.2150323, 'inputs': {'network_load': np.float64(0.5), 'relay_reputation': np.float64(0.73), 'budget_utilization': np.float64(0.37), 'recent_win_rate': np.float64(0.1)}, 'base_prob': 0.01, 'final_prob': np.float64(0.004136632499999999), 'steps': [{'feature': 'network_load', 'value': np.float64(0.5), 'effect': 'multiply prob by 0.700 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.73), 'effect': 'multiply prob by 1.595 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.37), 'effect': 'multiply prob by 0.741 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.1), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.5,0.73,0.37,0.15,0.004136632499999999,"{'timestamp': 1760866780.2150595, 'inputs': {'network_load': np.float64(0.5), 'relay_reputation': np.float64(0.73), 'budget_utilization': np.float64(0.37), 'recent_win_rate': np.float64(0.15)}, 'base_prob': 0.01, 'final_prob': np.float64(0.004136632499999999), 'steps': [{'feature': 'network_load', 'value': np.float64(0.5), 'effect': 'multiply prob by 0.700 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.73), 'effect': 'multiply prob by 1.595 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.37), 'effect': 'multiply prob by 0.741 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.15), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.5,0.73,0.37,0.2,0.004136632499999999,"{'timestamp': 1760866780.2150846, 'inputs': {'network_load': np.float64(0.5), 'relay_reputation': np.float64(0.73), 'budget_utilization': np.float64(0.37), 'recent_win_rate': np.float64(0.2)}, 'base_prob': 0.01, 'final_prob': np.float64(0.004136632499999999), 'steps': [{'feature': 'network_load', 'value': np.float64(0.5), 'effect': 'multiply prob by 0.700 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.73), 'effect': 'multiply prob by 1.595 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.37), 'effect': 'multiply prob by 0.741 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.2), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.5,0.73,0.37,0.25,0.004136632499999999,"{'timestamp': 1760866780.2151115, 'inputs': {'network_load': np.float64(0.5), 'relay_reputation': np.float64(0.73), 'budget_utilization': np.float64(0.37), 'recent_win_rate': np.float64(0.25)}, 'base_prob': 0.01, 'final_prob': np.float64(0.004136632499999999), 'steps': [{'feature': 'network_load', 'value': np.float64(0.5), 'effect': 'multiply prob by 0.700 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.73), 'effect': 'multiply prob by 1.595 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.37), 'effect': 'multiply prob by 0.741 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.25), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.5,0.73,0.37,0.3,0.004136632499999999,"{'timestamp': 1760866780.2151382, 'inputs': {'network_load': np.float64(0.5), 'relay_reputation': np.float64(0.73), 'budget_utilization': np.float64(0.37), 'recent_win_rate': np.float64(0.3)}, 'base_prob': 0.01, 'final_prob': np.float64(0.004136632499999999), 'steps': [{'feature': 'network_load', 'value': np.float64(0.5), 'effect': 'multiply prob by 0.700 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.73), 'effect': 'multiply prob by 1.595 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.37), 'effect': 'multiply prob by 0.741 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.3), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.5,0.73,0.48,0.0,0.007413559925864398,"{'timestamp': 1760866780.2151651, 'inputs': {'network_load': np.float64(0.5), 'relay_reputation': np.float64(0.73), 'budget_utilization': np.float64(0.48), 'recent_win_rate': 1e-09}, 'base_prob': 0.01, 'final_prob': np.float64(0.007413559925864398), 'steps': [{'feature': 'network_load', 'value': np.float64(0.5), 'effect': 'multiply prob by 0.700 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.73), 'effect': 'multiply prob by 1.595 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.48), 'effect': 'multiply prob by 0.664 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': 1e-09, 'effect': 'multiply prob by 1.000 (higher recent wins -> lower prob)'}]}"
0.5,0.73,0.48,0.05,0.0037067799999999994,"{'timestamp': 1760866780.2152472, 'inputs': {'network_load': np.float64(0.5), 'relay_reputation': np.float64(0.73), 'budget_utilization': np.float64(0.48), 'recent_win_rate': np.float64(0.05)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0037067799999999994), 'steps': [{'feature': 'network_load', 'value': np.float64(0.5), 'effect': 'multiply prob by 0.700 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.73), 'effect': 'multiply prob by 1.595 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.48), 'effect': 'multiply prob by 0.664 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.05), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.5,0.73,0.48,0.1,0.0037067799999999994,"{'timestamp': 1760866780.2152746, 'inputs': {'network_load': np.float64(0.5), 'relay_reputation': np.float64(0.73), 'budget_utilization': np.float64(0.48), 'recent_win_rate': np.float64(0.1)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0037067799999999994), 'steps': [{'feature': 'network_load', 'value': np.float64(0.5), 'effect': 'multiply prob by 0.700 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.73), 'effect': 'multiply prob by 1.595 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.48), 'effect': 'multiply prob by 0.664 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.1), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.5,0.73,0.48,0.15,0.0037067799999999994,"{'timestamp': 1760866780.2152998, 'inputs': {'network_load': np.float64(0.5), 'relay_reputation': np.float64(0.73), 'budget_utilization': np.float64(0.48), 'recent_win_rate': np.float64(0.15)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0037067799999999994), 'steps': [{'feature': 'network_load', 'value': np.float64(0.5), 'effect': 'multiply prob by 0.700 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.73), 'effect': 'multiply prob by 1.595 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.48), 'effect': 'multiply prob by 0.664 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.15), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.5,0.73,0.48,0.2,0.0037067799999999994,"{'timestamp': 1760866780.2153249, 'inputs': {'network_load': np.float64(0.5), 'relay_reputation': np.float64(0.73), 'budget_utilization': np.float64(0.48), 'recent_win_rate': np.float64(0.2)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0037067799999999994), 'steps': [{'feature': 'network_load', 'value': np.float64(0.5), 'effect': 'multiply prob by 0.700 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.73), 'effect': 'multiply prob by 1.595 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.48), 'effect': 'multiply prob by 0.664 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.2), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.5,0.73,0.48,0.25,0.0037067799999999994,"{'timestamp': 1760866780.215352, 'inputs': {'network_load': np.float64(0.5), 'relay_reputation': np.float64(0.73), 'budget_utilization': np.float64(0.48), 'recent_win_rate': np.float64(0.25)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0037067799999999994), 'steps': [{'feature': 'network_load', 'value': np.float64(0.5), 'effect': 'multiply prob by 0.700 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.73), 'effect': 'multiply prob by 1.595 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.48), 'effect': 'multiply prob by 0.664 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.25), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.5,0.73,0.48,0.3,0.0037067799999999994,"{'timestamp': 1760866780.2153788, 'inputs': {'network_load': np.float64(0.5), 'relay_reputation': np.float64(0.73), 'budget_utilization': np.float64(0.48), 'recent_win_rate': np.float64(0.3)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0037067799999999994), 'steps': [{'feature': 'network_load', 'value': np.float64(0.5), 'effect': 'multiply prob by 0.700 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.73), 'effect': 'multiply prob by 1.595 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.48), 'effect': 'multiply prob by 0.664 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.3), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.5,0.73,0.59,0.0,0.006553854934461448,"{'timestamp': 1760866780.2154095, 'inputs': {'network_load': np.float64(0.5), 'relay_reputation': np.float64(0.73), 'budget_utilization': np.float64(0.59), 'recent_win_rate': 1e-09}, 'base_prob': 0.01, 'final_prob': np.float64(0.006553854934461448), 'steps': [{'feature': 'network_load', 'value': np.float64(0.5), 'effect': 'multiply prob by 0.700 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.73), 'effect': 'multiply prob by 1.595 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.59), 'effect': 'multiply prob by 0.587 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': 1e-09, 'effect': 'multiply prob by 1.000 (higher recent wins -> lower prob)'}]}"
0.5,0.73,0.59,0.05,0.003276927499999999,"{'timestamp': 1760866780.2154353, 'inputs': {'network_load': np.float64(0.5), 'relay_reputation': np.float64(0.73), 'budget_utilization': np.float64(0.59), 'recent_win_rate': np.float64(0.05)}, 'base_prob': 0.01, 'final_prob': np.float64(0.003276927499999999), 'steps': [{'feature': 'network_load', 'value': np.float64(0.5), 'effect': 'multiply prob by 0.700 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.73), 'effect': 'multiply prob by 1.595 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.59), 'effect': 'multiply prob by 0.587 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.05), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.5,0.73,0.59,0.1,0.003276927499999999,"{'timestamp': 1760866780.2154603, 'inputs': {'network_load': np.float64(0.5), 'relay_reputation': np.float64(0.73), 'budget_utilization': np.float64(0.59), 'recent_win_rate': np.float64(0.1)}, 'base_prob': 0.01, 'final_prob': np.float64(0.003276927499999999), 'steps': [{'feature': 'network_load', 'value': np.float64(0.5), 'effect': 'multiply prob by 0.700 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.73), 'effect': 'multiply prob by 1.595 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.59), 'effect': 'multiply prob by 0.587 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.1), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.5,0.73,0.59,0.15,0.003276927499999999,"{'timestamp': 1760866780.2154858, 'inputs': {'network_load': np.float64(0.5), 'relay_reputation': np.float64(0.73), 'budget_utilization': np.float64(0.59), 'recent_win_rate': np.float64(0.15)}, 'base_prob': 0.01, 'final_prob': np.float64(0.003276927499999999), 'steps': [{'feature': 'network_load', 'value': np.float64(0.5), 'effect': 'multiply prob by 0.700 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.73), 'effect': 'multiply prob by 1.595 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.59), 'effect': 'multiply prob by 0.587 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.15), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.5,0.73,0.59,0.2,0.003276927499999999,"{'timestamp': 1760866780.2155125, 'inputs': {'network_load': np.float64(0.5), 'relay_reputation': np.float64(0.73), 'budget_utilization': np.float64(0.59), 'recent_win_rate': np.float64(0.2)}, 'base_prob': 0.01, 'final_prob': np.float64(0.003276927499999999), 'steps': [{'feature': 'network_load', 'value': np.float64(0.5), 'effect': 'multiply prob by 0.700 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.73), 'effect': 'multiply prob by 1.595 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.59), 'effect': 'multiply prob by 0.587 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.2), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.5,0.73,0.59,0.25,0.003276927499999999,"{'timestamp': 1760866780.215538, 'inputs': {'network_load': np.float64(0.5), 'relay_reputation': np.float64(0.73), 'budget_utilization': np.float64(0.59), 'recent_win_rate': np.float64(0.25)}, 'base_prob': 0.01, 'final_prob': np.float64(0.003276927499999999), 'steps': [{'feature': 'network_load', 'value': np.float64(0.5), 'effect': 'multiply prob by 0.700 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.73), 'effect': 'multiply prob by 1.595 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.59), 'effect': 'multiply prob by 0.587 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.25), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.5,0.73,0.59,0.3,0.003276927499999999,"{'timestamp': 1760866780.2155647, 'inputs': {'network_load': np.float64(0.5), 'relay_reputation': np.float64(0.73), 'budget_utilization': np.float64(0.59), 'recent_win_rate': np.float64(0.3)}, 'base_prob': 0.01, 'final_prob': np.float64(0.003276927499999999), 'steps': [{'feature': 'network_load', 'value': np.float64(0.5), 'effect': 'multiply prob by 0.700 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.73), 'effect': 'multiply prob by 1.595 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.59), 'effect': 'multiply prob by 0.587 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.3), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.5,0.73,0.69,0.0,0.00577230494227695,"{'timestamp': 1760866780.2155914, 'inputs': {'network_load': np.float64(0.5), 'relay_reputation': np.float64(0.73), 'budget_utilization': np.float64(0.69), 'recent_win_rate': 1e-09}, 'base_prob': 0.01, 'final_prob': np.float64(0.00577230494227695), 'steps': [{'feature': 'network_load', 'value': np.float64(0.5), 'effect': 'multiply prob by 0.700 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.73), 'effect': 'multiply prob by 1.595 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.69), 'effect': 'multiply prob by 0.517 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': 1e-09, 'effect': 'multiply prob by 1.000 (higher recent wins -> lower prob)'}]}"
0.5,0.73,0.69,0.05,0.0028861525,"{'timestamp': 1760866780.2156613, 'inputs': {'network_load': np.float64(0.5), 'relay_reputation': np.float64(0.73), 'budget_utilization': np.float64(0.69), 'recent_win_rate': np.float64(0.05)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0028861525), 'steps': [{'feature': 'network_load', 'value': np.float64(0.5), 'effect': 'multiply prob by 0.700 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.73), 'effect': 'multiply prob by 1.595 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.69), 'effect': 'multiply prob by 0.517 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.05), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.5,0.73,0.69,0.1,0.0028861525,"{'timestamp': 1760866780.215704, 'inputs': {'network_load': np.float64(0.5), 'relay_reputation': np.float64(0.73), 'budget_utilization': np.float64(0.69), 'recent_win_rate': np.float64(0.1)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0028861525), 'steps': [{'feature': 'network_load', 'value': np.float64(0.5), 'effect': 'multiply prob by 0.700 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.73), 'effect': 'multiply prob by 1.595 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.69), 'effect': 'multiply prob by 0.517 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.1), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.5,0.73,0.69,0.15,0.0028861525,"{'timestamp': 1760866780.215741, 'inputs': {'network_load': np.float64(0.5), 'relay_reputation': np.float64(0.73), 'budget_utilization': np.float64(0.69), 'recent_win_rate': np.float64(0.15)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0028861525), 'steps': [{'feature': 'network_load', 'value': np.float64(0.5), 'effect': 'multiply prob by 0.700 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.73), 'effect': 'multiply prob by 1.595 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.69), 'effect': 'multiply prob by 0.517 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.15), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.5,0.73,0.69,0.2,0.0028861525,"{'timestamp': 1760866780.2157767, 'inputs': {'network_load': np.float64(0.5), 'relay_reputation': np.float64(0.73), 'budget_utilization': np.float64(0.69), 'recent_win_rate': np.float64(0.2)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0028861525), 'steps': [{'feature': 'network_load', 'value': np.float64(0.5), 'effect': 'multiply prob by 0.700 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.73), 'effect': 'multiply prob by 1.595 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.69), 'effect': 'multiply prob by 0.517 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.2), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.5,0.73,0.69,0.25,0.0028861525,"{'timestamp': 1760866780.2158036, 'inputs': {'network_load': np.float64(0.5), 'relay_reputation': np.float64(0.73), 'budget_utilization': np.float64(0.69), 'recent_win_rate': np.float64(0.25)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0028861525), 'steps': [{'feature': 'network_load', 'value': np.float64(0.5), 'effect': 'multiply prob by 0.700 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.73), 'effect': 'multiply prob by 1.595 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.69), 'effect': 'multiply prob by 0.517 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.25), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.5,0.73,0.69,0.3,0.0028861525,"{'timestamp': 1760866780.2158287, 'inputs': {'network_load': np.float64(0.5), 'relay_reputation': np.float64(0.73), 'budget_utilization': np.float64(0.69), 'recent_win_rate': np.float64(0.3)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0028861525), 'steps': [{'feature': 'network_load', 'value': np.float64(0.5), 'effect': 'multiply prob by 0.700 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.73), 'effect': 'multiply prob by 1.595 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.69), 'effect': 'multiply prob by 0.517 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.3), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.5,0.73,0.8,0.0,0.0049125999508739995,"{'timestamp': 1760866780.2158582, 'inputs': {'network_load': np.float64(0.5), 'relay_reputation': np.float64(0.73), 'budget_utilization': np.float64(0.8), 'recent_win_rate': 1e-09}, 'base_prob': 0.01, 'final_prob': np.float64(0.0049125999508739995), 'steps': [{'feature': 'network_load', 'value': np.float64(0.5), 'effect': 'multiply prob by 0.700 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.73), 'effect': 'multiply prob by 1.595 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.8), 'effect': 'multiply prob by 0.440 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': 1e-09, 'effect': 'multiply prob by 1.000 (higher recent wins -> lower prob)'}]}"
0.5,0.73,0.8,0.05,0.0024563,"{'timestamp': 1760866780.2158873, 'inputs': {'network_load': np.float64(0.5), 'relay_reputation': np.float64(0.73), 'budget_utilization': np.float64(0.8), 'recent_win_rate': np.float64(0.05)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0024563), 'steps': [{'feature': 'network_load', 'value': np.float64(0.5), 'effect': 'multiply prob by 0.700 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.73), 'effect': 'multiply prob by 1.595 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.8), 'effect': 'multiply prob by 0.440 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.05), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.5,0.73,0.8,0.1,0.0024563,"{'timestamp': 1760866780.2159142, 'inputs': {'network_load': np.float64(0.5), 'relay_reputation': np.float64(0.73), 'budget_utilization': np.float64(0.8), 'recent_win_rate': np.float64(0.1)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0024563), 'steps': [{'feature': 'network_load', 'value': np.float64(0.5), 'effect': 'multiply prob by 0.700 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.73), 'effect': 'multiply prob by 1.595 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.8), 'effect': 'multiply prob by 0.440 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.1), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.5,0.73,0.8,0.15,0.0024563,"{'timestamp': 1760866780.2159395, 'inputs': {'network_load': np.float64(0.5), 'relay_reputation': np.float64(0.73), 'budget_utilization': np.float64(0.8), 'recent_win_rate': np.float64(0.15)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0024563), 'steps': [{'feature': 'network_load', 'value': np.float64(0.5), 'effect': 'multiply prob by 0.700 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.73), 'effect': 'multiply prob by 1.595 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.8), 'effect': 'multiply prob by 0.440 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.15), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.5,0.73,0.8,0.2,0.0024563,"{'timestamp': 1760866780.2159646, 'inputs': {'network_load': np.float64(0.5), 'relay_reputation': np.float64(0.73), 'budget_utilization': np.float64(0.8), 'recent_win_rate': np.float64(0.2)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0024563), 'steps': [{'feature': 'network_load', 'value': np.float64(0.5), 'effect': 'multiply prob by 0.700 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.73), 'effect': 'multiply prob by 1.595 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.8), 'effect': 'multiply prob by 0.440 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.2), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.5,0.73,0.8,0.25,0.0024563,"{'timestamp': 1760866780.2159917, 'inputs': {'network_load': np.float64(0.5), 'relay_reputation': np.float64(0.73), 'budget_utilization': np.float64(0.8), 'recent_win_rate': np.float64(0.25)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0024563), 'steps': [{'feature': 'network_load', 'value': np.float64(0.5), 'effect': 'multiply prob by 0.700 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.73), 'effect': 'multiply prob by 1.595 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.8), 'effect': 'multiply prob by 0.440 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.25), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.5,0.73,0.8,0.3,0.0024563,"{'timestamp': 1760866780.2160187, 'inputs': {'network_load': np.float64(0.5), 'relay_reputation': np.float64(0.73), 'budget_utilization': np.float64(0.8), 'recent_win_rate': np.float64(0.3)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0024563), 'steps': [{'feature': 'network_load', 'value': np.float64(0.5), 'effect': 'multiply prob by 0.700 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.73), 'effect': 'multiply prob by 1.595 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.8), 'effect': 'multiply prob by 0.440 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.3), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.5,0.84,0.05,0.0,0.011888799881112,"{'timestamp': 1760866780.2160468, 'inputs': {'network_load': np.float64(0.5), 'relay_reputation': np.float64(0.84), 'budget_utilization': np.float64(0.05), 'recent_win_rate': 1e-09}, 'base_prob': 0.01, 'final_prob': np.float64(0.011888799881112), 'steps': [{'feature': 'network_load', 'value': np.float64(0.5), 'effect': 'multiply prob by 0.700 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.84), 'effect': 'multiply prob by 1.760 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.05), 'effect': 'multiply prob by 0.965 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': 1e-09, 'effect': 'multiply prob by 1.000 (higher recent wins -> lower prob)'}]}"
0.5,0.84,0.05,0.05,0.0059444,"{'timestamp': 1760866780.216072, 'inputs': {'network_load': np.float64(0.5), 'relay_reputation': np.float64(0.84), 'budget_utilization': np.float64(0.05), 'recent_win_rate': np.float64(0.05)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0059444), 'steps': [{'feature': 'network_load', 'value': np.float64(0.5), 'effect': 'multiply prob by 0.700 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.84), 'effect': 'multiply prob by 1.760 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.05), 'effect': 'multiply prob by 0.965 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.05), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.5,0.84,0.05,0.1,0.0059444,"{'timestamp': 1760866780.2160974, 'inputs': {'network_load': np.float64(0.5), 'relay_reputation': np.float64(0.84), 'budget_utilization': np.float64(0.05), 'recent_win_rate': np.float64(0.1)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0059444), 'steps': [{'feature': 'network_load', 'value': np.float64(0.5), 'effect': 'multiply prob by 0.700 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.84), 'effect': 'multiply prob by 1.760 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.05), 'effect': 'multiply prob by 0.965 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.1), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.5,0.84,0.05,0.15,0.0059444,"{'timestamp': 1760866780.216124, 'inputs': {'network_load': np.float64(0.5), 'relay_reputation': np.float64(0.84), 'budget_utilization': np.float64(0.05), 'recent_win_rate': np.float64(0.15)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0059444), 'steps': [{'feature': 'network_load', 'value': np.float64(0.5), 'effect': 'multiply prob by 0.700 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.84), 'effect': 'multiply prob by 1.760 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.05), 'effect': 'multiply prob by 0.965 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.15), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.5,0.84,0.05,0.2,0.0059444,"{'timestamp': 1760866780.2161496, 'inputs': {'network_load': np.float64(0.5), 'relay_reputation': np.float64(0.84), 'budget_utilization': np.float64(0.05), 'recent_win_rate': np.float64(0.2)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0059444), 'steps': [{'feature': 'network_load', 'value': np.float64(0.5), 'effect': 'multiply prob by 0.700 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.84), 'effect': 'multiply prob by 1.760 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.05), 'effect': 'multiply prob by 0.965 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.2), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.5,0.84,0.05,0.25,0.0059444,"{'timestamp': 1760866780.2161796, 'inputs': {'network_load': np.float64(0.5), 'relay_reputation': np.float64(0.84), 'budget_utilization': np.float64(0.05), 'recent_win_rate': np.float64(0.25)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0059444), 'steps': [{'feature': 'network_load', 'value': np.float64(0.5), 'effect': 'multiply prob by 0.700 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.84), 'effect': 'multiply prob by 1.760 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.05), 'effect': 'multiply prob by 0.965 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.25), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.5,0.84,0.05,0.3,0.0059444,"{'timestamp': 1760866780.2162066, 'inputs': {'network_load': np.float64(0.5), 'relay_reputation': np.float64(0.84), 'budget_utilization': np.float64(0.05), 'recent_win_rate': np.float64(0.3)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0059444), 'steps': [{'feature': 'network_load', 'value': np.float64(0.5), 'effect': 'multiply prob by 0.700 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.84), 'effect': 'multiply prob by 1.760 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.05), 'effect': 'multiply prob by 0.965 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.3), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.5,0.84,0.16,0.0,0.010940159890598398,"{'timestamp': 1760866780.2162337, 'inputs': {'network_load': np.float64(0.5), 'relay_reputation': np.float64(0.84), 'budget_utilization': np.float64(0.16), 'recent_win_rate': 1e-09}, 'base_prob': 0.01, 'final_prob': np.float64(0.010940159890598398), 'steps': [{'feature': 'network_load', 'value': np.float64(0.5), 'effect': 'multiply prob by 0.700 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.84), 'effect': 'multiply prob by 1.760 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.16), 'effect': 'multiply prob by 0.888 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': 1e-09, 'effect': 'multiply prob by 1.000 (higher recent wins -> lower prob)'}]}"
0.5,0.84,0.16,0.05,0.0054700799999999996,"{'timestamp': 1760866780.216259, 'inputs': {'network_load': np.float64(0.5), 'relay_reputation': np.float64(0.84), 'budget_utilization': np.float64(0.16), 'recent_win_rate': np.float64(0.05)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0054700799999999996), 'steps': [{'feature': 'network_load', 'value': np.float64(0.5), 'effect': 'multiply prob by 0.700 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.84), 'effect': 'multiply prob by 1.760 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.16), 'effect': 'multiply prob by 0.888 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.05), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.5,0.84,0.16,0.1,0.0054700799999999996,"{'timestamp': 1760866780.2162845, 'inputs': {'network_load': np.float64(0.5), 'relay_reputation': np.float64(0.84), 'budget_utilization': np.float64(0.16), 'recent_win_rate': np.float64(0.1)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0054700799999999996), 'steps': [{'feature': 'network_load', 'value': np.float64(0.5), 'effect': 'multiply prob by 0.700 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.84), 'effect': 'multiply prob by 1.760 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.16), 'effect': 'multiply prob by 0.888 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.1), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.5,0.84,0.16,0.15,0.0054700799999999996,"{'timestamp': 1760866780.2163112, 'inputs': {'network_load': np.float64(0.5), 'relay_reputation': np.float64(0.84), 'budget_utilization': np.float64(0.16), 'recent_win_rate': np.float64(0.15)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0054700799999999996), 'steps': [{'feature': 'network_load', 'value': np.float64(0.5), 'effect': 'multiply prob by 0.700 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.84), 'effect': 'multiply prob by 1.760 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.16), 'effect': 'multiply prob by 0.888 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.15), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.5,0.84,0.16,0.2,0.0054700799999999996,"{'timestamp': 1760866780.2163384, 'inputs': {'network_load': np.float64(0.5), 'relay_reputation': np.float64(0.84), 'budget_utilization': np.float64(0.16), 'recent_win_rate': np.float64(0.2)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0054700799999999996), 'steps': [{'feature': 'network_load', 'value': np.float64(0.5), 'effect': 'multiply prob by 0.700 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.84), 'effect': 'multiply prob by 1.760 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.16), 'effect': 'multiply prob by 0.888 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.2), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.5,0.84,0.16,0.25,0.0054700799999999996,"{'timestamp': 1760866780.2163637, 'inputs': {'network_load': np.float64(0.5), 'relay_reputation': np.float64(0.84), 'budget_utilization': np.float64(0.16), 'recent_win_rate': np.float64(0.25)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0054700799999999996), 'steps': [{'feature': 'network_load', 'value': np.float64(0.5), 'effect': 'multiply prob by 0.700 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.84), 'effect': 'multiply prob by 1.760 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.16), 'effect': 'multiply prob by 0.888 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.25), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.5,0.84,0.16,0.3,0.0054700799999999996,"{'timestamp': 1760866780.216389, 'inputs': {'network_load': np.float64(0.5), 'relay_reputation': np.float64(0.84), 'budget_utilization': np.float64(0.16), 'recent_win_rate': np.float64(0.3)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0054700799999999996), 'steps': [{'feature': 'network_load', 'value': np.float64(0.5), 'effect': 'multiply prob by 0.700 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.84), 'effect': 'multiply prob by 1.760 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.16), 'effect': 'multiply prob by 0.888 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.3), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.5,0.84,0.26,0.0,0.0100777598992224,"{'timestamp': 1760866780.2164156, 'inputs': {'network_load': np.float64(0.5), 'relay_reputation': np.float64(0.84), 'budget_utilization': np.float64(0.26), 'recent_win_rate': 1e-09}, 'base_prob': 0.01, 'final_prob': np.float64(0.0100777598992224), 'steps': [{'feature': 'network_load', 'value': np.float64(0.5), 'effect': 'multiply prob by 0.700 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.84), 'effect': 'multiply prob by 1.760 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.26), 'effect': 'multiply prob by 0.818 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': 1e-09, 'effect': 'multiply prob by 1.000 (higher recent wins -> lower prob)'}]}"
0.5,0.84,0.26,0.05,0.00503888,"{'timestamp': 1760866780.216447, 'inputs': {'network_load': np.float64(0.5), 'relay_reputation': np.float64(0.84), 'budget_utilization': np.float64(0.26), 'recent_win_rate': np.float64(0.05)}, 'base_prob': 0.01, 'final_prob': np.float64(0.00503888), 'steps': [{'feature': 'network_load', 'value': np.float64(0.5), 'effect': 'multiply prob by 0.700 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.84), 'effect': 'multiply prob by 1.760 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.26), 'effect': 'multiply prob by 0.818 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.05), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.5,0.84,0.26,0.1,0.00503888,"{'timestamp': 1760866780.2164726, 'inputs': {'network_load': np.float64(0.5), 'relay_reputation': np.float64(0.84), 'budget_utilization': np.float64(0.26), 'recent_win_rate': np.float64(0.1)}, 'base_prob': 0.01, 'final_prob': np.float64(0.00503888), 'steps': [{'feature': 'network_load', 'value': np.float64(0.5), 'effect': 'multiply prob by 0.700 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.84), 'effect': 'multiply prob by 1.760 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.26), 'effect': 'multiply prob by 0.818 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.1), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.5,0.84,0.26,0.15,0.00503888,"{'timestamp': 1760866780.2165189, 'inputs': {'network_load': np.float64(0.5), 'relay_reputation': np.float64(0.84), 'budget_utilization': np.float64(0.26), 'recent_win_rate': np.float64(0.15)}, 'base_prob': 0.01, 'final_prob': np.float64(0.00503888), 'steps': [{'feature': 'network_load', 'value': np.float64(0.5), 'effect': 'multiply prob by 0.700 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.84), 'effect': 'multiply prob by 1.760 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.26), 'effect': 'multiply prob by 0.818 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.15), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.5,0.84,0.26,0.2,0.00503888,"{'timestamp': 1760866780.2165449, 'inputs': {'network_load': np.float64(0.5), 'relay_reputation': np.float64(0.84), 'budget_utilization': np.float64(0.26), 'recent_win_rate': np.float64(0.2)}, 'base_prob': 0.01, 'final_prob': np.float64(0.00503888), 'steps': [{'feature': 'network_load', 'value': np.float64(0.5), 'effect': 'multiply prob by 0.700 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.84), 'effect': 'multiply prob by 1.760 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.26), 'effect': 'multiply prob by 0.818 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.2), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.5,0.84,0.26,0.25,0.00503888,"{'timestamp': 1760866780.2166476, 'inputs': {'network_load': np.float64(0.5), 'relay_reputation': np.float64(0.84), 'budget_utilization': np.float64(0.26), 'recent_win_rate': np.float64(0.25)}, 'base_prob': 0.01, 'final_prob': np.float64(0.00503888), 'steps': [{'feature': 'network_load', 'value': np.float64(0.5), 'effect': 'multiply prob by 0.700 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.84), 'effect': 'multiply prob by 1.760 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.26), 'effect': 'multiply prob by 0.818 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.25), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.5,0.84,0.26,0.3,0.00503888,"{'timestamp': 1760866780.2166784, 'inputs': {'network_load': np.float64(0.5), 'relay_reputation': np.float64(0.84), 'budget_utilization': np.float64(0.26), 'recent_win_rate': np.float64(0.3)}, 'base_prob': 0.01, 'final_prob': np.float64(0.00503888), 'steps': [{'feature': 'network_load', 'value': np.float64(0.5), 'effect': 'multiply prob by 0.700 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.84), 'effect': 'multiply prob by 1.760 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.26), 'effect': 'multiply prob by 0.818 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.3), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.5,0.84,0.37,0.0,0.009129119908708799,"{'timestamp': 1760866780.216708, 'inputs': {'network_load': np.float64(0.5), 'relay_reputation': np.float64(0.84), 'budget_utilization': np.float64(0.37), 'recent_win_rate': 1e-09}, 'base_prob': 0.01, 'final_prob': np.float64(0.009129119908708799), 'steps': [{'feature': 'network_load', 'value': np.float64(0.5), 'effect': 'multiply prob by 0.700 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.84), 'effect': 'multiply prob by 1.760 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.37), 'effect': 'multiply prob by 0.741 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': 1e-09, 'effect': 'multiply prob by 1.000 (higher recent wins -> lower prob)'}]}"
0.5,0.84,0.37,0.05,0.00456456,"{'timestamp': 1760866780.2167335, 'inputs': {'network_load': np.float64(0.5), 'relay_reputation': np.float64(0.84), 'budget_utilization': np.float64(0.37), 'recent_win_rate': np.float64(0.05)}, 'base_prob': 0.01, 'final_prob': np.float64(0.00456456), 'steps': [{'feature': 'network_load', 'value': np.float64(0.5), 'effect': 'multiply prob by 0.700 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.84), 'effect': 'multiply prob by 1.760 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.37), 'effect': 'multiply prob by 0.741 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.05), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.5,0.84,0.37,0.1,0.00456456,"{'timestamp': 1760866780.2167587, 'inputs': {'network_load': np.float64(0.5), 'relay_reputation': np.float64(0.84), 'budget_utilization': np.float64(0.37), 'recent_win_rate': np.float64(0.1)}, 'base_prob': 0.01, 'final_prob': np.float64(0.00456456), 'steps': [{'feature': 'network_load', 'value': np.float64(0.5), 'effect': 'multiply prob by 0.700 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.84), 'effect': 'multiply prob by 1.760 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.37), 'effect': 'multiply prob by 0.741 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.1), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.5,0.84,0.37,0.15,0.00456456,"{'timestamp': 1760866780.2167861, 'inputs': {'network_load': np.float64(0.5), 'relay_reputation': np.float64(0.84), 'budget_utilization': np.float64(0.37), 'recent_win_rate': np.float64(0.15)}, 'base_prob': 0.01, 'final_prob': np.float64(0.00456456), 'steps': [{'feature': 'network_load', 'value': np.float64(0.5), 'effect': 'multiply prob by 0.700 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.84), 'effect': 'multiply prob by 1.760 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.37), 'effect': 'multiply prob by 0.741 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.15), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.5,0.84,0.37,0.2,0.00456456,"{'timestamp': 1760866780.216813, 'inputs': {'network_load': np.float64(0.5), 'relay_reputation': np.float64(0.84), 'budget_utilization': np.float64(0.37), 'recent_win_rate': np.float64(0.2)}, 'base_prob': 0.01, 'final_prob': np.float64(0.00456456), 'steps': [{'feature': 'network_load', 'value': np.float64(0.5), 'effect': 'multiply prob by 0.700 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.84), 'effect': 'multiply prob by 1.760 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.37), 'effect': 'multiply prob by 0.741 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.2), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.5,0.84,0.37,0.25,0.00456456,"{'timestamp': 1760866780.21684, 'inputs': {'network_load': np.float64(0.5), 'relay_reputation': np.float64(0.84), 'budget_utilization': np.float64(0.37), 'recent_win_rate': np.float64(0.25)}, 'base_prob': 0.01, 'final_prob': np.float64(0.00456456), 'steps': [{'feature': 'network_load', 'value': np.float64(0.5), 'effect': 'multiply prob by 0.700 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.84), 'effect': 'multiply prob by 1.760 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.37), 'effect': 'multiply prob by 0.741 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.25), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.5,0.84,0.37,0.3,0.00456456,"{'timestamp': 1760866780.2168665, 'inputs': {'network_load': np.float64(0.5), 'relay_reputation': np.float64(0.84), 'budget_utilization': np.float64(0.37), 'recent_win_rate': np.float64(0.3)}, 'base_prob': 0.01, 'final_prob': np.float64(0.00456456), 'steps': [{'feature': 'network_load', 'value': np.float64(0.5), 'effect': 'multiply prob by 0.700 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.84), 'effect': 'multiply prob by 1.760 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.37), 'effect': 'multiply prob by 0.741 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.3), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.5,0.84,0.48,0.0,0.0081804799181952,"{'timestamp': 1760866780.216894, 'inputs': {'network_load': np.float64(0.5), 'relay_reputation': np.float64(0.84), 'budget_utilization': np.float64(0.48), 'recent_win_rate': 1e-09}, 'base_prob': 0.01, 'final_prob': np.float64(0.0081804799181952), 'steps': [{'feature': 'network_load', 'value': np.float64(0.5), 'effect': 'multiply prob by 0.700 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.84), 'effect': 'multiply prob by 1.760 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.48), 'effect': 'multiply prob by 0.664 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': 1e-09, 'effect': 'multiply prob by 1.000 (higher recent wins -> lower prob)'}]}"
0.5,0.84,0.48,0.05,0.00409024,"{'timestamp': 1760866780.2169192, 'inputs': {'network_load': np.float64(0.5), 'relay_reputation': np.float64(0.84), 'budget_utilization': np.float64(0.48), 'recent_win_rate': np.float64(0.05)}, 'base_prob': 0.01, 'final_prob': np.float64(0.00409024), 'steps': [{'feature': 'network_load', 'value': np.float64(0.5), 'effect': 'multiply prob by 0.700 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.84), 'effect': 'multiply prob by 1.760 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.48), 'effect': 'multiply prob by 0.664 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.05), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.5,0.84,0.48,0.1,0.00409024,"{'timestamp': 1760866780.2169447, 'inputs': {'network_load': np.float64(0.5), 'relay_reputation': np.float64(0.84), 'budget_utilization': np.float64(0.48), 'recent_win_rate': np.float64(0.1)}, 'base_prob': 0.01, 'final_prob': np.float64(0.00409024), 'steps': [{'feature': 'network_load', 'value': np.float64(0.5), 'effect': 'multiply prob by 0.700 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.84), 'effect': 'multiply prob by 1.760 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.48), 'effect': 'multiply prob by 0.664 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.1), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.5,0.84,0.48,0.15,0.00409024,"{'timestamp': 1760866780.2169719, 'inputs': {'network_load': np.float64(0.5), 'relay_reputation': np.float64(0.84), 'budget_utilization': np.float64(0.48), 'recent_win_rate': np.float64(0.15)}, 'base_prob': 0.01, 'final_prob': np.float64(0.00409024), 'steps': [{'feature': 'network_load', 'value': np.float64(0.5), 'effect': 'multiply prob by 0.700 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.84), 'effect': 'multiply prob by 1.760 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.48), 'effect': 'multiply prob by 0.664 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.15), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.5,0.84,0.48,0.2,0.00409024,"{'timestamp': 1760866780.2169971, 'inputs': {'network_load': np.float64(0.5), 'relay_reputation': np.float64(0.84), 'budget_utilization': np.float64(0.48), 'recent_win_rate': np.float64(0.2)}, 'base_prob': 0.01, 'final_prob': np.float64(0.00409024), 'steps': [{'feature': 'network_load', 'value': np.float64(0.5), 'effect': 'multiply prob by 0.700 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.84), 'effect': 'multiply prob by 1.760 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.48), 'effect': 'multiply prob by 0.664 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.2), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.5,0.84,0.48,0.25,0.00409024,"{'timestamp': 1760866780.2170222, 'inputs': {'network_load': np.float64(0.5), 'relay_reputation': np.float64(0.84), 'budget_utilization': np.float64(0.48), 'recent_win_rate': np.float64(0.25)}, 'base_prob': 0.01, 'final_prob': np.float64(0.00409024), 'steps': [{'feature': 'network_load', 'value': np.float64(0.5), 'effect': 'multiply prob by 0.700 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.84), 'effect': 'multiply prob by 1.760 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.48), 'effect': 'multiply prob by 0.664 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.25), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.5,0.84,0.48,0.3,0.00409024,"{'timestamp': 1760866780.2170475, 'inputs': {'network_load': np.float64(0.5), 'relay_reputation': np.float64(0.84), 'budget_utilization': np.float64(0.48), 'recent_win_rate': np.float64(0.3)}, 'base_prob': 0.01, 'final_prob': np.float64(0.00409024), 'steps': [{'feature': 'network_load', 'value': np.float64(0.5), 'effect': 'multiply prob by 0.700 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.84), 'effect': 'multiply prob by 1.760 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.48), 'effect': 'multiply prob by 0.664 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.3), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.5,0.84,0.59,0.0,0.0072318399276815985,"{'timestamp': 1760866780.2170763, 'inputs': {'network_load': np.float64(0.5), 'relay_reputation': np.float64(0.84), 'budget_utilization': np.float64(0.59), 'recent_win_rate': 1e-09}, 'base_prob': 0.01, 'final_prob': np.float64(0.0072318399276815985), 'steps': [{'feature': 'network_load', 'value': np.float64(0.5), 'effect': 'multiply prob by 0.700 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.84), 'effect': 'multiply prob by 1.760 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.59), 'effect': 'multiply prob by 0.587 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': 1e-09, 'effect': 'multiply prob by 1.000 (higher recent wins -> lower prob)'}]}"
0.5,0.84,0.59,0.05,0.0036159199999999995,"{'timestamp': 1760866780.217105, 'inputs': {'network_load': np.float64(0.5), 'relay_reputation': np.float64(0.84), 'budget_utilization': np.float64(0.59), 'recent_win_rate': np.float64(0.05)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0036159199999999995), 'steps': [{'feature': 'network_load', 'value': np.float64(0.5), 'effect': 'multiply prob by 0.700 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.84), 'effect': 'multiply prob by 1.760 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.59), 'effect': 'multiply prob by 0.587 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.05), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.5,0.84,0.59,0.1,0.0036159199999999995,"{'timestamp': 1760866780.2171304, 'inputs': {'network_load': np.float64(0.5), 'relay_reputation': np.float64(0.84), 'budget_utilization': np.float64(0.59), 'recent_win_rate': np.float64(0.1)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0036159199999999995), 'steps': [{'feature': 'network_load', 'value': np.float64(0.5), 'effect': 'multiply prob by 0.700 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.84), 'effect': 'multiply prob by 1.760 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.59), 'effect': 'multiply prob by 0.587 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.1), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.5,0.84,0.59,0.15,0.0036159199999999995,"{'timestamp': 1760866780.2171557, 'inputs': {'network_load': np.float64(0.5), 'relay_reputation': np.float64(0.84), 'budget_utilization': np.float64(0.59), 'recent_win_rate': np.float64(0.15)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0036159199999999995), 'steps': [{'feature': 'network_load', 'value': np.float64(0.5), 'effect': 'multiply prob by 0.700 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.84), 'effect': 'multiply prob by 1.760 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.59), 'effect': 'multiply prob by 0.587 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.15), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.5,0.84,0.59,0.2,0.0036159199999999995,"{'timestamp': 1760866780.217181, 'inputs': {'network_load': np.float64(0.5), 'relay_reputation': np.float64(0.84), 'budget_utilization': np.float64(0.59), 'recent_win_rate': np.float64(0.2)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0036159199999999995), 'steps': [{'feature': 'network_load', 'value': np.float64(0.5), 'effect': 'multiply prob by 0.700 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.84), 'effect': 'multiply prob by 1.760 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.59), 'effect': 'multiply prob by 0.587 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.2), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.5,0.84,0.59,0.25,0.0036159199999999995,"{'timestamp': 1760866780.2172384, 'inputs': {'network_load': np.float64(0.5), 'relay_reputation': np.float64(0.84), 'budget_utilization': np.float64(0.59), 'recent_win_rate': np.float64(0.25)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0036159199999999995), 'steps': [{'feature': 'network_load', 'value': np.float64(0.5), 'effect': 'multiply prob by 0.700 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.84), 'effect': 'multiply prob by 1.760 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.59), 'effect': 'multiply prob by 0.587 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.25), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.5,0.84,0.59,0.3,0.0036159199999999995,"{'timestamp': 1760866780.217271, 'inputs': {'network_load': np.float64(0.5), 'relay_reputation': np.float64(0.84), 'budget_utilization': np.float64(0.59), 'recent_win_rate': np.float64(0.3)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0036159199999999995), 'steps': [{'feature': 'network_load', 'value': np.float64(0.5), 'effect': 'multiply prob by 0.700 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.84), 'effect': 'multiply prob by 1.760 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.59), 'effect': 'multiply prob by 0.587 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.3), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.5,0.84,0.69,0.0,0.006369439936305601,"{'timestamp': 1760866780.2173026, 'inputs': {'network_load': np.float64(0.5), 'relay_reputation': np.float64(0.84), 'budget_utilization': np.float64(0.69), 'recent_win_rate': 1e-09}, 'base_prob': 0.01, 'final_prob': np.float64(0.006369439936305601), 'steps': [{'feature': 'network_load', 'value': np.float64(0.5), 'effect': 'multiply prob by 0.700 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.84), 'effect': 'multiply prob by 1.760 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.69), 'effect': 'multiply prob by 0.517 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': 1e-09, 'effect': 'multiply prob by 1.000 (higher recent wins -> lower prob)'}]}"
0.5,0.84,0.69,0.05,0.0031847200000000007,"{'timestamp': 1760866780.2173312, 'inputs': {'network_load': np.float64(0.5), 'relay_reputation': np.float64(0.84), 'budget_utilization': np.float64(0.69), 'recent_win_rate': np.float64(0.05)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0031847200000000007), 'steps': [{'feature': 'network_load', 'value': np.float64(0.5), 'effect': 'multiply prob by 0.700 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.84), 'effect': 'multiply prob by 1.760 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.69), 'effect': 'multiply prob by 0.517 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.05), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.5,0.84,0.69,0.1,0.0031847200000000007,"{'timestamp': 1760866780.2174149, 'inputs': {'network_load': np.float64(0.5), 'relay_reputation': np.float64(0.84), 'budget_utilization': np.float64(0.69), 'recent_win_rate': np.float64(0.1)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0031847200000000007), 'steps': [{'feature': 'network_load', 'value': np.float64(0.5), 'effect': 'multiply prob by 0.700 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.84), 'effect': 'multiply prob by 1.760 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.69), 'effect': 'multiply prob by 0.517 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.1), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.5,0.84,0.69,0.15,0.0031847200000000007,"{'timestamp': 1760866780.217442, 'inputs': {'network_load': np.float64(0.5), 'relay_reputation': np.float64(0.84), 'budget_utilization': np.float64(0.69), 'recent_win_rate': np.float64(0.15)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0031847200000000007), 'steps': [{'feature': 'network_load', 'value': np.float64(0.5), 'effect': 'multiply prob by 0.700 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.84), 'effect': 'multiply prob by 1.760 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.69), 'effect': 'multiply prob by 0.517 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.15), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.5,0.84,0.69,0.2,0.0031847200000000007,"{'timestamp': 1760866780.2174675, 'inputs': {'network_load': np.float64(0.5), 'relay_reputation': np.float64(0.84), 'budget_utilization': np.float64(0.69), 'recent_win_rate': np.float64(0.2)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0031847200000000007), 'steps': [{'feature': 'network_load', 'value': np.float64(0.5), 'effect': 'multiply prob by 0.700 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.84), 'effect': 'multiply prob by 1.760 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.69), 'effect': 'multiply prob by 0.517 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.2), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.5,0.84,0.69,0.25,0.0031847200000000007,"{'timestamp': 1760866780.217496, 'inputs': {'network_load': np.float64(0.5), 'relay_reputation': np.float64(0.84), 'budget_utilization': np.float64(0.69), 'recent_win_rate': np.float64(0.25)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0031847200000000007), 'steps': [{'feature': 'network_load', 'value': np.float64(0.5), 'effect': 'multiply prob by 0.700 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.84), 'effect': 'multiply prob by 1.760 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.69), 'effect': 'multiply prob by 0.517 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.25), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.5,0.84,0.69,0.3,0.0031847200000000007,"{'timestamp': 1760866780.217521, 'inputs': {'network_load': np.float64(0.5), 'relay_reputation': np.float64(0.84), 'budget_utilization': np.float64(0.69), 'recent_win_rate': np.float64(0.3)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0031847200000000007), 'steps': [{'feature': 'network_load', 'value': np.float64(0.5), 'effect': 'multiply prob by 0.700 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.84), 'effect': 'multiply prob by 1.760 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.69), 'effect': 'multiply prob by 0.517 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.3), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.5,0.84,0.8,0.0,0.005420799945792001,"{'timestamp': 1760866780.2175758, 'inputs': {'network_load': np.float64(0.5), 'relay_reputation': np.float64(0.84), 'budget_utilization': np.float64(0.8), 'recent_win_rate': 1e-09}, 'base_prob': 0.01, 'final_prob': np.float64(0.005420799945792001), 'steps': [{'feature': 'network_load', 'value': np.float64(0.5), 'effect': 'multiply prob by 0.700 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.84), 'effect': 'multiply prob by 1.760 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.8), 'effect': 'multiply prob by 0.440 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': 1e-09, 'effect': 'multiply prob by 1.000 (higher recent wins -> lower prob)'}]}"
0.5,0.84,0.8,0.05,0.0027104000000000004,"{'timestamp': 1760866780.2176023, 'inputs': {'network_load': np.float64(0.5), 'relay_reputation': np.float64(0.84), 'budget_utilization': np.float64(0.8), 'recent_win_rate': np.float64(0.05)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0027104000000000004), 'steps': [{'feature': 'network_load', 'value': np.float64(0.5), 'effect': 'multiply prob by 0.700 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.84), 'effect': 'multiply prob by 1.760 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.8), 'effect': 'multiply prob by 0.440 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.05), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.5,0.84,0.8,0.1,0.0027104000000000004,"{'timestamp': 1760866780.217632, 'inputs': {'network_load': np.float64(0.5), 'relay_reputation': np.float64(0.84), 'budget_utilization': np.float64(0.8), 'recent_win_rate': np.float64(0.1)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0027104000000000004), 'steps': [{'feature': 'network_load', 'value': np.float64(0.5), 'effect': 'multiply prob by 0.700 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.84), 'effect': 'multiply prob by 1.760 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.8), 'effect': 'multiply prob by 0.440 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.1), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.5,0.84,0.8,0.15,0.0027104000000000004,"{'timestamp': 1760866780.2176607, 'inputs': {'network_load': np.float64(0.5), 'relay_reputation': np.float64(0.84), 'budget_utilization': np.float64(0.8), 'recent_win_rate': np.float64(0.15)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0027104000000000004), 'steps': [{'feature': 'network_load', 'value': np.float64(0.5), 'effect': 'multiply prob by 0.700 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.84), 'effect': 'multiply prob by 1.760 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.8), 'effect': 'multiply prob by 0.440 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.15), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.5,0.84,0.8,0.2,0.0027104000000000004,"{'timestamp': 1760866780.217686, 'inputs': {'network_load': np.float64(0.5), 'relay_reputation': np.float64(0.84), 'budget_utilization': np.float64(0.8), 'recent_win_rate': np.float64(0.2)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0027104000000000004), 'steps': [{'feature': 'network_load', 'value': np.float64(0.5), 'effect': 'multiply prob by 0.700 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.84), 'effect': 'multiply prob by 1.760 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.8), 'effect': 'multiply prob by 0.440 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.2), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.5,0.84,0.8,0.25,0.0027104000000000004,"{'timestamp': 1760866780.2177112, 'inputs': {'network_load': np.float64(0.5), 'relay_reputation': np.float64(0.84), 'budget_utilization': np.float64(0.8), 'recent_win_rate': np.float64(0.25)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0027104000000000004), 'steps': [{'feature': 'network_load', 'value': np.float64(0.5), 'effect': 'multiply prob by 0.700 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.84), 'effect': 'multiply prob by 1.760 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.8), 'effect': 'multiply prob by 0.440 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.25), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.5,0.84,0.8,0.3,0.0027104000000000004,"{'timestamp': 1760866780.217736, 'inputs': {'network_load': np.float64(0.5), 'relay_reputation': np.float64(0.84), 'budget_utilization': np.float64(0.8), 'recent_win_rate': np.float64(0.3)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0027104000000000004), 'steps': [{'feature': 'network_load', 'value': np.float64(0.5), 'effect': 'multiply prob by 0.700 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.84), 'effect': 'multiply prob by 1.760 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.8), 'effect': 'multiply prob by 0.440 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.3), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.5,0.95,0.05,0.0,0.013003374869966246,"{'timestamp': 1760866780.2177644, 'inputs': {'network_load': np.float64(0.5), 'relay_reputation': np.float64(0.95), 'budget_utilization': np.float64(0.05), 'recent_win_rate': 1e-09}, 'base_prob': 0.01, 'final_prob': np.float64(0.013003374869966246), 'steps': [{'feature': 'network_load', 'value': np.float64(0.5), 'effect': 'multiply prob by 0.700 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.95), 'effect': 'multiply prob by 1.925 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.05), 'effect': 'multiply prob by 0.965 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': 1e-09, 'effect': 'multiply prob by 1.000 (higher recent wins -> lower prob)'}]}"
0.5,0.95,0.05,0.05,0.006501687499999999,"{'timestamp': 1760866780.2177896, 'inputs': {'network_load': np.float64(0.5), 'relay_reputation': np.float64(0.95), 'budget_utilization': np.float64(0.05), 'recent_win_rate': np.float64(0.05)}, 'base_prob': 0.01, 'final_prob': np.float64(0.006501687499999999), 'steps': [{'feature': 'network_load', 'value': np.float64(0.5), 'effect': 'multiply prob by 0.700 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.95), 'effect': 'multiply prob by 1.925 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.05), 'effect': 'multiply prob by 0.965 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.05), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.5,0.95,0.05,0.1,0.006501687499999999,"{'timestamp': 1760866780.217817, 'inputs': {'network_load': np.float64(0.5), 'relay_reputation': np.float64(0.95), 'budget_utilization': np.float64(0.05), 'recent_win_rate': np.float64(0.1)}, 'base_prob': 0.01, 'final_prob': np.float64(0.006501687499999999), 'steps': [{'feature': 'network_load', 'value': np.float64(0.5), 'effect': 'multiply prob by 0.700 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.95), 'effect': 'multiply prob by 1.925 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.05), 'effect': 'multiply prob by 0.965 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.1), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.5,0.95,0.05,0.15,0.006501687499999999,"{'timestamp': 1760866780.217844, 'inputs': {'network_load': np.float64(0.5), 'relay_reputation': np.float64(0.95), 'budget_utilization': np.float64(0.05), 'recent_win_rate': np.float64(0.15)}, 'base_prob': 0.01, 'final_prob': np.float64(0.006501687499999999), 'steps': [{'feature': 'network_load', 'value': np.float64(0.5), 'effect': 'multiply prob by 0.700 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.95), 'effect': 'multiply prob by 1.925 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.05), 'effect': 'multiply prob by 0.965 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.15), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.5,0.95,0.05,0.2,0.006501687499999999,"{'timestamp': 1760866780.217869, 'inputs': {'network_load': np.float64(0.5), 'relay_reputation': np.float64(0.95), 'budget_utilization': np.float64(0.05), 'recent_win_rate': np.float64(0.2)}, 'base_prob': 0.01, 'final_prob': np.float64(0.006501687499999999), 'steps': [{'feature': 'network_load', 'value': np.float64(0.5), 'effect': 'multiply prob by 0.700 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.95), 'effect': 'multiply prob by 1.925 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.05), 'effect': 'multiply prob by 0.965 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.2), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.5,0.95,0.05,0.25,0.006501687499999999,"{'timestamp': 1760866780.217896, 'inputs': {'network_load': np.float64(0.5), 'relay_reputation': np.float64(0.95), 'budget_utilization': np.float64(0.05), 'recent_win_rate': np.float64(0.25)}, 'base_prob': 0.01, 'final_prob': np.float64(0.006501687499999999), 'steps': [{'feature': 'network_load', 'value': np.float64(0.5), 'effect': 'multiply prob by 0.700 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.95), 'effect': 'multiply prob by 1.925 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.05), 'effect': 'multiply prob by 0.965 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.25), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.5,0.95,0.05,0.3,0.006501687499999999,"{'timestamp': 1760866780.217923, 'inputs': {'network_load': np.float64(0.5), 'relay_reputation': np.float64(0.95), 'budget_utilization': np.float64(0.05), 'recent_win_rate': np.float64(0.3)}, 'base_prob': 0.01, 'final_prob': np.float64(0.006501687499999999), 'steps': [{'feature': 'network_load', 'value': np.float64(0.5), 'effect': 'multiply prob by 0.700 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.95), 'effect': 'multiply prob by 1.925 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.05), 'effect': 'multiply prob by 0.965 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.3), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.5,0.95,0.16,0.0,0.011965799880341998,"{'timestamp': 1760866780.2179527, 'inputs': {'network_load': np.float64(0.5), 'relay_reputation': np.float64(0.95), 'budget_utilization': np.float64(0.16), 'recent_win_rate': 1e-09}, 'base_prob': 0.01, 'final_prob': np.float64(0.011965799880341998), 'steps': [{'feature': 'network_load', 'value': np.float64(0.5), 'effect': 'multiply prob by 0.700 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.95), 'effect': 'multiply prob by 1.925 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.16), 'effect': 'multiply prob by 0.888 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': 1e-09, 'effect': 'multiply prob by 1.000 (higher recent wins -> lower prob)'}]}"
0.5,0.95,0.16,0.05,0.005982899999999999,"{'timestamp': 1760866780.217978, 'inputs': {'network_load': np.float64(0.5), 'relay_reputation': np.float64(0.95), 'budget_utilization': np.float64(0.16), 'recent_win_rate': np.float64(0.05)}, 'base_prob': 0.01, 'final_prob': np.float64(0.005982899999999999), 'steps': [{'feature': 'network_load', 'value': np.float64(0.5), 'effect': 'multiply prob by 0.700 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.95), 'effect': 'multiply prob by 1.925 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.16), 'effect': 'multiply prob by 0.888 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.05), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.5,0.95,0.16,0.1,0.005982899999999999,"{'timestamp': 1760866780.2180035, 'inputs': {'network_load': np.float64(0.5), 'relay_reputation': np.float64(0.95), 'budget_utilization': np.float64(0.16), 'recent_win_rate': np.float64(0.1)}, 'base_prob': 0.01, 'final_prob': np.float64(0.005982899999999999), 'steps': [{'feature': 'network_load', 'value': np.float64(0.5), 'effect': 'multiply prob by 0.700 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.95), 'effect': 'multiply prob by 1.925 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.16), 'effect': 'multiply prob by 0.888 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.1), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.5,0.95,0.16,0.15,0.005982899999999999,"{'timestamp': 1760866780.2180285, 'inputs': {'network_load': np.float64(0.5), 'relay_reputation': np.float64(0.95), 'budget_utilization': np.float64(0.16), 'recent_win_rate': np.float64(0.15)}, 'base_prob': 0.01, 'final_prob': np.float64(0.005982899999999999), 'steps': [{'feature': 'network_load', 'value': np.float64(0.5), 'effect': 'multiply prob by 0.700 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.95), 'effect': 'multiply prob by 1.925 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.16), 'effect': 'multiply prob by 0.888 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.15), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.5,0.95,0.16,0.2,0.005982899999999999,"{'timestamp': 1760866780.2180555, 'inputs': {'network_load': np.float64(0.5), 'relay_reputation': np.float64(0.95), 'budget_utilization': np.float64(0.16), 'recent_win_rate': np.float64(0.2)}, 'base_prob': 0.01, 'final_prob': np.float64(0.005982899999999999), 'steps': [{'feature': 'network_load', 'value': np.float64(0.5), 'effect': 'multiply prob by 0.700 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.95), 'effect': 'multiply prob by 1.925 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.16), 'effect': 'multiply prob by 0.888 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.2), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.5,0.95,0.16,0.25,0.005982899999999999,"{'timestamp': 1760866780.2180843, 'inputs': {'network_load': np.float64(0.5), 'relay_reputation': np.float64(0.95), 'budget_utilization': np.float64(0.16), 'recent_win_rate': np.float64(0.25)}, 'base_prob': 0.01, 'final_prob': np.float64(0.005982899999999999), 'steps': [{'feature': 'network_load', 'value': np.float64(0.5), 'effect': 'multiply prob by 0.700 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.95), 'effect': 'multiply prob by 1.925 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.16), 'effect': 'multiply prob by 0.888 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.25), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.5,0.95,0.16,0.3,0.005982899999999999,"{'timestamp': 1760866780.2181094, 'inputs': {'network_load': np.float64(0.5), 'relay_reputation': np.float64(0.95), 'budget_utilization': np.float64(0.16), 'recent_win_rate': np.float64(0.3)}, 'base_prob': 0.01, 'final_prob': np.float64(0.005982899999999999), 'steps': [{'feature': 'network_load', 'value': np.float64(0.5), 'effect': 'multiply prob by 0.700 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.95), 'effect': 'multiply prob by 1.925 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.16), 'effect': 'multiply prob by 0.888 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.3), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.5,0.95,0.26,0.0,0.011022549889774498,"{'timestamp': 1760866780.2181365, 'inputs': {'network_load': np.float64(0.5), 'relay_reputation': np.float64(0.95), 'budget_utilization': np.float64(0.26), 'recent_win_rate': 1e-09}, 'base_prob': 0.01, 'final_prob': np.float64(0.011022549889774498), 'steps': [{'feature': 'network_load', 'value': np.float64(0.5), 'effect': 'multiply prob by 0.700 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.95), 'effect': 'multiply prob by 1.925 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.26), 'effect': 'multiply prob by 0.818 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': 1e-09, 'effect': 'multiply prob by 1.000 (higher recent wins -> lower prob)'}]}"
0.5,0.95,0.26,0.05,0.0055112749999999995,"{'timestamp': 1760866780.2181618, 'inputs': {'network_load': np.float64(0.5), 'relay_reputation': np.float64(0.95), 'budget_utilization': np.float64(0.26), 'recent_win_rate': np.float64(0.05)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0055112749999999995), 'steps': [{'feature': 'network_load', 'value': np.float64(0.5), 'effect': 'multiply prob by 0.700 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.95), 'effect': 'multiply prob by 1.925 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.26), 'effect': 'multiply prob by 0.818 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.05), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.5,0.95,0.26,0.1,0.0055112749999999995,"{'timestamp': 1760866780.218187, 'inputs': {'network_load': np.float64(0.5), 'relay_reputation': np.float64(0.95), 'budget_utilization': np.float64(0.26), 'recent_win_rate': np.float64(0.1)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0055112749999999995), 'steps': [{'feature': 'network_load', 'value': np.float64(0.5), 'effect': 'multiply prob by 0.700 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.95), 'effect': 'multiply prob by 1.925 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.26), 'effect': 'multiply prob by 0.818 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.1), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.5,0.95,0.26,0.15,0.0055112749999999995,"{'timestamp': 1760866780.2182138, 'inputs': {'network_load': np.float64(0.5), 'relay_reputation': np.float64(0.95), 'budget_utilization': np.float64(0.26), 'recent_win_rate': np.float64(0.15)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0055112749999999995), 'steps': [{'feature': 'network_load', 'value': np.float64(0.5), 'effect': 'multiply prob by 0.700 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.95), 'effect': 'multiply prob by 1.925 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.26), 'effect': 'multiply prob by 0.818 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.15), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.5,0.95,0.26,0.2,0.0055112749999999995,"{'timestamp': 1760866780.2182395, 'inputs': {'network_load': np.float64(0.5), 'relay_reputation': np.float64(0.95), 'budget_utilization': np.float64(0.26), 'recent_win_rate': np.float64(0.2)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0055112749999999995), 'steps': [{'feature': 'network_load', 'value': np.float64(0.5), 'effect': 'multiply prob by 0.700 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.95), 'effect': 'multiply prob by 1.925 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.26), 'effect': 'multiply prob by 0.818 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.2), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.5,0.95,0.26,0.25,0.0055112749999999995,"{'timestamp': 1760866780.2182684, 'inputs': {'network_load': np.float64(0.5), 'relay_reputation': np.float64(0.95), 'budget_utilization': np.float64(0.26), 'recent_win_rate': np.float64(0.25)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0055112749999999995), 'steps': [{'feature': 'network_load', 'value': np.float64(0.5), 'effect': 'multiply prob by 0.700 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.95), 'effect': 'multiply prob by 1.925 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.26), 'effect': 'multiply prob by 0.818 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.25), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.5,0.95,0.26,0.3,0.0055112749999999995,"{'timestamp': 1760866780.2182937, 'inputs': {'network_load': np.float64(0.5), 'relay_reputation': np.float64(0.95), 'budget_utilization': np.float64(0.26), 'recent_win_rate': np.float64(0.3)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0055112749999999995), 'steps': [{'feature': 'network_load', 'value': np.float64(0.5), 'effect': 'multiply prob by 0.700 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.95), 'effect': 'multiply prob by 1.925 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.26), 'effect': 'multiply prob by 0.818 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.3), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.5,0.95,0.37,0.0,0.009984974900150248,"{'timestamp': 1760866780.2183206, 'inputs': {'network_load': np.float64(0.5), 'relay_reputation': np.float64(0.95), 'budget_utilization': np.float64(0.37), 'recent_win_rate': 1e-09}, 'base_prob': 0.01, 'final_prob': np.float64(0.009984974900150248), 'steps': [{'feature': 'network_load', 'value': np.float64(0.5), 'effect': 'multiply prob by 0.700 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.95), 'effect': 'multiply prob by 1.925 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.37), 'effect': 'multiply prob by 0.741 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': 1e-09, 'effect': 'multiply prob by 1.000 (higher recent wins -> lower prob)'}]}"
0.5,0.95,0.37,0.05,0.004992487499999999,"{'timestamp': 1760866780.2183459, 'inputs': {'network_load': np.float64(0.5), 'relay_reputation': np.float64(0.95), 'budget_utilization': np.float64(0.37), 'recent_win_rate': np.float64(0.05)}, 'base_prob': 0.01, 'final_prob': np.float64(0.004992487499999999), 'steps': [{'feature': 'network_load', 'value': np.float64(0.5), 'effect': 'multiply prob by 0.700 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.95), 'effect': 'multiply prob by 1.925 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.37), 'effect': 'multiply prob by 0.741 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.05), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.5,0.95,0.37,0.1,0.004992487499999999,"{'timestamp': 1760866780.2184322, 'inputs': {'network_load': np.float64(0.5), 'relay_reputation': np.float64(0.95), 'budget_utilization': np.float64(0.37), 'recent_win_rate': np.float64(0.1)}, 'base_prob': 0.01, 'final_prob': np.float64(0.004992487499999999), 'steps': [{'feature': 'network_load', 'value': np.float64(0.5), 'effect': 'multiply prob by 0.700 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.95), 'effect': 'multiply prob by 1.925 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.37), 'effect': 'multiply prob by 0.741 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.1), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.5,0.95,0.37,0.15,0.004992487499999999,"{'timestamp': 1760866780.2184587, 'inputs': {'network_load': np.float64(0.5), 'relay_reputation': np.float64(0.95), 'budget_utilization': np.float64(0.37), 'recent_win_rate': np.float64(0.15)}, 'base_prob': 0.01, 'final_prob': np.float64(0.004992487499999999), 'steps': [{'feature': 'network_load', 'value': np.float64(0.5), 'effect': 'multiply prob by 0.700 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.95), 'effect': 'multiply prob by 1.925 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.37), 'effect': 'multiply prob by 0.741 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.15), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.5,0.95,0.37,0.2,0.004992487499999999,"{'timestamp': 1760866780.218484, 'inputs': {'network_load': np.float64(0.5), 'relay_reputation': np.float64(0.95), 'budget_utilization': np.float64(0.37), 'recent_win_rate': np.float64(0.2)}, 'base_prob': 0.01, 'final_prob': np.float64(0.004992487499999999), 'steps': [{'feature': 'network_load', 'value': np.float64(0.5), 'effect': 'multiply prob by 0.700 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.95), 'effect': 'multiply prob by 1.925 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.37), 'effect': 'multiply prob by 0.741 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.2), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.5,0.95,0.37,0.25,0.004992487499999999,"{'timestamp': 1760866780.218509, 'inputs': {'network_load': np.float64(0.5), 'relay_reputation': np.float64(0.95), 'budget_utilization': np.float64(0.37), 'recent_win_rate': np.float64(0.25)}, 'base_prob': 0.01, 'final_prob': np.float64(0.004992487499999999), 'steps': [{'feature': 'network_load', 'value': np.float64(0.5), 'effect': 'multiply prob by 0.700 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.95), 'effect': 'multiply prob by 1.925 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.37), 'effect': 'multiply prob by 0.741 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.25), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.5,0.95,0.37,0.3,0.004992487499999999,"{'timestamp': 1760866780.2185392, 'inputs': {'network_load': np.float64(0.5), 'relay_reputation': np.float64(0.95), 'budget_utilization': np.float64(0.37), 'recent_win_rate': np.float64(0.3)}, 'base_prob': 0.01, 'final_prob': np.float64(0.004992487499999999), 'steps': [{'feature': 'network_load', 'value': np.float64(0.5), 'effect': 'multiply prob by 0.700 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.95), 'effect': 'multiply prob by 1.925 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.37), 'effect': 'multiply prob by 0.741 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.3), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.5,0.95,0.48,0.0,0.008947399910525998,"{'timestamp': 1760866780.2185721, 'inputs': {'network_load': np.float64(0.5), 'relay_reputation': np.float64(0.95), 'budget_utilization': np.float64(0.48), 'recent_win_rate': 1e-09}, 'base_prob': 0.01, 'final_prob': np.float64(0.008947399910525998), 'steps': [{'feature': 'network_load', 'value': np.float64(0.5), 'effect': 'multiply prob by 0.700 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.95), 'effect': 'multiply prob by 1.925 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.48), 'effect': 'multiply prob by 0.664 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': 1e-09, 'effect': 'multiply prob by 1.000 (higher recent wins -> lower prob)'}]}"
0.5,0.95,0.48,0.05,0.0044737,"{'timestamp': 1760866780.218598, 'inputs': {'network_load': np.float64(0.5), 'relay_reputation': np.float64(0.95), 'budget_utilization': np.float64(0.48), 'recent_win_rate': np.float64(0.05)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0044737), 'steps': [{'feature': 'network_load', 'value': np.float64(0.5), 'effect': 'multiply prob by 0.700 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.95), 'effect': 'multiply prob by 1.925 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.48), 'effect': 'multiply prob by 0.664 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.05), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.5,0.95,0.48,0.1,0.0044737,"{'timestamp': 1760866780.2186232, 'inputs': {'network_load': np.float64(0.5), 'relay_reputation': np.float64(0.95), 'budget_utilization': np.float64(0.48), 'recent_win_rate': np.float64(0.1)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0044737), 'steps': [{'feature': 'network_load', 'value': np.float64(0.5), 'effect': 'multiply prob by 0.700 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.95), 'effect': 'multiply prob by 1.925 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.48), 'effect': 'multiply prob by 0.664 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.1), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.5,0.95,0.48,0.15,0.0044737,"{'timestamp': 1760866780.2186487, 'inputs': {'network_load': np.float64(0.5), 'relay_reputation': np.float64(0.95), 'budget_utilization': np.float64(0.48), 'recent_win_rate': np.float64(0.15)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0044737), 'steps': [{'feature': 'network_load', 'value': np.float64(0.5), 'effect': 'multiply prob by 0.700 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.95), 'effect': 'multiply prob by 1.925 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.48), 'effect': 'multiply prob by 0.664 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.15), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.5,0.95,0.48,0.2,0.0044737,"{'timestamp': 1760866780.2186737, 'inputs': {'network_load': np.float64(0.5), 'relay_reputation': np.float64(0.95), 'budget_utilization': np.float64(0.48), 'recent_win_rate': np.float64(0.2)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0044737), 'steps': [{'feature': 'network_load', 'value': np.float64(0.5), 'effect': 'multiply prob by 0.700 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.95), 'effect': 'multiply prob by 1.925 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.48), 'effect': 'multiply prob by 0.664 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.2), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.5,0.95,0.48,0.25,0.0044737,"{'timestamp': 1760866780.2187006, 'inputs': {'network_load': np.float64(0.5), 'relay_reputation': np.float64(0.95), 'budget_utilization': np.float64(0.48), 'recent_win_rate': np.float64(0.25)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0044737), 'steps': [{'feature': 'network_load', 'value': np.float64(0.5), 'effect': 'multiply prob by 0.700 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.95), 'effect': 'multiply prob by 1.925 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.48), 'effect': 'multiply prob by 0.664 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.25), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.5,0.95,0.48,0.3,0.0044737,"{'timestamp': 1760866780.2187257, 'inputs': {'network_load': np.float64(0.5), 'relay_reputation': np.float64(0.95), 'budget_utilization': np.float64(0.48), 'recent_win_rate': np.float64(0.3)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0044737), 'steps': [{'feature': 'network_load', 'value': np.float64(0.5), 'effect': 'multiply prob by 0.700 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.95), 'effect': 'multiply prob by 1.925 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.48), 'effect': 'multiply prob by 0.664 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.3), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.5,0.95,0.59,0.0,0.007909824920901748,"{'timestamp': 1760866780.2187545, 'inputs': {'network_load': np.float64(0.5), 'relay_reputation': np.float64(0.95), 'budget_utilization': np.float64(0.59), 'recent_win_rate': 1e-09}, 'base_prob': 0.01, 'final_prob': np.float64(0.007909824920901748), 'steps': [{'feature': 'network_load', 'value': np.float64(0.5), 'effect': 'multiply prob by 0.700 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.95), 'effect': 'multiply prob by 1.925 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.59), 'effect': 'multiply prob by 0.587 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': 1e-09, 'effect': 'multiply prob by 1.000 (higher recent wins -> lower prob)'}]}"
0.5,0.95,0.59,0.05,0.003954912499999999,"{'timestamp': 1760866780.2187798, 'inputs': {'network_load': np.float64(0.5), 'relay_reputation': np.float64(0.95), 'budget_utilization': np.float64(0.59), 'recent_win_rate': np.float64(0.05)}, 'base_prob': 0.01, 'final_prob': np.float64(0.003954912499999999), 'steps': [{'feature': 'network_load', 'value': np.float64(0.5), 'effect': 'multiply prob by 0.700 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.95), 'effect': 'multiply prob by 1.925 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.59), 'effect': 'multiply prob by 0.587 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.05), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.5,0.95,0.59,0.1,0.003954912499999999,"{'timestamp': 1760866780.218805, 'inputs': {'network_load': np.float64(0.5), 'relay_reputation': np.float64(0.95), 'budget_utilization': np.float64(0.59), 'recent_win_rate': np.float64(0.1)}, 'base_prob': 0.01, 'final_prob': np.float64(0.003954912499999999), 'steps': [{'feature': 'network_load', 'value': np.float64(0.5), 'effect': 'multiply prob by 0.700 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.95), 'effect': 'multiply prob by 1.925 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.59), 'effect': 'multiply prob by 0.587 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.1), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.5,0.95,0.59,0.15,0.003954912499999999,"{'timestamp': 1760866780.21883, 'inputs': {'network_load': np.float64(0.5), 'relay_reputation': np.float64(0.95), 'budget_utilization': np.float64(0.59), 'recent_win_rate': np.float64(0.15)}, 'base_prob': 0.01, 'final_prob': np.float64(0.003954912499999999), 'steps': [{'feature': 'network_load', 'value': np.float64(0.5), 'effect': 'multiply prob by 0.700 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.95), 'effect': 'multiply prob by 1.925 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.59), 'effect': 'multiply prob by 0.587 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.15), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.5,0.95,0.59,0.2,0.003954912499999999,"{'timestamp': 1760866780.2188575, 'inputs': {'network_load': np.float64(0.5), 'relay_reputation': np.float64(0.95), 'budget_utilization': np.float64(0.59), 'recent_win_rate': np.float64(0.2)}, 'base_prob': 0.01, 'final_prob': np.float64(0.003954912499999999), 'steps': [{'feature': 'network_load', 'value': np.float64(0.5), 'effect': 'multiply prob by 0.700 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.95), 'effect': 'multiply prob by 1.925 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.59), 'effect': 'multiply prob by 0.587 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.2), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.5,0.95,0.59,0.25,0.003954912499999999,"{'timestamp': 1760866780.2188826, 'inputs': {'network_load': np.float64(0.5), 'relay_reputation': np.float64(0.95), 'budget_utilization': np.float64(0.59), 'recent_win_rate': np.float64(0.25)}, 'base_prob': 0.01, 'final_prob': np.float64(0.003954912499999999), 'steps': [{'feature': 'network_load', 'value': np.float64(0.5), 'effect': 'multiply prob by 0.700 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.95), 'effect': 'multiply prob by 1.925 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.59), 'effect': 'multiply prob by 0.587 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.25), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.5,0.95,0.59,0.3,0.003954912499999999,"{'timestamp': 1760866780.2189095, 'inputs': {'network_load': np.float64(0.5), 'relay_reputation': np.float64(0.95), 'budget_utilization': np.float64(0.59), 'recent_win_rate': np.float64(0.3)}, 'base_prob': 0.01, 'final_prob': np.float64(0.003954912499999999), 'steps': [{'feature': 'network_load', 'value': np.float64(0.5), 'effect': 'multiply prob by 0.700 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.95), 'effect': 'multiply prob by 1.925 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.59), 'effect': 'multiply prob by 0.587 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.3), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.5,0.95,0.69,0.0,0.006966574930334249,"{'timestamp': 1760866780.2189367, 'inputs': {'network_load': np.float64(0.5), 'relay_reputation': np.float64(0.95), 'budget_utilization': np.float64(0.69), 'recent_win_rate': 1e-09}, 'base_prob': 0.01, 'final_prob': np.float64(0.006966574930334249), 'steps': [{'feature': 'network_load', 'value': np.float64(0.5), 'effect': 'multiply prob by 0.700 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.95), 'effect': 'multiply prob by 1.925 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.69), 'effect': 'multiply prob by 0.517 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': 1e-09, 'effect': 'multiply prob by 1.000 (higher recent wins -> lower prob)'}]}"
0.5,0.95,0.69,0.05,0.0034832875,"{'timestamp': 1760866780.2189639, 'inputs': {'network_load': np.float64(0.5), 'relay_reputation': np.float64(0.95), 'budget_utilization': np.float64(0.69), 'recent_win_rate': np.float64(0.05)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0034832875), 'steps': [{'feature': 'network_load', 'value': np.float64(0.5), 'effect': 'multiply prob by 0.700 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.95), 'effect': 'multiply prob by 1.925 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.69), 'effect': 'multiply prob by 0.517 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.05), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.5,0.95,0.69,0.1,0.0034832875,"{'timestamp': 1760866780.2189932, 'inputs': {'network_load': np.float64(0.5), 'relay_reputation': np.float64(0.95), 'budget_utilization': np.float64(0.69), 'recent_win_rate': np.float64(0.1)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0034832875), 'steps': [{'feature': 'network_load', 'value': np.float64(0.5), 'effect': 'multiply prob by 0.700 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.95), 'effect': 'multiply prob by 1.925 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.69), 'effect': 'multiply prob by 0.517 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.1), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.5,0.95,0.69,0.15,0.0034832875,"{'timestamp': 1760866780.2190185, 'inputs': {'network_load': np.float64(0.5), 'relay_reputation': np.float64(0.95), 'budget_utilization': np.float64(0.69), 'recent_win_rate': np.float64(0.15)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0034832875), 'steps': [{'feature': 'network_load', 'value': np.float64(0.5), 'effect': 'multiply prob by 0.700 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.95), 'effect': 'multiply prob by 1.925 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.69), 'effect': 'multiply prob by 0.517 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.15), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.5,0.95,0.69,0.2,0.0034832875,"{'timestamp': 1760866780.2190483, 'inputs': {'network_load': np.float64(0.5), 'relay_reputation': np.float64(0.95), 'budget_utilization': np.float64(0.69), 'recent_win_rate': np.float64(0.2)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0034832875), 'steps': [{'feature': 'network_load', 'value': np.float64(0.5), 'effect': 'multiply prob by 0.700 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.95), 'effect': 'multiply prob by 1.925 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.69), 'effect': 'multiply prob by 0.517 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.2), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.5,0.95,0.69,0.25,0.0034832875,"{'timestamp': 1760866780.2190733, 'inputs': {'network_load': np.float64(0.5), 'relay_reputation': np.float64(0.95), 'budget_utilization': np.float64(0.69), 'recent_win_rate': np.float64(0.25)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0034832875), 'steps': [{'feature': 'network_load', 'value': np.float64(0.5), 'effect': 'multiply prob by 0.700 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.95), 'effect': 'multiply prob by 1.925 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.69), 'effect': 'multiply prob by 0.517 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.25), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.5,0.95,0.69,0.3,0.0034832875,"{'timestamp': 1760866780.2191007, 'inputs': {'network_load': np.float64(0.5), 'relay_reputation': np.float64(0.95), 'budget_utilization': np.float64(0.69), 'recent_win_rate': np.float64(0.3)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0034832875), 'steps': [{'feature': 'network_load', 'value': np.float64(0.5), 'effect': 'multiply prob by 0.700 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.95), 'effect': 'multiply prob by 1.925 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.69), 'effect': 'multiply prob by 0.517 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.3), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.5,0.95,0.8,0.0,0.005928999940709999,"{'timestamp': 1760866780.2192137, 'inputs': {'network_load': np.float64(0.5), 'relay_reputation': np.float64(0.95), 'budget_utilization': np.float64(0.8), 'recent_win_rate': 1e-09}, 'base_prob': 0.01, 'final_prob': np.float64(0.005928999940709999), 'steps': [{'feature': 'network_load', 'value': np.float64(0.5), 'effect': 'multiply prob by 0.700 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.95), 'effect': 'multiply prob by 1.925 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.8), 'effect': 'multiply prob by 0.440 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': 1e-09, 'effect': 'multiply prob by 1.000 (higher recent wins -> lower prob)'}]}"
0.5,0.95,0.8,0.05,0.0029644999999999997,"{'timestamp': 1760866780.219254, 'inputs': {'network_load': np.float64(0.5), 'relay_reputation': np.float64(0.95), 'budget_utilization': np.float64(0.8), 'recent_win_rate': np.float64(0.05)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0029644999999999997), 'steps': [{'feature': 'network_load', 'value': np.float64(0.5), 'effect': 'multiply prob by 0.700 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.95), 'effect': 'multiply prob by 1.925 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.8), 'effect': 'multiply prob by 0.440 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.05), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.5,0.95,0.8,0.1,0.0029644999999999997,"{'timestamp': 1760866780.2192845, 'inputs': {'network_load': np.float64(0.5), 'relay_reputation': np.float64(0.95), 'budget_utilization': np.float64(0.8), 'recent_win_rate': np.float64(0.1)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0029644999999999997), 'steps': [{'feature': 'network_load', 'value': np.float64(0.5), 'effect': 'multiply prob by 0.700 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.95), 'effect': 'multiply prob by 1.925 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.8), 'effect': 'multiply prob by 0.440 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.1), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.5,0.95,0.8,0.15,0.0029644999999999997,"{'timestamp': 1760866780.2193098, 'inputs': {'network_load': np.float64(0.5), 'relay_reputation': np.float64(0.95), 'budget_utilization': np.float64(0.8), 'recent_win_rate': np.float64(0.15)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0029644999999999997), 'steps': [{'feature': 'network_load', 'value': np.float64(0.5), 'effect': 'multiply prob by 0.700 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.95), 'effect': 'multiply prob by 1.925 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.8), 'effect': 'multiply prob by 0.440 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.15), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.5,0.95,0.8,0.2,0.0029644999999999997,"{'timestamp': 1760866780.2193348, 'inputs': {'network_load': np.float64(0.5), 'relay_reputation': np.float64(0.95), 'budget_utilization': np.float64(0.8), 'recent_win_rate': np.float64(0.2)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0029644999999999997), 'steps': [{'feature': 'network_load', 'value': np.float64(0.5), 'effect': 'multiply prob by 0.700 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.95), 'effect': 'multiply prob by 1.925 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.8), 'effect': 'multiply prob by 0.440 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.2), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.5,0.95,0.8,0.25,0.0029644999999999997,"{'timestamp': 1760866780.2193618, 'inputs': {'network_load': np.float64(0.5), 'relay_reputation': np.float64(0.95), 'budget_utilization': np.float64(0.8), 'recent_win_rate': np.float64(0.25)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0029644999999999997), 'steps': [{'feature': 'network_load', 'value': np.float64(0.5), 'effect': 'multiply prob by 0.700 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.95), 'effect': 'multiply prob by 1.925 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.8), 'effect': 'multiply prob by 0.440 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.25), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.5,0.95,0.8,0.3,0.0029644999999999997,"{'timestamp': 1760866780.219387, 'inputs': {'network_load': np.float64(0.5), 'relay_reputation': np.float64(0.95), 'budget_utilization': np.float64(0.8), 'recent_win_rate': np.float64(0.3)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0029644999999999997), 'steps': [{'feature': 'network_load', 'value': np.float64(0.5), 'effect': 'multiply prob by 0.700 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.95), 'effect': 'multiply prob by 1.925 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.8), 'effect': 'multiply prob by 0.440 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.3), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.6,0.4,0.05,0.0,0.006793599932064001,"{'timestamp': 1760866780.2194183, 'inputs': {'network_load': np.float64(0.6), 'relay_reputation': np.float64(0.4), 'budget_utilization': np.float64(0.05), 'recent_win_rate': 1e-09}, 'base_prob': 0.01, 'final_prob': np.float64(0.006793599932064001), 'steps': [{'feature': 'network_load', 'value': np.float64(0.6), 'effect': 'multiply prob by 0.640 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.4), 'effect': 'multiply prob by 1.100 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.05), 'effect': 'multiply prob by 0.965 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': 1e-09, 'effect': 'multiply prob by 1.000 (higher recent wins -> lower prob)'}]}"
0.6,0.4,0.05,0.05,0.0033968000000000006,"{'timestamp': 1760866780.219444, 'inputs': {'network_load': np.float64(0.6), 'relay_reputation': np.float64(0.4), 'budget_utilization': np.float64(0.05), 'recent_win_rate': np.float64(0.05)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0033968000000000006), 'steps': [{'feature': 'network_load', 'value': np.float64(0.6), 'effect': 'multiply prob by 0.640 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.4), 'effect': 'multiply prob by 1.100 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.05), 'effect': 'multiply prob by 0.965 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.05), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.6,0.4,0.05,0.1,0.0033968000000000006,"{'timestamp': 1760866780.2194693, 'inputs': {'network_load': np.float64(0.6), 'relay_reputation': np.float64(0.4), 'budget_utilization': np.float64(0.05), 'recent_win_rate': np.float64(0.1)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0033968000000000006), 'steps': [{'feature': 'network_load', 'value': np.float64(0.6), 'effect': 'multiply prob by 0.640 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.4), 'effect': 'multiply prob by 1.100 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.05), 'effect': 'multiply prob by 0.965 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.1), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.6,0.4,0.05,0.15,0.0033968000000000006,"{'timestamp': 1760866780.2194982, 'inputs': {'network_load': np.float64(0.6), 'relay_reputation': np.float64(0.4), 'budget_utilization': np.float64(0.05), 'recent_win_rate': np.float64(0.15)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0033968000000000006), 'steps': [{'feature': 'network_load', 'value': np.float64(0.6), 'effect': 'multiply prob by 0.640 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.4), 'effect': 'multiply prob by 1.100 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.05), 'effect': 'multiply prob by 0.965 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.15), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.6,0.4,0.05,0.2,0.0033968000000000006,"{'timestamp': 1760866780.2195268, 'inputs': {'network_load': np.float64(0.6), 'relay_reputation': np.float64(0.4), 'budget_utilization': np.float64(0.05), 'recent_win_rate': np.float64(0.2)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0033968000000000006), 'steps': [{'feature': 'network_load', 'value': np.float64(0.6), 'effect': 'multiply prob by 0.640 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.4), 'effect': 'multiply prob by 1.100 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.05), 'effect': 'multiply prob by 0.965 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.2), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.6,0.4,0.05,0.25,0.0033968000000000006,"{'timestamp': 1760866780.219552, 'inputs': {'network_load': np.float64(0.6), 'relay_reputation': np.float64(0.4), 'budget_utilization': np.float64(0.05), 'recent_win_rate': np.float64(0.25)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0033968000000000006), 'steps': [{'feature': 'network_load', 'value': np.float64(0.6), 'effect': 'multiply prob by 0.640 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.4), 'effect': 'multiply prob by 1.100 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.05), 'effect': 'multiply prob by 0.965 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.25), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.6,0.4,0.05,0.3,0.0033968000000000006,"{'timestamp': 1760866780.2195768, 'inputs': {'network_load': np.float64(0.6), 'relay_reputation': np.float64(0.4), 'budget_utilization': np.float64(0.05), 'recent_win_rate': np.float64(0.3)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0033968000000000006), 'steps': [{'feature': 'network_load', 'value': np.float64(0.6), 'effect': 'multiply prob by 0.640 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.4), 'effect': 'multiply prob by 1.100 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.05), 'effect': 'multiply prob by 0.965 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.3), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.6,0.4,0.16,0.0,0.0062515199374848,"{'timestamp': 1760866780.2196038, 'inputs': {'network_load': np.float64(0.6), 'relay_reputation': np.float64(0.4), 'budget_utilization': np.float64(0.16), 'recent_win_rate': 1e-09}, 'base_prob': 0.01, 'final_prob': np.float64(0.0062515199374848), 'steps': [{'feature': 'network_load', 'value': np.float64(0.6), 'effect': 'multiply prob by 0.640 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.4), 'effect': 'multiply prob by 1.100 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.16), 'effect': 'multiply prob by 0.888 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': 1e-09, 'effect': 'multiply prob by 1.000 (higher recent wins -> lower prob)'}]}"
0.6,0.4,0.16,0.05,0.0031257600000000004,"{'timestamp': 1760866780.2196288, 'inputs': {'network_load': np.float64(0.6), 'relay_reputation': np.float64(0.4), 'budget_utilization': np.float64(0.16), 'recent_win_rate': np.float64(0.05)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0031257600000000004), 'steps': [{'feature': 'network_load', 'value': np.float64(0.6), 'effect': 'multiply prob by 0.640 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.4), 'effect': 'multiply prob by 1.100 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.16), 'effect': 'multiply prob by 0.888 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.05), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.6,0.4,0.16,0.1,0.0031257600000000004,"{'timestamp': 1760866780.2196562, 'inputs': {'network_load': np.float64(0.6), 'relay_reputation': np.float64(0.4), 'budget_utilization': np.float64(0.16), 'recent_win_rate': np.float64(0.1)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0031257600000000004), 'steps': [{'feature': 'network_load', 'value': np.float64(0.6), 'effect': 'multiply prob by 0.640 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.4), 'effect': 'multiply prob by 1.100 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.16), 'effect': 'multiply prob by 0.888 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.1), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.6,0.4,0.16,0.15,0.0031257600000000004,"{'timestamp': 1760866780.2196834, 'inputs': {'network_load': np.float64(0.6), 'relay_reputation': np.float64(0.4), 'budget_utilization': np.float64(0.16), 'recent_win_rate': np.float64(0.15)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0031257600000000004), 'steps': [{'feature': 'network_load', 'value': np.float64(0.6), 'effect': 'multiply prob by 0.640 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.4), 'effect': 'multiply prob by 1.100 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.16), 'effect': 'multiply prob by 0.888 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.15), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.6,0.4,0.16,0.2,0.0031257600000000004,"{'timestamp': 1760866780.21971, 'inputs': {'network_load': np.float64(0.6), 'relay_reputation': np.float64(0.4), 'budget_utilization': np.float64(0.16), 'recent_win_rate': np.float64(0.2)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0031257600000000004), 'steps': [{'feature': 'network_load', 'value': np.float64(0.6), 'effect': 'multiply prob by 0.640 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.4), 'effect': 'multiply prob by 1.100 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.16), 'effect': 'multiply prob by 0.888 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.2), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.6,0.4,0.16,0.25,0.0031257600000000004,"{'timestamp': 1760866780.2197354, 'inputs': {'network_load': np.float64(0.6), 'relay_reputation': np.float64(0.4), 'budget_utilization': np.float64(0.16), 'recent_win_rate': np.float64(0.25)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0031257600000000004), 'steps': [{'feature': 'network_load', 'value': np.float64(0.6), 'effect': 'multiply prob by 0.640 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.4), 'effect': 'multiply prob by 1.100 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.16), 'effect': 'multiply prob by 0.888 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.25), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.6,0.4,0.16,0.3,0.0031257600000000004,"{'timestamp': 1760866780.2197607, 'inputs': {'network_load': np.float64(0.6), 'relay_reputation': np.float64(0.4), 'budget_utilization': np.float64(0.16), 'recent_win_rate': np.float64(0.3)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0031257600000000004), 'steps': [{'feature': 'network_load', 'value': np.float64(0.6), 'effect': 'multiply prob by 0.640 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.4), 'effect': 'multiply prob by 1.100 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.16), 'effect': 'multiply prob by 0.888 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.3), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.6,0.4,0.26,0.0,0.0057587199424128,"{'timestamp': 1760866780.219792, 'inputs': {'network_load': np.float64(0.6), 'relay_reputation': np.float64(0.4), 'budget_utilization': np.float64(0.26), 'recent_win_rate': 1e-09}, 'base_prob': 0.01, 'final_prob': np.float64(0.0057587199424128), 'steps': [{'feature': 'network_load', 'value': np.float64(0.6), 'effect': 'multiply prob by 0.640 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.4), 'effect': 'multiply prob by 1.100 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.26), 'effect': 'multiply prob by 0.818 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': 1e-09, 'effect': 'multiply prob by 1.000 (higher recent wins -> lower prob)'}]}"
0.6,0.4,0.26,0.05,0.0028793600000000005,"{'timestamp': 1760866780.219843, 'inputs': {'network_load': np.float64(0.6), 'relay_reputation': np.float64(0.4), 'budget_utilization': np.float64(0.26), 'recent_win_rate': np.float64(0.05)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0028793600000000005), 'steps': [{'feature': 'network_load', 'value': np.float64(0.6), 'effect': 'multiply prob by 0.640 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.4), 'effect': 'multiply prob by 1.100 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.26), 'effect': 'multiply prob by 0.818 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.05), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.6,0.4,0.26,0.1,0.0028793600000000005,"{'timestamp': 1760866780.2198684, 'inputs': {'network_load': np.float64(0.6), 'relay_reputation': np.float64(0.4), 'budget_utilization': np.float64(0.26), 'recent_win_rate': np.float64(0.1)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0028793600000000005), 'steps': [{'feature': 'network_load', 'value': np.float64(0.6), 'effect': 'multiply prob by 0.640 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.4), 'effect': 'multiply prob by 1.100 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.26), 'effect': 'multiply prob by 0.818 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.1), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.6,0.4,0.26,0.15,0.0028793600000000005,"{'timestamp': 1760866780.2198935, 'inputs': {'network_load': np.float64(0.6), 'relay_reputation': np.float64(0.4), 'budget_utilization': np.float64(0.26), 'recent_win_rate': np.float64(0.15)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0028793600000000005), 'steps': [{'feature': 'network_load', 'value': np.float64(0.6), 'effect': 'multiply prob by 0.640 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.4), 'effect': 'multiply prob by 1.100 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.26), 'effect': 'multiply prob by 0.818 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.15), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.6,0.4,0.26,0.2,0.0028793600000000005,"{'timestamp': 1760866780.219919, 'inputs': {'network_load': np.float64(0.6), 'relay_reputation': np.float64(0.4), 'budget_utilization': np.float64(0.26), 'recent_win_rate': np.float64(0.2)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0028793600000000005), 'steps': [{'feature': 'network_load', 'value': np.float64(0.6), 'effect': 'multiply prob by 0.640 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.4), 'effect': 'multiply prob by 1.100 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.26), 'effect': 'multiply prob by 0.818 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.2), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.6,0.4,0.26,0.25,0.0028793600000000005,"{'timestamp': 1760866780.2199461, 'inputs': {'network_load': np.float64(0.6), 'relay_reputation': np.float64(0.4), 'budget_utilization': np.float64(0.26), 'recent_win_rate': np.float64(0.25)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0028793600000000005), 'steps': [{'feature': 'network_load', 'value': np.float64(0.6), 'effect': 'multiply prob by 0.640 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.4), 'effect': 'multiply prob by 1.100 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.26), 'effect': 'multiply prob by 0.818 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.25), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.6,0.4,0.26,0.3,0.0028793600000000005,"{'timestamp': 1760866780.2199996, 'inputs': {'network_load': np.float64(0.6), 'relay_reputation': np.float64(0.4), 'budget_utilization': np.float64(0.26), 'recent_win_rate': np.float64(0.3)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0028793600000000005), 'steps': [{'feature': 'network_load', 'value': np.float64(0.6), 'effect': 'multiply prob by 0.640 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.4), 'effect': 'multiply prob by 1.100 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.26), 'effect': 'multiply prob by 0.818 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.3), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.6,0.4,0.37,0.0,0.0052166399478336,"{'timestamp': 1760866780.2200296, 'inputs': {'network_load': np.float64(0.6), 'relay_reputation': np.float64(0.4), 'budget_utilization': np.float64(0.37), 'recent_win_rate': 1e-09}, 'base_prob': 0.01, 'final_prob': np.float64(0.0052166399478336), 'steps': [{'feature': 'network_load', 'value': np.float64(0.6), 'effect': 'multiply prob by 0.640 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.4), 'effect': 'multiply prob by 1.100 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.37), 'effect': 'multiply prob by 0.741 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': 1e-09, 'effect': 'multiply prob by 1.000 (higher recent wins -> lower prob)'}]}"
0.6,0.4,0.37,0.05,0.0026083200000000003,"{'timestamp': 1760866780.2200553, 'inputs': {'network_load': np.float64(0.6), 'relay_reputation': np.float64(0.4), 'budget_utilization': np.float64(0.37), 'recent_win_rate': np.float64(0.05)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0026083200000000003), 'steps': [{'feature': 'network_load', 'value': np.float64(0.6), 'effect': 'multiply prob by 0.640 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.4), 'effect': 'multiply prob by 1.100 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.37), 'effect': 'multiply prob by 0.741 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.05), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.6,0.4,0.37,0.1,0.0026083200000000003,"{'timestamp': 1760866780.2200806, 'inputs': {'network_load': np.float64(0.6), 'relay_reputation': np.float64(0.4), 'budget_utilization': np.float64(0.37), 'recent_win_rate': np.float64(0.1)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0026083200000000003), 'steps': [{'feature': 'network_load', 'value': np.float64(0.6), 'effect': 'multiply prob by 0.640 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.4), 'effect': 'multiply prob by 1.100 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.37), 'effect': 'multiply prob by 0.741 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.1), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.6,0.4,0.37,0.15,0.0026083200000000003,"{'timestamp': 1760866780.220106, 'inputs': {'network_load': np.float64(0.6), 'relay_reputation': np.float64(0.4), 'budget_utilization': np.float64(0.37), 'recent_win_rate': np.float64(0.15)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0026083200000000003), 'steps': [{'feature': 'network_load', 'value': np.float64(0.6), 'effect': 'multiply prob by 0.640 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.4), 'effect': 'multiply prob by 1.100 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.37), 'effect': 'multiply prob by 0.741 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.15), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.6,0.4,0.37,0.2,0.0026083200000000003,"{'timestamp': 1760866780.2201881, 'inputs': {'network_load': np.float64(0.6), 'relay_reputation': np.float64(0.4), 'budget_utilization': np.float64(0.37), 'recent_win_rate': np.float64(0.2)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0026083200000000003), 'steps': [{'feature': 'network_load', 'value': np.float64(0.6), 'effect': 'multiply prob by 0.640 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.4), 'effect': 'multiply prob by 1.100 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.37), 'effect': 'multiply prob by 0.741 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.2), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.6,0.4,0.37,0.25,0.0026083200000000003,"{'timestamp': 1760866780.220215, 'inputs': {'network_load': np.float64(0.6), 'relay_reputation': np.float64(0.4), 'budget_utilization': np.float64(0.37), 'recent_win_rate': np.float64(0.25)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0026083200000000003), 'steps': [{'feature': 'network_load', 'value': np.float64(0.6), 'effect': 'multiply prob by 0.640 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.4), 'effect': 'multiply prob by 1.100 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.37), 'effect': 'multiply prob by 0.741 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.25), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.6,0.4,0.37,0.3,0.0026083200000000003,"{'timestamp': 1760866780.2202435, 'inputs': {'network_load': np.float64(0.6), 'relay_reputation': np.float64(0.4), 'budget_utilization': np.float64(0.37), 'recent_win_rate': np.float64(0.3)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0026083200000000003), 'steps': [{'feature': 'network_load', 'value': np.float64(0.6), 'effect': 'multiply prob by 0.640 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.4), 'effect': 'multiply prob by 1.100 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.37), 'effect': 'multiply prob by 0.741 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.3), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.6,0.4,0.48,0.0,0.004674559953254401,"{'timestamp': 1760866780.220275, 'inputs': {'network_load': np.float64(0.6), 'relay_reputation': np.float64(0.4), 'budget_utilization': np.float64(0.48), 'recent_win_rate': 1e-09}, 'base_prob': 0.01, 'final_prob': np.float64(0.004674559953254401), 'steps': [{'feature': 'network_load', 'value': np.float64(0.6), 'effect': 'multiply prob by 0.640 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.4), 'effect': 'multiply prob by 1.100 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.48), 'effect': 'multiply prob by 0.664 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': 1e-09, 'effect': 'multiply prob by 1.000 (higher recent wins -> lower prob)'}]}"
0.6,0.4,0.48,0.05,0.0023372800000000006,"{'timestamp': 1760866780.2203004, 'inputs': {'network_load': np.float64(0.6), 'relay_reputation': np.float64(0.4), 'budget_utilization': np.float64(0.48), 'recent_win_rate': np.float64(0.05)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0023372800000000006), 'steps': [{'feature': 'network_load', 'value': np.float64(0.6), 'effect': 'multiply prob by 0.640 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.4), 'effect': 'multiply prob by 1.100 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.48), 'effect': 'multiply prob by 0.664 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.05), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.6,0.4,0.48,0.1,0.0023372800000000006,"{'timestamp': 1760866780.2203276, 'inputs': {'network_load': np.float64(0.6), 'relay_reputation': np.float64(0.4), 'budget_utilization': np.float64(0.48), 'recent_win_rate': np.float64(0.1)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0023372800000000006), 'steps': [{'feature': 'network_load', 'value': np.float64(0.6), 'effect': 'multiply prob by 0.640 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.4), 'effect': 'multiply prob by 1.100 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.48), 'effect': 'multiply prob by 0.664 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.1), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.6,0.4,0.48,0.15,0.0023372800000000006,"{'timestamp': 1760866780.2203531, 'inputs': {'network_load': np.float64(0.6), 'relay_reputation': np.float64(0.4), 'budget_utilization': np.float64(0.48), 'recent_win_rate': np.float64(0.15)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0023372800000000006), 'steps': [{'feature': 'network_load', 'value': np.float64(0.6), 'effect': 'multiply prob by 0.640 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.4), 'effect': 'multiply prob by 1.100 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.48), 'effect': 'multiply prob by 0.664 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.15), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.6,0.4,0.48,0.2,0.0023372800000000006,"{'timestamp': 1760866780.2203784, 'inputs': {'network_load': np.float64(0.6), 'relay_reputation': np.float64(0.4), 'budget_utilization': np.float64(0.48), 'recent_win_rate': np.float64(0.2)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0023372800000000006), 'steps': [{'feature': 'network_load', 'value': np.float64(0.6), 'effect': 'multiply prob by 0.640 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.4), 'effect': 'multiply prob by 1.100 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.48), 'effect': 'multiply prob by 0.664 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.2), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.6,0.4,0.48,0.25,0.0023372800000000006,"{'timestamp': 1760866780.2204037, 'inputs': {'network_load': np.float64(0.6), 'relay_reputation': np.float64(0.4), 'budget_utilization': np.float64(0.48), 'recent_win_rate': np.float64(0.25)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0023372800000000006), 'steps': [{'feature': 'network_load', 'value': np.float64(0.6), 'effect': 'multiply prob by 0.640 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.4), 'effect': 'multiply prob by 1.100 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.48), 'effect': 'multiply prob by 0.664 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.25), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.6,0.4,0.48,0.3,0.0023372800000000006,"{'timestamp': 1760866780.2204287, 'inputs': {'network_load': np.float64(0.6), 'relay_reputation': np.float64(0.4), 'budget_utilization': np.float64(0.48), 'recent_win_rate': np.float64(0.3)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0023372800000000006), 'steps': [{'feature': 'network_load', 'value': np.float64(0.6), 'effect': 'multiply prob by 0.640 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.4), 'effect': 'multiply prob by 1.100 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.48), 'effect': 'multiply prob by 0.664 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.3), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.6,0.4,0.59,0.0,0.0041324799586752,"{'timestamp': 1760866780.2204611, 'inputs': {'network_load': np.float64(0.6), 'relay_reputation': np.float64(0.4), 'budget_utilization': np.float64(0.59), 'recent_win_rate': 1e-09}, 'base_prob': 0.01, 'final_prob': np.float64(0.0041324799586752), 'steps': [{'feature': 'network_load', 'value': np.float64(0.6), 'effect': 'multiply prob by 0.640 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.4), 'effect': 'multiply prob by 1.100 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.59), 'effect': 'multiply prob by 0.587 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': 1e-09, 'effect': 'multiply prob by 1.000 (higher recent wins -> lower prob)'}]}"
0.6,0.4,0.59,0.05,0.00206624,"{'timestamp': 1760866780.2204878, 'inputs': {'network_load': np.float64(0.6), 'relay_reputation': np.float64(0.4), 'budget_utilization': np.float64(0.59), 'recent_win_rate': np.float64(0.05)}, 'base_prob': 0.01, 'final_prob': np.float64(0.00206624), 'steps': [{'feature': 'network_load', 'value': np.float64(0.6), 'effect': 'multiply prob by 0.640 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.4), 'effect': 'multiply prob by 1.100 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.59), 'effect': 'multiply prob by 0.587 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.05), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.6,0.4,0.59,0.1,0.00206624,"{'timestamp': 1760866780.2205133, 'inputs': {'network_load': np.float64(0.6), 'relay_reputation': np.float64(0.4), 'budget_utilization': np.float64(0.59), 'recent_win_rate': np.float64(0.1)}, 'base_prob': 0.01, 'final_prob': np.float64(0.00206624), 'steps': [{'feature': 'network_load', 'value': np.float64(0.6), 'effect': 'multiply prob by 0.640 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.4), 'effect': 'multiply prob by 1.100 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.59), 'effect': 'multiply prob by 0.587 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.1), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.6,0.4,0.59,0.15,0.00206624,"{'timestamp': 1760866780.2205384, 'inputs': {'network_load': np.float64(0.6), 'relay_reputation': np.float64(0.4), 'budget_utilization': np.float64(0.59), 'recent_win_rate': np.float64(0.15)}, 'base_prob': 0.01, 'final_prob': np.float64(0.00206624), 'steps': [{'feature': 'network_load', 'value': np.float64(0.6), 'effect': 'multiply prob by 0.640 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.4), 'effect': 'multiply prob by 1.100 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.59), 'effect': 'multiply prob by 0.587 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.15), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.6,0.4,0.59,0.2,0.00206624,"{'timestamp': 1760866780.2205653, 'inputs': {'network_load': np.float64(0.6), 'relay_reputation': np.float64(0.4), 'budget_utilization': np.float64(0.59), 'recent_win_rate': np.float64(0.2)}, 'base_prob': 0.01, 'final_prob': np.float64(0.00206624), 'steps': [{'feature': 'network_load', 'value': np.float64(0.6), 'effect': 'multiply prob by 0.640 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.4), 'effect': 'multiply prob by 1.100 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.59), 'effect': 'multiply prob by 0.587 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.2), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.6,0.4,0.59,0.25,0.00206624,"{'timestamp': 1760866780.2205906, 'inputs': {'network_load': np.float64(0.6), 'relay_reputation': np.float64(0.4), 'budget_utilization': np.float64(0.59), 'recent_win_rate': np.float64(0.25)}, 'base_prob': 0.01, 'final_prob': np.float64(0.00206624), 'steps': [{'feature': 'network_load', 'value': np.float64(0.6), 'effect': 'multiply prob by 0.640 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.4), 'effect': 'multiply prob by 1.100 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.59), 'effect': 'multiply prob by 0.587 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.25), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.6,0.4,0.59,0.3,0.00206624,"{'timestamp': 1760866780.2206175, 'inputs': {'network_load': np.float64(0.6), 'relay_reputation': np.float64(0.4), 'budget_utilization': np.float64(0.59), 'recent_win_rate': np.float64(0.3)}, 'base_prob': 0.01, 'final_prob': np.float64(0.00206624), 'steps': [{'feature': 'network_load', 'value': np.float64(0.6), 'effect': 'multiply prob by 0.640 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.4), 'effect': 'multiply prob by 1.100 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.59), 'effect': 'multiply prob by 0.587 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.3), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.6,0.4,0.69,0.0,0.0036396799636032014,"{'timestamp': 1760866780.2206447, 'inputs': {'network_load': np.float64(0.6), 'relay_reputation': np.float64(0.4), 'budget_utilization': np.float64(0.69), 'recent_win_rate': 1e-09}, 'base_prob': 0.01, 'final_prob': np.float64(0.0036396799636032014), 'steps': [{'feature': 'network_load', 'value': np.float64(0.6), 'effect': 'multiply prob by 0.640 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.4), 'effect': 'multiply prob by 1.100 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.69), 'effect': 'multiply prob by 0.517 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': 1e-09, 'effect': 'multiply prob by 1.000 (higher recent wins -> lower prob)'}]}"
0.6,0.4,0.69,0.05,0.0018198400000000007,"{'timestamp': 1760866780.2206717, 'inputs': {'network_load': np.float64(0.6), 'relay_reputation': np.float64(0.4), 'budget_utilization': np.float64(0.69), 'recent_win_rate': np.float64(0.05)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0018198400000000007), 'steps': [{'feature': 'network_load', 'value': np.float64(0.6), 'effect': 'multiply prob by 0.640 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.4), 'effect': 'multiply prob by 1.100 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.69), 'effect': 'multiply prob by 0.517 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.05), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.6,0.4,0.69,0.1,0.0018198400000000007,"{'timestamp': 1760866780.220697, 'inputs': {'network_load': np.float64(0.6), 'relay_reputation': np.float64(0.4), 'budget_utilization': np.float64(0.69), 'recent_win_rate': np.float64(0.1)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0018198400000000007), 'steps': [{'feature': 'network_load', 'value': np.float64(0.6), 'effect': 'multiply prob by 0.640 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.4), 'effect': 'multiply prob by 1.100 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.69), 'effect': 'multiply prob by 0.517 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.1), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.6,0.4,0.69,0.15,0.0018198400000000007,"{'timestamp': 1760866780.2207222, 'inputs': {'network_load': np.float64(0.6), 'relay_reputation': np.float64(0.4), 'budget_utilization': np.float64(0.69), 'recent_win_rate': np.float64(0.15)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0018198400000000007), 'steps': [{'feature': 'network_load', 'value': np.float64(0.6), 'effect': 'multiply prob by 0.640 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.4), 'effect': 'multiply prob by 1.100 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.69), 'effect': 'multiply prob by 0.517 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.15), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.6,0.4,0.69,0.2,0.0018198400000000007,"{'timestamp': 1760866780.2207491, 'inputs': {'network_load': np.float64(0.6), 'relay_reputation': np.float64(0.4), 'budget_utilization': np.float64(0.69), 'recent_win_rate': np.float64(0.2)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0018198400000000007), 'steps': [{'feature': 'network_load', 'value': np.float64(0.6), 'effect': 'multiply prob by 0.640 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.4), 'effect': 'multiply prob by 1.100 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.69), 'effect': 'multiply prob by 0.517 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.2), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.6,0.4,0.69,0.25,0.0018198400000000007,"{'timestamp': 1760866780.2207744, 'inputs': {'network_load': np.float64(0.6), 'relay_reputation': np.float64(0.4), 'budget_utilization': np.float64(0.69), 'recent_win_rate': np.float64(0.25)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0018198400000000007), 'steps': [{'feature': 'network_load', 'value': np.float64(0.6), 'effect': 'multiply prob by 0.640 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.4), 'effect': 'multiply prob by 1.100 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.69), 'effect': 'multiply prob by 0.517 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.25), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.6,0.4,0.69,0.3,0.0018198400000000007,"{'timestamp': 1760866780.2207994, 'inputs': {'network_load': np.float64(0.6), 'relay_reputation': np.float64(0.4), 'budget_utilization': np.float64(0.69), 'recent_win_rate': np.float64(0.3)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0018198400000000007), 'steps': [{'feature': 'network_load', 'value': np.float64(0.6), 'effect': 'multiply prob by 0.640 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.4), 'effect': 'multiply prob by 1.100 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.69), 'effect': 'multiply prob by 0.517 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.3), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.6,0.4,0.8,0.0,0.0030975999690240007,"{'timestamp': 1760866780.2208304, 'inputs': {'network_load': np.float64(0.6), 'relay_reputation': np.float64(0.4), 'budget_utilization': np.float64(0.8), 'recent_win_rate': 1e-09}, 'base_prob': 0.01, 'final_prob': np.float64(0.0030975999690240007), 'steps': [{'feature': 'network_load', 'value': np.float64(0.6), 'effect': 'multiply prob by 0.640 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.4), 'effect': 'multiply prob by 1.100 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.8), 'effect': 'multiply prob by 0.440 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': 1e-09, 'effect': 'multiply prob by 1.000 (higher recent wins -> lower prob)'}]}"
0.6,0.4,0.8,0.05,0.0015488000000000004,"{'timestamp': 1760866780.2208557, 'inputs': {'network_load': np.float64(0.6), 'relay_reputation': np.float64(0.4), 'budget_utilization': np.float64(0.8), 'recent_win_rate': np.float64(0.05)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0015488000000000004), 'steps': [{'feature': 'network_load', 'value': np.float64(0.6), 'effect': 'multiply prob by 0.640 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.4), 'effect': 'multiply prob by 1.100 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.8), 'effect': 'multiply prob by 0.440 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.05), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.6,0.4,0.8,0.1,0.0015488000000000004,"{'timestamp': 1760866780.220885, 'inputs': {'network_load': np.float64(0.6), 'relay_reputation': np.float64(0.4), 'budget_utilization': np.float64(0.8), 'recent_win_rate': np.float64(0.1)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0015488000000000004), 'steps': [{'feature': 'network_load', 'value': np.float64(0.6), 'effect': 'multiply prob by 0.640 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.4), 'effect': 'multiply prob by 1.100 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.8), 'effect': 'multiply prob by 0.440 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.1), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.6,0.4,0.8,0.15,0.0015488000000000004,"{'timestamp': 1760866780.2209122, 'inputs': {'network_load': np.float64(0.6), 'relay_reputation': np.float64(0.4), 'budget_utilization': np.float64(0.8), 'recent_win_rate': np.float64(0.15)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0015488000000000004), 'steps': [{'feature': 'network_load', 'value': np.float64(0.6), 'effect': 'multiply prob by 0.640 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.4), 'effect': 'multiply prob by 1.100 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.8), 'effect': 'multiply prob by 0.440 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.15), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.6,0.4,0.8,0.2,0.0015488000000000004,"{'timestamp': 1760866780.2209375, 'inputs': {'network_load': np.float64(0.6), 'relay_reputation': np.float64(0.4), 'budget_utilization': np.float64(0.8), 'recent_win_rate': np.float64(0.2)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0015488000000000004), 'steps': [{'feature': 'network_load', 'value': np.float64(0.6), 'effect': 'multiply prob by 0.640 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.4), 'effect': 'multiply prob by 1.100 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.8), 'effect': 'multiply prob by 0.440 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.2), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.6,0.4,0.8,0.25,0.0015488000000000004,"{'timestamp': 1760866780.2209628, 'inputs': {'network_load': np.float64(0.6), 'relay_reputation': np.float64(0.4), 'budget_utilization': np.float64(0.8), 'recent_win_rate': np.float64(0.25)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0015488000000000004), 'steps': [{'feature': 'network_load', 'value': np.float64(0.6), 'effect': 'multiply prob by 0.640 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.4), 'effect': 'multiply prob by 1.100 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.8), 'effect': 'multiply prob by 0.440 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.25), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.6,0.4,0.8,0.3,0.0015488000000000004,"{'timestamp': 1760866780.2209883, 'inputs': {'network_load': np.float64(0.6), 'relay_reputation': np.float64(0.4), 'budget_utilization': np.float64(0.8), 'recent_win_rate': np.float64(0.3)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0015488000000000004), 'steps': [{'feature': 'network_load', 'value': np.float64(0.6), 'effect': 'multiply prob by 0.640 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.4), 'effect': 'multiply prob by 1.100 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.8), 'effect': 'multiply prob by 0.440 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.3), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.6,0.51,0.05,0.0,0.0078126399218736,"{'timestamp': 1760866780.2210732, 'inputs': {'network_load': np.float64(0.6), 'relay_reputation': np.float64(0.51), 'budget_utilization': np.float64(0.05), 'recent_win_rate': 1e-09}, 'base_prob': 0.01, 'final_prob': np.float64(0.0078126399218736), 'steps': [{'feature': 'network_load', 'value': np.float64(0.6), 'effect': 'multiply prob by 0.640 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.51), 'effect': 'multiply prob by 1.265 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.05), 'effect': 'multiply prob by 0.965 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': 1e-09, 'effect': 'multiply prob by 1.000 (higher recent wins -> lower prob)'}]}"
0.6,0.51,0.05,0.05,0.0039063200000000005,"{'timestamp': 1760866780.2211034, 'inputs': {'network_load': np.float64(0.6), 'relay_reputation': np.float64(0.51), 'budget_utilization': np.float64(0.05), 'recent_win_rate': np.float64(0.05)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0039063200000000005), 'steps': [{'feature': 'network_load', 'value': np.float64(0.6), 'effect': 'multiply prob by 0.640 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.51), 'effect': 'multiply prob by 1.265 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.05), 'effect': 'multiply prob by 0.965 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.05), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.6,0.51,0.05,0.1,0.0039063200000000005,"{'timestamp': 1760866780.2211306, 'inputs': {'network_load': np.float64(0.6), 'relay_reputation': np.float64(0.51), 'budget_utilization': np.float64(0.05), 'recent_win_rate': np.float64(0.1)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0039063200000000005), 'steps': [{'feature': 'network_load', 'value': np.float64(0.6), 'effect': 'multiply prob by 0.640 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.51), 'effect': 'multiply prob by 1.265 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.05), 'effect': 'multiply prob by 0.965 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.1), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.6,0.51,0.05,0.15,0.0039063200000000005,"{'timestamp': 1760866780.2211573, 'inputs': {'network_load': np.float64(0.6), 'relay_reputation': np.float64(0.51), 'budget_utilization': np.float64(0.05), 'recent_win_rate': np.float64(0.15)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0039063200000000005), 'steps': [{'feature': 'network_load', 'value': np.float64(0.6), 'effect': 'multiply prob by 0.640 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.51), 'effect': 'multiply prob by 1.265 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.05), 'effect': 'multiply prob by 0.965 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.15), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.6,0.51,0.05,0.2,0.0039063200000000005,"{'timestamp': 1760866780.2211823, 'inputs': {'network_load': np.float64(0.6), 'relay_reputation': np.float64(0.51), 'budget_utilization': np.float64(0.05), 'recent_win_rate': np.float64(0.2)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0039063200000000005), 'steps': [{'feature': 'network_load', 'value': np.float64(0.6), 'effect': 'multiply prob by 0.640 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.51), 'effect': 'multiply prob by 1.265 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.05), 'effect': 'multiply prob by 0.965 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.2), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.6,0.51,0.05,0.25,0.0039063200000000005,"{'timestamp': 1760866780.2212284, 'inputs': {'network_load': np.float64(0.6), 'relay_reputation': np.float64(0.51), 'budget_utilization': np.float64(0.05), 'recent_win_rate': np.float64(0.25)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0039063200000000005), 'steps': [{'feature': 'network_load', 'value': np.float64(0.6), 'effect': 'multiply prob by 0.640 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.51), 'effect': 'multiply prob by 1.265 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.05), 'effect': 'multiply prob by 0.965 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.25), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.6,0.51,0.05,0.3,0.0039063200000000005,"{'timestamp': 1760866780.221269, 'inputs': {'network_load': np.float64(0.6), 'relay_reputation': np.float64(0.51), 'budget_utilization': np.float64(0.05), 'recent_win_rate': np.float64(0.3)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0039063200000000005), 'steps': [{'feature': 'network_load', 'value': np.float64(0.6), 'effect': 'multiply prob by 0.640 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.51), 'effect': 'multiply prob by 1.265 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.05), 'effect': 'multiply prob by 0.965 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.3), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.6,0.51,0.16,0.0,0.00718924792810752,"{'timestamp': 1760866780.2212982, 'inputs': {'network_load': np.float64(0.6), 'relay_reputation': np.float64(0.51), 'budget_utilization': np.float64(0.16), 'recent_win_rate': 1e-09}, 'base_prob': 0.01, 'final_prob': np.float64(0.00718924792810752), 'steps': [{'feature': 'network_load', 'value': np.float64(0.6), 'effect': 'multiply prob by 0.640 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.51), 'effect': 'multiply prob by 1.265 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.16), 'effect': 'multiply prob by 0.888 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': 1e-09, 'effect': 'multiply prob by 1.000 (higher recent wins -> lower prob)'}]}"
0.6,0.51,0.16,0.05,0.0035946240000000003,"{'timestamp': 1760866780.2213235, 'inputs': {'network_load': np.float64(0.6), 'relay_reputation': np.float64(0.51), 'budget_utilization': np.float64(0.16), 'recent_win_rate': np.float64(0.05)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0035946240000000003), 'steps': [{'feature': 'network_load', 'value': np.float64(0.6), 'effect': 'multiply prob by 0.640 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.51), 'effect': 'multiply prob by 1.265 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.16), 'effect': 'multiply prob by 0.888 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.05), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.6,0.51,0.16,0.1,0.0035946240000000003,"{'timestamp': 1760866780.2213485, 'inputs': {'network_load': np.float64(0.6), 'relay_reputation': np.float64(0.51), 'budget_utilization': np.float64(0.16), 'recent_win_rate': np.float64(0.1)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0035946240000000003), 'steps': [{'feature': 'network_load', 'value': np.float64(0.6), 'effect': 'multiply prob by 0.640 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.51), 'effect': 'multiply prob by 1.265 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.16), 'effect': 'multiply prob by 0.888 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.1), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.6,0.51,0.16,0.15,0.0035946240000000003,"{'timestamp': 1760866780.2213736, 'inputs': {'network_load': np.float64(0.6), 'relay_reputation': np.float64(0.51), 'budget_utilization': np.float64(0.16), 'recent_win_rate': np.float64(0.15)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0035946240000000003), 'steps': [{'feature': 'network_load', 'value': np.float64(0.6), 'effect': 'multiply prob by 0.640 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.51), 'effect': 'multiply prob by 1.265 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.16), 'effect': 'multiply prob by 0.888 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.15), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.6,0.51,0.16,0.2,0.0035946240000000003,"{'timestamp': 1760866780.221403, 'inputs': {'network_load': np.float64(0.6), 'relay_reputation': np.float64(0.51), 'budget_utilization': np.float64(0.16), 'recent_win_rate': np.float64(0.2)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0035946240000000003), 'steps': [{'feature': 'network_load', 'value': np.float64(0.6), 'effect': 'multiply prob by 0.640 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.51), 'effect': 'multiply prob by 1.265 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.16), 'effect': 'multiply prob by 0.888 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.2), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.6,0.51,0.16,0.25,0.0035946240000000003,"{'timestamp': 1760866780.2214315, 'inputs': {'network_load': np.float64(0.6), 'relay_reputation': np.float64(0.51), 'budget_utilization': np.float64(0.16), 'recent_win_rate': np.float64(0.25)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0035946240000000003), 'steps': [{'feature': 'network_load', 'value': np.float64(0.6), 'effect': 'multiply prob by 0.640 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.51), 'effect': 'multiply prob by 1.265 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.16), 'effect': 'multiply prob by 0.888 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.25), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.6,0.51,0.16,0.3,0.0035946240000000003,"{'timestamp': 1760866780.2214572, 'inputs': {'network_load': np.float64(0.6), 'relay_reputation': np.float64(0.51), 'budget_utilization': np.float64(0.16), 'recent_win_rate': np.float64(0.3)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0035946240000000003), 'steps': [{'feature': 'network_load', 'value': np.float64(0.6), 'effect': 'multiply prob by 0.640 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.51), 'effect': 'multiply prob by 1.265 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.16), 'effect': 'multiply prob by 0.888 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.3), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.6,0.51,0.26,0.0,0.00662252793377472,"{'timestamp': 1760866780.221484, 'inputs': {'network_load': np.float64(0.6), 'relay_reputation': np.float64(0.51), 'budget_utilization': np.float64(0.26), 'recent_win_rate': 1e-09}, 'base_prob': 0.01, 'final_prob': np.float64(0.00662252793377472), 'steps': [{'feature': 'network_load', 'value': np.float64(0.6), 'effect': 'multiply prob by 0.640 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.51), 'effect': 'multiply prob by 1.265 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.26), 'effect': 'multiply prob by 0.818 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': 1e-09, 'effect': 'multiply prob by 1.000 (higher recent wins -> lower prob)'}]}"
0.6,0.51,0.26,0.05,0.0033112640000000004,"{'timestamp': 1760866780.2215092, 'inputs': {'network_load': np.float64(0.6), 'relay_reputation': np.float64(0.51), 'budget_utilization': np.float64(0.26), 'recent_win_rate': np.float64(0.05)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0033112640000000004), 'steps': [{'feature': 'network_load', 'value': np.float64(0.6), 'effect': 'multiply prob by 0.640 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.51), 'effect': 'multiply prob by 1.265 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.26), 'effect': 'multiply prob by 0.818 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.05), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.6,0.51,0.26,0.1,0.0033112640000000004,"{'timestamp': 1760866780.2215345, 'inputs': {'network_load': np.float64(0.6), 'relay_reputation': np.float64(0.51), 'budget_utilization': np.float64(0.26), 'recent_win_rate': np.float64(0.1)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0033112640000000004), 'steps': [{'feature': 'network_load', 'value': np.float64(0.6), 'effect': 'multiply prob by 0.640 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.51), 'effect': 'multiply prob by 1.265 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.26), 'effect': 'multiply prob by 0.818 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.1), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.6,0.51,0.26,0.15,0.0033112640000000004,"{'timestamp': 1760866780.2215617, 'inputs': {'network_load': np.float64(0.6), 'relay_reputation': np.float64(0.51), 'budget_utilization': np.float64(0.26), 'recent_win_rate': np.float64(0.15)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0033112640000000004), 'steps': [{'feature': 'network_load', 'value': np.float64(0.6), 'effect': 'multiply prob by 0.640 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.51), 'effect': 'multiply prob by 1.265 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.26), 'effect': 'multiply prob by 0.818 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.15), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.6,0.51,0.26,0.2,0.0033112640000000004,"{'timestamp': 1760866780.2215867, 'inputs': {'network_load': np.float64(0.6), 'relay_reputation': np.float64(0.51), 'budget_utilization': np.float64(0.26), 'recent_win_rate': np.float64(0.2)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0033112640000000004), 'steps': [{'feature': 'network_load', 'value': np.float64(0.6), 'effect': 'multiply prob by 0.640 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.51), 'effect': 'multiply prob by 1.265 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.26), 'effect': 'multiply prob by 0.818 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.2), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.6,0.51,0.26,0.25,0.0033112640000000004,"{'timestamp': 1760866780.2216136, 'inputs': {'network_load': np.float64(0.6), 'relay_reputation': np.float64(0.51), 'budget_utilization': np.float64(0.26), 'recent_win_rate': np.float64(0.25)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0033112640000000004), 'steps': [{'feature': 'network_load', 'value': np.float64(0.6), 'effect': 'multiply prob by 0.640 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.51), 'effect': 'multiply prob by 1.265 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.26), 'effect': 'multiply prob by 0.818 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.25), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.6,0.51,0.26,0.3,0.0033112640000000004,"{'timestamp': 1760866780.2216427, 'inputs': {'network_load': np.float64(0.6), 'relay_reputation': np.float64(0.51), 'budget_utilization': np.float64(0.26), 'recent_win_rate': np.float64(0.3)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0033112640000000004), 'steps': [{'feature': 'network_load', 'value': np.float64(0.6), 'effect': 'multiply prob by 0.640 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.51), 'effect': 'multiply prob by 1.265 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.26), 'effect': 'multiply prob by 0.818 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.3), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.6,0.51,0.37,0.0,0.00599913594000864,"{'timestamp': 1760866780.2216713, 'inputs': {'network_load': np.float64(0.6), 'relay_reputation': np.float64(0.51), 'budget_utilization': np.float64(0.37), 'recent_win_rate': 1e-09}, 'base_prob': 0.01, 'final_prob': np.float64(0.00599913594000864), 'steps': [{'feature': 'network_load', 'value': np.float64(0.6), 'effect': 'multiply prob by 0.640 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.51), 'effect': 'multiply prob by 1.265 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.37), 'effect': 'multiply prob by 0.741 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': 1e-09, 'effect': 'multiply prob by 1.000 (higher recent wins -> lower prob)'}]}"
0.6,0.51,0.37,0.05,0.002999568,"{'timestamp': 1760866780.2216983, 'inputs': {'network_load': np.float64(0.6), 'relay_reputation': np.float64(0.51), 'budget_utilization': np.float64(0.37), 'recent_win_rate': np.float64(0.05)}, 'base_prob': 0.01, 'final_prob': np.float64(0.002999568), 'steps': [{'feature': 'network_load', 'value': np.float64(0.6), 'effect': 'multiply prob by 0.640 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.51), 'effect': 'multiply prob by 1.265 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.37), 'effect': 'multiply prob by 0.741 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.05), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.6,0.51,0.37,0.1,0.002999568,"{'timestamp': 1760866780.2217236, 'inputs': {'network_load': np.float64(0.6), 'relay_reputation': np.float64(0.51), 'budget_utilization': np.float64(0.37), 'recent_win_rate': np.float64(0.1)}, 'base_prob': 0.01, 'final_prob': np.float64(0.002999568), 'steps': [{'feature': 'network_load', 'value': np.float64(0.6), 'effect': 'multiply prob by 0.640 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.51), 'effect': 'multiply prob by 1.265 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.37), 'effect': 'multiply prob by 0.741 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.1), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.6,0.51,0.37,0.15,0.002999568,"{'timestamp': 1760866780.2217536, 'inputs': {'network_load': np.float64(0.6), 'relay_reputation': np.float64(0.51), 'budget_utilization': np.float64(0.37), 'recent_win_rate': np.float64(0.15)}, 'base_prob': 0.01, 'final_prob': np.float64(0.002999568), 'steps': [{'feature': 'network_load', 'value': np.float64(0.6), 'effect': 'multiply prob by 0.640 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.51), 'effect': 'multiply prob by 1.265 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.37), 'effect': 'multiply prob by 0.741 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.15), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.6,0.51,0.37,0.2,0.002999568,"{'timestamp': 1760866780.2218099, 'inputs': {'network_load': np.float64(0.6), 'relay_reputation': np.float64(0.51), 'budget_utilization': np.float64(0.37), 'recent_win_rate': np.float64(0.2)}, 'base_prob': 0.01, 'final_prob': np.float64(0.002999568), 'steps': [{'feature': 'network_load', 'value': np.float64(0.6), 'effect': 'multiply prob by 0.640 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.51), 'effect': 'multiply prob by 1.265 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.37), 'effect': 'multiply prob by 0.741 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.2), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.6,0.51,0.37,0.25,0.002999568,"{'timestamp': 1760866780.2218466, 'inputs': {'network_load': np.float64(0.6), 'relay_reputation': np.float64(0.51), 'budget_utilization': np.float64(0.37), 'recent_win_rate': np.float64(0.25)}, 'base_prob': 0.01, 'final_prob': np.float64(0.002999568), 'steps': [{'feature': 'network_load', 'value': np.float64(0.6), 'effect': 'multiply prob by 0.640 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.51), 'effect': 'multiply prob by 1.265 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.37), 'effect': 'multiply prob by 0.741 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.25), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.6,0.51,0.37,0.3,0.002999568,"{'timestamp': 1760866780.2219055, 'inputs': {'network_load': np.float64(0.6), 'relay_reputation': np.float64(0.51), 'budget_utilization': np.float64(0.37), 'recent_win_rate': np.float64(0.3)}, 'base_prob': 0.01, 'final_prob': np.float64(0.002999568), 'steps': [{'feature': 'network_load', 'value': np.float64(0.6), 'effect': 'multiply prob by 0.640 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.51), 'effect': 'multiply prob by 1.265 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.37), 'effect': 'multiply prob by 0.741 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.3), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.6,0.51,0.48,0.0,0.0053757439462425605,"{'timestamp': 1760866780.2220094, 'inputs': {'network_load': np.float64(0.6), 'relay_reputation': np.float64(0.51), 'budget_utilization': np.float64(0.48), 'recent_win_rate': 1e-09}, 'base_prob': 0.01, 'final_prob': np.float64(0.0053757439462425605), 'steps': [{'feature': 'network_load', 'value': np.float64(0.6), 'effect': 'multiply prob by 0.640 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.51), 'effect': 'multiply prob by 1.265 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.48), 'effect': 'multiply prob by 0.664 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': 1e-09, 'effect': 'multiply prob by 1.000 (higher recent wins -> lower prob)'}]}"
0.6,0.51,0.48,0.05,0.0026878720000000004,"{'timestamp': 1760866780.2220476, 'inputs': {'network_load': np.float64(0.6), 'relay_reputation': np.float64(0.51), 'budget_utilization': np.float64(0.48), 'recent_win_rate': np.float64(0.05)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0026878720000000004), 'steps': [{'feature': 'network_load', 'value': np.float64(0.6), 'effect': 'multiply prob by 0.640 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.51), 'effect': 'multiply prob by 1.265 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.48), 'effect': 'multiply prob by 0.664 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.05), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.6,0.51,0.48,0.1,0.0026878720000000004,"{'timestamp': 1760866780.2220736, 'inputs': {'network_load': np.float64(0.6), 'relay_reputation': np.float64(0.51), 'budget_utilization': np.float64(0.48), 'recent_win_rate': np.float64(0.1)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0026878720000000004), 'steps': [{'feature': 'network_load', 'value': np.float64(0.6), 'effect': 'multiply prob by 0.640 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.51), 'effect': 'multiply prob by 1.265 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.48), 'effect': 'multiply prob by 0.664 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.1), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.6,0.51,0.48,0.15,0.0026878720000000004,"{'timestamp': 1760866780.2220988, 'inputs': {'network_load': np.float64(0.6), 'relay_reputation': np.float64(0.51), 'budget_utilization': np.float64(0.48), 'recent_win_rate': np.float64(0.15)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0026878720000000004), 'steps': [{'feature': 'network_load', 'value': np.float64(0.6), 'effect': 'multiply prob by 0.640 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.51), 'effect': 'multiply prob by 1.265 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.48), 'effect': 'multiply prob by 0.664 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.15), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.6,0.51,0.48,0.2,0.0026878720000000004,"{'timestamp': 1760866780.2221293, 'inputs': {'network_load': np.float64(0.6), 'relay_reputation': np.float64(0.51), 'budget_utilization': np.float64(0.48), 'recent_win_rate': np.float64(0.2)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0026878720000000004), 'steps': [{'feature': 'network_load', 'value': np.float64(0.6), 'effect': 'multiply prob by 0.640 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.51), 'effect': 'multiply prob by 1.265 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.48), 'effect': 'multiply prob by 0.664 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.2), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.6,0.51,0.48,0.25,0.0026878720000000004,"{'timestamp': 1760866780.2221544, 'inputs': {'network_load': np.float64(0.6), 'relay_reputation': np.float64(0.51), 'budget_utilization': np.float64(0.48), 'recent_win_rate': np.float64(0.25)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0026878720000000004), 'steps': [{'feature': 'network_load', 'value': np.float64(0.6), 'effect': 'multiply prob by 0.640 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.51), 'effect': 'multiply prob by 1.265 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.48), 'effect': 'multiply prob by 0.664 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.25), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.6,0.51,0.48,0.3,0.0026878720000000004,"{'timestamp': 1760866780.2221797, 'inputs': {'network_load': np.float64(0.6), 'relay_reputation': np.float64(0.51), 'budget_utilization': np.float64(0.48), 'recent_win_rate': np.float64(0.3)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0026878720000000004), 'steps': [{'feature': 'network_load', 'value': np.float64(0.6), 'effect': 'multiply prob by 0.640 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.51), 'effect': 'multiply prob by 1.265 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.48), 'effect': 'multiply prob by 0.664 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.3), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.6,0.51,0.59,0.0,0.004752351952476481,"{'timestamp': 1760866780.222211, 'inputs': {'network_load': np.float64(0.6), 'relay_reputation': np.float64(0.51), 'budget_utilization': np.float64(0.59), 'recent_win_rate': 1e-09}, 'base_prob': 0.01, 'final_prob': np.float64(0.004752351952476481), 'steps': [{'feature': 'network_load', 'value': np.float64(0.6), 'effect': 'multiply prob by 0.640 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.51), 'effect': 'multiply prob by 1.265 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.59), 'effect': 'multiply prob by 0.587 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': 1e-09, 'effect': 'multiply prob by 1.000 (higher recent wins -> lower prob)'}]}"
0.6,0.51,0.59,0.05,0.0023761760000000002,"{'timestamp': 1760866780.2222362, 'inputs': {'network_load': np.float64(0.6), 'relay_reputation': np.float64(0.51), 'budget_utilization': np.float64(0.59), 'recent_win_rate': np.float64(0.05)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0023761760000000002), 'steps': [{'feature': 'network_load', 'value': np.float64(0.6), 'effect': 'multiply prob by 0.640 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.51), 'effect': 'multiply prob by 1.265 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.59), 'effect': 'multiply prob by 0.587 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.05), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.6,0.51,0.59,0.1,0.0023761760000000002,"{'timestamp': 1760866780.2222617, 'inputs': {'network_load': np.float64(0.6), 'relay_reputation': np.float64(0.51), 'budget_utilization': np.float64(0.59), 'recent_win_rate': np.float64(0.1)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0023761760000000002), 'steps': [{'feature': 'network_load', 'value': np.float64(0.6), 'effect': 'multiply prob by 0.640 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.51), 'effect': 'multiply prob by 1.265 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.59), 'effect': 'multiply prob by 0.587 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.1), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.6,0.51,0.59,0.15,0.0023761760000000002,"{'timestamp': 1760866780.2222908, 'inputs': {'network_load': np.float64(0.6), 'relay_reputation': np.float64(0.51), 'budget_utilization': np.float64(0.59), 'recent_win_rate': np.float64(0.15)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0023761760000000002), 'steps': [{'feature': 'network_load', 'value': np.float64(0.6), 'effect': 'multiply prob by 0.640 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.51), 'effect': 'multiply prob by 1.265 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.59), 'effect': 'multiply prob by 0.587 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.15), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.6,0.51,0.59,0.2,0.0023761760000000002,"{'timestamp': 1760866780.222316, 'inputs': {'network_load': np.float64(0.6), 'relay_reputation': np.float64(0.51), 'budget_utilization': np.float64(0.59), 'recent_win_rate': np.float64(0.2)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0023761760000000002), 'steps': [{'feature': 'network_load', 'value': np.float64(0.6), 'effect': 'multiply prob by 0.640 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.51), 'effect': 'multiply prob by 1.265 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.59), 'effect': 'multiply prob by 0.587 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.2), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.6,0.51,0.59,0.25,0.0023761760000000002,"{'timestamp': 1760866780.2223413, 'inputs': {'network_load': np.float64(0.6), 'relay_reputation': np.float64(0.51), 'budget_utilization': np.float64(0.59), 'recent_win_rate': np.float64(0.25)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0023761760000000002), 'steps': [{'feature': 'network_load', 'value': np.float64(0.6), 'effect': 'multiply prob by 0.640 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.51), 'effect': 'multiply prob by 1.265 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.59), 'effect': 'multiply prob by 0.587 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.25), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.6,0.51,0.59,0.3,0.0023761760000000002,"{'timestamp': 1760866780.2223666, 'inputs': {'network_load': np.float64(0.6), 'relay_reputation': np.float64(0.51), 'budget_utilization': np.float64(0.59), 'recent_win_rate': np.float64(0.3)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0023761760000000002), 'steps': [{'feature': 'network_load', 'value': np.float64(0.6), 'effect': 'multiply prob by 0.640 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.51), 'effect': 'multiply prob by 1.265 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.59), 'effect': 'multiply prob by 0.587 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.3), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.6,0.51,0.69,0.0,0.004185631958143681,"{'timestamp': 1760866780.2223933, 'inputs': {'network_load': np.float64(0.6), 'relay_reputation': np.float64(0.51), 'budget_utilization': np.float64(0.69), 'recent_win_rate': 1e-09}, 'base_prob': 0.01, 'final_prob': np.float64(0.004185631958143681), 'steps': [{'feature': 'network_load', 'value': np.float64(0.6), 'effect': 'multiply prob by 0.640 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.51), 'effect': 'multiply prob by 1.265 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.69), 'effect': 'multiply prob by 0.517 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': 1e-09, 'effect': 'multiply prob by 1.000 (higher recent wins -> lower prob)'}]}"
0.6,0.51,0.69,0.05,0.002092816000000001,"{'timestamp': 1760866780.222424, 'inputs': {'network_load': np.float64(0.6), 'relay_reputation': np.float64(0.51), 'budget_utilization': np.float64(0.69), 'recent_win_rate': np.float64(0.05)}, 'base_prob': 0.01, 'final_prob': np.float64(0.002092816000000001), 'steps': [{'feature': 'network_load', 'value': np.float64(0.6), 'effect': 'multiply prob by 0.640 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.51), 'effect': 'multiply prob by 1.265 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.69), 'effect': 'multiply prob by 0.517 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.05), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.6,0.51,0.69,0.1,0.002092816000000001,"{'timestamp': 1760866780.2224514, 'inputs': {'network_load': np.float64(0.6), 'relay_reputation': np.float64(0.51), 'budget_utilization': np.float64(0.69), 'recent_win_rate': np.float64(0.1)}, 'base_prob': 0.01, 'final_prob': np.float64(0.002092816000000001), 'steps': [{'feature': 'network_load', 'value': np.float64(0.6), 'effect': 'multiply prob by 0.640 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.51), 'effect': 'multiply prob by 1.265 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.69), 'effect': 'multiply prob by 0.517 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.1), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.6,0.51,0.69,0.15,0.002092816000000001,"{'timestamp': 1760866780.2224765, 'inputs': {'network_load': np.float64(0.6), 'relay_reputation': np.float64(0.51), 'budget_utilization': np.float64(0.69), 'recent_win_rate': np.float64(0.15)}, 'base_prob': 0.01, 'final_prob': np.float64(0.002092816000000001), 'steps': [{'feature': 'network_load', 'value': np.float64(0.6), 'effect': 'multiply prob by 0.640 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.51), 'effect': 'multiply prob by 1.265 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.69), 'effect': 'multiply prob by 0.517 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.15), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.6,0.51,0.69,0.2,0.002092816000000001,"{'timestamp': 1760866780.222502, 'inputs': {'network_load': np.float64(0.6), 'relay_reputation': np.float64(0.51), 'budget_utilization': np.float64(0.69), 'recent_win_rate': np.float64(0.2)}, 'base_prob': 0.01, 'final_prob': np.float64(0.002092816000000001), 'steps': [{'feature': 'network_load', 'value': np.float64(0.6), 'effect': 'multiply prob by 0.640 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.51), 'effect': 'multiply prob by 1.265 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.69), 'effect': 'multiply prob by 0.517 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.2), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.6,0.51,0.69,0.25,0.002092816000000001,"{'timestamp': 1760866780.222527, 'inputs': {'network_load': np.float64(0.6), 'relay_reputation': np.float64(0.51), 'budget_utilization': np.float64(0.69), 'recent_win_rate': np.float64(0.25)}, 'base_prob': 0.01, 'final_prob': np.float64(0.002092816000000001), 'steps': [{'feature': 'network_load', 'value': np.float64(0.6), 'effect': 'multiply prob by 0.640 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.51), 'effect': 'multiply prob by 1.265 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.69), 'effect': 'multiply prob by 0.517 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.25), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.6,0.51,0.69,0.3,0.002092816000000001,"{'timestamp': 1760866780.2225564, 'inputs': {'network_load': np.float64(0.6), 'relay_reputation': np.float64(0.51), 'budget_utilization': np.float64(0.69), 'recent_win_rate': np.float64(0.3)}, 'base_prob': 0.01, 'final_prob': np.float64(0.002092816000000001), 'steps': [{'feature': 'network_load', 'value': np.float64(0.6), 'effect': 'multiply prob by 0.640 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.51), 'effect': 'multiply prob by 1.265 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.69), 'effect': 'multiply prob by 0.517 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.3), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.6,0.51,0.8,0.0,0.003562239964377601,"{'timestamp': 1760866780.2225835, 'inputs': {'network_load': np.float64(0.6), 'relay_reputation': np.float64(0.51), 'budget_utilization': np.float64(0.8), 'recent_win_rate': 1e-09}, 'base_prob': 0.01, 'final_prob': np.float64(0.003562239964377601), 'steps': [{'feature': 'network_load', 'value': np.float64(0.6), 'effect': 'multiply prob by 0.640 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.51), 'effect': 'multiply prob by 1.265 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.8), 'effect': 'multiply prob by 0.440 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': 1e-09, 'effect': 'multiply prob by 1.000 (higher recent wins -> lower prob)'}]}"
0.6,0.51,0.8,0.05,0.0017811200000000004,"{'timestamp': 1760866780.2226107, 'inputs': {'network_load': np.float64(0.6), 'relay_reputation': np.float64(0.51), 'budget_utilization': np.float64(0.8), 'recent_win_rate': np.float64(0.05)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0017811200000000004), 'steps': [{'feature': 'network_load', 'value': np.float64(0.6), 'effect': 'multiply prob by 0.640 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.51), 'effect': 'multiply prob by 1.265 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.8), 'effect': 'multiply prob by 0.440 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.05), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.6,0.51,0.8,0.1,0.0017811200000000004,"{'timestamp': 1760866780.2226377, 'inputs': {'network_load': np.float64(0.6), 'relay_reputation': np.float64(0.51), 'budget_utilization': np.float64(0.8), 'recent_win_rate': np.float64(0.1)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0017811200000000004), 'steps': [{'feature': 'network_load', 'value': np.float64(0.6), 'effect': 'multiply prob by 0.640 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.51), 'effect': 'multiply prob by 1.265 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.8), 'effect': 'multiply prob by 0.440 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.1), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.6,0.51,0.8,0.15,0.0017811200000000004,"{'timestamp': 1760866780.222663, 'inputs': {'network_load': np.float64(0.6), 'relay_reputation': np.float64(0.51), 'budget_utilization': np.float64(0.8), 'recent_win_rate': np.float64(0.15)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0017811200000000004), 'steps': [{'feature': 'network_load', 'value': np.float64(0.6), 'effect': 'multiply prob by 0.640 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.51), 'effect': 'multiply prob by 1.265 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.8), 'effect': 'multiply prob by 0.440 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.15), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.6,0.51,0.8,0.2,0.0017811200000000004,"{'timestamp': 1760866780.22269, 'inputs': {'network_load': np.float64(0.6), 'relay_reputation': np.float64(0.51), 'budget_utilization': np.float64(0.8), 'recent_win_rate': np.float64(0.2)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0017811200000000004), 'steps': [{'feature': 'network_load', 'value': np.float64(0.6), 'effect': 'multiply prob by 0.640 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.51), 'effect': 'multiply prob by 1.265 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.8), 'effect': 'multiply prob by 0.440 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.2), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.6,0.51,0.8,0.25,0.0017811200000000004,"{'timestamp': 1760866780.2227175, 'inputs': {'network_load': np.float64(0.6), 'relay_reputation': np.float64(0.51), 'budget_utilization': np.float64(0.8), 'recent_win_rate': np.float64(0.25)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0017811200000000004), 'steps': [{'feature': 'network_load', 'value': np.float64(0.6), 'effect': 'multiply prob by 0.640 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.51), 'effect': 'multiply prob by 1.265 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.8), 'effect': 'multiply prob by 0.440 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.25), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.6,0.51,0.8,0.3,0.0017811200000000004,"{'timestamp': 1760866780.2227426, 'inputs': {'network_load': np.float64(0.6), 'relay_reputation': np.float64(0.51), 'budget_utilization': np.float64(0.8), 'recent_win_rate': np.float64(0.3)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0017811200000000004), 'steps': [{'feature': 'network_load', 'value': np.float64(0.6), 'effect': 'multiply prob by 0.640 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.51), 'effect': 'multiply prob by 1.265 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.8), 'effect': 'multiply prob by 0.440 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.3), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.6,0.62,0.05,0.0,0.0088316799116832,"{'timestamp': 1760866780.2227728, 'inputs': {'network_load': np.float64(0.6), 'relay_reputation': np.float64(0.62), 'budget_utilization': np.float64(0.05), 'recent_win_rate': 1e-09}, 'base_prob': 0.01, 'final_prob': np.float64(0.0088316799116832), 'steps': [{'feature': 'network_load', 'value': np.float64(0.6), 'effect': 'multiply prob by 0.640 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.62), 'effect': 'multiply prob by 1.430 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.05), 'effect': 'multiply prob by 0.965 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': 1e-09, 'effect': 'multiply prob by 1.000 (higher recent wins -> lower prob)'}]}"
0.6,0.62,0.05,0.05,0.00441584,"{'timestamp': 1760866780.2227983, 'inputs': {'network_load': np.float64(0.6), 'relay_reputation': np.float64(0.62), 'budget_utilization': np.float64(0.05), 'recent_win_rate': np.float64(0.05)}, 'base_prob': 0.01, 'final_prob': np.float64(0.00441584), 'steps': [{'feature': 'network_load', 'value': np.float64(0.6), 'effect': 'multiply prob by 0.640 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.62), 'effect': 'multiply prob by 1.430 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.05), 'effect': 'multiply prob by 0.965 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.05), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.6,0.62,0.05,0.1,0.00441584,"{'timestamp': 1760866780.2228253, 'inputs': {'network_load': np.float64(0.6), 'relay_reputation': np.float64(0.62), 'budget_utilization': np.float64(0.05), 'recent_win_rate': np.float64(0.1)}, 'base_prob': 0.01, 'final_prob': np.float64(0.00441584), 'steps': [{'feature': 'network_load', 'value': np.float64(0.6), 'effect': 'multiply prob by 0.640 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.62), 'effect': 'multiply prob by 1.430 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.05), 'effect': 'multiply prob by 0.965 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.1), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.6,0.62,0.05,0.15,0.00441584,"{'timestamp': 1760866780.222908, 'inputs': {'network_load': np.float64(0.6), 'relay_reputation': np.float64(0.62), 'budget_utilization': np.float64(0.05), 'recent_win_rate': np.float64(0.15)}, 'base_prob': 0.01, 'final_prob': np.float64(0.00441584), 'steps': [{'feature': 'network_load', 'value': np.float64(0.6), 'effect': 'multiply prob by 0.640 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.62), 'effect': 'multiply prob by 1.430 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.05), 'effect': 'multiply prob by 0.965 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.15), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.6,0.62,0.05,0.2,0.00441584,"{'timestamp': 1760866780.2229378, 'inputs': {'network_load': np.float64(0.6), 'relay_reputation': np.float64(0.62), 'budget_utilization': np.float64(0.05), 'recent_win_rate': np.float64(0.2)}, 'base_prob': 0.01, 'final_prob': np.float64(0.00441584), 'steps': [{'feature': 'network_load', 'value': np.float64(0.6), 'effect': 'multiply prob by 0.640 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.62), 'effect': 'multiply prob by 1.430 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.05), 'effect': 'multiply prob by 0.965 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.2), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.6,0.62,0.05,0.25,0.00441584,"{'timestamp': 1760866780.2229636, 'inputs': {'network_load': np.float64(0.6), 'relay_reputation': np.float64(0.62), 'budget_utilization': np.float64(0.05), 'recent_win_rate': np.float64(0.25)}, 'base_prob': 0.01, 'final_prob': np.float64(0.00441584), 'steps': [{'feature': 'network_load', 'value': np.float64(0.6), 'effect': 'multiply prob by 0.640 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.62), 'effect': 'multiply prob by 1.430 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.05), 'effect': 'multiply prob by 0.965 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.25), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.6,0.62,0.05,0.3,0.00441584,"{'timestamp': 1760866780.2229888, 'inputs': {'network_load': np.float64(0.6), 'relay_reputation': np.float64(0.62), 'budget_utilization': np.float64(0.05), 'recent_win_rate': np.float64(0.3)}, 'base_prob': 0.01, 'final_prob': np.float64(0.00441584), 'steps': [{'feature': 'network_load', 'value': np.float64(0.6), 'effect': 'multiply prob by 0.640 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.62), 'effect': 'multiply prob by 1.430 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.05), 'effect': 'multiply prob by 0.965 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.3), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.6,0.62,0.16,0.0,0.008126975918730241,"{'timestamp': 1760866780.2230177, 'inputs': {'network_load': np.float64(0.6), 'relay_reputation': np.float64(0.62), 'budget_utilization': np.float64(0.16), 'recent_win_rate': 1e-09}, 'base_prob': 0.01, 'final_prob': np.float64(0.008126975918730241), 'steps': [{'feature': 'network_load', 'value': np.float64(0.6), 'effect': 'multiply prob by 0.640 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.62), 'effect': 'multiply prob by 1.430 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.16), 'effect': 'multiply prob by 0.888 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': 1e-09, 'effect': 'multiply prob by 1.000 (higher recent wins -> lower prob)'}]}"
0.6,0.62,0.16,0.05,0.0040634880000000005,"{'timestamp': 1760866780.223047, 'inputs': {'network_load': np.float64(0.6), 'relay_reputation': np.float64(0.62), 'budget_utilization': np.float64(0.16), 'recent_win_rate': np.float64(0.05)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0040634880000000005), 'steps': [{'feature': 'network_load', 'value': np.float64(0.6), 'effect': 'multiply prob by 0.640 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.62), 'effect': 'multiply prob by 1.430 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.16), 'effect': 'multiply prob by 0.888 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.05), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.6,0.62,0.16,0.1,0.0040634880000000005,"{'timestamp': 1760866780.2230723, 'inputs': {'network_load': np.float64(0.6), 'relay_reputation': np.float64(0.62), 'budget_utilization': np.float64(0.16), 'recent_win_rate': np.float64(0.1)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0040634880000000005), 'steps': [{'feature': 'network_load', 'value': np.float64(0.6), 'effect': 'multiply prob by 0.640 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.62), 'effect': 'multiply prob by 1.430 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.16), 'effect': 'multiply prob by 0.888 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.1), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.6,0.62,0.16,0.15,0.0040634880000000005,"{'timestamp': 1760866780.223099, 'inputs': {'network_load': np.float64(0.6), 'relay_reputation': np.float64(0.62), 'budget_utilization': np.float64(0.16), 'recent_win_rate': np.float64(0.15)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0040634880000000005), 'steps': [{'feature': 'network_load', 'value': np.float64(0.6), 'effect': 'multiply prob by 0.640 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.62), 'effect': 'multiply prob by 1.430 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.16), 'effect': 'multiply prob by 0.888 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.15), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.6,0.62,0.16,0.2,0.0040634880000000005,"{'timestamp': 1760866780.2231245, 'inputs': {'network_load': np.float64(0.6), 'relay_reputation': np.float64(0.62), 'budget_utilization': np.float64(0.16), 'recent_win_rate': np.float64(0.2)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0040634880000000005), 'steps': [{'feature': 'network_load', 'value': np.float64(0.6), 'effect': 'multiply prob by 0.640 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.62), 'effect': 'multiply prob by 1.430 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.16), 'effect': 'multiply prob by 0.888 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.2), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.6,0.62,0.16,0.25,0.0040634880000000005,"{'timestamp': 1760866780.2231498, 'inputs': {'network_load': np.float64(0.6), 'relay_reputation': np.float64(0.62), 'budget_utilization': np.float64(0.16), 'recent_win_rate': np.float64(0.25)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0040634880000000005), 'steps': [{'feature': 'network_load', 'value': np.float64(0.6), 'effect': 'multiply prob by 0.640 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.62), 'effect': 'multiply prob by 1.430 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.16), 'effect': 'multiply prob by 0.888 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.25), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.6,0.62,0.16,0.3,0.0040634880000000005,"{'timestamp': 1760866780.2231767, 'inputs': {'network_load': np.float64(0.6), 'relay_reputation': np.float64(0.62), 'budget_utilization': np.float64(0.16), 'recent_win_rate': np.float64(0.3)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0040634880000000005), 'steps': [{'feature': 'network_load', 'value': np.float64(0.6), 'effect': 'multiply prob by 0.640 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.62), 'effect': 'multiply prob by 1.430 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.16), 'effect': 'multiply prob by 0.888 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.3), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.6,0.62,0.26,0.0,0.00748633592513664,"{'timestamp': 1760866780.2232056, 'inputs': {'network_load': np.float64(0.6), 'relay_reputation': np.float64(0.62), 'budget_utilization': np.float64(0.26), 'recent_win_rate': 1e-09}, 'base_prob': 0.01, 'final_prob': np.float64(0.00748633592513664), 'steps': [{'feature': 'network_load', 'value': np.float64(0.6), 'effect': 'multiply prob by 0.640 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.62), 'effect': 'multiply prob by 1.430 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.26), 'effect': 'multiply prob by 0.818 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': 1e-09, 'effect': 'multiply prob by 1.000 (higher recent wins -> lower prob)'}]}"
0.6,0.62,0.26,0.05,0.0037431680000000003,"{'timestamp': 1760866780.2232623, 'inputs': {'network_load': np.float64(0.6), 'relay_reputation': np.float64(0.62), 'budget_utilization': np.float64(0.26), 'recent_win_rate': np.float64(0.05)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0037431680000000003), 'steps': [{'feature': 'network_load', 'value': np.float64(0.6), 'effect': 'multiply prob by 0.640 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.62), 'effect': 'multiply prob by 1.430 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.26), 'effect': 'multiply prob by 0.818 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.05), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.6,0.62,0.26,0.1,0.0037431680000000003,"{'timestamp': 1760866780.223289, 'inputs': {'network_load': np.float64(0.6), 'relay_reputation': np.float64(0.62), 'budget_utilization': np.float64(0.26), 'recent_win_rate': np.float64(0.1)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0037431680000000003), 'steps': [{'feature': 'network_load', 'value': np.float64(0.6), 'effect': 'multiply prob by 0.640 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.62), 'effect': 'multiply prob by 1.430 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.26), 'effect': 'multiply prob by 0.818 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.1), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.6,0.62,0.26,0.15,0.0037431680000000003,"{'timestamp': 1760866780.2233412, 'inputs': {'network_load': np.float64(0.6), 'relay_reputation': np.float64(0.62), 'budget_utilization': np.float64(0.26), 'recent_win_rate': np.float64(0.15)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0037431680000000003), 'steps': [{'feature': 'network_load', 'value': np.float64(0.6), 'effect': 'multiply prob by 0.640 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.62), 'effect': 'multiply prob by 1.430 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.26), 'effect': 'multiply prob by 0.818 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.15), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.6,0.62,0.26,0.2,0.0037431680000000003,"{'timestamp': 1760866780.223376, 'inputs': {'network_load': np.float64(0.6), 'relay_reputation': np.float64(0.62), 'budget_utilization': np.float64(0.26), 'recent_win_rate': np.float64(0.2)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0037431680000000003), 'steps': [{'feature': 'network_load', 'value': np.float64(0.6), 'effect': 'multiply prob by 0.640 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.62), 'effect': 'multiply prob by 1.430 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.26), 'effect': 'multiply prob by 0.818 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.2), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.6,0.62,0.26,0.25,0.0037431680000000003,"{'timestamp': 1760866780.2234054, 'inputs': {'network_load': np.float64(0.6), 'relay_reputation': np.float64(0.62), 'budget_utilization': np.float64(0.26), 'recent_win_rate': np.float64(0.25)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0037431680000000003), 'steps': [{'feature': 'network_load', 'value': np.float64(0.6), 'effect': 'multiply prob by 0.640 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.62), 'effect': 'multiply prob by 1.430 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.26), 'effect': 'multiply prob by 0.818 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.25), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.6,0.62,0.26,0.3,0.0037431680000000003,"{'timestamp': 1760866780.2234323, 'inputs': {'network_load': np.float64(0.6), 'relay_reputation': np.float64(0.62), 'budget_utilization': np.float64(0.26), 'recent_win_rate': np.float64(0.3)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0037431680000000003), 'steps': [{'feature': 'network_load', 'value': np.float64(0.6), 'effect': 'multiply prob by 0.640 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.62), 'effect': 'multiply prob by 1.430 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.26), 'effect': 'multiply prob by 0.818 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.3), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.6,0.62,0.37,0.0,0.00678163193218368,"{'timestamp': 1760866780.2234614, 'inputs': {'network_load': np.float64(0.6), 'relay_reputation': np.float64(0.62), 'budget_utilization': np.float64(0.37), 'recent_win_rate': 1e-09}, 'base_prob': 0.01, 'final_prob': np.float64(0.00678163193218368), 'steps': [{'feature': 'network_load', 'value': np.float64(0.6), 'effect': 'multiply prob by 0.640 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.62), 'effect': 'multiply prob by 1.430 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.37), 'effect': 'multiply prob by 0.741 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': 1e-09, 'effect': 'multiply prob by 1.000 (higher recent wins -> lower prob)'}]}"
0.6,0.62,0.37,0.05,0.003390816,"{'timestamp': 1760866780.223487, 'inputs': {'network_load': np.float64(0.6), 'relay_reputation': np.float64(0.62), 'budget_utilization': np.float64(0.37), 'recent_win_rate': np.float64(0.05)}, 'base_prob': 0.01, 'final_prob': np.float64(0.003390816), 'steps': [{'feature': 'network_load', 'value': np.float64(0.6), 'effect': 'multiply prob by 0.640 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.62), 'effect': 'multiply prob by 1.430 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.37), 'effect': 'multiply prob by 0.741 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.05), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.6,0.62,0.37,0.1,0.003390816,"{'timestamp': 1760866780.2235122, 'inputs': {'network_load': np.float64(0.6), 'relay_reputation': np.float64(0.62), 'budget_utilization': np.float64(0.37), 'recent_win_rate': np.float64(0.1)}, 'base_prob': 0.01, 'final_prob': np.float64(0.003390816), 'steps': [{'feature': 'network_load', 'value': np.float64(0.6), 'effect': 'multiply prob by 0.640 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.62), 'effect': 'multiply prob by 1.430 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.37), 'effect': 'multiply prob by 0.741 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.1), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.6,0.62,0.37,0.15,0.003390816,"{'timestamp': 1760866780.223539, 'inputs': {'network_load': np.float64(0.6), 'relay_reputation': np.float64(0.62), 'budget_utilization': np.float64(0.37), 'recent_win_rate': np.float64(0.15)}, 'base_prob': 0.01, 'final_prob': np.float64(0.003390816), 'steps': [{'feature': 'network_load', 'value': np.float64(0.6), 'effect': 'multiply prob by 0.640 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.62), 'effect': 'multiply prob by 1.430 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.37), 'effect': 'multiply prob by 0.741 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.15), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.6,0.62,0.37,0.2,0.003390816,"{'timestamp': 1760866780.2235644, 'inputs': {'network_load': np.float64(0.6), 'relay_reputation': np.float64(0.62), 'budget_utilization': np.float64(0.37), 'recent_win_rate': np.float64(0.2)}, 'base_prob': 0.01, 'final_prob': np.float64(0.003390816), 'steps': [{'feature': 'network_load', 'value': np.float64(0.6), 'effect': 'multiply prob by 0.640 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.62), 'effect': 'multiply prob by 1.430 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.37), 'effect': 'multiply prob by 0.741 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.2), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.6,0.62,0.37,0.25,0.003390816,"{'timestamp': 1760866780.2235913, 'inputs': {'network_load': np.float64(0.6), 'relay_reputation': np.float64(0.62), 'budget_utilization': np.float64(0.37), 'recent_win_rate': np.float64(0.25)}, 'base_prob': 0.01, 'final_prob': np.float64(0.003390816), 'steps': [{'feature': 'network_load', 'value': np.float64(0.6), 'effect': 'multiply prob by 0.640 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.62), 'effect': 'multiply prob by 1.430 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.37), 'effect': 'multiply prob by 0.741 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.25), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.6,0.62,0.37,0.3,0.003390816,"{'timestamp': 1760866780.2236166, 'inputs': {'network_load': np.float64(0.6), 'relay_reputation': np.float64(0.62), 'budget_utilization': np.float64(0.37), 'recent_win_rate': np.float64(0.3)}, 'base_prob': 0.01, 'final_prob': np.float64(0.003390816), 'steps': [{'feature': 'network_load', 'value': np.float64(0.6), 'effect': 'multiply prob by 0.640 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.62), 'effect': 'multiply prob by 1.430 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.37), 'effect': 'multiply prob by 0.741 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.3), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.6,0.62,0.48,0.0,0.00607692793923072,"{'timestamp': 1760866780.223643, 'inputs': {'network_load': np.float64(0.6), 'relay_reputation': np.float64(0.62), 'budget_utilization': np.float64(0.48), 'recent_win_rate': 1e-09}, 'base_prob': 0.01, 'final_prob': np.float64(0.00607692793923072), 'steps': [{'feature': 'network_load', 'value': np.float64(0.6), 'effect': 'multiply prob by 0.640 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.62), 'effect': 'multiply prob by 1.430 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.48), 'effect': 'multiply prob by 0.664 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': 1e-09, 'effect': 'multiply prob by 1.000 (higher recent wins -> lower prob)'}]}"
0.6,0.62,0.48,0.05,0.0030384640000000003,"{'timestamp': 1760866780.2236764, 'inputs': {'network_load': np.float64(0.6), 'relay_reputation': np.float64(0.62), 'budget_utilization': np.float64(0.48), 'recent_win_rate': np.float64(0.05)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0030384640000000003), 'steps': [{'feature': 'network_load', 'value': np.float64(0.6), 'effect': 'multiply prob by 0.640 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.62), 'effect': 'multiply prob by 1.430 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.48), 'effect': 'multiply prob by 0.664 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.05), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.6,0.62,0.48,0.1,0.0030384640000000003,"{'timestamp': 1760866780.2237017, 'inputs': {'network_load': np.float64(0.6), 'relay_reputation': np.float64(0.62), 'budget_utilization': np.float64(0.48), 'recent_win_rate': np.float64(0.1)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0030384640000000003), 'steps': [{'feature': 'network_load', 'value': np.float64(0.6), 'effect': 'multiply prob by 0.640 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.62), 'effect': 'multiply prob by 1.430 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.48), 'effect': 'multiply prob by 0.664 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.1), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.6,0.62,0.48,0.15,0.0030384640000000003,"{'timestamp': 1760866780.2237267, 'inputs': {'network_load': np.float64(0.6), 'relay_reputation': np.float64(0.62), 'budget_utilization': np.float64(0.48), 'recent_win_rate': np.float64(0.15)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0030384640000000003), 'steps': [{'feature': 'network_load', 'value': np.float64(0.6), 'effect': 'multiply prob by 0.640 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.62), 'effect': 'multiply prob by 1.430 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.48), 'effect': 'multiply prob by 0.664 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.15), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.6,0.62,0.48,0.2,0.0030384640000000003,"{'timestamp': 1760866780.223752, 'inputs': {'network_load': np.float64(0.6), 'relay_reputation': np.float64(0.62), 'budget_utilization': np.float64(0.48), 'recent_win_rate': np.float64(0.2)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0030384640000000003), 'steps': [{'feature': 'network_load', 'value': np.float64(0.6), 'effect': 'multiply prob by 0.640 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.62), 'effect': 'multiply prob by 1.430 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.48), 'effect': 'multiply prob by 0.664 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.2), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.6,0.62,0.48,0.25,0.0030384640000000003,"{'timestamp': 1760866780.223777, 'inputs': {'network_load': np.float64(0.6), 'relay_reputation': np.float64(0.62), 'budget_utilization': np.float64(0.48), 'recent_win_rate': np.float64(0.25)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0030384640000000003), 'steps': [{'feature': 'network_load', 'value': np.float64(0.6), 'effect': 'multiply prob by 0.640 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.62), 'effect': 'multiply prob by 1.430 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.48), 'effect': 'multiply prob by 0.664 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.25), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.6,0.62,0.48,0.3,0.0030384640000000003,"{'timestamp': 1760866780.22385, 'inputs': {'network_load': np.float64(0.6), 'relay_reputation': np.float64(0.62), 'budget_utilization': np.float64(0.48), 'recent_win_rate': np.float64(0.3)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0030384640000000003), 'steps': [{'feature': 'network_load', 'value': np.float64(0.6), 'effect': 'multiply prob by 0.640 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.62), 'effect': 'multiply prob by 1.430 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.48), 'effect': 'multiply prob by 0.664 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.3), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.6,0.62,0.59,0.0,0.00537222394627776,"{'timestamp': 1760866780.2238934, 'inputs': {'network_load': np.float64(0.6), 'relay_reputation': np.float64(0.62), 'budget_utilization': np.float64(0.59), 'recent_win_rate': 1e-09}, 'base_prob': 0.01, 'final_prob': np.float64(0.00537222394627776), 'steps': [{'feature': 'network_load', 'value': np.float64(0.6), 'effect': 'multiply prob by 0.640 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.62), 'effect': 'multiply prob by 1.430 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.59), 'effect': 'multiply prob by 0.587 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': 1e-09, 'effect': 'multiply prob by 1.000 (higher recent wins -> lower prob)'}]}"
0.6,0.62,0.59,0.05,0.002686112,"{'timestamp': 1760866780.2239234, 'inputs': {'network_load': np.float64(0.6), 'relay_reputation': np.float64(0.62), 'budget_utilization': np.float64(0.59), 'recent_win_rate': np.float64(0.05)}, 'base_prob': 0.01, 'final_prob': np.float64(0.002686112), 'steps': [{'feature': 'network_load', 'value': np.float64(0.6), 'effect': 'multiply prob by 0.640 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.62), 'effect': 'multiply prob by 1.430 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.59), 'effect': 'multiply prob by 0.587 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.05), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.6,0.62,0.59,0.1,0.002686112,"{'timestamp': 1760866780.223949, 'inputs': {'network_load': np.float64(0.6), 'relay_reputation': np.float64(0.62), 'budget_utilization': np.float64(0.59), 'recent_win_rate': np.float64(0.1)}, 'base_prob': 0.01, 'final_prob': np.float64(0.002686112), 'steps': [{'feature': 'network_load', 'value': np.float64(0.6), 'effect': 'multiply prob by 0.640 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.62), 'effect': 'multiply prob by 1.430 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.59), 'effect': 'multiply prob by 0.587 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.1), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.6,0.62,0.59,0.15,0.002686112,"{'timestamp': 1760866780.2239742, 'inputs': {'network_load': np.float64(0.6), 'relay_reputation': np.float64(0.62), 'budget_utilization': np.float64(0.59), 'recent_win_rate': np.float64(0.15)}, 'base_prob': 0.01, 'final_prob': np.float64(0.002686112), 'steps': [{'feature': 'network_load', 'value': np.float64(0.6), 'effect': 'multiply prob by 0.640 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.62), 'effect': 'multiply prob by 1.430 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.59), 'effect': 'multiply prob by 0.587 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.15), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.6,0.62,0.59,0.2,0.002686112,"{'timestamp': 1760866780.2239993, 'inputs': {'network_load': np.float64(0.6), 'relay_reputation': np.float64(0.62), 'budget_utilization': np.float64(0.59), 'recent_win_rate': np.float64(0.2)}, 'base_prob': 0.01, 'final_prob': np.float64(0.002686112), 'steps': [{'feature': 'network_load', 'value': np.float64(0.6), 'effect': 'multiply prob by 0.640 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.62), 'effect': 'multiply prob by 1.430 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.59), 'effect': 'multiply prob by 0.587 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.2), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.6,0.62,0.59,0.25,0.002686112,"{'timestamp': 1760866780.2240264, 'inputs': {'network_load': np.float64(0.6), 'relay_reputation': np.float64(0.62), 'budget_utilization': np.float64(0.59), 'recent_win_rate': np.float64(0.25)}, 'base_prob': 0.01, 'final_prob': np.float64(0.002686112), 'steps': [{'feature': 'network_load', 'value': np.float64(0.6), 'effect': 'multiply prob by 0.640 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.62), 'effect': 'multiply prob by 1.430 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.59), 'effect': 'multiply prob by 0.587 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.25), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.6,0.62,0.59,0.3,0.002686112,"{'timestamp': 1760866780.2240517, 'inputs': {'network_load': np.float64(0.6), 'relay_reputation': np.float64(0.62), 'budget_utilization': np.float64(0.59), 'recent_win_rate': np.float64(0.3)}, 'base_prob': 0.01, 'final_prob': np.float64(0.002686112), 'steps': [{'feature': 'network_load', 'value': np.float64(0.6), 'effect': 'multiply prob by 0.640 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.62), 'effect': 'multiply prob by 1.430 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.59), 'effect': 'multiply prob by 0.587 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.3), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.6,0.62,0.69,0.0,0.004731583952684161,"{'timestamp': 1760866780.2240808, 'inputs': {'network_load': np.float64(0.6), 'relay_reputation': np.float64(0.62), 'budget_utilization': np.float64(0.69), 'recent_win_rate': 1e-09}, 'base_prob': 0.01, 'final_prob': np.float64(0.004731583952684161), 'steps': [{'feature': 'network_load', 'value': np.float64(0.6), 'effect': 'multiply prob by 0.640 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.62), 'effect': 'multiply prob by 1.430 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.69), 'effect': 'multiply prob by 0.517 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': 1e-09, 'effect': 'multiply prob by 1.000 (higher recent wins -> lower prob)'}]}"
0.6,0.62,0.69,0.05,0.0023657920000000007,"{'timestamp': 1760866780.2241063, 'inputs': {'network_load': np.float64(0.6), 'relay_reputation': np.float64(0.62), 'budget_utilization': np.float64(0.69), 'recent_win_rate': np.float64(0.05)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0023657920000000007), 'steps': [{'feature': 'network_load', 'value': np.float64(0.6), 'effect': 'multiply prob by 0.640 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.62), 'effect': 'multiply prob by 1.430 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.69), 'effect': 'multiply prob by 0.517 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.05), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.6,0.62,0.69,0.1,0.0023657920000000007,"{'timestamp': 1760866780.2241313, 'inputs': {'network_load': np.float64(0.6), 'relay_reputation': np.float64(0.62), 'budget_utilization': np.float64(0.69), 'recent_win_rate': np.float64(0.1)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0023657920000000007), 'steps': [{'feature': 'network_load', 'value': np.float64(0.6), 'effect': 'multiply prob by 0.640 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.62), 'effect': 'multiply prob by 1.430 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.69), 'effect': 'multiply prob by 0.517 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.1), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.6,0.62,0.69,0.15,0.0023657920000000007,"{'timestamp': 1760866780.2241583, 'inputs': {'network_load': np.float64(0.6), 'relay_reputation': np.float64(0.62), 'budget_utilization': np.float64(0.69), 'recent_win_rate': np.float64(0.15)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0023657920000000007), 'steps': [{'feature': 'network_load', 'value': np.float64(0.6), 'effect': 'multiply prob by 0.640 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.62), 'effect': 'multiply prob by 1.430 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.69), 'effect': 'multiply prob by 0.517 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.15), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.6,0.62,0.69,0.2,0.0023657920000000007,"{'timestamp': 1760866780.2241836, 'inputs': {'network_load': np.float64(0.6), 'relay_reputation': np.float64(0.62), 'budget_utilization': np.float64(0.69), 'recent_win_rate': np.float64(0.2)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0023657920000000007), 'steps': [{'feature': 'network_load', 'value': np.float64(0.6), 'effect': 'multiply prob by 0.640 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.62), 'effect': 'multiply prob by 1.430 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.69), 'effect': 'multiply prob by 0.517 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.2), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.6,0.62,0.69,0.25,0.0023657920000000007,"{'timestamp': 1760866780.2242084, 'inputs': {'network_load': np.float64(0.6), 'relay_reputation': np.float64(0.62), 'budget_utilization': np.float64(0.69), 'recent_win_rate': np.float64(0.25)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0023657920000000007), 'steps': [{'feature': 'network_load', 'value': np.float64(0.6), 'effect': 'multiply prob by 0.640 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.62), 'effect': 'multiply prob by 1.430 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.69), 'effect': 'multiply prob by 0.517 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.25), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.6,0.62,0.69,0.3,0.0023657920000000007,"{'timestamp': 1760866780.2242334, 'inputs': {'network_load': np.float64(0.6), 'relay_reputation': np.float64(0.62), 'budget_utilization': np.float64(0.69), 'recent_win_rate': np.float64(0.3)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0023657920000000007), 'steps': [{'feature': 'network_load', 'value': np.float64(0.6), 'effect': 'multiply prob by 0.640 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.62), 'effect': 'multiply prob by 1.430 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.69), 'effect': 'multiply prob by 0.517 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.3), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.6,0.62,0.8,0.0,0.0040268799597312005,"{'timestamp': 1760866780.2242603, 'inputs': {'network_load': np.float64(0.6), 'relay_reputation': np.float64(0.62), 'budget_utilization': np.float64(0.8), 'recent_win_rate': 1e-09}, 'base_prob': 0.01, 'final_prob': np.float64(0.0040268799597312005), 'steps': [{'feature': 'network_load', 'value': np.float64(0.6), 'effect': 'multiply prob by 0.640 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.62), 'effect': 'multiply prob by 1.430 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.8), 'effect': 'multiply prob by 0.440 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': 1e-09, 'effect': 'multiply prob by 1.000 (higher recent wins -> lower prob)'}]}"
0.6,0.62,0.8,0.05,0.0020134400000000005,"{'timestamp': 1760866780.2242928, 'inputs': {'network_load': np.float64(0.6), 'relay_reputation': np.float64(0.62), 'budget_utilization': np.float64(0.8), 'recent_win_rate': np.float64(0.05)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0020134400000000005), 'steps': [{'feature': 'network_load', 'value': np.float64(0.6), 'effect': 'multiply prob by 0.640 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.62), 'effect': 'multiply prob by 1.430 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.8), 'effect': 'multiply prob by 0.440 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.05), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.6,0.62,0.8,0.1,0.0020134400000000005,"{'timestamp': 1760866780.22432, 'inputs': {'network_load': np.float64(0.6), 'relay_reputation': np.float64(0.62), 'budget_utilization': np.float64(0.8), 'recent_win_rate': np.float64(0.1)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0020134400000000005), 'steps': [{'feature': 'network_load', 'value': np.float64(0.6), 'effect': 'multiply prob by 0.640 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.62), 'effect': 'multiply prob by 1.430 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.8), 'effect': 'multiply prob by 0.440 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.1), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.6,0.62,0.8,0.15,0.0020134400000000005,"{'timestamp': 1760866780.2243454, 'inputs': {'network_load': np.float64(0.6), 'relay_reputation': np.float64(0.62), 'budget_utilization': np.float64(0.8), 'recent_win_rate': np.float64(0.15)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0020134400000000005), 'steps': [{'feature': 'network_load', 'value': np.float64(0.6), 'effect': 'multiply prob by 0.640 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.62), 'effect': 'multiply prob by 1.430 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.8), 'effect': 'multiply prob by 0.440 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.15), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.6,0.62,0.8,0.2,0.0020134400000000005,"{'timestamp': 1760866780.2243705, 'inputs': {'network_load': np.float64(0.6), 'relay_reputation': np.float64(0.62), 'budget_utilization': np.float64(0.8), 'recent_win_rate': np.float64(0.2)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0020134400000000005), 'steps': [{'feature': 'network_load', 'value': np.float64(0.6), 'effect': 'multiply prob by 0.640 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.62), 'effect': 'multiply prob by 1.430 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.8), 'effect': 'multiply prob by 0.440 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.2), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.6,0.62,0.8,0.25,0.0020134400000000005,"{'timestamp': 1760866780.2243993, 'inputs': {'network_load': np.float64(0.6), 'relay_reputation': np.float64(0.62), 'budget_utilization': np.float64(0.8), 'recent_win_rate': np.float64(0.25)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0020134400000000005), 'steps': [{'feature': 'network_load', 'value': np.float64(0.6), 'effect': 'multiply prob by 0.640 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.62), 'effect': 'multiply prob by 1.430 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.8), 'effect': 'multiply prob by 0.440 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.25), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.6,0.62,0.8,0.3,0.0020134400000000005,"{'timestamp': 1760866780.2244246, 'inputs': {'network_load': np.float64(0.6), 'relay_reputation': np.float64(0.62), 'budget_utilization': np.float64(0.8), 'recent_win_rate': np.float64(0.3)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0020134400000000005), 'steps': [{'feature': 'network_load', 'value': np.float64(0.6), 'effect': 'multiply prob by 0.640 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.62), 'effect': 'multiply prob by 1.430 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.8), 'effect': 'multiply prob by 0.440 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.3), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.6,0.73,0.05,0.0,0.0098507199014928,"{'timestamp': 1760866780.2244549, 'inputs': {'network_load': np.float64(0.6), 'relay_reputation': np.float64(0.73), 'budget_utilization': np.float64(0.05), 'recent_win_rate': 1e-09}, 'base_prob': 0.01, 'final_prob': np.float64(0.0098507199014928), 'steps': [{'feature': 'network_load', 'value': np.float64(0.6), 'effect': 'multiply prob by 0.640 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.73), 'effect': 'multiply prob by 1.595 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.05), 'effect': 'multiply prob by 0.965 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': 1e-09, 'effect': 'multiply prob by 1.000 (higher recent wins -> lower prob)'}]}"
0.6,0.73,0.05,0.05,0.00492536,"{'timestamp': 1760866780.2244928, 'inputs': {'network_load': np.float64(0.6), 'relay_reputation': np.float64(0.73), 'budget_utilization': np.float64(0.05), 'recent_win_rate': np.float64(0.05)}, 'base_prob': 0.01, 'final_prob': np.float64(0.00492536), 'steps': [{'feature': 'network_load', 'value': np.float64(0.6), 'effect': 'multiply prob by 0.640 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.73), 'effect': 'multiply prob by 1.595 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.05), 'effect': 'multiply prob by 0.965 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.05), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.6,0.73,0.05,0.1,0.00492536,"{'timestamp': 1760866780.2245202, 'inputs': {'network_load': np.float64(0.6), 'relay_reputation': np.float64(0.73), 'budget_utilization': np.float64(0.05), 'recent_win_rate': np.float64(0.1)}, 'base_prob': 0.01, 'final_prob': np.float64(0.00492536), 'steps': [{'feature': 'network_load', 'value': np.float64(0.6), 'effect': 'multiply prob by 0.640 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.73), 'effect': 'multiply prob by 1.595 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.05), 'effect': 'multiply prob by 0.965 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.1), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.6,0.73,0.05,0.15,0.00492536,"{'timestamp': 1760866780.2245455, 'inputs': {'network_load': np.float64(0.6), 'relay_reputation': np.float64(0.73), 'budget_utilization': np.float64(0.05), 'recent_win_rate': np.float64(0.15)}, 'base_prob': 0.01, 'final_prob': np.float64(0.00492536), 'steps': [{'feature': 'network_load', 'value': np.float64(0.6), 'effect': 'multiply prob by 0.640 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.73), 'effect': 'multiply prob by 1.595 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.05), 'effect': 'multiply prob by 0.965 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.15), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.6,0.73,0.05,0.2,0.00492536,"{'timestamp': 1760866780.224571, 'inputs': {'network_load': np.float64(0.6), 'relay_reputation': np.float64(0.73), 'budget_utilization': np.float64(0.05), 'recent_win_rate': np.float64(0.2)}, 'base_prob': 0.01, 'final_prob': np.float64(0.00492536), 'steps': [{'feature': 'network_load', 'value': np.float64(0.6), 'effect': 'multiply prob by 0.640 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.73), 'effect': 'multiply prob by 1.595 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.05), 'effect': 'multiply prob by 0.965 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.2), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.6,0.73,0.05,0.25,0.00492536,"{'timestamp': 1760866780.2245977, 'inputs': {'network_load': np.float64(0.6), 'relay_reputation': np.float64(0.73), 'budget_utilization': np.float64(0.05), 'recent_win_rate': np.float64(0.25)}, 'base_prob': 0.01, 'final_prob': np.float64(0.00492536), 'steps': [{'feature': 'network_load', 'value': np.float64(0.6), 'effect': 'multiply prob by 0.640 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.73), 'effect': 'multiply prob by 1.595 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.05), 'effect': 'multiply prob by 0.965 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.25), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.6,0.73,0.05,0.3,0.00492536,"{'timestamp': 1760866780.2246232, 'inputs': {'network_load': np.float64(0.6), 'relay_reputation': np.float64(0.73), 'budget_utilization': np.float64(0.05), 'recent_win_rate': np.float64(0.3)}, 'base_prob': 0.01, 'final_prob': np.float64(0.00492536), 'steps': [{'feature': 'network_load', 'value': np.float64(0.6), 'effect': 'multiply prob by 0.640 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.73), 'effect': 'multiply prob by 1.595 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.05), 'effect': 'multiply prob by 0.965 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.3), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.6,0.73,0.16,0.0,0.00906470390935296,"{'timestamp': 1760866780.2246497, 'inputs': {'network_load': np.float64(0.6), 'relay_reputation': np.float64(0.73), 'budget_utilization': np.float64(0.16), 'recent_win_rate': 1e-09}, 'base_prob': 0.01, 'final_prob': np.float64(0.00906470390935296), 'steps': [{'feature': 'network_load', 'value': np.float64(0.6), 'effect': 'multiply prob by 0.640 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.73), 'effect': 'multiply prob by 1.595 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.16), 'effect': 'multiply prob by 0.888 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': 1e-09, 'effect': 'multiply prob by 1.000 (higher recent wins -> lower prob)'}]}"
0.6,0.73,0.16,0.05,0.004532352,"{'timestamp': 1760866780.2246754, 'inputs': {'network_load': np.float64(0.6), 'relay_reputation': np.float64(0.73), 'budget_utilization': np.float64(0.16), 'recent_win_rate': np.float64(0.05)}, 'base_prob': 0.01, 'final_prob': np.float64(0.004532352), 'steps': [{'feature': 'network_load', 'value': np.float64(0.6), 'effect': 'multiply prob by 0.640 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.73), 'effect': 'multiply prob by 1.595 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.16), 'effect': 'multiply prob by 0.888 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.05), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.6,0.73,0.16,0.1,0.004532352,"{'timestamp': 1760866780.2247005, 'inputs': {'network_load': np.float64(0.6), 'relay_reputation': np.float64(0.73), 'budget_utilization': np.float64(0.16), 'recent_win_rate': np.float64(0.1)}, 'base_prob': 0.01, 'final_prob': np.float64(0.004532352), 'steps': [{'feature': 'network_load', 'value': np.float64(0.6), 'effect': 'multiply prob by 0.640 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.73), 'effect': 'multiply prob by 1.595 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.16), 'effect': 'multiply prob by 0.888 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.1), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.6,0.73,0.16,0.15,0.004532352,"{'timestamp': 1760866780.2247746, 'inputs': {'network_load': np.float64(0.6), 'relay_reputation': np.float64(0.73), 'budget_utilization': np.float64(0.16), 'recent_win_rate': np.float64(0.15)}, 'base_prob': 0.01, 'final_prob': np.float64(0.004532352), 'steps': [{'feature': 'network_load', 'value': np.float64(0.6), 'effect': 'multiply prob by 0.640 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.73), 'effect': 'multiply prob by 1.595 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.16), 'effect': 'multiply prob by 0.888 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.15), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.6,0.73,0.16,0.2,0.004532352,"{'timestamp': 1760866780.2248142, 'inputs': {'network_load': np.float64(0.6), 'relay_reputation': np.float64(0.73), 'budget_utilization': np.float64(0.16), 'recent_win_rate': np.float64(0.2)}, 'base_prob': 0.01, 'final_prob': np.float64(0.004532352), 'steps': [{'feature': 'network_load', 'value': np.float64(0.6), 'effect': 'multiply prob by 0.640 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.73), 'effect': 'multiply prob by 1.595 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.16), 'effect': 'multiply prob by 0.888 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.2), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.6,0.73,0.16,0.25,0.004532352,"{'timestamp': 1760866780.22484, 'inputs': {'network_load': np.float64(0.6), 'relay_reputation': np.float64(0.73), 'budget_utilization': np.float64(0.16), 'recent_win_rate': np.float64(0.25)}, 'base_prob': 0.01, 'final_prob': np.float64(0.004532352), 'steps': [{'feature': 'network_load', 'value': np.float64(0.6), 'effect': 'multiply prob by 0.640 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.73), 'effect': 'multiply prob by 1.595 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.16), 'effect': 'multiply prob by 0.888 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.25), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.6,0.73,0.16,0.3,0.004532352,"{'timestamp': 1760866780.2248652, 'inputs': {'network_load': np.float64(0.6), 'relay_reputation': np.float64(0.73), 'budget_utilization': np.float64(0.16), 'recent_win_rate': np.float64(0.3)}, 'base_prob': 0.01, 'final_prob': np.float64(0.004532352), 'steps': [{'feature': 'network_load', 'value': np.float64(0.6), 'effect': 'multiply prob by 0.640 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.73), 'effect': 'multiply prob by 1.595 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.16), 'effect': 'multiply prob by 0.888 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.3), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.6,0.73,0.26,0.0,0.00835014391649856,"{'timestamp': 1760866780.2248945, 'inputs': {'network_load': np.float64(0.6), 'relay_reputation': np.float64(0.73), 'budget_utilization': np.float64(0.26), 'recent_win_rate': 1e-09}, 'base_prob': 0.01, 'final_prob': np.float64(0.00835014391649856), 'steps': [{'feature': 'network_load', 'value': np.float64(0.6), 'effect': 'multiply prob by 0.640 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.73), 'effect': 'multiply prob by 1.595 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.26), 'effect': 'multiply prob by 0.818 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': 1e-09, 'effect': 'multiply prob by 1.000 (higher recent wins -> lower prob)'}]}"
0.6,0.73,0.26,0.05,0.004175072,"{'timestamp': 1760866780.2249198, 'inputs': {'network_load': np.float64(0.6), 'relay_reputation': np.float64(0.73), 'budget_utilization': np.float64(0.26), 'recent_win_rate': np.float64(0.05)}, 'base_prob': 0.01, 'final_prob': np.float64(0.004175072), 'steps': [{'feature': 'network_load', 'value': np.float64(0.6), 'effect': 'multiply prob by 0.640 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.73), 'effect': 'multiply prob by 1.595 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.26), 'effect': 'multiply prob by 0.818 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.05), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.6,0.73,0.26,0.1,0.004175072,"{'timestamp': 1760866780.2249508, 'inputs': {'network_load': np.float64(0.6), 'relay_reputation': np.float64(0.73), 'budget_utilization': np.float64(0.26), 'recent_win_rate': np.float64(0.1)}, 'base_prob': 0.01, 'final_prob': np.float64(0.004175072), 'steps': [{'feature': 'network_load', 'value': np.float64(0.6), 'effect': 'multiply prob by 0.640 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.73), 'effect': 'multiply prob by 1.595 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.26), 'effect': 'multiply prob by 0.818 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.1), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.6,0.73,0.26,0.15,0.004175072,"{'timestamp': 1760866780.2249777, 'inputs': {'network_load': np.float64(0.6), 'relay_reputation': np.float64(0.73), 'budget_utilization': np.float64(0.26), 'recent_win_rate': np.float64(0.15)}, 'base_prob': 0.01, 'final_prob': np.float64(0.004175072), 'steps': [{'feature': 'network_load', 'value': np.float64(0.6), 'effect': 'multiply prob by 0.640 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.73), 'effect': 'multiply prob by 1.595 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.26), 'effect': 'multiply prob by 0.818 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.15), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.6,0.73,0.26,0.2,0.004175072,"{'timestamp': 1760866780.2250068, 'inputs': {'network_load': np.float64(0.6), 'relay_reputation': np.float64(0.73), 'budget_utilization': np.float64(0.26), 'recent_win_rate': np.float64(0.2)}, 'base_prob': 0.01, 'final_prob': np.float64(0.004175072), 'steps': [{'feature': 'network_load', 'value': np.float64(0.6), 'effect': 'multiply prob by 0.640 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.73), 'effect': 'multiply prob by 1.595 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.26), 'effect': 'multiply prob by 0.818 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.2), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.6,0.73,0.26,0.25,0.004175072,"{'timestamp': 1760866780.225032, 'inputs': {'network_load': np.float64(0.6), 'relay_reputation': np.float64(0.73), 'budget_utilization': np.float64(0.26), 'recent_win_rate': np.float64(0.25)}, 'base_prob': 0.01, 'final_prob': np.float64(0.004175072), 'steps': [{'feature': 'network_load', 'value': np.float64(0.6), 'effect': 'multiply prob by 0.640 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.73), 'effect': 'multiply prob by 1.595 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.26), 'effect': 'multiply prob by 0.818 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.25), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.6,0.73,0.26,0.3,0.004175072,"{'timestamp': 1760866780.2250574, 'inputs': {'network_load': np.float64(0.6), 'relay_reputation': np.float64(0.73), 'budget_utilization': np.float64(0.26), 'recent_win_rate': np.float64(0.3)}, 'base_prob': 0.01, 'final_prob': np.float64(0.004175072), 'steps': [{'feature': 'network_load', 'value': np.float64(0.6), 'effect': 'multiply prob by 0.640 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.73), 'effect': 'multiply prob by 1.595 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.26), 'effect': 'multiply prob by 0.818 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.3), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.6,0.73,0.37,0.0,0.007564127924358719,"{'timestamp': 1760866780.2250862, 'inputs': {'network_load': np.float64(0.6), 'relay_reputation': np.float64(0.73), 'budget_utilization': np.float64(0.37), 'recent_win_rate': 1e-09}, 'base_prob': 0.01, 'final_prob': np.float64(0.007564127924358719), 'steps': [{'feature': 'network_load', 'value': np.float64(0.6), 'effect': 'multiply prob by 0.640 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.73), 'effect': 'multiply prob by 1.595 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.37), 'effect': 'multiply prob by 0.741 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': 1e-09, 'effect': 'multiply prob by 1.000 (higher recent wins -> lower prob)'}]}"
0.6,0.73,0.37,0.05,0.003782064,"{'timestamp': 1760866780.2251112, 'inputs': {'network_load': np.float64(0.6), 'relay_reputation': np.float64(0.73), 'budget_utilization': np.float64(0.37), 'recent_win_rate': np.float64(0.05)}, 'base_prob': 0.01, 'final_prob': np.float64(0.003782064), 'steps': [{'feature': 'network_load', 'value': np.float64(0.6), 'effect': 'multiply prob by 0.640 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.73), 'effect': 'multiply prob by 1.595 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.37), 'effect': 'multiply prob by 0.741 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.05), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.6,0.73,0.37,0.1,0.003782064,"{'timestamp': 1760866780.2251363, 'inputs': {'network_load': np.float64(0.6), 'relay_reputation': np.float64(0.73), 'budget_utilization': np.float64(0.37), 'recent_win_rate': np.float64(0.1)}, 'base_prob': 0.01, 'final_prob': np.float64(0.003782064), 'steps': [{'feature': 'network_load', 'value': np.float64(0.6), 'effect': 'multiply prob by 0.640 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.73), 'effect': 'multiply prob by 1.595 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.37), 'effect': 'multiply prob by 0.741 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.1), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.6,0.73,0.37,0.15,0.003782064,"{'timestamp': 1760866780.2251618, 'inputs': {'network_load': np.float64(0.6), 'relay_reputation': np.float64(0.73), 'budget_utilization': np.float64(0.37), 'recent_win_rate': np.float64(0.15)}, 'base_prob': 0.01, 'final_prob': np.float64(0.003782064), 'steps': [{'feature': 'network_load', 'value': np.float64(0.6), 'effect': 'multiply prob by 0.640 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.73), 'effect': 'multiply prob by 1.595 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.37), 'effect': 'multiply prob by 0.741 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.15), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.6,0.73,0.37,0.2,0.003782064,"{'timestamp': 1760866780.2251868, 'inputs': {'network_load': np.float64(0.6), 'relay_reputation': np.float64(0.73), 'budget_utilization': np.float64(0.37), 'recent_win_rate': np.float64(0.2)}, 'base_prob': 0.01, 'final_prob': np.float64(0.003782064), 'steps': [{'feature': 'network_load', 'value': np.float64(0.6), 'effect': 'multiply prob by 0.640 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.73), 'effect': 'multiply prob by 1.595 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.37), 'effect': 'multiply prob by 0.741 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.2), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.6,0.73,0.37,0.25,0.003782064,"{'timestamp': 1760866780.2252154, 'inputs': {'network_load': np.float64(0.6), 'relay_reputation': np.float64(0.73), 'budget_utilization': np.float64(0.37), 'recent_win_rate': np.float64(0.25)}, 'base_prob': 0.01, 'final_prob': np.float64(0.003782064), 'steps': [{'feature': 'network_load', 'value': np.float64(0.6), 'effect': 'multiply prob by 0.640 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.73), 'effect': 'multiply prob by 1.595 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.37), 'effect': 'multiply prob by 0.741 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.25), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.6,0.73,0.37,0.3,0.003782064,"{'timestamp': 1760866780.2252746, 'inputs': {'network_load': np.float64(0.6), 'relay_reputation': np.float64(0.73), 'budget_utilization': np.float64(0.37), 'recent_win_rate': np.float64(0.3)}, 'base_prob': 0.01, 'final_prob': np.float64(0.003782064), 'steps': [{'feature': 'network_load', 'value': np.float64(0.6), 'effect': 'multiply prob by 0.640 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.73), 'effect': 'multiply prob by 1.595 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.37), 'effect': 'multiply prob by 0.741 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.3), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.6,0.73,0.48,0.0,0.00677811193221888,"{'timestamp': 1760866780.2253053, 'inputs': {'network_load': np.float64(0.6), 'relay_reputation': np.float64(0.73), 'budget_utilization': np.float64(0.48), 'recent_win_rate': 1e-09}, 'base_prob': 0.01, 'final_prob': np.float64(0.00677811193221888), 'steps': [{'feature': 'network_load', 'value': np.float64(0.6), 'effect': 'multiply prob by 0.640 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.73), 'effect': 'multiply prob by 1.595 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.48), 'effect': 'multiply prob by 0.664 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': 1e-09, 'effect': 'multiply prob by 1.000 (higher recent wins -> lower prob)'}]}"
0.6,0.73,0.48,0.05,0.003389056,"{'timestamp': 1760866780.2253306, 'inputs': {'network_load': np.float64(0.6), 'relay_reputation': np.float64(0.73), 'budget_utilization': np.float64(0.48), 'recent_win_rate': np.float64(0.05)}, 'base_prob': 0.01, 'final_prob': np.float64(0.003389056), 'steps': [{'feature': 'network_load', 'value': np.float64(0.6), 'effect': 'multiply prob by 0.640 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.73), 'effect': 'multiply prob by 1.595 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.48), 'effect': 'multiply prob by 0.664 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.05), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.6,0.73,0.48,0.1,0.003389056,"{'timestamp': 1760866780.2253559, 'inputs': {'network_load': np.float64(0.6), 'relay_reputation': np.float64(0.73), 'budget_utilization': np.float64(0.48), 'recent_win_rate': np.float64(0.1)}, 'base_prob': 0.01, 'final_prob': np.float64(0.003389056), 'steps': [{'feature': 'network_load', 'value': np.float64(0.6), 'effect': 'multiply prob by 0.640 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.73), 'effect': 'multiply prob by 1.595 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.48), 'effect': 'multiply prob by 0.664 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.1), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.6,0.73,0.48,0.15,0.003389056,"{'timestamp': 1760866780.2253807, 'inputs': {'network_load': np.float64(0.6), 'relay_reputation': np.float64(0.73), 'budget_utilization': np.float64(0.48), 'recent_win_rate': np.float64(0.15)}, 'base_prob': 0.01, 'final_prob': np.float64(0.003389056), 'steps': [{'feature': 'network_load', 'value': np.float64(0.6), 'effect': 'multiply prob by 0.640 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.73), 'effect': 'multiply prob by 1.595 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.48), 'effect': 'multiply prob by 0.664 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.15), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.6,0.73,0.48,0.2,0.003389056,"{'timestamp': 1760866780.225408, 'inputs': {'network_load': np.float64(0.6), 'relay_reputation': np.float64(0.73), 'budget_utilization': np.float64(0.48), 'recent_win_rate': np.float64(0.2)}, 'base_prob': 0.01, 'final_prob': np.float64(0.003389056), 'steps': [{'feature': 'network_load', 'value': np.float64(0.6), 'effect': 'multiply prob by 0.640 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.73), 'effect': 'multiply prob by 1.595 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.48), 'effect': 'multiply prob by 0.664 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.2), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.6,0.73,0.48,0.25,0.003389056,"{'timestamp': 1760866780.2254329, 'inputs': {'network_load': np.float64(0.6), 'relay_reputation': np.float64(0.73), 'budget_utilization': np.float64(0.48), 'recent_win_rate': np.float64(0.25)}, 'base_prob': 0.01, 'final_prob': np.float64(0.003389056), 'steps': [{'feature': 'network_load', 'value': np.float64(0.6), 'effect': 'multiply prob by 0.640 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.73), 'effect': 'multiply prob by 1.595 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.48), 'effect': 'multiply prob by 0.664 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.25), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.6,0.73,0.48,0.3,0.003389056,"{'timestamp': 1760866780.2254593, 'inputs': {'network_load': np.float64(0.6), 'relay_reputation': np.float64(0.73), 'budget_utilization': np.float64(0.48), 'recent_win_rate': np.float64(0.3)}, 'base_prob': 0.01, 'final_prob': np.float64(0.003389056), 'steps': [{'feature': 'network_load', 'value': np.float64(0.6), 'effect': 'multiply prob by 0.640 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.73), 'effect': 'multiply prob by 1.595 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.48), 'effect': 'multiply prob by 0.664 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.3), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.6,0.73,0.59,0.0,0.005992095940079039,"{'timestamp': 1760866780.2254882, 'inputs': {'network_load': np.float64(0.6), 'relay_reputation': np.float64(0.73), 'budget_utilization': np.float64(0.59), 'recent_win_rate': 1e-09}, 'base_prob': 0.01, 'final_prob': np.float64(0.005992095940079039), 'steps': [{'feature': 'network_load', 'value': np.float64(0.6), 'effect': 'multiply prob by 0.640 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.73), 'effect': 'multiply prob by 1.595 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.59), 'effect': 'multiply prob by 0.587 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': 1e-09, 'effect': 'multiply prob by 1.000 (higher recent wins -> lower prob)'}]}"
0.6,0.73,0.59,0.05,0.002996048,"{'timestamp': 1760866780.2255135, 'inputs': {'network_load': np.float64(0.6), 'relay_reputation': np.float64(0.73), 'budget_utilization': np.float64(0.59), 'recent_win_rate': np.float64(0.05)}, 'base_prob': 0.01, 'final_prob': np.float64(0.002996048), 'steps': [{'feature': 'network_load', 'value': np.float64(0.6), 'effect': 'multiply prob by 0.640 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.73), 'effect': 'multiply prob by 1.595 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.59), 'effect': 'multiply prob by 0.587 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.05), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.6,0.73,0.59,0.1,0.002996048,"{'timestamp': 1760866780.2256002, 'inputs': {'network_load': np.float64(0.6), 'relay_reputation': np.float64(0.73), 'budget_utilization': np.float64(0.59), 'recent_win_rate': np.float64(0.1)}, 'base_prob': 0.01, 'final_prob': np.float64(0.002996048), 'steps': [{'feature': 'network_load', 'value': np.float64(0.6), 'effect': 'multiply prob by 0.640 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.73), 'effect': 'multiply prob by 1.595 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.59), 'effect': 'multiply prob by 0.587 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.1), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.6,0.73,0.59,0.15,0.002996048,"{'timestamp': 1760866780.2256274, 'inputs': {'network_load': np.float64(0.6), 'relay_reputation': np.float64(0.73), 'budget_utilization': np.float64(0.59), 'recent_win_rate': np.float64(0.15)}, 'base_prob': 0.01, 'final_prob': np.float64(0.002996048), 'steps': [{'feature': 'network_load', 'value': np.float64(0.6), 'effect': 'multiply prob by 0.640 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.73), 'effect': 'multiply prob by 1.595 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.59), 'effect': 'multiply prob by 0.587 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.15), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.6,0.73,0.59,0.2,0.002996048,"{'timestamp': 1760866780.225653, 'inputs': {'network_load': np.float64(0.6), 'relay_reputation': np.float64(0.73), 'budget_utilization': np.float64(0.59), 'recent_win_rate': np.float64(0.2)}, 'base_prob': 0.01, 'final_prob': np.float64(0.002996048), 'steps': [{'feature': 'network_load', 'value': np.float64(0.6), 'effect': 'multiply prob by 0.640 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.73), 'effect': 'multiply prob by 1.595 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.59), 'effect': 'multiply prob by 0.587 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.2), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.6,0.73,0.59,0.25,0.002996048,"{'timestamp': 1760866780.225678, 'inputs': {'network_load': np.float64(0.6), 'relay_reputation': np.float64(0.73), 'budget_utilization': np.float64(0.59), 'recent_win_rate': np.float64(0.25)}, 'base_prob': 0.01, 'final_prob': np.float64(0.002996048), 'steps': [{'feature': 'network_load', 'value': np.float64(0.6), 'effect': 'multiply prob by 0.640 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.73), 'effect': 'multiply prob by 1.595 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.59), 'effect': 'multiply prob by 0.587 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.25), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.6,0.73,0.59,0.3,0.002996048,"{'timestamp': 1760866780.225703, 'inputs': {'network_load': np.float64(0.6), 'relay_reputation': np.float64(0.73), 'budget_utilization': np.float64(0.59), 'recent_win_rate': np.float64(0.3)}, 'base_prob': 0.01, 'final_prob': np.float64(0.002996048), 'steps': [{'feature': 'network_load', 'value': np.float64(0.6), 'effect': 'multiply prob by 0.640 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.73), 'effect': 'multiply prob by 1.595 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.59), 'effect': 'multiply prob by 0.587 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.3), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.6,0.73,0.69,0.0,0.005277535947224641,"{'timestamp': 1760866780.225736, 'inputs': {'network_load': np.float64(0.6), 'relay_reputation': np.float64(0.73), 'budget_utilization': np.float64(0.69), 'recent_win_rate': 1e-09}, 'base_prob': 0.01, 'final_prob': np.float64(0.005277535947224641), 'steps': [{'feature': 'network_load', 'value': np.float64(0.6), 'effect': 'multiply prob by 0.640 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.73), 'effect': 'multiply prob by 1.595 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.69), 'effect': 'multiply prob by 0.517 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': 1e-09, 'effect': 'multiply prob by 1.000 (higher recent wins -> lower prob)'}]}"
0.6,0.73,0.69,0.05,0.0026387680000000005,"{'timestamp': 1760866780.2257638, 'inputs': {'network_load': np.float64(0.6), 'relay_reputation': np.float64(0.73), 'budget_utilization': np.float64(0.69), 'recent_win_rate': np.float64(0.05)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0026387680000000005), 'steps': [{'feature': 'network_load', 'value': np.float64(0.6), 'effect': 'multiply prob by 0.640 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.73), 'effect': 'multiply prob by 1.595 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.69), 'effect': 'multiply prob by 0.517 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.05), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.6,0.73,0.69,0.1,0.0026387680000000005,"{'timestamp': 1760866780.225789, 'inputs': {'network_load': np.float64(0.6), 'relay_reputation': np.float64(0.73), 'budget_utilization': np.float64(0.69), 'recent_win_rate': np.float64(0.1)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0026387680000000005), 'steps': [{'feature': 'network_load', 'value': np.float64(0.6), 'effect': 'multiply prob by 0.640 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.73), 'effect': 'multiply prob by 1.595 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.69), 'effect': 'multiply prob by 0.517 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.1), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.6,0.73,0.69,0.15,0.0026387680000000005,"{'timestamp': 1760866780.2258143, 'inputs': {'network_load': np.float64(0.6), 'relay_reputation': np.float64(0.73), 'budget_utilization': np.float64(0.69), 'recent_win_rate': np.float64(0.15)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0026387680000000005), 'steps': [{'feature': 'network_load', 'value': np.float64(0.6), 'effect': 'multiply prob by 0.640 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.73), 'effect': 'multiply prob by 1.595 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.69), 'effect': 'multiply prob by 0.517 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.15), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.6,0.73,0.69,0.2,0.0026387680000000005,"{'timestamp': 1760866780.2258394, 'inputs': {'network_load': np.float64(0.6), 'relay_reputation': np.float64(0.73), 'budget_utilization': np.float64(0.69), 'recent_win_rate': np.float64(0.2)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0026387680000000005), 'steps': [{'feature': 'network_load', 'value': np.float64(0.6), 'effect': 'multiply prob by 0.640 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.73), 'effect': 'multiply prob by 1.595 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.69), 'effect': 'multiply prob by 0.517 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.2), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.6,0.73,0.69,0.25,0.0026387680000000005,"{'timestamp': 1760866780.2258663, 'inputs': {'network_load': np.float64(0.6), 'relay_reputation': np.float64(0.73), 'budget_utilization': np.float64(0.69), 'recent_win_rate': np.float64(0.25)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0026387680000000005), 'steps': [{'feature': 'network_load', 'value': np.float64(0.6), 'effect': 'multiply prob by 0.640 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.73), 'effect': 'multiply prob by 1.595 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.69), 'effect': 'multiply prob by 0.517 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.25), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.6,0.73,0.69,0.3,0.0026387680000000005,"{'timestamp': 1760866780.2258918, 'inputs': {'network_load': np.float64(0.6), 'relay_reputation': np.float64(0.73), 'budget_utilization': np.float64(0.69), 'recent_win_rate': np.float64(0.3)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0026387680000000005), 'steps': [{'feature': 'network_load', 'value': np.float64(0.6), 'effect': 'multiply prob by 0.640 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.73), 'effect': 'multiply prob by 1.595 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.69), 'effect': 'multiply prob by 0.517 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.3), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.6,0.73,0.8,0.0,0.0044915199550848005,"{'timestamp': 1760866780.2259188, 'inputs': {'network_load': np.float64(0.6), 'relay_reputation': np.float64(0.73), 'budget_utilization': np.float64(0.8), 'recent_win_rate': 1e-09}, 'base_prob': 0.01, 'final_prob': np.float64(0.0044915199550848005), 'steps': [{'feature': 'network_load', 'value': np.float64(0.6), 'effect': 'multiply prob by 0.640 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.73), 'effect': 'multiply prob by 1.595 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.8), 'effect': 'multiply prob by 0.440 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': 1e-09, 'effect': 'multiply prob by 1.000 (higher recent wins -> lower prob)'}]}"
0.6,0.73,0.8,0.05,0.0022457600000000003,"{'timestamp': 1760866780.2259479, 'inputs': {'network_load': np.float64(0.6), 'relay_reputation': np.float64(0.73), 'budget_utilization': np.float64(0.8), 'recent_win_rate': np.float64(0.05)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0022457600000000003), 'steps': [{'feature': 'network_load', 'value': np.float64(0.6), 'effect': 'multiply prob by 0.640 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.73), 'effect': 'multiply prob by 1.595 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.8), 'effect': 'multiply prob by 0.440 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.05), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.6,0.73,0.8,0.1,0.0022457600000000003,"{'timestamp': 1760866780.2259731, 'inputs': {'network_load': np.float64(0.6), 'relay_reputation': np.float64(0.73), 'budget_utilization': np.float64(0.8), 'recent_win_rate': np.float64(0.1)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0022457600000000003), 'steps': [{'feature': 'network_load', 'value': np.float64(0.6), 'effect': 'multiply prob by 0.640 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.73), 'effect': 'multiply prob by 1.595 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.8), 'effect': 'multiply prob by 0.440 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.1), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.6,0.73,0.8,0.15,0.0022457600000000003,"{'timestamp': 1760866780.2259984, 'inputs': {'network_load': np.float64(0.6), 'relay_reputation': np.float64(0.73), 'budget_utilization': np.float64(0.8), 'recent_win_rate': np.float64(0.15)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0022457600000000003), 'steps': [{'feature': 'network_load', 'value': np.float64(0.6), 'effect': 'multiply prob by 0.640 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.73), 'effect': 'multiply prob by 1.595 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.8), 'effect': 'multiply prob by 0.440 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.15), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.6,0.73,0.8,0.2,0.0022457600000000003,"{'timestamp': 1760866780.226027, 'inputs': {'network_load': np.float64(0.6), 'relay_reputation': np.float64(0.73), 'budget_utilization': np.float64(0.8), 'recent_win_rate': np.float64(0.2)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0022457600000000003), 'steps': [{'feature': 'network_load', 'value': np.float64(0.6), 'effect': 'multiply prob by 0.640 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.73), 'effect': 'multiply prob by 1.595 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.8), 'effect': 'multiply prob by 0.440 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.2), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.6,0.73,0.8,0.25,0.0022457600000000003,"{'timestamp': 1760866780.2260523, 'inputs': {'network_load': np.float64(0.6), 'relay_reputation': np.float64(0.73), 'budget_utilization': np.float64(0.8), 'recent_win_rate': np.float64(0.25)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0022457600000000003), 'steps': [{'feature': 'network_load', 'value': np.float64(0.6), 'effect': 'multiply prob by 0.640 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.73), 'effect': 'multiply prob by 1.595 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.8), 'effect': 'multiply prob by 0.440 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.25), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.6,0.73,0.8,0.3,0.0022457600000000003,"{'timestamp': 1760866780.2260778, 'inputs': {'network_load': np.float64(0.6), 'relay_reputation': np.float64(0.73), 'budget_utilization': np.float64(0.8), 'recent_win_rate': np.float64(0.3)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0022457600000000003), 'steps': [{'feature': 'network_load', 'value': np.float64(0.6), 'effect': 'multiply prob by 0.640 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.73), 'effect': 'multiply prob by 1.595 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.8), 'effect': 'multiply prob by 0.440 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.3), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.6,0.84,0.05,0.0,0.0108697598913024,"{'timestamp': 1760866780.2261076, 'inputs': {'network_load': np.float64(0.6), 'relay_reputation': np.float64(0.84), 'budget_utilization': np.float64(0.05), 'recent_win_rate': 1e-09}, 'base_prob': 0.01, 'final_prob': np.float64(0.0108697598913024), 'steps': [{'feature': 'network_load', 'value': np.float64(0.6), 'effect': 'multiply prob by 0.640 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.84), 'effect': 'multiply prob by 1.760 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.05), 'effect': 'multiply prob by 0.965 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': 1e-09, 'effect': 'multiply prob by 1.000 (higher recent wins -> lower prob)'}]}"
0.6,0.84,0.05,0.05,0.0054348800000000004,"{'timestamp': 1760866780.226133, 'inputs': {'network_load': np.float64(0.6), 'relay_reputation': np.float64(0.84), 'budget_utilization': np.float64(0.05), 'recent_win_rate': np.float64(0.05)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0054348800000000004), 'steps': [{'feature': 'network_load', 'value': np.float64(0.6), 'effect': 'multiply prob by 0.640 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.84), 'effect': 'multiply prob by 1.760 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.05), 'effect': 'multiply prob by 0.965 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.05), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.6,0.84,0.05,0.1,0.0054348800000000004,"{'timestamp': 1760866780.226163, 'inputs': {'network_load': np.float64(0.6), 'relay_reputation': np.float64(0.84), 'budget_utilization': np.float64(0.05), 'recent_win_rate': np.float64(0.1)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0054348800000000004), 'steps': [{'feature': 'network_load', 'value': np.float64(0.6), 'effect': 'multiply prob by 0.640 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.84), 'effect': 'multiply prob by 1.760 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.05), 'effect': 'multiply prob by 0.965 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.1), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.6,0.84,0.05,0.15,0.0054348800000000004,"{'timestamp': 1760866780.2261903, 'inputs': {'network_load': np.float64(0.6), 'relay_reputation': np.float64(0.84), 'budget_utilization': np.float64(0.05), 'recent_win_rate': np.float64(0.15)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0054348800000000004), 'steps': [{'feature': 'network_load', 'value': np.float64(0.6), 'effect': 'multiply prob by 0.640 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.84), 'effect': 'multiply prob by 1.760 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.05), 'effect': 'multiply prob by 0.965 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.15), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.6,0.84,0.05,0.2,0.0054348800000000004,"{'timestamp': 1760866780.2262156, 'inputs': {'network_load': np.float64(0.6), 'relay_reputation': np.float64(0.84), 'budget_utilization': np.float64(0.05), 'recent_win_rate': np.float64(0.2)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0054348800000000004), 'steps': [{'feature': 'network_load', 'value': np.float64(0.6), 'effect': 'multiply prob by 0.640 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.84), 'effect': 'multiply prob by 1.760 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.05), 'effect': 'multiply prob by 0.965 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.2), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.6,0.84,0.05,0.25,0.0054348800000000004,"{'timestamp': 1760866780.2262409, 'inputs': {'network_load': np.float64(0.6), 'relay_reputation': np.float64(0.84), 'budget_utilization': np.float64(0.05), 'recent_win_rate': np.float64(0.25)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0054348800000000004), 'steps': [{'feature': 'network_load', 'value': np.float64(0.6), 'effect': 'multiply prob by 0.640 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.84), 'effect': 'multiply prob by 1.760 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.05), 'effect': 'multiply prob by 0.965 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.25), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.6,0.84,0.05,0.3,0.0054348800000000004,"{'timestamp': 1760866780.2262661, 'inputs': {'network_load': np.float64(0.6), 'relay_reputation': np.float64(0.84), 'budget_utilization': np.float64(0.05), 'recent_win_rate': np.float64(0.3)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0054348800000000004), 'steps': [{'feature': 'network_load', 'value': np.float64(0.6), 'effect': 'multiply prob by 0.640 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.84), 'effect': 'multiply prob by 1.760 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.05), 'effect': 'multiply prob by 0.965 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.3), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.6,0.84,0.16,0.0,0.010002431899975682,"{'timestamp': 1760866780.2262948, 'inputs': {'network_load': np.float64(0.6), 'relay_reputation': np.float64(0.84), 'budget_utilization': np.float64(0.16), 'recent_win_rate': 1e-09}, 'base_prob': 0.01, 'final_prob': np.float64(0.010002431899975682), 'steps': [{'feature': 'network_load', 'value': np.float64(0.6), 'effect': 'multiply prob by 0.640 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.84), 'effect': 'multiply prob by 1.760 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.16), 'effect': 'multiply prob by 0.888 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': 1e-09, 'effect': 'multiply prob by 1.000 (higher recent wins -> lower prob)'}]}"
0.6,0.84,0.16,0.05,0.005001216000000001,"{'timestamp': 1760866780.2263203, 'inputs': {'network_load': np.float64(0.6), 'relay_reputation': np.float64(0.84), 'budget_utilization': np.float64(0.16), 'recent_win_rate': np.float64(0.05)}, 'base_prob': 0.01, 'final_prob': np.float64(0.005001216000000001), 'steps': [{'feature': 'network_load', 'value': np.float64(0.6), 'effect': 'multiply prob by 0.640 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.84), 'effect': 'multiply prob by 1.760 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.16), 'effect': 'multiply prob by 0.888 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.05), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.6,0.84,0.16,0.1,0.005001216000000001,"{'timestamp': 1760866780.2263455, 'inputs': {'network_load': np.float64(0.6), 'relay_reputation': np.float64(0.84), 'budget_utilization': np.float64(0.16), 'recent_win_rate': np.float64(0.1)}, 'base_prob': 0.01, 'final_prob': np.float64(0.005001216000000001), 'steps': [{'feature': 'network_load', 'value': np.float64(0.6), 'effect': 'multiply prob by 0.640 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.84), 'effect': 'multiply prob by 1.760 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.16), 'effect': 'multiply prob by 0.888 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.1), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.6,0.84,0.16,0.15,0.005001216000000001,"{'timestamp': 1760866780.2263727, 'inputs': {'network_load': np.float64(0.6), 'relay_reputation': np.float64(0.84), 'budget_utilization': np.float64(0.16), 'recent_win_rate': np.float64(0.15)}, 'base_prob': 0.01, 'final_prob': np.float64(0.005001216000000001), 'steps': [{'feature': 'network_load', 'value': np.float64(0.6), 'effect': 'multiply prob by 0.640 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.84), 'effect': 'multiply prob by 1.760 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.16), 'effect': 'multiply prob by 0.888 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.15), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.6,0.84,0.16,0.2,0.005001216000000001,"{'timestamp': 1760866780.2263978, 'inputs': {'network_load': np.float64(0.6), 'relay_reputation': np.float64(0.84), 'budget_utilization': np.float64(0.16), 'recent_win_rate': np.float64(0.2)}, 'base_prob': 0.01, 'final_prob': np.float64(0.005001216000000001), 'steps': [{'feature': 'network_load', 'value': np.float64(0.6), 'effect': 'multiply prob by 0.640 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.84), 'effect': 'multiply prob by 1.760 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.16), 'effect': 'multiply prob by 0.888 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.2), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.6,0.84,0.16,0.25,0.005001216000000001,"{'timestamp': 1760866780.2264228, 'inputs': {'network_load': np.float64(0.6), 'relay_reputation': np.float64(0.84), 'budget_utilization': np.float64(0.16), 'recent_win_rate': np.float64(0.25)}, 'base_prob': 0.01, 'final_prob': np.float64(0.005001216000000001), 'steps': [{'feature': 'network_load', 'value': np.float64(0.6), 'effect': 'multiply prob by 0.640 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.84), 'effect': 'multiply prob by 1.760 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.16), 'effect': 'multiply prob by 0.888 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.25), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.6,0.84,0.16,0.3,0.005001216000000001,"{'timestamp': 1760866780.226505, 'inputs': {'network_load': np.float64(0.6), 'relay_reputation': np.float64(0.84), 'budget_utilization': np.float64(0.16), 'recent_win_rate': np.float64(0.3)}, 'base_prob': 0.01, 'final_prob': np.float64(0.005001216000000001), 'steps': [{'feature': 'network_load', 'value': np.float64(0.6), 'effect': 'multiply prob by 0.640 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.84), 'effect': 'multiply prob by 1.760 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.16), 'effect': 'multiply prob by 0.888 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.3), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.6,0.84,0.26,0.0,0.009213951907860483,"{'timestamp': 1760866780.2265348, 'inputs': {'network_load': np.float64(0.6), 'relay_reputation': np.float64(0.84), 'budget_utilization': np.float64(0.26), 'recent_win_rate': 1e-09}, 'base_prob': 0.01, 'final_prob': np.float64(0.009213951907860483), 'steps': [{'feature': 'network_load', 'value': np.float64(0.6), 'effect': 'multiply prob by 0.640 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.84), 'effect': 'multiply prob by 1.760 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.26), 'effect': 'multiply prob by 0.818 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': 1e-09, 'effect': 'multiply prob by 1.000 (higher recent wins -> lower prob)'}]}"
0.6,0.84,0.26,0.05,0.004606976000000001,"{'timestamp': 1760866780.226563, 'inputs': {'network_load': np.float64(0.6), 'relay_reputation': np.float64(0.84), 'budget_utilization': np.float64(0.26), 'recent_win_rate': np.float64(0.05)}, 'base_prob': 0.01, 'final_prob': np.float64(0.004606976000000001), 'steps': [{'feature': 'network_load', 'value': np.float64(0.6), 'effect': 'multiply prob by 0.640 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.84), 'effect': 'multiply prob by 1.760 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.26), 'effect': 'multiply prob by 0.818 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.05), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.6,0.84,0.26,0.1,0.004606976000000001,"{'timestamp': 1760866780.2265885, 'inputs': {'network_load': np.float64(0.6), 'relay_reputation': np.float64(0.84), 'budget_utilization': np.float64(0.26), 'recent_win_rate': np.float64(0.1)}, 'base_prob': 0.01, 'final_prob': np.float64(0.004606976000000001), 'steps': [{'feature': 'network_load', 'value': np.float64(0.6), 'effect': 'multiply prob by 0.640 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.84), 'effect': 'multiply prob by 1.760 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.26), 'effect': 'multiply prob by 0.818 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.1), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.6,0.84,0.26,0.15,0.004606976000000001,"{'timestamp': 1760866780.2266135, 'inputs': {'network_load': np.float64(0.6), 'relay_reputation': np.float64(0.84), 'budget_utilization': np.float64(0.26), 'recent_win_rate': np.float64(0.15)}, 'base_prob': 0.01, 'final_prob': np.float64(0.004606976000000001), 'steps': [{'feature': 'network_load', 'value': np.float64(0.6), 'effect': 'multiply prob by 0.640 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.84), 'effect': 'multiply prob by 1.760 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.26), 'effect': 'multiply prob by 0.818 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.15), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.6,0.84,0.26,0.2,0.004606976000000001,"{'timestamp': 1760866780.2266421, 'inputs': {'network_load': np.float64(0.6), 'relay_reputation': np.float64(0.84), 'budget_utilization': np.float64(0.26), 'recent_win_rate': np.float64(0.2)}, 'base_prob': 0.01, 'final_prob': np.float64(0.004606976000000001), 'steps': [{'feature': 'network_load', 'value': np.float64(0.6), 'effect': 'multiply prob by 0.640 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.84), 'effect': 'multiply prob by 1.760 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.26), 'effect': 'multiply prob by 0.818 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.2), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.6,0.84,0.26,0.25,0.004606976000000001,"{'timestamp': 1760866780.2266688, 'inputs': {'network_load': np.float64(0.6), 'relay_reputation': np.float64(0.84), 'budget_utilization': np.float64(0.26), 'recent_win_rate': np.float64(0.25)}, 'base_prob': 0.01, 'final_prob': np.float64(0.004606976000000001), 'steps': [{'feature': 'network_load', 'value': np.float64(0.6), 'effect': 'multiply prob by 0.640 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.84), 'effect': 'multiply prob by 1.760 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.26), 'effect': 'multiply prob by 0.818 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.25), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.6,0.84,0.26,0.3,0.004606976000000001,"{'timestamp': 1760866780.2266977, 'inputs': {'network_load': np.float64(0.6), 'relay_reputation': np.float64(0.84), 'budget_utilization': np.float64(0.26), 'recent_win_rate': np.float64(0.3)}, 'base_prob': 0.01, 'final_prob': np.float64(0.004606976000000001), 'steps': [{'feature': 'network_load', 'value': np.float64(0.6), 'effect': 'multiply prob by 0.640 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.84), 'effect': 'multiply prob by 1.760 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.26), 'effect': 'multiply prob by 0.818 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.3), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.6,0.84,0.37,0.0,0.00834662391653376,"{'timestamp': 1760866780.2267249, 'inputs': {'network_load': np.float64(0.6), 'relay_reputation': np.float64(0.84), 'budget_utilization': np.float64(0.37), 'recent_win_rate': 1e-09}, 'base_prob': 0.01, 'final_prob': np.float64(0.00834662391653376), 'steps': [{'feature': 'network_load', 'value': np.float64(0.6), 'effect': 'multiply prob by 0.640 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.84), 'effect': 'multiply prob by 1.760 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.37), 'effect': 'multiply prob by 0.741 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': 1e-09, 'effect': 'multiply prob by 1.000 (higher recent wins -> lower prob)'}]}"
0.6,0.84,0.37,0.05,0.004173312,"{'timestamp': 1760866780.22675, 'inputs': {'network_load': np.float64(0.6), 'relay_reputation': np.float64(0.84), 'budget_utilization': np.float64(0.37), 'recent_win_rate': np.float64(0.05)}, 'base_prob': 0.01, 'final_prob': np.float64(0.004173312), 'steps': [{'feature': 'network_load', 'value': np.float64(0.6), 'effect': 'multiply prob by 0.640 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.84), 'effect': 'multiply prob by 1.760 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.37), 'effect': 'multiply prob by 0.741 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.05), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.6,0.84,0.37,0.1,0.004173312,"{'timestamp': 1760866780.2267785, 'inputs': {'network_load': np.float64(0.6), 'relay_reputation': np.float64(0.84), 'budget_utilization': np.float64(0.37), 'recent_win_rate': np.float64(0.1)}, 'base_prob': 0.01, 'final_prob': np.float64(0.004173312), 'steps': [{'feature': 'network_load', 'value': np.float64(0.6), 'effect': 'multiply prob by 0.640 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.84), 'effect': 'multiply prob by 1.760 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.37), 'effect': 'multiply prob by 0.741 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.1), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.6,0.84,0.37,0.15,0.004173312,"{'timestamp': 1760866780.226804, 'inputs': {'network_load': np.float64(0.6), 'relay_reputation': np.float64(0.84), 'budget_utilization': np.float64(0.37), 'recent_win_rate': np.float64(0.15)}, 'base_prob': 0.01, 'final_prob': np.float64(0.004173312), 'steps': [{'feature': 'network_load', 'value': np.float64(0.6), 'effect': 'multiply prob by 0.640 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.84), 'effect': 'multiply prob by 1.760 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.37), 'effect': 'multiply prob by 0.741 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.15), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.6,0.84,0.37,0.2,0.004173312,"{'timestamp': 1760866780.2268293, 'inputs': {'network_load': np.float64(0.6), 'relay_reputation': np.float64(0.84), 'budget_utilization': np.float64(0.37), 'recent_win_rate': np.float64(0.2)}, 'base_prob': 0.01, 'final_prob': np.float64(0.004173312), 'steps': [{'feature': 'network_load', 'value': np.float64(0.6), 'effect': 'multiply prob by 0.640 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.84), 'effect': 'multiply prob by 1.760 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.37), 'effect': 'multiply prob by 0.741 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.2), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.6,0.84,0.37,0.25,0.004173312,"{'timestamp': 1760866780.2268562, 'inputs': {'network_load': np.float64(0.6), 'relay_reputation': np.float64(0.84), 'budget_utilization': np.float64(0.37), 'recent_win_rate': np.float64(0.25)}, 'base_prob': 0.01, 'final_prob': np.float64(0.004173312), 'steps': [{'feature': 'network_load', 'value': np.float64(0.6), 'effect': 'multiply prob by 0.640 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.84), 'effect': 'multiply prob by 1.760 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.37), 'effect': 'multiply prob by 0.741 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.25), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.6,0.84,0.37,0.3,0.004173312,"{'timestamp': 1760866780.2268813, 'inputs': {'network_load': np.float64(0.6), 'relay_reputation': np.float64(0.84), 'budget_utilization': np.float64(0.37), 'recent_win_rate': np.float64(0.3)}, 'base_prob': 0.01, 'final_prob': np.float64(0.004173312), 'steps': [{'feature': 'network_load', 'value': np.float64(0.6), 'effect': 'multiply prob by 0.640 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.84), 'effect': 'multiply prob by 1.760 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.37), 'effect': 'multiply prob by 0.741 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.3), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.6,0.84,0.48,0.0,0.007479295925207042,"{'timestamp': 1760866780.2269096, 'inputs': {'network_load': np.float64(0.6), 'relay_reputation': np.float64(0.84), 'budget_utilization': np.float64(0.48), 'recent_win_rate': 1e-09}, 'base_prob': 0.01, 'final_prob': np.float64(0.007479295925207042), 'steps': [{'feature': 'network_load', 'value': np.float64(0.6), 'effect': 'multiply prob by 0.640 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.84), 'effect': 'multiply prob by 1.760 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.48), 'effect': 'multiply prob by 0.664 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': 1e-09, 'effect': 'multiply prob by 1.000 (higher recent wins -> lower prob)'}]}"
0.6,0.84,0.48,0.05,0.003739648000000001,"{'timestamp': 1760866780.2269354, 'inputs': {'network_load': np.float64(0.6), 'relay_reputation': np.float64(0.84), 'budget_utilization': np.float64(0.48), 'recent_win_rate': np.float64(0.05)}, 'base_prob': 0.01, 'final_prob': np.float64(0.003739648000000001), 'steps': [{'feature': 'network_load', 'value': np.float64(0.6), 'effect': 'multiply prob by 0.640 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.84), 'effect': 'multiply prob by 1.760 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.48), 'effect': 'multiply prob by 0.664 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.05), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.6,0.84,0.48,0.1,0.003739648000000001,"{'timestamp': 1760866780.2269604, 'inputs': {'network_load': np.float64(0.6), 'relay_reputation': np.float64(0.84), 'budget_utilization': np.float64(0.48), 'recent_win_rate': np.float64(0.1)}, 'base_prob': 0.01, 'final_prob': np.float64(0.003739648000000001), 'steps': [{'feature': 'network_load', 'value': np.float64(0.6), 'effect': 'multiply prob by 0.640 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.84), 'effect': 'multiply prob by 1.760 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.48), 'effect': 'multiply prob by 0.664 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.1), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.6,0.84,0.48,0.15,0.003739648000000001,"{'timestamp': 1760866780.2269857, 'inputs': {'network_load': np.float64(0.6), 'relay_reputation': np.float64(0.84), 'budget_utilization': np.float64(0.48), 'recent_win_rate': np.float64(0.15)}, 'base_prob': 0.01, 'final_prob': np.float64(0.003739648000000001), 'steps': [{'feature': 'network_load', 'value': np.float64(0.6), 'effect': 'multiply prob by 0.640 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.84), 'effect': 'multiply prob by 1.760 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.48), 'effect': 'multiply prob by 0.664 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.15), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.6,0.84,0.48,0.2,0.003739648000000001,"{'timestamp': 1760866780.227023, 'inputs': {'network_load': np.float64(0.6), 'relay_reputation': np.float64(0.84), 'budget_utilization': np.float64(0.48), 'recent_win_rate': np.float64(0.2)}, 'base_prob': 0.01, 'final_prob': np.float64(0.003739648000000001), 'steps': [{'feature': 'network_load', 'value': np.float64(0.6), 'effect': 'multiply prob by 0.640 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.84), 'effect': 'multiply prob by 1.760 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.48), 'effect': 'multiply prob by 0.664 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.2), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.6,0.84,0.48,0.25,0.003739648000000001,"{'timestamp': 1760866780.2270505, 'inputs': {'network_load': np.float64(0.6), 'relay_reputation': np.float64(0.84), 'budget_utilization': np.float64(0.48), 'recent_win_rate': np.float64(0.25)}, 'base_prob': 0.01, 'final_prob': np.float64(0.003739648000000001), 'steps': [{'feature': 'network_load', 'value': np.float64(0.6), 'effect': 'multiply prob by 0.640 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.84), 'effect': 'multiply prob by 1.760 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.48), 'effect': 'multiply prob by 0.664 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.25), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.6,0.84,0.48,0.3,0.003739648000000001,"{'timestamp': 1760866780.2270832, 'inputs': {'network_load': np.float64(0.6), 'relay_reputation': np.float64(0.84), 'budget_utilization': np.float64(0.48), 'recent_win_rate': np.float64(0.3)}, 'base_prob': 0.01, 'final_prob': np.float64(0.003739648000000001), 'steps': [{'feature': 'network_load', 'value': np.float64(0.6), 'effect': 'multiply prob by 0.640 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.84), 'effect': 'multiply prob by 1.760 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.48), 'effect': 'multiply prob by 0.664 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.3), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.6,0.84,0.59,0.0,0.00661196793388032,"{'timestamp': 1760866780.227112, 'inputs': {'network_load': np.float64(0.6), 'relay_reputation': np.float64(0.84), 'budget_utilization': np.float64(0.59), 'recent_win_rate': 1e-09}, 'base_prob': 0.01, 'final_prob': np.float64(0.00661196793388032), 'steps': [{'feature': 'network_load', 'value': np.float64(0.6), 'effect': 'multiply prob by 0.640 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.84), 'effect': 'multiply prob by 1.760 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.59), 'effect': 'multiply prob by 0.587 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': 1e-09, 'effect': 'multiply prob by 1.000 (higher recent wins -> lower prob)'}]}"
0.6,0.84,0.59,0.05,0.003305984,"{'timestamp': 1760866780.2271373, 'inputs': {'network_load': np.float64(0.6), 'relay_reputation': np.float64(0.84), 'budget_utilization': np.float64(0.59), 'recent_win_rate': np.float64(0.05)}, 'base_prob': 0.01, 'final_prob': np.float64(0.003305984), 'steps': [{'feature': 'network_load', 'value': np.float64(0.6), 'effect': 'multiply prob by 0.640 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.84), 'effect': 'multiply prob by 1.760 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.59), 'effect': 'multiply prob by 0.587 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.05), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.6,0.84,0.59,0.1,0.003305984,"{'timestamp': 1760866780.2271626, 'inputs': {'network_load': np.float64(0.6), 'relay_reputation': np.float64(0.84), 'budget_utilization': np.float64(0.59), 'recent_win_rate': np.float64(0.1)}, 'base_prob': 0.01, 'final_prob': np.float64(0.003305984), 'steps': [{'feature': 'network_load', 'value': np.float64(0.6), 'effect': 'multiply prob by 0.640 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.84), 'effect': 'multiply prob by 1.760 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.59), 'effect': 'multiply prob by 0.587 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.1), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.6,0.84,0.59,0.15,0.003305984,"{'timestamp': 1760866780.2271967, 'inputs': {'network_load': np.float64(0.6), 'relay_reputation': np.float64(0.84), 'budget_utilization': np.float64(0.59), 'recent_win_rate': np.float64(0.15)}, 'base_prob': 0.01, 'final_prob': np.float64(0.003305984), 'steps': [{'feature': 'network_load', 'value': np.float64(0.6), 'effect': 'multiply prob by 0.640 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.84), 'effect': 'multiply prob by 1.760 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.59), 'effect': 'multiply prob by 0.587 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.15), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.6,0.84,0.59,0.2,0.003305984,"{'timestamp': 1760866780.2272651, 'inputs': {'network_load': np.float64(0.6), 'relay_reputation': np.float64(0.84), 'budget_utilization': np.float64(0.59), 'recent_win_rate': np.float64(0.2)}, 'base_prob': 0.01, 'final_prob': np.float64(0.003305984), 'steps': [{'feature': 'network_load', 'value': np.float64(0.6), 'effect': 'multiply prob by 0.640 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.84), 'effect': 'multiply prob by 1.760 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.59), 'effect': 'multiply prob by 0.587 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.2), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.6,0.84,0.59,0.25,0.003305984,"{'timestamp': 1760866780.2272947, 'inputs': {'network_load': np.float64(0.6), 'relay_reputation': np.float64(0.84), 'budget_utilization': np.float64(0.59), 'recent_win_rate': np.float64(0.25)}, 'base_prob': 0.01, 'final_prob': np.float64(0.003305984), 'steps': [{'feature': 'network_load', 'value': np.float64(0.6), 'effect': 'multiply prob by 0.640 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.84), 'effect': 'multiply prob by 1.760 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.59), 'effect': 'multiply prob by 0.587 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.25), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.6,0.84,0.59,0.3,0.003305984,"{'timestamp': 1760866780.2273197, 'inputs': {'network_load': np.float64(0.6), 'relay_reputation': np.float64(0.84), 'budget_utilization': np.float64(0.59), 'recent_win_rate': np.float64(0.3)}, 'base_prob': 0.01, 'final_prob': np.float64(0.003305984), 'steps': [{'feature': 'network_load', 'value': np.float64(0.6), 'effect': 'multiply prob by 0.640 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.84), 'effect': 'multiply prob by 1.760 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.59), 'effect': 'multiply prob by 0.587 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.3), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.6,0.84,0.69,0.0,0.005823487941765122,"{'timestamp': 1760866780.227413, 'inputs': {'network_load': np.float64(0.6), 'relay_reputation': np.float64(0.84), 'budget_utilization': np.float64(0.69), 'recent_win_rate': 1e-09}, 'base_prob': 0.01, 'final_prob': np.float64(0.005823487941765122), 'steps': [{'feature': 'network_load', 'value': np.float64(0.6), 'effect': 'multiply prob by 0.640 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.84), 'effect': 'multiply prob by 1.760 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.69), 'effect': 'multiply prob by 0.517 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': 1e-09, 'effect': 'multiply prob by 1.000 (higher recent wins -> lower prob)'}]}"
0.6,0.84,0.69,0.05,0.0029117440000000013,"{'timestamp': 1760866780.22744, 'inputs': {'network_load': np.float64(0.6), 'relay_reputation': np.float64(0.84), 'budget_utilization': np.float64(0.69), 'recent_win_rate': np.float64(0.05)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0029117440000000013), 'steps': [{'feature': 'network_load', 'value': np.float64(0.6), 'effect': 'multiply prob by 0.640 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.84), 'effect': 'multiply prob by 1.760 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.69), 'effect': 'multiply prob by 0.517 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.05), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.6,0.84,0.69,0.1,0.0029117440000000013,"{'timestamp': 1760866780.227469, 'inputs': {'network_load': np.float64(0.6), 'relay_reputation': np.float64(0.84), 'budget_utilization': np.float64(0.69), 'recent_win_rate': np.float64(0.1)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0029117440000000013), 'steps': [{'feature': 'network_load', 'value': np.float64(0.6), 'effect': 'multiply prob by 0.640 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.84), 'effect': 'multiply prob by 1.760 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.69), 'effect': 'multiply prob by 0.517 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.1), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.6,0.84,0.69,0.15,0.0029117440000000013,"{'timestamp': 1760866780.2274964, 'inputs': {'network_load': np.float64(0.6), 'relay_reputation': np.float64(0.84), 'budget_utilization': np.float64(0.69), 'recent_win_rate': np.float64(0.15)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0029117440000000013), 'steps': [{'feature': 'network_load', 'value': np.float64(0.6), 'effect': 'multiply prob by 0.640 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.84), 'effect': 'multiply prob by 1.760 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.69), 'effect': 'multiply prob by 0.517 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.15), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.6,0.84,0.69,0.2,0.0029117440000000013,"{'timestamp': 1760866780.227522, 'inputs': {'network_load': np.float64(0.6), 'relay_reputation': np.float64(0.84), 'budget_utilization': np.float64(0.69), 'recent_win_rate': np.float64(0.2)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0029117440000000013), 'steps': [{'feature': 'network_load', 'value': np.float64(0.6), 'effect': 'multiply prob by 0.640 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.84), 'effect': 'multiply prob by 1.760 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.69), 'effect': 'multiply prob by 0.517 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.2), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.6,0.84,0.69,0.25,0.0029117440000000013,"{'timestamp': 1760866780.227547, 'inputs': {'network_load': np.float64(0.6), 'relay_reputation': np.float64(0.84), 'budget_utilization': np.float64(0.69), 'recent_win_rate': np.float64(0.25)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0029117440000000013), 'steps': [{'feature': 'network_load', 'value': np.float64(0.6), 'effect': 'multiply prob by 0.640 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.84), 'effect': 'multiply prob by 1.760 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.69), 'effect': 'multiply prob by 0.517 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.25), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.6,0.84,0.69,0.3,0.0029117440000000013,"{'timestamp': 1760866780.227572, 'inputs': {'network_load': np.float64(0.6), 'relay_reputation': np.float64(0.84), 'budget_utilization': np.float64(0.69), 'recent_win_rate': np.float64(0.3)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0029117440000000013), 'steps': [{'feature': 'network_load', 'value': np.float64(0.6), 'effect': 'multiply prob by 0.640 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.84), 'effect': 'multiply prob by 1.760 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.69), 'effect': 'multiply prob by 0.517 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.3), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.6,0.84,0.8,0.0,0.004956159950438401,"{'timestamp': 1760866780.227599, 'inputs': {'network_load': np.float64(0.6), 'relay_reputation': np.float64(0.84), 'budget_utilization': np.float64(0.8), 'recent_win_rate': 1e-09}, 'base_prob': 0.01, 'final_prob': np.float64(0.004956159950438401), 'steps': [{'feature': 'network_load', 'value': np.float64(0.6), 'effect': 'multiply prob by 0.640 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.84), 'effect': 'multiply prob by 1.760 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.8), 'effect': 'multiply prob by 0.440 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': 1e-09, 'effect': 'multiply prob by 1.000 (higher recent wins -> lower prob)'}]}"
0.6,0.84,0.8,0.05,0.0024780800000000006,"{'timestamp': 1760866780.2276301, 'inputs': {'network_load': np.float64(0.6), 'relay_reputation': np.float64(0.84), 'budget_utilization': np.float64(0.8), 'recent_win_rate': np.float64(0.05)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0024780800000000006), 'steps': [{'feature': 'network_load', 'value': np.float64(0.6), 'effect': 'multiply prob by 0.640 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.84), 'effect': 'multiply prob by 1.760 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.8), 'effect': 'multiply prob by 0.440 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.05), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.6,0.84,0.8,0.1,0.0024780800000000006,"{'timestamp': 1760866780.2276585, 'inputs': {'network_load': np.float64(0.6), 'relay_reputation': np.float64(0.84), 'budget_utilization': np.float64(0.8), 'recent_win_rate': np.float64(0.1)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0024780800000000006), 'steps': [{'feature': 'network_load', 'value': np.float64(0.6), 'effect': 'multiply prob by 0.640 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.84), 'effect': 'multiply prob by 1.760 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.8), 'effect': 'multiply prob by 0.440 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.1), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.6,0.84,0.8,0.15,0.0024780800000000006,"{'timestamp': 1760866780.227684, 'inputs': {'network_load': np.float64(0.6), 'relay_reputation': np.float64(0.84), 'budget_utilization': np.float64(0.8), 'recent_win_rate': np.float64(0.15)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0024780800000000006), 'steps': [{'feature': 'network_load', 'value': np.float64(0.6), 'effect': 'multiply prob by 0.640 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.84), 'effect': 'multiply prob by 1.760 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.8), 'effect': 'multiply prob by 0.440 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.15), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.6,0.84,0.8,0.2,0.0024780800000000006,"{'timestamp': 1760866780.2277093, 'inputs': {'network_load': np.float64(0.6), 'relay_reputation': np.float64(0.84), 'budget_utilization': np.float64(0.8), 'recent_win_rate': np.float64(0.2)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0024780800000000006), 'steps': [{'feature': 'network_load', 'value': np.float64(0.6), 'effect': 'multiply prob by 0.640 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.84), 'effect': 'multiply prob by 1.760 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.8), 'effect': 'multiply prob by 0.440 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.2), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.6,0.84,0.8,0.25,0.0024780800000000006,"{'timestamp': 1760866780.2277343, 'inputs': {'network_load': np.float64(0.6), 'relay_reputation': np.float64(0.84), 'budget_utilization': np.float64(0.8), 'recent_win_rate': np.float64(0.25)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0024780800000000006), 'steps': [{'feature': 'network_load', 'value': np.float64(0.6), 'effect': 'multiply prob by 0.640 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.84), 'effect': 'multiply prob by 1.760 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.8), 'effect': 'multiply prob by 0.440 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.25), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.6,0.84,0.8,0.3,0.0024780800000000006,"{'timestamp': 1760866780.2277608, 'inputs': {'network_load': np.float64(0.6), 'relay_reputation': np.float64(0.84), 'budget_utilization': np.float64(0.8), 'recent_win_rate': np.float64(0.3)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0024780800000000006), 'steps': [{'feature': 'network_load', 'value': np.float64(0.6), 'effect': 'multiply prob by 0.640 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.84), 'effect': 'multiply prob by 1.760 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.8), 'effect': 'multiply prob by 0.440 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.3), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.6,0.95,0.05,0.0,0.011888799881112,"{'timestamp': 1760866780.2277892, 'inputs': {'network_load': np.float64(0.6), 'relay_reputation': np.float64(0.95), 'budget_utilization': np.float64(0.05), 'recent_win_rate': 1e-09}, 'base_prob': 0.01, 'final_prob': np.float64(0.011888799881112), 'steps': [{'feature': 'network_load', 'value': np.float64(0.6), 'effect': 'multiply prob by 0.640 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.95), 'effect': 'multiply prob by 1.925 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.05), 'effect': 'multiply prob by 0.965 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': 1e-09, 'effect': 'multiply prob by 1.000 (higher recent wins -> lower prob)'}]}"
0.6,0.95,0.05,0.05,0.0059444,"{'timestamp': 1760866780.2278142, 'inputs': {'network_load': np.float64(0.6), 'relay_reputation': np.float64(0.95), 'budget_utilization': np.float64(0.05), 'recent_win_rate': np.float64(0.05)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0059444), 'steps': [{'feature': 'network_load', 'value': np.float64(0.6), 'effect': 'multiply prob by 0.640 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.95), 'effect': 'multiply prob by 1.925 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.05), 'effect': 'multiply prob by 0.965 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.05), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.6,0.95,0.05,0.1,0.0059444,"{'timestamp': 1760866780.2278414, 'inputs': {'network_load': np.float64(0.6), 'relay_reputation': np.float64(0.95), 'budget_utilization': np.float64(0.05), 'recent_win_rate': np.float64(0.1)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0059444), 'steps': [{'feature': 'network_load', 'value': np.float64(0.6), 'effect': 'multiply prob by 0.640 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.95), 'effect': 'multiply prob by 1.925 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.05), 'effect': 'multiply prob by 0.965 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.1), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.6,0.95,0.05,0.15,0.0059444,"{'timestamp': 1760866780.2278678, 'inputs': {'network_load': np.float64(0.6), 'relay_reputation': np.float64(0.95), 'budget_utilization': np.float64(0.05), 'recent_win_rate': np.float64(0.15)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0059444), 'steps': [{'feature': 'network_load', 'value': np.float64(0.6), 'effect': 'multiply prob by 0.640 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.95), 'effect': 'multiply prob by 1.925 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.05), 'effect': 'multiply prob by 0.965 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.15), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.6,0.95,0.05,0.2,0.0059444,"{'timestamp': 1760866780.2278948, 'inputs': {'network_load': np.float64(0.6), 'relay_reputation': np.float64(0.95), 'budget_utilization': np.float64(0.05), 'recent_win_rate': np.float64(0.2)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0059444), 'steps': [{'feature': 'network_load', 'value': np.float64(0.6), 'effect': 'multiply prob by 0.640 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.95), 'effect': 'multiply prob by 1.925 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.05), 'effect': 'multiply prob by 0.965 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.2), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.6,0.95,0.05,0.25,0.0059444,"{'timestamp': 1760866780.22792, 'inputs': {'network_load': np.float64(0.6), 'relay_reputation': np.float64(0.95), 'budget_utilization': np.float64(0.05), 'recent_win_rate': np.float64(0.25)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0059444), 'steps': [{'feature': 'network_load', 'value': np.float64(0.6), 'effect': 'multiply prob by 0.640 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.95), 'effect': 'multiply prob by 1.925 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.05), 'effect': 'multiply prob by 0.965 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.25), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.6,0.95,0.05,0.3,0.0059444,"{'timestamp': 1760866780.2279453, 'inputs': {'network_load': np.float64(0.6), 'relay_reputation': np.float64(0.95), 'budget_utilization': np.float64(0.05), 'recent_win_rate': np.float64(0.3)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0059444), 'steps': [{'feature': 'network_load', 'value': np.float64(0.6), 'effect': 'multiply prob by 0.640 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.95), 'effect': 'multiply prob by 1.925 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.05), 'effect': 'multiply prob by 0.965 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.3), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.6,0.95,0.16,0.0,0.010940159890598398,"{'timestamp': 1760866780.2280304, 'inputs': {'network_load': np.float64(0.6), 'relay_reputation': np.float64(0.95), 'budget_utilization': np.float64(0.16), 'recent_win_rate': 1e-09}, 'base_prob': 0.01, 'final_prob': np.float64(0.010940159890598398), 'steps': [{'feature': 'network_load', 'value': np.float64(0.6), 'effect': 'multiply prob by 0.640 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.95), 'effect': 'multiply prob by 1.925 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.16), 'effect': 'multiply prob by 0.888 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': 1e-09, 'effect': 'multiply prob by 1.000 (higher recent wins -> lower prob)'}]}"
0.6,0.95,0.16,0.05,0.0054700799999999996,"{'timestamp': 1760866780.228058, 'inputs': {'network_load': np.float64(0.6), 'relay_reputation': np.float64(0.95), 'budget_utilization': np.float64(0.16), 'recent_win_rate': np.float64(0.05)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0054700799999999996), 'steps': [{'feature': 'network_load', 'value': np.float64(0.6), 'effect': 'multiply prob by 0.640 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.95), 'effect': 'multiply prob by 1.925 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.16), 'effect': 'multiply prob by 0.888 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.05), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.6,0.95,0.16,0.1,0.0054700799999999996,"{'timestamp': 1760866780.228088, 'inputs': {'network_load': np.float64(0.6), 'relay_reputation': np.float64(0.95), 'budget_utilization': np.float64(0.16), 'recent_win_rate': np.float64(0.1)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0054700799999999996), 'steps': [{'feature': 'network_load', 'value': np.float64(0.6), 'effect': 'multiply prob by 0.640 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.95), 'effect': 'multiply prob by 1.925 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.16), 'effect': 'multiply prob by 0.888 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.1), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.6,0.95,0.16,0.15,0.0054700799999999996,"{'timestamp': 1760866780.228117, 'inputs': {'network_load': np.float64(0.6), 'relay_reputation': np.float64(0.95), 'budget_utilization': np.float64(0.16), 'recent_win_rate': np.float64(0.15)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0054700799999999996), 'steps': [{'feature': 'network_load', 'value': np.float64(0.6), 'effect': 'multiply prob by 0.640 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.95), 'effect': 'multiply prob by 1.925 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.16), 'effect': 'multiply prob by 0.888 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.15), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.6,0.95,0.16,0.2,0.0054700799999999996,"{'timestamp': 1760866780.228144, 'inputs': {'network_load': np.float64(0.6), 'relay_reputation': np.float64(0.95), 'budget_utilization': np.float64(0.16), 'recent_win_rate': np.float64(0.2)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0054700799999999996), 'steps': [{'feature': 'network_load', 'value': np.float64(0.6), 'effect': 'multiply prob by 0.640 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.95), 'effect': 'multiply prob by 1.925 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.16), 'effect': 'multiply prob by 0.888 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.2), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.6,0.95,0.16,0.25,0.0054700799999999996,"{'timestamp': 1760866780.2281692, 'inputs': {'network_load': np.float64(0.6), 'relay_reputation': np.float64(0.95), 'budget_utilization': np.float64(0.16), 'recent_win_rate': np.float64(0.25)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0054700799999999996), 'steps': [{'feature': 'network_load', 'value': np.float64(0.6), 'effect': 'multiply prob by 0.640 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.95), 'effect': 'multiply prob by 1.925 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.16), 'effect': 'multiply prob by 0.888 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.25), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.6,0.95,0.16,0.3,0.0054700799999999996,"{'timestamp': 1760866780.2281961, 'inputs': {'network_load': np.float64(0.6), 'relay_reputation': np.float64(0.95), 'budget_utilization': np.float64(0.16), 'recent_win_rate': np.float64(0.3)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0054700799999999996), 'steps': [{'feature': 'network_load', 'value': np.float64(0.6), 'effect': 'multiply prob by 0.640 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.95), 'effect': 'multiply prob by 1.925 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.16), 'effect': 'multiply prob by 0.888 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.3), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.6,0.95,0.26,0.0,0.0100777598992224,"{'timestamp': 1760866780.2282255, 'inputs': {'network_load': np.float64(0.6), 'relay_reputation': np.float64(0.95), 'budget_utilization': np.float64(0.26), 'recent_win_rate': 1e-09}, 'base_prob': 0.01, 'final_prob': np.float64(0.0100777598992224), 'steps': [{'feature': 'network_load', 'value': np.float64(0.6), 'effect': 'multiply prob by 0.640 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.95), 'effect': 'multiply prob by 1.925 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.26), 'effect': 'multiply prob by 0.818 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': 1e-09, 'effect': 'multiply prob by 1.000 (higher recent wins -> lower prob)'}]}"
0.6,0.95,0.26,0.05,0.00503888,"{'timestamp': 1760866780.2283084, 'inputs': {'network_load': np.float64(0.6), 'relay_reputation': np.float64(0.95), 'budget_utilization': np.float64(0.26), 'recent_win_rate': np.float64(0.05)}, 'base_prob': 0.01, 'final_prob': np.float64(0.00503888), 'steps': [{'feature': 'network_load', 'value': np.float64(0.6), 'effect': 'multiply prob by 0.640 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.95), 'effect': 'multiply prob by 1.925 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.26), 'effect': 'multiply prob by 0.818 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.05), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.6,0.95,0.26,0.1,0.00503888,"{'timestamp': 1760866780.2283347, 'inputs': {'network_load': np.float64(0.6), 'relay_reputation': np.float64(0.95), 'budget_utilization': np.float64(0.26), 'recent_win_rate': np.float64(0.1)}, 'base_prob': 0.01, 'final_prob': np.float64(0.00503888), 'steps': [{'feature': 'network_load', 'value': np.float64(0.6), 'effect': 'multiply prob by 0.640 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.95), 'effect': 'multiply prob by 1.925 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.26), 'effect': 'multiply prob by 0.818 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.1), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.6,0.95,0.26,0.15,0.00503888,"{'timestamp': 1760866780.22836, 'inputs': {'network_load': np.float64(0.6), 'relay_reputation': np.float64(0.95), 'budget_utilization': np.float64(0.26), 'recent_win_rate': np.float64(0.15)}, 'base_prob': 0.01, 'final_prob': np.float64(0.00503888), 'steps': [{'feature': 'network_load', 'value': np.float64(0.6), 'effect': 'multiply prob by 0.640 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.95), 'effect': 'multiply prob by 1.925 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.26), 'effect': 'multiply prob by 0.818 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.15), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.6,0.95,0.26,0.2,0.00503888,"{'timestamp': 1760866780.228388, 'inputs': {'network_load': np.float64(0.6), 'relay_reputation': np.float64(0.95), 'budget_utilization': np.float64(0.26), 'recent_win_rate': np.float64(0.2)}, 'base_prob': 0.01, 'final_prob': np.float64(0.00503888), 'steps': [{'feature': 'network_load', 'value': np.float64(0.6), 'effect': 'multiply prob by 0.640 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.95), 'effect': 'multiply prob by 1.925 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.26), 'effect': 'multiply prob by 0.818 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.2), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.6,0.95,0.26,0.25,0.00503888,"{'timestamp': 1760866780.228413, 'inputs': {'network_load': np.float64(0.6), 'relay_reputation': np.float64(0.95), 'budget_utilization': np.float64(0.26), 'recent_win_rate': np.float64(0.25)}, 'base_prob': 0.01, 'final_prob': np.float64(0.00503888), 'steps': [{'feature': 'network_load', 'value': np.float64(0.6), 'effect': 'multiply prob by 0.640 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.95), 'effect': 'multiply prob by 1.925 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.26), 'effect': 'multiply prob by 0.818 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.25), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.6,0.95,0.26,0.3,0.00503888,"{'timestamp': 1760866780.2284405, 'inputs': {'network_load': np.float64(0.6), 'relay_reputation': np.float64(0.95), 'budget_utilization': np.float64(0.26), 'recent_win_rate': np.float64(0.3)}, 'base_prob': 0.01, 'final_prob': np.float64(0.00503888), 'steps': [{'feature': 'network_load', 'value': np.float64(0.6), 'effect': 'multiply prob by 0.640 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.95), 'effect': 'multiply prob by 1.925 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.26), 'effect': 'multiply prob by 0.818 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.3), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.6,0.95,0.37,0.0,0.009129119908708799,"{'timestamp': 1760866780.2284737, 'inputs': {'network_load': np.float64(0.6), 'relay_reputation': np.float64(0.95), 'budget_utilization': np.float64(0.37), 'recent_win_rate': 1e-09}, 'base_prob': 0.01, 'final_prob': np.float64(0.009129119908708799), 'steps': [{'feature': 'network_load', 'value': np.float64(0.6), 'effect': 'multiply prob by 0.640 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.95), 'effect': 'multiply prob by 1.925 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.37), 'effect': 'multiply prob by 0.741 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': 1e-09, 'effect': 'multiply prob by 1.000 (higher recent wins -> lower prob)'}]}"
0.6,0.95,0.37,0.05,0.00456456,"{'timestamp': 1760866780.2284994, 'inputs': {'network_load': np.float64(0.6), 'relay_reputation': np.float64(0.95), 'budget_utilization': np.float64(0.37), 'recent_win_rate': np.float64(0.05)}, 'base_prob': 0.01, 'final_prob': np.float64(0.00456456), 'steps': [{'feature': 'network_load', 'value': np.float64(0.6), 'effect': 'multiply prob by 0.640 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.95), 'effect': 'multiply prob by 1.925 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.37), 'effect': 'multiply prob by 0.741 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.05), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.6,0.95,0.37,0.1,0.00456456,"{'timestamp': 1760866780.2285247, 'inputs': {'network_load': np.float64(0.6), 'relay_reputation': np.float64(0.95), 'budget_utilization': np.float64(0.37), 'recent_win_rate': np.float64(0.1)}, 'base_prob': 0.01, 'final_prob': np.float64(0.00456456), 'steps': [{'feature': 'network_load', 'value': np.float64(0.6), 'effect': 'multiply prob by 0.640 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.95), 'effect': 'multiply prob by 1.925 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.37), 'effect': 'multiply prob by 0.741 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.1), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.6,0.95,0.37,0.15,0.00456456,"{'timestamp': 1760866780.22855, 'inputs': {'network_load': np.float64(0.6), 'relay_reputation': np.float64(0.95), 'budget_utilization': np.float64(0.37), 'recent_win_rate': np.float64(0.15)}, 'base_prob': 0.01, 'final_prob': np.float64(0.00456456), 'steps': [{'feature': 'network_load', 'value': np.float64(0.6), 'effect': 'multiply prob by 0.640 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.95), 'effect': 'multiply prob by 1.925 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.37), 'effect': 'multiply prob by 0.741 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.15), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.6,0.95,0.37,0.2,0.00456456,"{'timestamp': 1760866780.2285771, 'inputs': {'network_load': np.float64(0.6), 'relay_reputation': np.float64(0.95), 'budget_utilization': np.float64(0.37), 'recent_win_rate': np.float64(0.2)}, 'base_prob': 0.01, 'final_prob': np.float64(0.00456456), 'steps': [{'feature': 'network_load', 'value': np.float64(0.6), 'effect': 'multiply prob by 0.640 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.95), 'effect': 'multiply prob by 1.925 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.37), 'effect': 'multiply prob by 0.741 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.2), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.6,0.95,0.37,0.25,0.00456456,"{'timestamp': 1760866780.2286038, 'inputs': {'network_load': np.float64(0.6), 'relay_reputation': np.float64(0.95), 'budget_utilization': np.float64(0.37), 'recent_win_rate': np.float64(0.25)}, 'base_prob': 0.01, 'final_prob': np.float64(0.00456456), 'steps': [{'feature': 'network_load', 'value': np.float64(0.6), 'effect': 'multiply prob by 0.640 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.95), 'effect': 'multiply prob by 1.925 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.37), 'effect': 'multiply prob by 0.741 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.25), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.6,0.95,0.37,0.3,0.00456456,"{'timestamp': 1760866780.2286308, 'inputs': {'network_load': np.float64(0.6), 'relay_reputation': np.float64(0.95), 'budget_utilization': np.float64(0.37), 'recent_win_rate': np.float64(0.3)}, 'base_prob': 0.01, 'final_prob': np.float64(0.00456456), 'steps': [{'feature': 'network_load', 'value': np.float64(0.6), 'effect': 'multiply prob by 0.640 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.95), 'effect': 'multiply prob by 1.925 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.37), 'effect': 'multiply prob by 0.741 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.3), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.6,0.95,0.48,0.0,0.0081804799181952,"{'timestamp': 1760866780.228658, 'inputs': {'network_load': np.float64(0.6), 'relay_reputation': np.float64(0.95), 'budget_utilization': np.float64(0.48), 'recent_win_rate': 1e-09}, 'base_prob': 0.01, 'final_prob': np.float64(0.0081804799181952), 'steps': [{'feature': 'network_load', 'value': np.float64(0.6), 'effect': 'multiply prob by 0.640 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.95), 'effect': 'multiply prob by 1.925 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.48), 'effect': 'multiply prob by 0.664 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': 1e-09, 'effect': 'multiply prob by 1.000 (higher recent wins -> lower prob)'}]}"
0.6,0.95,0.48,0.05,0.00409024,"{'timestamp': 1760866780.2286994, 'inputs': {'network_load': np.float64(0.6), 'relay_reputation': np.float64(0.95), 'budget_utilization': np.float64(0.48), 'recent_win_rate': np.float64(0.05)}, 'base_prob': 0.01, 'final_prob': np.float64(0.00409024), 'steps': [{'feature': 'network_load', 'value': np.float64(0.6), 'effect': 'multiply prob by 0.640 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.95), 'effect': 'multiply prob by 1.925 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.48), 'effect': 'multiply prob by 0.664 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.05), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.6,0.95,0.48,0.1,0.00409024,"{'timestamp': 1760866780.2287357, 'inputs': {'network_load': np.float64(0.6), 'relay_reputation': np.float64(0.95), 'budget_utilization': np.float64(0.48), 'recent_win_rate': np.float64(0.1)}, 'base_prob': 0.01, 'final_prob': np.float64(0.00409024), 'steps': [{'feature': 'network_load', 'value': np.float64(0.6), 'effect': 'multiply prob by 0.640 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.95), 'effect': 'multiply prob by 1.925 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.48), 'effect': 'multiply prob by 0.664 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.1), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.6,0.95,0.48,0.15,0.00409024,"{'timestamp': 1760866780.2287688, 'inputs': {'network_load': np.float64(0.6), 'relay_reputation': np.float64(0.95), 'budget_utilization': np.float64(0.48), 'recent_win_rate': np.float64(0.15)}, 'base_prob': 0.01, 'final_prob': np.float64(0.00409024), 'steps': [{'feature': 'network_load', 'value': np.float64(0.6), 'effect': 'multiply prob by 0.640 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.95), 'effect': 'multiply prob by 1.925 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.48), 'effect': 'multiply prob by 0.664 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.15), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.6,0.95,0.48,0.2,0.00409024,"{'timestamp': 1760866780.2287943, 'inputs': {'network_load': np.float64(0.6), 'relay_reputation': np.float64(0.95), 'budget_utilization': np.float64(0.48), 'recent_win_rate': np.float64(0.2)}, 'base_prob': 0.01, 'final_prob': np.float64(0.00409024), 'steps': [{'feature': 'network_load', 'value': np.float64(0.6), 'effect': 'multiply prob by 0.640 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.95), 'effect': 'multiply prob by 1.925 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.48), 'effect': 'multiply prob by 0.664 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.2), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.6,0.95,0.48,0.25,0.00409024,"{'timestamp': 1760866780.2288194, 'inputs': {'network_load': np.float64(0.6), 'relay_reputation': np.float64(0.95), 'budget_utilization': np.float64(0.48), 'recent_win_rate': np.float64(0.25)}, 'base_prob': 0.01, 'final_prob': np.float64(0.00409024), 'steps': [{'feature': 'network_load', 'value': np.float64(0.6), 'effect': 'multiply prob by 0.640 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.95), 'effect': 'multiply prob by 1.925 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.48), 'effect': 'multiply prob by 0.664 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.25), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.6,0.95,0.48,0.3,0.00409024,"{'timestamp': 1760866780.2288463, 'inputs': {'network_load': np.float64(0.6), 'relay_reputation': np.float64(0.95), 'budget_utilization': np.float64(0.48), 'recent_win_rate': np.float64(0.3)}, 'base_prob': 0.01, 'final_prob': np.float64(0.00409024), 'steps': [{'feature': 'network_load', 'value': np.float64(0.6), 'effect': 'multiply prob by 0.640 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.95), 'effect': 'multiply prob by 1.925 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.48), 'effect': 'multiply prob by 0.664 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.3), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.6,0.95,0.59,0.0,0.0072318399276815985,"{'timestamp': 1760866780.2288756, 'inputs': {'network_load': np.float64(0.6), 'relay_reputation': np.float64(0.95), 'budget_utilization': np.float64(0.59), 'recent_win_rate': 1e-09}, 'base_prob': 0.01, 'final_prob': np.float64(0.0072318399276815985), 'steps': [{'feature': 'network_load', 'value': np.float64(0.6), 'effect': 'multiply prob by 0.640 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.95), 'effect': 'multiply prob by 1.925 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.59), 'effect': 'multiply prob by 0.587 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': 1e-09, 'effect': 'multiply prob by 1.000 (higher recent wins -> lower prob)'}]}"
0.6,0.95,0.59,0.05,0.0036159199999999995,"{'timestamp': 1760866780.2289035, 'inputs': {'network_load': np.float64(0.6), 'relay_reputation': np.float64(0.95), 'budget_utilization': np.float64(0.59), 'recent_win_rate': np.float64(0.05)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0036159199999999995), 'steps': [{'feature': 'network_load', 'value': np.float64(0.6), 'effect': 'multiply prob by 0.640 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.95), 'effect': 'multiply prob by 1.925 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.59), 'effect': 'multiply prob by 0.587 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.05), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.6,0.95,0.59,0.1,0.0036159199999999995,"{'timestamp': 1760866780.2289288, 'inputs': {'network_load': np.float64(0.6), 'relay_reputation': np.float64(0.95), 'budget_utilization': np.float64(0.59), 'recent_win_rate': np.float64(0.1)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0036159199999999995), 'steps': [{'feature': 'network_load', 'value': np.float64(0.6), 'effect': 'multiply prob by 0.640 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.95), 'effect': 'multiply prob by 1.925 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.59), 'effect': 'multiply prob by 0.587 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.1), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.6,0.95,0.59,0.15,0.0036159199999999995,"{'timestamp': 1760866780.2289538, 'inputs': {'network_load': np.float64(0.6), 'relay_reputation': np.float64(0.95), 'budget_utilization': np.float64(0.59), 'recent_win_rate': np.float64(0.15)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0036159199999999995), 'steps': [{'feature': 'network_load', 'value': np.float64(0.6), 'effect': 'multiply prob by 0.640 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.95), 'effect': 'multiply prob by 1.925 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.59), 'effect': 'multiply prob by 0.587 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.15), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.6,0.95,0.59,0.2,0.0036159199999999995,"{'timestamp': 1760866780.228979, 'inputs': {'network_load': np.float64(0.6), 'relay_reputation': np.float64(0.95), 'budget_utilization': np.float64(0.59), 'recent_win_rate': np.float64(0.2)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0036159199999999995), 'steps': [{'feature': 'network_load', 'value': np.float64(0.6), 'effect': 'multiply prob by 0.640 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.95), 'effect': 'multiply prob by 1.925 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.59), 'effect': 'multiply prob by 0.587 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.2), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.6,0.95,0.59,0.25,0.0036159199999999995,"{'timestamp': 1760866780.2290046, 'inputs': {'network_load': np.float64(0.6), 'relay_reputation': np.float64(0.95), 'budget_utilization': np.float64(0.59), 'recent_win_rate': np.float64(0.25)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0036159199999999995), 'steps': [{'feature': 'network_load', 'value': np.float64(0.6), 'effect': 'multiply prob by 0.640 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.95), 'effect': 'multiply prob by 1.925 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.59), 'effect': 'multiply prob by 0.587 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.25), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.6,0.95,0.59,0.3,0.0036159199999999995,"{'timestamp': 1760866780.2290316, 'inputs': {'network_load': np.float64(0.6), 'relay_reputation': np.float64(0.95), 'budget_utilization': np.float64(0.59), 'recent_win_rate': np.float64(0.3)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0036159199999999995), 'steps': [{'feature': 'network_load', 'value': np.float64(0.6), 'effect': 'multiply prob by 0.640 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.95), 'effect': 'multiply prob by 1.925 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.59), 'effect': 'multiply prob by 0.587 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.3), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.6,0.95,0.69,0.0,0.006369439936305601,"{'timestamp': 1760866780.2290618, 'inputs': {'network_load': np.float64(0.6), 'relay_reputation': np.float64(0.95), 'budget_utilization': np.float64(0.69), 'recent_win_rate': 1e-09}, 'base_prob': 0.01, 'final_prob': np.float64(0.006369439936305601), 'steps': [{'feature': 'network_load', 'value': np.float64(0.6), 'effect': 'multiply prob by 0.640 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.95), 'effect': 'multiply prob by 1.925 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.69), 'effect': 'multiply prob by 0.517 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': 1e-09, 'effect': 'multiply prob by 1.000 (higher recent wins -> lower prob)'}]}"
0.6,0.95,0.69,0.05,0.0031847200000000007,"{'timestamp': 1760866780.2290888, 'inputs': {'network_load': np.float64(0.6), 'relay_reputation': np.float64(0.95), 'budget_utilization': np.float64(0.69), 'recent_win_rate': np.float64(0.05)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0031847200000000007), 'steps': [{'feature': 'network_load', 'value': np.float64(0.6), 'effect': 'multiply prob by 0.640 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.95), 'effect': 'multiply prob by 1.925 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.69), 'effect': 'multiply prob by 0.517 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.05), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.6,0.95,0.69,0.1,0.0031847200000000007,"{'timestamp': 1760866780.2291143, 'inputs': {'network_load': np.float64(0.6), 'relay_reputation': np.float64(0.95), 'budget_utilization': np.float64(0.69), 'recent_win_rate': np.float64(0.1)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0031847200000000007), 'steps': [{'feature': 'network_load', 'value': np.float64(0.6), 'effect': 'multiply prob by 0.640 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.95), 'effect': 'multiply prob by 1.925 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.69), 'effect': 'multiply prob by 0.517 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.1), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.6,0.95,0.69,0.15,0.0031847200000000007,"{'timestamp': 1760866780.2291396, 'inputs': {'network_load': np.float64(0.6), 'relay_reputation': np.float64(0.95), 'budget_utilization': np.float64(0.69), 'recent_win_rate': np.float64(0.15)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0031847200000000007), 'steps': [{'feature': 'network_load', 'value': np.float64(0.6), 'effect': 'multiply prob by 0.640 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.95), 'effect': 'multiply prob by 1.925 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.69), 'effect': 'multiply prob by 0.517 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.15), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.6,0.95,0.69,0.2,0.0031847200000000007,"{'timestamp': 1760866780.2291646, 'inputs': {'network_load': np.float64(0.6), 'relay_reputation': np.float64(0.95), 'budget_utilization': np.float64(0.69), 'recent_win_rate': np.float64(0.2)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0031847200000000007), 'steps': [{'feature': 'network_load', 'value': np.float64(0.6), 'effect': 'multiply prob by 0.640 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.95), 'effect': 'multiply prob by 1.925 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.69), 'effect': 'multiply prob by 0.517 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.2), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.6,0.95,0.69,0.25,0.0031847200000000007,"{'timestamp': 1760866780.229274, 'inputs': {'network_load': np.float64(0.6), 'relay_reputation': np.float64(0.95), 'budget_utilization': np.float64(0.69), 'recent_win_rate': np.float64(0.25)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0031847200000000007), 'steps': [{'feature': 'network_load', 'value': np.float64(0.6), 'effect': 'multiply prob by 0.640 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.95), 'effect': 'multiply prob by 1.925 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.69), 'effect': 'multiply prob by 0.517 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.25), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.6,0.95,0.69,0.3,0.0031847200000000007,"{'timestamp': 1760866780.2293017, 'inputs': {'network_load': np.float64(0.6), 'relay_reputation': np.float64(0.95), 'budget_utilization': np.float64(0.69), 'recent_win_rate': np.float64(0.3)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0031847200000000007), 'steps': [{'feature': 'network_load', 'value': np.float64(0.6), 'effect': 'multiply prob by 0.640 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.95), 'effect': 'multiply prob by 1.925 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.69), 'effect': 'multiply prob by 0.517 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.3), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.6,0.95,0.8,0.0,0.005420799945792001,"{'timestamp': 1760866780.229335, 'inputs': {'network_load': np.float64(0.6), 'relay_reputation': np.float64(0.95), 'budget_utilization': np.float64(0.8), 'recent_win_rate': 1e-09}, 'base_prob': 0.01, 'final_prob': np.float64(0.005420799945792001), 'steps': [{'feature': 'network_load', 'value': np.float64(0.6), 'effect': 'multiply prob by 0.640 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.95), 'effect': 'multiply prob by 1.925 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.8), 'effect': 'multiply prob by 0.440 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': 1e-09, 'effect': 'multiply prob by 1.000 (higher recent wins -> lower prob)'}]}"
0.6,0.95,0.8,0.05,0.0027104000000000004,"{'timestamp': 1760866780.2293644, 'inputs': {'network_load': np.float64(0.6), 'relay_reputation': np.float64(0.95), 'budget_utilization': np.float64(0.8), 'recent_win_rate': np.float64(0.05)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0027104000000000004), 'steps': [{'feature': 'network_load', 'value': np.float64(0.6), 'effect': 'multiply prob by 0.640 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.95), 'effect': 'multiply prob by 1.925 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.8), 'effect': 'multiply prob by 0.440 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.05), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.6,0.95,0.8,0.1,0.0027104000000000004,"{'timestamp': 1760866780.2293897, 'inputs': {'network_load': np.float64(0.6), 'relay_reputation': np.float64(0.95), 'budget_utilization': np.float64(0.8), 'recent_win_rate': np.float64(0.1)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0027104000000000004), 'steps': [{'feature': 'network_load', 'value': np.float64(0.6), 'effect': 'multiply prob by 0.640 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.95), 'effect': 'multiply prob by 1.925 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.8), 'effect': 'multiply prob by 0.440 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.1), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.6,0.95,0.8,0.15,0.0027104000000000004,"{'timestamp': 1760866780.229418, 'inputs': {'network_load': np.float64(0.6), 'relay_reputation': np.float64(0.95), 'budget_utilization': np.float64(0.8), 'recent_win_rate': np.float64(0.15)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0027104000000000004), 'steps': [{'feature': 'network_load', 'value': np.float64(0.6), 'effect': 'multiply prob by 0.640 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.95), 'effect': 'multiply prob by 1.925 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.8), 'effect': 'multiply prob by 0.440 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.15), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.6,0.95,0.8,0.2,0.0027104000000000004,"{'timestamp': 1760866780.229443, 'inputs': {'network_load': np.float64(0.6), 'relay_reputation': np.float64(0.95), 'budget_utilization': np.float64(0.8), 'recent_win_rate': np.float64(0.2)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0027104000000000004), 'steps': [{'feature': 'network_load', 'value': np.float64(0.6), 'effect': 'multiply prob by 0.640 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.95), 'effect': 'multiply prob by 1.925 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.8), 'effect': 'multiply prob by 0.440 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.2), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.6,0.95,0.8,0.25,0.0027104000000000004,"{'timestamp': 1760866780.229468, 'inputs': {'network_load': np.float64(0.6), 'relay_reputation': np.float64(0.95), 'budget_utilization': np.float64(0.8), 'recent_win_rate': np.float64(0.25)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0027104000000000004), 'steps': [{'feature': 'network_load', 'value': np.float64(0.6), 'effect': 'multiply prob by 0.640 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.95), 'effect': 'multiply prob by 1.925 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.8), 'effect': 'multiply prob by 0.440 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.25), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.6,0.95,0.8,0.3,0.0027104000000000004,"{'timestamp': 1760866780.2294931, 'inputs': {'network_load': np.float64(0.6), 'relay_reputation': np.float64(0.95), 'budget_utilization': np.float64(0.8), 'recent_win_rate': np.float64(0.3)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0027104000000000004), 'steps': [{'feature': 'network_load', 'value': np.float64(0.6), 'effect': 'multiply prob by 0.640 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.95), 'effect': 'multiply prob by 1.925 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.8), 'effect': 'multiply prob by 0.440 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.3), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.7,0.4,0.05,0.0,0.006156699938433,"{'timestamp': 1760866780.2295222, 'inputs': {'network_load': np.float64(0.7), 'relay_reputation': np.float64(0.4), 'budget_utilization': np.float64(0.05), 'recent_win_rate': 1e-09}, 'base_prob': 0.01, 'final_prob': np.float64(0.006156699938433), 'steps': [{'feature': 'network_load', 'value': np.float64(0.7), 'effect': 'multiply prob by 0.580 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.4), 'effect': 'multiply prob by 1.100 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.05), 'effect': 'multiply prob by 0.965 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': 1e-09, 'effect': 'multiply prob by 1.000 (higher recent wins -> lower prob)'}]}"
0.7,0.4,0.05,0.05,0.0030783500000000005,"{'timestamp': 1760866780.229551, 'inputs': {'network_load': np.float64(0.7), 'relay_reputation': np.float64(0.4), 'budget_utilization': np.float64(0.05), 'recent_win_rate': np.float64(0.05)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0030783500000000005), 'steps': [{'feature': 'network_load', 'value': np.float64(0.7), 'effect': 'multiply prob by 0.580 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.4), 'effect': 'multiply prob by 1.100 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.05), 'effect': 'multiply prob by 0.965 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.05), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.7,0.4,0.05,0.1,0.0030783500000000005,"{'timestamp': 1760866780.229578, 'inputs': {'network_load': np.float64(0.7), 'relay_reputation': np.float64(0.4), 'budget_utilization': np.float64(0.05), 'recent_win_rate': np.float64(0.1)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0030783500000000005), 'steps': [{'feature': 'network_load', 'value': np.float64(0.7), 'effect': 'multiply prob by 0.580 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.4), 'effect': 'multiply prob by 1.100 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.05), 'effect': 'multiply prob by 0.965 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.1), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.7,0.4,0.05,0.15,0.0030783500000000005,"{'timestamp': 1760866780.2296052, 'inputs': {'network_load': np.float64(0.7), 'relay_reputation': np.float64(0.4), 'budget_utilization': np.float64(0.05), 'recent_win_rate': np.float64(0.15)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0030783500000000005), 'steps': [{'feature': 'network_load', 'value': np.float64(0.7), 'effect': 'multiply prob by 0.580 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.4), 'effect': 'multiply prob by 1.100 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.05), 'effect': 'multiply prob by 0.965 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.15), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.7,0.4,0.05,0.2,0.0030783500000000005,"{'timestamp': 1760866780.2296305, 'inputs': {'network_load': np.float64(0.7), 'relay_reputation': np.float64(0.4), 'budget_utilization': np.float64(0.05), 'recent_win_rate': np.float64(0.2)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0030783500000000005), 'steps': [{'feature': 'network_load', 'value': np.float64(0.7), 'effect': 'multiply prob by 0.580 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.4), 'effect': 'multiply prob by 1.100 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.05), 'effect': 'multiply prob by 0.965 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.2), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.7,0.4,0.05,0.25,0.0030783500000000005,"{'timestamp': 1760866780.2296574, 'inputs': {'network_load': np.float64(0.7), 'relay_reputation': np.float64(0.4), 'budget_utilization': np.float64(0.05), 'recent_win_rate': np.float64(0.25)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0030783500000000005), 'steps': [{'feature': 'network_load', 'value': np.float64(0.7), 'effect': 'multiply prob by 0.580 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.4), 'effect': 'multiply prob by 1.100 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.05), 'effect': 'multiply prob by 0.965 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.25), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.7,0.4,0.05,0.3,0.0030783500000000005,"{'timestamp': 1760866780.2296839, 'inputs': {'network_load': np.float64(0.7), 'relay_reputation': np.float64(0.4), 'budget_utilization': np.float64(0.05), 'recent_win_rate': np.float64(0.3)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0030783500000000005), 'steps': [{'feature': 'network_load', 'value': np.float64(0.7), 'effect': 'multiply prob by 0.580 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.4), 'effect': 'multiply prob by 1.100 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.05), 'effect': 'multiply prob by 0.965 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.3), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.7,0.4,0.16,0.0,0.005665439943345601,"{'timestamp': 1760866780.2297108, 'inputs': {'network_load': np.float64(0.7), 'relay_reputation': np.float64(0.4), 'budget_utilization': np.float64(0.16), 'recent_win_rate': 1e-09}, 'base_prob': 0.01, 'final_prob': np.float64(0.005665439943345601), 'steps': [{'feature': 'network_load', 'value': np.float64(0.7), 'effect': 'multiply prob by 0.580 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.4), 'effect': 'multiply prob by 1.100 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.16), 'effect': 'multiply prob by 0.888 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': 1e-09, 'effect': 'multiply prob by 1.000 (higher recent wins -> lower prob)'}]}"
0.7,0.4,0.16,0.05,0.0028327200000000004,"{'timestamp': 1760866780.2297516, 'inputs': {'network_load': np.float64(0.7), 'relay_reputation': np.float64(0.4), 'budget_utilization': np.float64(0.16), 'recent_win_rate': np.float64(0.05)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0028327200000000004), 'steps': [{'feature': 'network_load', 'value': np.float64(0.7), 'effect': 'multiply prob by 0.580 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.4), 'effect': 'multiply prob by 1.100 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.16), 'effect': 'multiply prob by 0.888 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.05), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.7,0.4,0.16,0.1,0.0028327200000000004,"{'timestamp': 1760866780.2297769, 'inputs': {'network_load': np.float64(0.7), 'relay_reputation': np.float64(0.4), 'budget_utilization': np.float64(0.16), 'recent_win_rate': np.float64(0.1)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0028327200000000004), 'steps': [{'feature': 'network_load', 'value': np.float64(0.7), 'effect': 'multiply prob by 0.580 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.4), 'effect': 'multiply prob by 1.100 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.16), 'effect': 'multiply prob by 0.888 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.1), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.7,0.4,0.16,0.15,0.0028327200000000004,"{'timestamp': 1760866780.2298307, 'inputs': {'network_load': np.float64(0.7), 'relay_reputation': np.float64(0.4), 'budget_utilization': np.float64(0.16), 'recent_win_rate': np.float64(0.15)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0028327200000000004), 'steps': [{'feature': 'network_load', 'value': np.float64(0.7), 'effect': 'multiply prob by 0.580 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.4), 'effect': 'multiply prob by 1.100 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.16), 'effect': 'multiply prob by 0.888 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.15), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.7,0.4,0.16,0.2,0.0028327200000000004,"{'timestamp': 1760866780.2298574, 'inputs': {'network_load': np.float64(0.7), 'relay_reputation': np.float64(0.4), 'budget_utilization': np.float64(0.16), 'recent_win_rate': np.float64(0.2)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0028327200000000004), 'steps': [{'feature': 'network_load', 'value': np.float64(0.7), 'effect': 'multiply prob by 0.580 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.4), 'effect': 'multiply prob by 1.100 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.16), 'effect': 'multiply prob by 0.888 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.2), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.7,0.4,0.16,0.25,0.0028327200000000004,"{'timestamp': 1760866780.2298872, 'inputs': {'network_load': np.float64(0.7), 'relay_reputation': np.float64(0.4), 'budget_utilization': np.float64(0.16), 'recent_win_rate': np.float64(0.25)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0028327200000000004), 'steps': [{'feature': 'network_load', 'value': np.float64(0.7), 'effect': 'multiply prob by 0.580 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.4), 'effect': 'multiply prob by 1.100 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.16), 'effect': 'multiply prob by 0.888 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.25), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.7,0.4,0.16,0.3,0.0028327200000000004,"{'timestamp': 1760866780.2299128, 'inputs': {'network_load': np.float64(0.7), 'relay_reputation': np.float64(0.4), 'budget_utilization': np.float64(0.16), 'recent_win_rate': np.float64(0.3)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0028327200000000004), 'steps': [{'feature': 'network_load', 'value': np.float64(0.7), 'effect': 'multiply prob by 0.580 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.4), 'effect': 'multiply prob by 1.100 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.16), 'effect': 'multiply prob by 0.888 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.3), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.7,0.4,0.26,0.0,0.005218839947811601,"{'timestamp': 1760866780.22994, 'inputs': {'network_load': np.float64(0.7), 'relay_reputation': np.float64(0.4), 'budget_utilization': np.float64(0.26), 'recent_win_rate': 1e-09}, 'base_prob': 0.01, 'final_prob': np.float64(0.005218839947811601), 'steps': [{'feature': 'network_load', 'value': np.float64(0.7), 'effect': 'multiply prob by 0.580 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.4), 'effect': 'multiply prob by 1.100 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.26), 'effect': 'multiply prob by 0.818 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': 1e-09, 'effect': 'multiply prob by 1.000 (higher recent wins -> lower prob)'}]}"
0.7,0.4,0.26,0.05,0.0026094200000000007,"{'timestamp': 1760866780.2299652, 'inputs': {'network_load': np.float64(0.7), 'relay_reputation': np.float64(0.4), 'budget_utilization': np.float64(0.26), 'recent_win_rate': np.float64(0.05)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0026094200000000007), 'steps': [{'feature': 'network_load', 'value': np.float64(0.7), 'effect': 'multiply prob by 0.580 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.4), 'effect': 'multiply prob by 1.100 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.26), 'effect': 'multiply prob by 0.818 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.05), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.7,0.4,0.26,0.1,0.0026094200000000007,"{'timestamp': 1760866780.2299905, 'inputs': {'network_load': np.float64(0.7), 'relay_reputation': np.float64(0.4), 'budget_utilization': np.float64(0.26), 'recent_win_rate': np.float64(0.1)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0026094200000000007), 'steps': [{'feature': 'network_load', 'value': np.float64(0.7), 'effect': 'multiply prob by 0.580 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.4), 'effect': 'multiply prob by 1.100 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.26), 'effect': 'multiply prob by 0.818 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.1), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.7,0.4,0.26,0.15,0.0026094200000000007,"{'timestamp': 1760866780.2300184, 'inputs': {'network_load': np.float64(0.7), 'relay_reputation': np.float64(0.4), 'budget_utilization': np.float64(0.26), 'recent_win_rate': np.float64(0.15)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0026094200000000007), 'steps': [{'feature': 'network_load', 'value': np.float64(0.7), 'effect': 'multiply prob by 0.580 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.4), 'effect': 'multiply prob by 1.100 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.26), 'effect': 'multiply prob by 0.818 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.15), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.7,0.4,0.26,0.2,0.0026094200000000007,"{'timestamp': 1760866780.2300472, 'inputs': {'network_load': np.float64(0.7), 'relay_reputation': np.float64(0.4), 'budget_utilization': np.float64(0.26), 'recent_win_rate': np.float64(0.2)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0026094200000000007), 'steps': [{'feature': 'network_load', 'value': np.float64(0.7), 'effect': 'multiply prob by 0.580 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.4), 'effect': 'multiply prob by 1.100 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.26), 'effect': 'multiply prob by 0.818 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.2), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.7,0.4,0.26,0.25,0.0026094200000000007,"{'timestamp': 1760866780.2301211, 'inputs': {'network_load': np.float64(0.7), 'relay_reputation': np.float64(0.4), 'budget_utilization': np.float64(0.26), 'recent_win_rate': np.float64(0.25)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0026094200000000007), 'steps': [{'feature': 'network_load', 'value': np.float64(0.7), 'effect': 'multiply prob by 0.580 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.4), 'effect': 'multiply prob by 1.100 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.26), 'effect': 'multiply prob by 0.818 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.25), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.7,0.4,0.26,0.3,0.0026094200000000007,"{'timestamp': 1760866780.2301576, 'inputs': {'network_load': np.float64(0.7), 'relay_reputation': np.float64(0.4), 'budget_utilization': np.float64(0.26), 'recent_win_rate': np.float64(0.3)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0026094200000000007), 'steps': [{'feature': 'network_load', 'value': np.float64(0.7), 'effect': 'multiply prob by 0.580 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.4), 'effect': 'multiply prob by 1.100 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.26), 'effect': 'multiply prob by 0.818 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.3), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.7,0.4,0.37,0.0,0.004727579952724201,"{'timestamp': 1760866780.2301867, 'inputs': {'network_load': np.float64(0.7), 'relay_reputation': np.float64(0.4), 'budget_utilization': np.float64(0.37), 'recent_win_rate': 1e-09}, 'base_prob': 0.01, 'final_prob': np.float64(0.004727579952724201), 'steps': [{'feature': 'network_load', 'value': np.float64(0.7), 'effect': 'multiply prob by 0.580 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.4), 'effect': 'multiply prob by 1.100 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.37), 'effect': 'multiply prob by 0.741 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': 1e-09, 'effect': 'multiply prob by 1.000 (higher recent wins -> lower prob)'}]}"
0.7,0.4,0.37,0.05,0.0023637900000000006,"{'timestamp': 1760866780.2302172, 'inputs': {'network_load': np.float64(0.7), 'relay_reputation': np.float64(0.4), 'budget_utilization': np.float64(0.37), 'recent_win_rate': np.float64(0.05)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0023637900000000006), 'steps': [{'feature': 'network_load', 'value': np.float64(0.7), 'effect': 'multiply prob by 0.580 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.4), 'effect': 'multiply prob by 1.100 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.37), 'effect': 'multiply prob by 0.741 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.05), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.7,0.4,0.37,0.1,0.0023637900000000006,"{'timestamp': 1760866780.2302425, 'inputs': {'network_load': np.float64(0.7), 'relay_reputation': np.float64(0.4), 'budget_utilization': np.float64(0.37), 'recent_win_rate': np.float64(0.1)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0023637900000000006), 'steps': [{'feature': 'network_load', 'value': np.float64(0.7), 'effect': 'multiply prob by 0.580 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.4), 'effect': 'multiply prob by 1.100 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.37), 'effect': 'multiply prob by 0.741 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.1), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.7,0.4,0.37,0.15,0.0023637900000000006,"{'timestamp': 1760866780.230268, 'inputs': {'network_load': np.float64(0.7), 'relay_reputation': np.float64(0.4), 'budget_utilization': np.float64(0.37), 'recent_win_rate': np.float64(0.15)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0023637900000000006), 'steps': [{'feature': 'network_load', 'value': np.float64(0.7), 'effect': 'multiply prob by 0.580 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.4), 'effect': 'multiply prob by 1.100 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.37), 'effect': 'multiply prob by 0.741 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.15), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.7,0.4,0.37,0.2,0.0023637900000000006,"{'timestamp': 1760866780.2302966, 'inputs': {'network_load': np.float64(0.7), 'relay_reputation': np.float64(0.4), 'budget_utilization': np.float64(0.37), 'recent_win_rate': np.float64(0.2)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0023637900000000006), 'steps': [{'feature': 'network_load', 'value': np.float64(0.7), 'effect': 'multiply prob by 0.580 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.4), 'effect': 'multiply prob by 1.100 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.37), 'effect': 'multiply prob by 0.741 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.2), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.7,0.4,0.37,0.25,0.0023637900000000006,"{'timestamp': 1760866780.230322, 'inputs': {'network_load': np.float64(0.7), 'relay_reputation': np.float64(0.4), 'budget_utilization': np.float64(0.37), 'recent_win_rate': np.float64(0.25)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0023637900000000006), 'steps': [{'feature': 'network_load', 'value': np.float64(0.7), 'effect': 'multiply prob by 0.580 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.4), 'effect': 'multiply prob by 1.100 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.37), 'effect': 'multiply prob by 0.741 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.25), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.7,0.4,0.37,0.3,0.0023637900000000006,"{'timestamp': 1760866780.230347, 'inputs': {'network_load': np.float64(0.7), 'relay_reputation': np.float64(0.4), 'budget_utilization': np.float64(0.37), 'recent_win_rate': np.float64(0.3)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0023637900000000006), 'steps': [{'feature': 'network_load', 'value': np.float64(0.7), 'effect': 'multiply prob by 0.580 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.4), 'effect': 'multiply prob by 1.100 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.37), 'effect': 'multiply prob by 0.741 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.3), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.7,0.4,0.48,0.0,0.0042363199576368,"{'timestamp': 1760866780.2303758, 'inputs': {'network_load': np.float64(0.7), 'relay_reputation': np.float64(0.4), 'budget_utilization': np.float64(0.48), 'recent_win_rate': 1e-09}, 'base_prob': 0.01, 'final_prob': np.float64(0.0042363199576368), 'steps': [{'feature': 'network_load', 'value': np.float64(0.7), 'effect': 'multiply prob by 0.580 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.4), 'effect': 'multiply prob by 1.100 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.48), 'effect': 'multiply prob by 0.664 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': 1e-09, 'effect': 'multiply prob by 1.000 (higher recent wins -> lower prob)'}]}"
0.7,0.4,0.48,0.05,0.0021181600000000004,"{'timestamp': 1760866780.230401, 'inputs': {'network_load': np.float64(0.7), 'relay_reputation': np.float64(0.4), 'budget_utilization': np.float64(0.48), 'recent_win_rate': np.float64(0.05)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0021181600000000004), 'steps': [{'feature': 'network_load', 'value': np.float64(0.7), 'effect': 'multiply prob by 0.580 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.4), 'effect': 'multiply prob by 1.100 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.48), 'effect': 'multiply prob by 0.664 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.05), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.7,0.4,0.48,0.1,0.0021181600000000004,"{'timestamp': 1760866780.2304282, 'inputs': {'network_load': np.float64(0.7), 'relay_reputation': np.float64(0.4), 'budget_utilization': np.float64(0.48), 'recent_win_rate': np.float64(0.1)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0021181600000000004), 'steps': [{'feature': 'network_load', 'value': np.float64(0.7), 'effect': 'multiply prob by 0.580 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.4), 'effect': 'multiply prob by 1.100 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.48), 'effect': 'multiply prob by 0.664 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.1), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.7,0.4,0.48,0.15,0.0021181600000000004,"{'timestamp': 1760866780.2304535, 'inputs': {'network_load': np.float64(0.7), 'relay_reputation': np.float64(0.4), 'budget_utilization': np.float64(0.48), 'recent_win_rate': np.float64(0.15)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0021181600000000004), 'steps': [{'feature': 'network_load', 'value': np.float64(0.7), 'effect': 'multiply prob by 0.580 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.4), 'effect': 'multiply prob by 1.100 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.48), 'effect': 'multiply prob by 0.664 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.15), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.7,0.4,0.48,0.2,0.0021181600000000004,"{'timestamp': 1760866780.2304788, 'inputs': {'network_load': np.float64(0.7), 'relay_reputation': np.float64(0.4), 'budget_utilization': np.float64(0.48), 'recent_win_rate': np.float64(0.2)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0021181600000000004), 'steps': [{'feature': 'network_load', 'value': np.float64(0.7), 'effect': 'multiply prob by 0.580 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.4), 'effect': 'multiply prob by 1.100 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.48), 'effect': 'multiply prob by 0.664 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.2), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.7,0.4,0.48,0.25,0.0021181600000000004,"{'timestamp': 1760866780.2305076, 'inputs': {'network_load': np.float64(0.7), 'relay_reputation': np.float64(0.4), 'budget_utilization': np.float64(0.48), 'recent_win_rate': np.float64(0.25)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0021181600000000004), 'steps': [{'feature': 'network_load', 'value': np.float64(0.7), 'effect': 'multiply prob by 0.580 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.4), 'effect': 'multiply prob by 1.100 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.48), 'effect': 'multiply prob by 0.664 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.25), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.7,0.4,0.48,0.3,0.0021181600000000004,"{'timestamp': 1760866780.2305326, 'inputs': {'network_load': np.float64(0.7), 'relay_reputation': np.float64(0.4), 'budget_utilization': np.float64(0.48), 'recent_win_rate': np.float64(0.3)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0021181600000000004), 'steps': [{'feature': 'network_load', 'value': np.float64(0.7), 'effect': 'multiply prob by 0.580 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.4), 'effect': 'multiply prob by 1.100 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.48), 'effect': 'multiply prob by 0.664 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.3), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.7,0.4,0.59,0.0,0.0037450599625494002,"{'timestamp': 1760866780.2305615, 'inputs': {'network_load': np.float64(0.7), 'relay_reputation': np.float64(0.4), 'budget_utilization': np.float64(0.59), 'recent_win_rate': 1e-09}, 'base_prob': 0.01, 'final_prob': np.float64(0.0037450599625494002), 'steps': [{'feature': 'network_load', 'value': np.float64(0.7), 'effect': 'multiply prob by 0.580 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.4), 'effect': 'multiply prob by 1.100 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.59), 'effect': 'multiply prob by 0.587 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': 1e-09, 'effect': 'multiply prob by 1.000 (higher recent wins -> lower prob)'}]}"
0.7,0.4,0.59,0.05,0.0018725300000000003,"{'timestamp': 1760866780.2305872, 'inputs': {'network_load': np.float64(0.7), 'relay_reputation': np.float64(0.4), 'budget_utilization': np.float64(0.59), 'recent_win_rate': np.float64(0.05)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0018725300000000003), 'steps': [{'feature': 'network_load', 'value': np.float64(0.7), 'effect': 'multiply prob by 0.580 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.4), 'effect': 'multiply prob by 1.100 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.59), 'effect': 'multiply prob by 0.587 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.05), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.7,0.4,0.59,0.1,0.0018725300000000003,"{'timestamp': 1760866780.2306123, 'inputs': {'network_load': np.float64(0.7), 'relay_reputation': np.float64(0.4), 'budget_utilization': np.float64(0.59), 'recent_win_rate': np.float64(0.1)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0018725300000000003), 'steps': [{'feature': 'network_load', 'value': np.float64(0.7), 'effect': 'multiply prob by 0.580 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.4), 'effect': 'multiply prob by 1.100 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.59), 'effect': 'multiply prob by 0.587 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.1), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.7,0.4,0.59,0.15,0.0018725300000000003,"{'timestamp': 1760866780.2306395, 'inputs': {'network_load': np.float64(0.7), 'relay_reputation': np.float64(0.4), 'budget_utilization': np.float64(0.59), 'recent_win_rate': np.float64(0.15)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0018725300000000003), 'steps': [{'feature': 'network_load', 'value': np.float64(0.7), 'effect': 'multiply prob by 0.580 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.4), 'effect': 'multiply prob by 1.100 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.59), 'effect': 'multiply prob by 0.587 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.15), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.7,0.4,0.59,0.2,0.0018725300000000003,"{'timestamp': 1760866780.2306664, 'inputs': {'network_load': np.float64(0.7), 'relay_reputation': np.float64(0.4), 'budget_utilization': np.float64(0.59), 'recent_win_rate': np.float64(0.2)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0018725300000000003), 'steps': [{'feature': 'network_load', 'value': np.float64(0.7), 'effect': 'multiply prob by 0.580 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.4), 'effect': 'multiply prob by 1.100 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.59), 'effect': 'multiply prob by 0.587 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.2), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.7,0.4,0.59,0.25,0.0018725300000000003,"{'timestamp': 1760866780.230692, 'inputs': {'network_load': np.float64(0.7), 'relay_reputation': np.float64(0.4), 'budget_utilization': np.float64(0.59), 'recent_win_rate': np.float64(0.25)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0018725300000000003), 'steps': [{'feature': 'network_load', 'value': np.float64(0.7), 'effect': 'multiply prob by 0.580 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.4), 'effect': 'multiply prob by 1.100 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.59), 'effect': 'multiply prob by 0.587 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.25), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.7,0.4,0.59,0.3,0.0018725300000000003,"{'timestamp': 1760866780.2307222, 'inputs': {'network_load': np.float64(0.7), 'relay_reputation': np.float64(0.4), 'budget_utilization': np.float64(0.59), 'recent_win_rate': np.float64(0.3)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0018725300000000003), 'steps': [{'feature': 'network_load', 'value': np.float64(0.7), 'effect': 'multiply prob by 0.580 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.4), 'effect': 'multiply prob by 1.100 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.59), 'effect': 'multiply prob by 0.587 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.3), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.7,0.4,0.69,0.0,0.003298459967015401,"{'timestamp': 1760866780.2307494, 'inputs': {'network_load': np.float64(0.7), 'relay_reputation': np.float64(0.4), 'budget_utilization': np.float64(0.69), 'recent_win_rate': 1e-09}, 'base_prob': 0.01, 'final_prob': np.float64(0.003298459967015401), 'steps': [{'feature': 'network_load', 'value': np.float64(0.7), 'effect': 'multiply prob by 0.580 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.4), 'effect': 'multiply prob by 1.100 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.69), 'effect': 'multiply prob by 0.517 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': 1e-09, 'effect': 'multiply prob by 1.000 (higher recent wins -> lower prob)'}]}"
0.7,0.4,0.69,0.05,0.0016492300000000007,"{'timestamp': 1760866780.2307763, 'inputs': {'network_load': np.float64(0.7), 'relay_reputation': np.float64(0.4), 'budget_utilization': np.float64(0.69), 'recent_win_rate': np.float64(0.05)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0016492300000000007), 'steps': [{'feature': 'network_load', 'value': np.float64(0.7), 'effect': 'multiply prob by 0.580 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.4), 'effect': 'multiply prob by 1.100 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.69), 'effect': 'multiply prob by 0.517 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.05), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.7,0.4,0.69,0.1,0.0016492300000000007,"{'timestamp': 1760866780.2308033, 'inputs': {'network_load': np.float64(0.7), 'relay_reputation': np.float64(0.4), 'budget_utilization': np.float64(0.69), 'recent_win_rate': np.float64(0.1)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0016492300000000007), 'steps': [{'feature': 'network_load', 'value': np.float64(0.7), 'effect': 'multiply prob by 0.580 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.4), 'effect': 'multiply prob by 1.100 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.69), 'effect': 'multiply prob by 0.517 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.1), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.7,0.4,0.69,0.15,0.0016492300000000007,"{'timestamp': 1760866780.2308285, 'inputs': {'network_load': np.float64(0.7), 'relay_reputation': np.float64(0.4), 'budget_utilization': np.float64(0.69), 'recent_win_rate': np.float64(0.15)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0016492300000000007), 'steps': [{'feature': 'network_load', 'value': np.float64(0.7), 'effect': 'multiply prob by 0.580 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.4), 'effect': 'multiply prob by 1.100 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.69), 'effect': 'multiply prob by 0.517 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.15), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.7,0.4,0.69,0.2,0.0016492300000000007,"{'timestamp': 1760866780.2308536, 'inputs': {'network_load': np.float64(0.7), 'relay_reputation': np.float64(0.4), 'budget_utilization': np.float64(0.69), 'recent_win_rate': np.float64(0.2)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0016492300000000007), 'steps': [{'feature': 'network_load', 'value': np.float64(0.7), 'effect': 'multiply prob by 0.580 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.4), 'effect': 'multiply prob by 1.100 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.69), 'effect': 'multiply prob by 0.517 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.2), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.7,0.4,0.69,0.25,0.0016492300000000007,"{'timestamp': 1760866780.2308788, 'inputs': {'network_load': np.float64(0.7), 'relay_reputation': np.float64(0.4), 'budget_utilization': np.float64(0.69), 'recent_win_rate': np.float64(0.25)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0016492300000000007), 'steps': [{'feature': 'network_load', 'value': np.float64(0.7), 'effect': 'multiply prob by 0.580 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.4), 'effect': 'multiply prob by 1.100 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.69), 'effect': 'multiply prob by 0.517 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.25), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.7,0.4,0.69,0.3,0.0016492300000000007,"{'timestamp': 1760866780.2309058, 'inputs': {'network_load': np.float64(0.7), 'relay_reputation': np.float64(0.4), 'budget_utilization': np.float64(0.69), 'recent_win_rate': np.float64(0.3)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0016492300000000007), 'steps': [{'feature': 'network_load', 'value': np.float64(0.7), 'effect': 'multiply prob by 0.580 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.4), 'effect': 'multiply prob by 1.100 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.69), 'effect': 'multiply prob by 0.517 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.3), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.7,0.4,0.8,0.0,0.002807199971928001,"{'timestamp': 1760866780.230979, 'inputs': {'network_load': np.float64(0.7), 'relay_reputation': np.float64(0.4), 'budget_utilization': np.float64(0.8), 'recent_win_rate': 1e-09}, 'base_prob': 0.01, 'final_prob': np.float64(0.002807199971928001), 'steps': [{'feature': 'network_load', 'value': np.float64(0.7), 'effect': 'multiply prob by 0.580 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.4), 'effect': 'multiply prob by 1.100 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.8), 'effect': 'multiply prob by 0.440 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': 1e-09, 'effect': 'multiply prob by 1.000 (higher recent wins -> lower prob)'}]}"
0.7,0.4,0.8,0.05,0.0014036000000000005,"{'timestamp': 1760866780.231019, 'inputs': {'network_load': np.float64(0.7), 'relay_reputation': np.float64(0.4), 'budget_utilization': np.float64(0.8), 'recent_win_rate': np.float64(0.05)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0014036000000000005), 'steps': [{'feature': 'network_load', 'value': np.float64(0.7), 'effect': 'multiply prob by 0.580 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.4), 'effect': 'multiply prob by 1.100 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.8), 'effect': 'multiply prob by 0.440 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.05), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.7,0.4,0.8,0.1,0.0014036000000000005,"{'timestamp': 1760866780.2310483, 'inputs': {'network_load': np.float64(0.7), 'relay_reputation': np.float64(0.4), 'budget_utilization': np.float64(0.8), 'recent_win_rate': np.float64(0.1)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0014036000000000005), 'steps': [{'feature': 'network_load', 'value': np.float64(0.7), 'effect': 'multiply prob by 0.580 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.4), 'effect': 'multiply prob by 1.100 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.8), 'effect': 'multiply prob by 0.440 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.1), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.7,0.4,0.8,0.15,0.0014036000000000005,"{'timestamp': 1760866780.2310739, 'inputs': {'network_load': np.float64(0.7), 'relay_reputation': np.float64(0.4), 'budget_utilization': np.float64(0.8), 'recent_win_rate': np.float64(0.15)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0014036000000000005), 'steps': [{'feature': 'network_load', 'value': np.float64(0.7), 'effect': 'multiply prob by 0.580 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.4), 'effect': 'multiply prob by 1.100 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.8), 'effect': 'multiply prob by 0.440 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.15), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.7,0.4,0.8,0.2,0.0014036000000000005,"{'timestamp': 1760866780.231099, 'inputs': {'network_load': np.float64(0.7), 'relay_reputation': np.float64(0.4), 'budget_utilization': np.float64(0.8), 'recent_win_rate': np.float64(0.2)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0014036000000000005), 'steps': [{'feature': 'network_load', 'value': np.float64(0.7), 'effect': 'multiply prob by 0.580 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.4), 'effect': 'multiply prob by 1.100 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.8), 'effect': 'multiply prob by 0.440 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.2), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.7,0.4,0.8,0.25,0.0014036000000000005,"{'timestamp': 1760866780.231126, 'inputs': {'network_load': np.float64(0.7), 'relay_reputation': np.float64(0.4), 'budget_utilization': np.float64(0.8), 'recent_win_rate': np.float64(0.25)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0014036000000000005), 'steps': [{'feature': 'network_load', 'value': np.float64(0.7), 'effect': 'multiply prob by 0.580 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.4), 'effect': 'multiply prob by 1.100 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.8), 'effect': 'multiply prob by 0.440 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.25), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.7,0.4,0.8,0.3,0.0014036000000000005,"{'timestamp': 1760866780.231151, 'inputs': {'network_load': np.float64(0.7), 'relay_reputation': np.float64(0.4), 'budget_utilization': np.float64(0.8), 'recent_win_rate': np.float64(0.3)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0014036000000000005), 'steps': [{'feature': 'network_load', 'value': np.float64(0.7), 'effect': 'multiply prob by 0.580 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.4), 'effect': 'multiply prob by 1.100 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.8), 'effect': 'multiply prob by 0.440 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.3), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.7,0.51,0.05,0.0,0.007080204929197951,"{'timestamp': 1760866780.2311811, 'inputs': {'network_load': np.float64(0.7), 'relay_reputation': np.float64(0.51), 'budget_utilization': np.float64(0.05), 'recent_win_rate': 1e-09}, 'base_prob': 0.01, 'final_prob': np.float64(0.007080204929197951), 'steps': [{'feature': 'network_load', 'value': np.float64(0.7), 'effect': 'multiply prob by 0.580 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.51), 'effect': 'multiply prob by 1.265 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.05), 'effect': 'multiply prob by 0.965 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': 1e-09, 'effect': 'multiply prob by 1.000 (higher recent wins -> lower prob)'}]}"
0.7,0.51,0.05,0.05,0.0035401025000000004,"{'timestamp': 1760866780.2312086, 'inputs': {'network_load': np.float64(0.7), 'relay_reputation': np.float64(0.51), 'budget_utilization': np.float64(0.05), 'recent_win_rate': np.float64(0.05)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0035401025000000004), 'steps': [{'feature': 'network_load', 'value': np.float64(0.7), 'effect': 'multiply prob by 0.580 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.51), 'effect': 'multiply prob by 1.265 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.05), 'effect': 'multiply prob by 0.965 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.05), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.7,0.51,0.05,0.1,0.0035401025000000004,"{'timestamp': 1760866780.231234, 'inputs': {'network_load': np.float64(0.7), 'relay_reputation': np.float64(0.51), 'budget_utilization': np.float64(0.05), 'recent_win_rate': np.float64(0.1)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0035401025000000004), 'steps': [{'feature': 'network_load', 'value': np.float64(0.7), 'effect': 'multiply prob by 0.580 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.51), 'effect': 'multiply prob by 1.265 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.05), 'effect': 'multiply prob by 0.965 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.1), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.7,0.51,0.05,0.15,0.0035401025000000004,"{'timestamp': 1760866780.231293, 'inputs': {'network_load': np.float64(0.7), 'relay_reputation': np.float64(0.51), 'budget_utilization': np.float64(0.05), 'recent_win_rate': np.float64(0.15)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0035401025000000004), 'steps': [{'feature': 'network_load', 'value': np.float64(0.7), 'effect': 'multiply prob by 0.580 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.51), 'effect': 'multiply prob by 1.265 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.05), 'effect': 'multiply prob by 0.965 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.15), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.7,0.51,0.05,0.2,0.0035401025000000004,"{'timestamp': 1760866780.2313218, 'inputs': {'network_load': np.float64(0.7), 'relay_reputation': np.float64(0.51), 'budget_utilization': np.float64(0.05), 'recent_win_rate': np.float64(0.2)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0035401025000000004), 'steps': [{'feature': 'network_load', 'value': np.float64(0.7), 'effect': 'multiply prob by 0.580 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.51), 'effect': 'multiply prob by 1.265 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.05), 'effect': 'multiply prob by 0.965 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.2), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.7,0.51,0.05,0.25,0.0035401025000000004,"{'timestamp': 1760866780.231347, 'inputs': {'network_load': np.float64(0.7), 'relay_reputation': np.float64(0.51), 'budget_utilization': np.float64(0.05), 'recent_win_rate': np.float64(0.25)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0035401025000000004), 'steps': [{'feature': 'network_load', 'value': np.float64(0.7), 'effect': 'multiply prob by 0.580 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.51), 'effect': 'multiply prob by 1.265 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.05), 'effect': 'multiply prob by 0.965 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.25), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.7,0.51,0.05,0.3,0.0035401025000000004,"{'timestamp': 1760866780.2313724, 'inputs': {'network_load': np.float64(0.7), 'relay_reputation': np.float64(0.51), 'budget_utilization': np.float64(0.05), 'recent_win_rate': np.float64(0.3)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0035401025000000004), 'steps': [{'feature': 'network_load', 'value': np.float64(0.7), 'effect': 'multiply prob by 0.580 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.51), 'effect': 'multiply prob by 1.265 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.05), 'effect': 'multiply prob by 0.965 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.3), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.7,0.51,0.16,0.0,0.006515255934847441,"{'timestamp': 1760866780.2314034, 'inputs': {'network_load': np.float64(0.7), 'relay_reputation': np.float64(0.51), 'budget_utilization': np.float64(0.16), 'recent_win_rate': 1e-09}, 'base_prob': 0.01, 'final_prob': np.float64(0.006515255934847441), 'steps': [{'feature': 'network_load', 'value': np.float64(0.7), 'effect': 'multiply prob by 0.580 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.51), 'effect': 'multiply prob by 1.265 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.16), 'effect': 'multiply prob by 0.888 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': 1e-09, 'effect': 'multiply prob by 1.000 (higher recent wins -> lower prob)'}]}"
0.7,0.51,0.16,0.05,0.0032576280000000007,"{'timestamp': 1760866780.2314289, 'inputs': {'network_load': np.float64(0.7), 'relay_reputation': np.float64(0.51), 'budget_utilization': np.float64(0.16), 'recent_win_rate': np.float64(0.05)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0032576280000000007), 'steps': [{'feature': 'network_load', 'value': np.float64(0.7), 'effect': 'multiply prob by 0.580 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.51), 'effect': 'multiply prob by 1.265 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.16), 'effect': 'multiply prob by 0.888 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.05), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.7,0.51,0.16,0.1,0.0032576280000000007,"{'timestamp': 1760866780.2314577, 'inputs': {'network_load': np.float64(0.7), 'relay_reputation': np.float64(0.51), 'budget_utilization': np.float64(0.16), 'recent_win_rate': np.float64(0.1)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0032576280000000007), 'steps': [{'feature': 'network_load', 'value': np.float64(0.7), 'effect': 'multiply prob by 0.580 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.51), 'effect': 'multiply prob by 1.265 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.16), 'effect': 'multiply prob by 0.888 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.1), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.7,0.51,0.16,0.15,0.0032576280000000007,"{'timestamp': 1760866780.2314847, 'inputs': {'network_load': np.float64(0.7), 'relay_reputation': np.float64(0.51), 'budget_utilization': np.float64(0.16), 'recent_win_rate': np.float64(0.15)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0032576280000000007), 'steps': [{'feature': 'network_load', 'value': np.float64(0.7), 'effect': 'multiply prob by 0.580 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.51), 'effect': 'multiply prob by 1.265 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.16), 'effect': 'multiply prob by 0.888 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.15), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.7,0.51,0.16,0.2,0.0032576280000000007,"{'timestamp': 1760866780.2315118, 'inputs': {'network_load': np.float64(0.7), 'relay_reputation': np.float64(0.51), 'budget_utilization': np.float64(0.16), 'recent_win_rate': np.float64(0.2)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0032576280000000007), 'steps': [{'feature': 'network_load', 'value': np.float64(0.7), 'effect': 'multiply prob by 0.580 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.51), 'effect': 'multiply prob by 1.265 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.16), 'effect': 'multiply prob by 0.888 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.2), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.7,0.51,0.16,0.25,0.0032576280000000007,"{'timestamp': 1760866780.2315369, 'inputs': {'network_load': np.float64(0.7), 'relay_reputation': np.float64(0.51), 'budget_utilization': np.float64(0.16), 'recent_win_rate': np.float64(0.25)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0032576280000000007), 'steps': [{'feature': 'network_load', 'value': np.float64(0.7), 'effect': 'multiply prob by 0.580 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.51), 'effect': 'multiply prob by 1.265 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.16), 'effect': 'multiply prob by 0.888 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.25), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.7,0.51,0.16,0.3,0.0032576280000000007,"{'timestamp': 1760866780.231562, 'inputs': {'network_load': np.float64(0.7), 'relay_reputation': np.float64(0.51), 'budget_utilization': np.float64(0.16), 'recent_win_rate': np.float64(0.3)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0032576280000000007), 'steps': [{'feature': 'network_load', 'value': np.float64(0.7), 'effect': 'multiply prob by 0.580 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.51), 'effect': 'multiply prob by 1.265 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.16), 'effect': 'multiply prob by 0.888 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.3), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.7,0.51,0.26,0.0,0.006001665939983342,"{'timestamp': 1760866780.231591, 'inputs': {'network_load': np.float64(0.7), 'relay_reputation': np.float64(0.51), 'budget_utilization': np.float64(0.26), 'recent_win_rate': 1e-09}, 'base_prob': 0.01, 'final_prob': np.float64(0.006001665939983342), 'steps': [{'feature': 'network_load', 'value': np.float64(0.7), 'effect': 'multiply prob by 0.580 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.51), 'effect': 'multiply prob by 1.265 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.26), 'effect': 'multiply prob by 0.818 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': 1e-09, 'effect': 'multiply prob by 1.000 (higher recent wins -> lower prob)'}]}"
0.7,0.51,0.26,0.05,0.003000833000000001,"{'timestamp': 1760866780.2316163, 'inputs': {'network_load': np.float64(0.7), 'relay_reputation': np.float64(0.51), 'budget_utilization': np.float64(0.26), 'recent_win_rate': np.float64(0.05)}, 'base_prob': 0.01, 'final_prob': np.float64(0.003000833000000001), 'steps': [{'feature': 'network_load', 'value': np.float64(0.7), 'effect': 'multiply prob by 0.580 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.51), 'effect': 'multiply prob by 1.265 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.26), 'effect': 'multiply prob by 0.818 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.05), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.7,0.51,0.26,0.1,0.003000833000000001,"{'timestamp': 1760866780.2316415, 'inputs': {'network_load': np.float64(0.7), 'relay_reputation': np.float64(0.51), 'budget_utilization': np.float64(0.26), 'recent_win_rate': np.float64(0.1)}, 'base_prob': 0.01, 'final_prob': np.float64(0.003000833000000001), 'steps': [{'feature': 'network_load', 'value': np.float64(0.7), 'effect': 'multiply prob by 0.580 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.51), 'effect': 'multiply prob by 1.265 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.26), 'effect': 'multiply prob by 0.818 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.1), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.7,0.51,0.26,0.15,0.003000833000000001,"{'timestamp': 1760866780.2316687, 'inputs': {'network_load': np.float64(0.7), 'relay_reputation': np.float64(0.51), 'budget_utilization': np.float64(0.26), 'recent_win_rate': np.float64(0.15)}, 'base_prob': 0.01, 'final_prob': np.float64(0.003000833000000001), 'steps': [{'feature': 'network_load', 'value': np.float64(0.7), 'effect': 'multiply prob by 0.580 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.51), 'effect': 'multiply prob by 1.265 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.26), 'effect': 'multiply prob by 0.818 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.15), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.7,0.51,0.26,0.2,0.003000833000000001,"{'timestamp': 1760866780.231694, 'inputs': {'network_load': np.float64(0.7), 'relay_reputation': np.float64(0.51), 'budget_utilization': np.float64(0.26), 'recent_win_rate': np.float64(0.2)}, 'base_prob': 0.01, 'final_prob': np.float64(0.003000833000000001), 'steps': [{'feature': 'network_load', 'value': np.float64(0.7), 'effect': 'multiply prob by 0.580 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.51), 'effect': 'multiply prob by 1.265 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.26), 'effect': 'multiply prob by 0.818 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.2), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.7,0.51,0.26,0.25,0.003000833000000001,"{'timestamp': 1760866780.231721, 'inputs': {'network_load': np.float64(0.7), 'relay_reputation': np.float64(0.51), 'budget_utilization': np.float64(0.26), 'recent_win_rate': np.float64(0.25)}, 'base_prob': 0.01, 'final_prob': np.float64(0.003000833000000001), 'steps': [{'feature': 'network_load', 'value': np.float64(0.7), 'effect': 'multiply prob by 0.580 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.51), 'effect': 'multiply prob by 1.265 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.26), 'effect': 'multiply prob by 0.818 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.25), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.7,0.51,0.26,0.3,0.003000833000000001,"{'timestamp': 1760866780.2317462, 'inputs': {'network_load': np.float64(0.7), 'relay_reputation': np.float64(0.51), 'budget_utilization': np.float64(0.26), 'recent_win_rate': np.float64(0.3)}, 'base_prob': 0.01, 'final_prob': np.float64(0.003000833000000001), 'steps': [{'feature': 'network_load', 'value': np.float64(0.7), 'effect': 'multiply prob by 0.580 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.51), 'effect': 'multiply prob by 1.265 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.26), 'effect': 'multiply prob by 0.818 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.3), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.7,0.51,0.37,0.0,0.00543671694563283,"{'timestamp': 1760866780.2317731, 'inputs': {'network_load': np.float64(0.7), 'relay_reputation': np.float64(0.51), 'budget_utilization': np.float64(0.37), 'recent_win_rate': 1e-09}, 'base_prob': 0.01, 'final_prob': np.float64(0.00543671694563283), 'steps': [{'feature': 'network_load', 'value': np.float64(0.7), 'effect': 'multiply prob by 0.580 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.51), 'effect': 'multiply prob by 1.265 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.37), 'effect': 'multiply prob by 0.741 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': 1e-09, 'effect': 'multiply prob by 1.000 (higher recent wins -> lower prob)'}]}"
0.7,0.51,0.37,0.05,0.0027183585000000003,"{'timestamp': 1760866780.2317984, 'inputs': {'network_load': np.float64(0.7), 'relay_reputation': np.float64(0.51), 'budget_utilization': np.float64(0.37), 'recent_win_rate': np.float64(0.05)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0027183585000000003), 'steps': [{'feature': 'network_load', 'value': np.float64(0.7), 'effect': 'multiply prob by 0.580 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.51), 'effect': 'multiply prob by 1.265 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.37), 'effect': 'multiply prob by 0.741 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.05), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.7,0.51,0.37,0.1,0.0027183585000000003,"{'timestamp': 1760866780.2318234, 'inputs': {'network_load': np.float64(0.7), 'relay_reputation': np.float64(0.51), 'budget_utilization': np.float64(0.37), 'recent_win_rate': np.float64(0.1)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0027183585000000003), 'steps': [{'feature': 'network_load', 'value': np.float64(0.7), 'effect': 'multiply prob by 0.580 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.51), 'effect': 'multiply prob by 1.265 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.37), 'effect': 'multiply prob by 0.741 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.1), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.7,0.51,0.37,0.15,0.0027183585000000003,"{'timestamp': 1760866780.2318504, 'inputs': {'network_load': np.float64(0.7), 'relay_reputation': np.float64(0.51), 'budget_utilization': np.float64(0.37), 'recent_win_rate': np.float64(0.15)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0027183585000000003), 'steps': [{'feature': 'network_load', 'value': np.float64(0.7), 'effect': 'multiply prob by 0.580 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.51), 'effect': 'multiply prob by 1.265 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.37), 'effect': 'multiply prob by 0.741 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.15), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.7,0.51,0.37,0.2,0.0027183585000000003,"{'timestamp': 1760866780.2319748, 'inputs': {'network_load': np.float64(0.7), 'relay_reputation': np.float64(0.51), 'budget_utilization': np.float64(0.37), 'recent_win_rate': np.float64(0.2)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0027183585000000003), 'steps': [{'feature': 'network_load', 'value': np.float64(0.7), 'effect': 'multiply prob by 0.580 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.51), 'effect': 'multiply prob by 1.265 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.37), 'effect': 'multiply prob by 0.741 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.2), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.7,0.51,0.37,0.25,0.0027183585000000003,"{'timestamp': 1760866780.2320158, 'inputs': {'network_load': np.float64(0.7), 'relay_reputation': np.float64(0.51), 'budget_utilization': np.float64(0.37), 'recent_win_rate': np.float64(0.25)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0027183585000000003), 'steps': [{'feature': 'network_load', 'value': np.float64(0.7), 'effect': 'multiply prob by 0.580 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.51), 'effect': 'multiply prob by 1.265 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.37), 'effect': 'multiply prob by 0.741 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.25), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.7,0.51,0.37,0.3,0.0027183585000000003,"{'timestamp': 1760866780.2320437, 'inputs': {'network_load': np.float64(0.7), 'relay_reputation': np.float64(0.51), 'budget_utilization': np.float64(0.37), 'recent_win_rate': np.float64(0.3)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0027183585000000003), 'steps': [{'feature': 'network_load', 'value': np.float64(0.7), 'effect': 'multiply prob by 0.580 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.51), 'effect': 'multiply prob by 1.265 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.37), 'effect': 'multiply prob by 0.741 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.3), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.7,0.51,0.48,0.0,0.004871767951282321,"{'timestamp': 1760866780.2320745, 'inputs': {'network_load': np.float64(0.7), 'relay_reputation': np.float64(0.51), 'budget_utilization': np.float64(0.48), 'recent_win_rate': 1e-09}, 'base_prob': 0.01, 'final_prob': np.float64(0.004871767951282321), 'steps': [{'feature': 'network_load', 'value': np.float64(0.7), 'effect': 'multiply prob by 0.580 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.51), 'effect': 'multiply prob by 1.265 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.48), 'effect': 'multiply prob by 0.664 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': 1e-09, 'effect': 'multiply prob by 1.000 (higher recent wins -> lower prob)'}]}"
0.7,0.51,0.48,0.05,0.0024358840000000006,"{'timestamp': 1760866780.2321, 'inputs': {'network_load': np.float64(0.7), 'relay_reputation': np.float64(0.51), 'budget_utilization': np.float64(0.48), 'recent_win_rate': np.float64(0.05)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0024358840000000006), 'steps': [{'feature': 'network_load', 'value': np.float64(0.7), 'effect': 'multiply prob by 0.580 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.51), 'effect': 'multiply prob by 1.265 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.48), 'effect': 'multiply prob by 0.664 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.05), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.7,0.51,0.48,0.1,0.0024358840000000006,"{'timestamp': 1760866780.2321272, 'inputs': {'network_load': np.float64(0.7), 'relay_reputation': np.float64(0.51), 'budget_utilization': np.float64(0.48), 'recent_win_rate': np.float64(0.1)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0024358840000000006), 'steps': [{'feature': 'network_load', 'value': np.float64(0.7), 'effect': 'multiply prob by 0.580 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.51), 'effect': 'multiply prob by 1.265 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.48), 'effect': 'multiply prob by 0.664 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.1), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.7,0.51,0.48,0.15,0.0024358840000000006,"{'timestamp': 1760866780.2321522, 'inputs': {'network_load': np.float64(0.7), 'relay_reputation': np.float64(0.51), 'budget_utilization': np.float64(0.48), 'recent_win_rate': np.float64(0.15)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0024358840000000006), 'steps': [{'feature': 'network_load', 'value': np.float64(0.7), 'effect': 'multiply prob by 0.580 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.51), 'effect': 'multiply prob by 1.265 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.48), 'effect': 'multiply prob by 0.664 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.15), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.7,0.51,0.48,0.2,0.0024358840000000006,"{'timestamp': 1760866780.2321775, 'inputs': {'network_load': np.float64(0.7), 'relay_reputation': np.float64(0.51), 'budget_utilization': np.float64(0.48), 'recent_win_rate': np.float64(0.2)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0024358840000000006), 'steps': [{'feature': 'network_load', 'value': np.float64(0.7), 'effect': 'multiply prob by 0.580 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.51), 'effect': 'multiply prob by 1.265 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.48), 'effect': 'multiply prob by 0.664 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.2), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.7,0.51,0.48,0.25,0.0024358840000000006,"{'timestamp': 1760866780.2322044, 'inputs': {'network_load': np.float64(0.7), 'relay_reputation': np.float64(0.51), 'budget_utilization': np.float64(0.48), 'recent_win_rate': np.float64(0.25)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0024358840000000006), 'steps': [{'feature': 'network_load', 'value': np.float64(0.7), 'effect': 'multiply prob by 0.580 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.51), 'effect': 'multiply prob by 1.265 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.48), 'effect': 'multiply prob by 0.664 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.25), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.7,0.51,0.48,0.3,0.0024358840000000006,"{'timestamp': 1760866780.2322297, 'inputs': {'network_load': np.float64(0.7), 'relay_reputation': np.float64(0.51), 'budget_utilization': np.float64(0.48), 'recent_win_rate': np.float64(0.3)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0024358840000000006), 'steps': [{'feature': 'network_load', 'value': np.float64(0.7), 'effect': 'multiply prob by 0.580 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.51), 'effect': 'multiply prob by 1.265 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.48), 'effect': 'multiply prob by 0.664 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.3), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.7,0.51,0.59,0.0,0.00430681895693181,"{'timestamp': 1760866780.2322583, 'inputs': {'network_load': np.float64(0.7), 'relay_reputation': np.float64(0.51), 'budget_utilization': np.float64(0.59), 'recent_win_rate': 1e-09}, 'base_prob': 0.01, 'final_prob': np.float64(0.00430681895693181), 'steps': [{'feature': 'network_load', 'value': np.float64(0.7), 'effect': 'multiply prob by 0.580 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.51), 'effect': 'multiply prob by 1.265 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.59), 'effect': 'multiply prob by 0.587 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': 1e-09, 'effect': 'multiply prob by 1.000 (higher recent wins -> lower prob)'}]}"
0.7,0.51,0.59,0.05,0.0021534095000000004,"{'timestamp': 1760866780.2322836, 'inputs': {'network_load': np.float64(0.7), 'relay_reputation': np.float64(0.51), 'budget_utilization': np.float64(0.59), 'recent_win_rate': np.float64(0.05)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0021534095000000004), 'steps': [{'feature': 'network_load', 'value': np.float64(0.7), 'effect': 'multiply prob by 0.580 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.51), 'effect': 'multiply prob by 1.265 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.59), 'effect': 'multiply prob by 0.587 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.05), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.7,0.51,0.59,0.1,0.0021534095000000004,"{'timestamp': 1760866780.2323086, 'inputs': {'network_load': np.float64(0.7), 'relay_reputation': np.float64(0.51), 'budget_utilization': np.float64(0.59), 'recent_win_rate': np.float64(0.1)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0021534095000000004), 'steps': [{'feature': 'network_load', 'value': np.float64(0.7), 'effect': 'multiply prob by 0.580 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.51), 'effect': 'multiply prob by 1.265 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.59), 'effect': 'multiply prob by 0.587 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.1), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.7,0.51,0.59,0.15,0.0021534095000000004,"{'timestamp': 1760866780.232334, 'inputs': {'network_load': np.float64(0.7), 'relay_reputation': np.float64(0.51), 'budget_utilization': np.float64(0.59), 'recent_win_rate': np.float64(0.15)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0021534095000000004), 'steps': [{'feature': 'network_load', 'value': np.float64(0.7), 'effect': 'multiply prob by 0.580 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.51), 'effect': 'multiply prob by 1.265 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.59), 'effect': 'multiply prob by 0.587 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.15), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.7,0.51,0.59,0.2,0.0021534095000000004,"{'timestamp': 1760866780.2323594, 'inputs': {'network_load': np.float64(0.7), 'relay_reputation': np.float64(0.51), 'budget_utilization': np.float64(0.59), 'recent_win_rate': np.float64(0.2)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0021534095000000004), 'steps': [{'feature': 'network_load', 'value': np.float64(0.7), 'effect': 'multiply prob by 0.580 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.51), 'effect': 'multiply prob by 1.265 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.59), 'effect': 'multiply prob by 0.587 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.2), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.7,0.51,0.59,0.25,0.0021534095000000004,"{'timestamp': 1760866780.2324042, 'inputs': {'network_load': np.float64(0.7), 'relay_reputation': np.float64(0.51), 'budget_utilization': np.float64(0.59), 'recent_win_rate': np.float64(0.25)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0021534095000000004), 'steps': [{'feature': 'network_load', 'value': np.float64(0.7), 'effect': 'multiply prob by 0.580 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.51), 'effect': 'multiply prob by 1.265 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.59), 'effect': 'multiply prob by 0.587 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.25), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.7,0.51,0.59,0.3,0.0021534095000000004,"{'timestamp': 1760866780.2324314, 'inputs': {'network_load': np.float64(0.7), 'relay_reputation': np.float64(0.51), 'budget_utilization': np.float64(0.59), 'recent_win_rate': np.float64(0.3)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0021534095000000004), 'steps': [{'feature': 'network_load', 'value': np.float64(0.7), 'effect': 'multiply prob by 0.580 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.51), 'effect': 'multiply prob by 1.265 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.59), 'effect': 'multiply prob by 0.587 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.3), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.7,0.51,0.69,0.0,0.0037932289620677116,"{'timestamp': 1760866780.232461, 'inputs': {'network_load': np.float64(0.7), 'relay_reputation': np.float64(0.51), 'budget_utilization': np.float64(0.69), 'recent_win_rate': 1e-09}, 'base_prob': 0.01, 'final_prob': np.float64(0.0037932289620677116), 'steps': [{'feature': 'network_load', 'value': np.float64(0.7), 'effect': 'multiply prob by 0.580 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.51), 'effect': 'multiply prob by 1.265 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.69), 'effect': 'multiply prob by 0.517 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': 1e-09, 'effect': 'multiply prob by 1.000 (higher recent wins -> lower prob)'}]}"
0.7,0.51,0.69,0.05,0.0018966145000000008,"{'timestamp': 1760866780.2324865, 'inputs': {'network_load': np.float64(0.7), 'relay_reputation': np.float64(0.51), 'budget_utilization': np.float64(0.69), 'recent_win_rate': np.float64(0.05)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0018966145000000008), 'steps': [{'feature': 'network_load', 'value': np.float64(0.7), 'effect': 'multiply prob by 0.580 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.51), 'effect': 'multiply prob by 1.265 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.69), 'effect': 'multiply prob by 0.517 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.05), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.7,0.51,0.69,0.1,0.0018966145000000008,"{'timestamp': 1760866780.2325118, 'inputs': {'network_load': np.float64(0.7), 'relay_reputation': np.float64(0.51), 'budget_utilization': np.float64(0.69), 'recent_win_rate': np.float64(0.1)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0018966145000000008), 'steps': [{'feature': 'network_load', 'value': np.float64(0.7), 'effect': 'multiply prob by 0.580 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.51), 'effect': 'multiply prob by 1.265 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.69), 'effect': 'multiply prob by 0.517 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.1), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.7,0.51,0.69,0.15,0.0018966145000000008,"{'timestamp': 1760866780.2325368, 'inputs': {'network_load': np.float64(0.7), 'relay_reputation': np.float64(0.51), 'budget_utilization': np.float64(0.69), 'recent_win_rate': np.float64(0.15)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0018966145000000008), 'steps': [{'feature': 'network_load', 'value': np.float64(0.7), 'effect': 'multiply prob by 0.580 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.51), 'effect': 'multiply prob by 1.265 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.69), 'effect': 'multiply prob by 0.517 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.15), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.7,0.51,0.69,0.2,0.0018966145000000008,"{'timestamp': 1760866780.2325656, 'inputs': {'network_load': np.float64(0.7), 'relay_reputation': np.float64(0.51), 'budget_utilization': np.float64(0.69), 'recent_win_rate': np.float64(0.2)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0018966145000000008), 'steps': [{'feature': 'network_load', 'value': np.float64(0.7), 'effect': 'multiply prob by 0.580 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.51), 'effect': 'multiply prob by 1.265 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.69), 'effect': 'multiply prob by 0.517 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.2), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.7,0.51,0.69,0.25,0.0018966145000000008,"{'timestamp': 1760866780.2325947, 'inputs': {'network_load': np.float64(0.7), 'relay_reputation': np.float64(0.51), 'budget_utilization': np.float64(0.69), 'recent_win_rate': np.float64(0.25)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0018966145000000008), 'steps': [{'feature': 'network_load', 'value': np.float64(0.7), 'effect': 'multiply prob by 0.580 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.51), 'effect': 'multiply prob by 1.265 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.69), 'effect': 'multiply prob by 0.517 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.25), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.7,0.51,0.69,0.3,0.0018966145000000008,"{'timestamp': 1760866780.23262, 'inputs': {'network_load': np.float64(0.7), 'relay_reputation': np.float64(0.51), 'budget_utilization': np.float64(0.69), 'recent_win_rate': np.float64(0.3)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0018966145000000008), 'steps': [{'feature': 'network_load', 'value': np.float64(0.7), 'effect': 'multiply prob by 0.580 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.51), 'effect': 'multiply prob by 1.265 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.69), 'effect': 'multiply prob by 0.517 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.3), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.7,0.51,0.8,0.0,0.0032282799677172008,"{'timestamp': 1760866780.2326508, 'inputs': {'network_load': np.float64(0.7), 'relay_reputation': np.float64(0.51), 'budget_utilization': np.float64(0.8), 'recent_win_rate': 1e-09}, 'base_prob': 0.01, 'final_prob': np.float64(0.0032282799677172008), 'steps': [{'feature': 'network_load', 'value': np.float64(0.7), 'effect': 'multiply prob by 0.580 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.51), 'effect': 'multiply prob by 1.265 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.8), 'effect': 'multiply prob by 0.440 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': 1e-09, 'effect': 'multiply prob by 1.000 (higher recent wins -> lower prob)'}]}"
0.7,0.51,0.8,0.05,0.0016141400000000005,"{'timestamp': 1760866780.2326763, 'inputs': {'network_load': np.float64(0.7), 'relay_reputation': np.float64(0.51), 'budget_utilization': np.float64(0.8), 'recent_win_rate': np.float64(0.05)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0016141400000000005), 'steps': [{'feature': 'network_load', 'value': np.float64(0.7), 'effect': 'multiply prob by 0.580 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.51), 'effect': 'multiply prob by 1.265 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.8), 'effect': 'multiply prob by 0.440 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.05), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.7,0.51,0.8,0.1,0.0016141400000000005,"{'timestamp': 1760866780.2327032, 'inputs': {'network_load': np.float64(0.7), 'relay_reputation': np.float64(0.51), 'budget_utilization': np.float64(0.8), 'recent_win_rate': np.float64(0.1)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0016141400000000005), 'steps': [{'feature': 'network_load', 'value': np.float64(0.7), 'effect': 'multiply prob by 0.580 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.51), 'effect': 'multiply prob by 1.265 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.8), 'effect': 'multiply prob by 0.440 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.1), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.7,0.51,0.8,0.15,0.0016141400000000005,"{'timestamp': 1760866780.2327282, 'inputs': {'network_load': np.float64(0.7), 'relay_reputation': np.float64(0.51), 'budget_utilization': np.float64(0.8), 'recent_win_rate': np.float64(0.15)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0016141400000000005), 'steps': [{'feature': 'network_load', 'value': np.float64(0.7), 'effect': 'multiply prob by 0.580 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.51), 'effect': 'multiply prob by 1.265 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.8), 'effect': 'multiply prob by 0.440 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.15), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.7,0.51,0.8,0.2,0.0016141400000000005,"{'timestamp': 1760866780.2327538, 'inputs': {'network_load': np.float64(0.7), 'relay_reputation': np.float64(0.51), 'budget_utilization': np.float64(0.8), 'recent_win_rate': np.float64(0.2)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0016141400000000005), 'steps': [{'feature': 'network_load', 'value': np.float64(0.7), 'effect': 'multiply prob by 0.580 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.51), 'effect': 'multiply prob by 1.265 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.8), 'effect': 'multiply prob by 0.440 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.2), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.7,0.51,0.8,0.25,0.0016141400000000005,"{'timestamp': 1760866780.2327788, 'inputs': {'network_load': np.float64(0.7), 'relay_reputation': np.float64(0.51), 'budget_utilization': np.float64(0.8), 'recent_win_rate': np.float64(0.25)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0016141400000000005), 'steps': [{'feature': 'network_load', 'value': np.float64(0.7), 'effect': 'multiply prob by 0.580 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.51), 'effect': 'multiply prob by 1.265 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.8), 'effect': 'multiply prob by 0.440 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.25), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.7,0.51,0.8,0.3,0.0016141400000000005,"{'timestamp': 1760866780.232804, 'inputs': {'network_load': np.float64(0.7), 'relay_reputation': np.float64(0.51), 'budget_utilization': np.float64(0.8), 'recent_win_rate': np.float64(0.3)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0016141400000000005), 'steps': [{'feature': 'network_load', 'value': np.float64(0.7), 'effect': 'multiply prob by 0.580 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.51), 'effect': 'multiply prob by 1.265 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.8), 'effect': 'multiply prob by 0.440 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.3), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.7,0.62,0.05,0.0,0.0080037099199629,"{'timestamp': 1760866780.2329018, 'inputs': {'network_load': np.float64(0.7), 'relay_reputation': np.float64(0.62), 'budget_utilization': np.float64(0.05), 'recent_win_rate': 1e-09}, 'base_prob': 0.01, 'final_prob': np.float64(0.0080037099199629), 'steps': [{'feature': 'network_load', 'value': np.float64(0.7), 'effect': 'multiply prob by 0.580 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.62), 'effect': 'multiply prob by 1.430 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.05), 'effect': 'multiply prob by 0.965 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': 1e-09, 'effect': 'multiply prob by 1.000 (higher recent wins -> lower prob)'}]}"
0.7,0.62,0.05,0.05,0.004001855,"{'timestamp': 1760866780.2329438, 'inputs': {'network_load': np.float64(0.7), 'relay_reputation': np.float64(0.62), 'budget_utilization': np.float64(0.05), 'recent_win_rate': np.float64(0.05)}, 'base_prob': 0.01, 'final_prob': np.float64(0.004001855), 'steps': [{'feature': 'network_load', 'value': np.float64(0.7), 'effect': 'multiply prob by 0.580 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.62), 'effect': 'multiply prob by 1.430 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.05), 'effect': 'multiply prob by 0.965 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.05), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.7,0.62,0.05,0.1,0.004001855,"{'timestamp': 1760866780.2329721, 'inputs': {'network_load': np.float64(0.7), 'relay_reputation': np.float64(0.62), 'budget_utilization': np.float64(0.05), 'recent_win_rate': np.float64(0.1)}, 'base_prob': 0.01, 'final_prob': np.float64(0.004001855), 'steps': [{'feature': 'network_load', 'value': np.float64(0.7), 'effect': 'multiply prob by 0.580 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.62), 'effect': 'multiply prob by 1.430 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.05), 'effect': 'multiply prob by 0.965 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.1), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.7,0.62,0.05,0.15,0.004001855,"{'timestamp': 1760866780.2329977, 'inputs': {'network_load': np.float64(0.7), 'relay_reputation': np.float64(0.62), 'budget_utilization': np.float64(0.05), 'recent_win_rate': np.float64(0.15)}, 'base_prob': 0.01, 'final_prob': np.float64(0.004001855), 'steps': [{'feature': 'network_load', 'value': np.float64(0.7), 'effect': 'multiply prob by 0.580 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.62), 'effect': 'multiply prob by 1.430 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.05), 'effect': 'multiply prob by 0.965 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.15), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.7,0.62,0.05,0.2,0.004001855,"{'timestamp': 1760866780.2330227, 'inputs': {'network_load': np.float64(0.7), 'relay_reputation': np.float64(0.62), 'budget_utilization': np.float64(0.05), 'recent_win_rate': np.float64(0.2)}, 'base_prob': 0.01, 'final_prob': np.float64(0.004001855), 'steps': [{'feature': 'network_load', 'value': np.float64(0.7), 'effect': 'multiply prob by 0.580 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.62), 'effect': 'multiply prob by 1.430 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.05), 'effect': 'multiply prob by 0.965 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.2), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.7,0.62,0.05,0.25,0.004001855,"{'timestamp': 1760866780.2330477, 'inputs': {'network_load': np.float64(0.7), 'relay_reputation': np.float64(0.62), 'budget_utilization': np.float64(0.05), 'recent_win_rate': np.float64(0.25)}, 'base_prob': 0.01, 'final_prob': np.float64(0.004001855), 'steps': [{'feature': 'network_load', 'value': np.float64(0.7), 'effect': 'multiply prob by 0.580 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.62), 'effect': 'multiply prob by 1.430 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.05), 'effect': 'multiply prob by 0.965 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.25), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.7,0.62,0.05,0.3,0.004001855,"{'timestamp': 1760866780.233075, 'inputs': {'network_load': np.float64(0.7), 'relay_reputation': np.float64(0.62), 'budget_utilization': np.float64(0.05), 'recent_win_rate': np.float64(0.3)}, 'base_prob': 0.01, 'final_prob': np.float64(0.004001855), 'steps': [{'feature': 'network_load', 'value': np.float64(0.7), 'effect': 'multiply prob by 0.580 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.62), 'effect': 'multiply prob by 1.430 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.05), 'effect': 'multiply prob by 0.965 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.3), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.7,0.62,0.16,0.0,0.007365071926349281,"{'timestamp': 1760866780.2331047, 'inputs': {'network_load': np.float64(0.7), 'relay_reputation': np.float64(0.62), 'budget_utilization': np.float64(0.16), 'recent_win_rate': 1e-09}, 'base_prob': 0.01, 'final_prob': np.float64(0.007365071926349281), 'steps': [{'feature': 'network_load', 'value': np.float64(0.7), 'effect': 'multiply prob by 0.580 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.62), 'effect': 'multiply prob by 1.430 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.16), 'effect': 'multiply prob by 0.888 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': 1e-09, 'effect': 'multiply prob by 1.000 (higher recent wins -> lower prob)'}]}"
0.7,0.62,0.16,0.05,0.0036825360000000006,"{'timestamp': 1760866780.2331328, 'inputs': {'network_load': np.float64(0.7), 'relay_reputation': np.float64(0.62), 'budget_utilization': np.float64(0.16), 'recent_win_rate': np.float64(0.05)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0036825360000000006), 'steps': [{'feature': 'network_load', 'value': np.float64(0.7), 'effect': 'multiply prob by 0.580 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.62), 'effect': 'multiply prob by 1.430 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.16), 'effect': 'multiply prob by 0.888 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.05), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.7,0.62,0.16,0.1,0.0036825360000000006,"{'timestamp': 1760866780.23316, 'inputs': {'network_load': np.float64(0.7), 'relay_reputation': np.float64(0.62), 'budget_utilization': np.float64(0.16), 'recent_win_rate': np.float64(0.1)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0036825360000000006), 'steps': [{'feature': 'network_load', 'value': np.float64(0.7), 'effect': 'multiply prob by 0.580 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.62), 'effect': 'multiply prob by 1.430 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.16), 'effect': 'multiply prob by 0.888 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.1), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.7,0.62,0.16,0.15,0.0036825360000000006,"{'timestamp': 1760866780.2331867, 'inputs': {'network_load': np.float64(0.7), 'relay_reputation': np.float64(0.62), 'budget_utilization': np.float64(0.16), 'recent_win_rate': np.float64(0.15)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0036825360000000006), 'steps': [{'feature': 'network_load', 'value': np.float64(0.7), 'effect': 'multiply prob by 0.580 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.62), 'effect': 'multiply prob by 1.430 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.16), 'effect': 'multiply prob by 0.888 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.15), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.7,0.62,0.16,0.2,0.0036825360000000006,"{'timestamp': 1760866780.233214, 'inputs': {'network_load': np.float64(0.7), 'relay_reputation': np.float64(0.62), 'budget_utilization': np.float64(0.16), 'recent_win_rate': np.float64(0.2)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0036825360000000006), 'steps': [{'feature': 'network_load', 'value': np.float64(0.7), 'effect': 'multiply prob by 0.580 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.62), 'effect': 'multiply prob by 1.430 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.16), 'effect': 'multiply prob by 0.888 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.2), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.7,0.62,0.16,0.25,0.0036825360000000006,"{'timestamp': 1760866780.233241, 'inputs': {'network_load': np.float64(0.7), 'relay_reputation': np.float64(0.62), 'budget_utilization': np.float64(0.16), 'recent_win_rate': np.float64(0.25)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0036825360000000006), 'steps': [{'feature': 'network_load', 'value': np.float64(0.7), 'effect': 'multiply prob by 0.580 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.62), 'effect': 'multiply prob by 1.430 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.16), 'effect': 'multiply prob by 0.888 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.25), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.7,0.62,0.16,0.3,0.0036825360000000006,"{'timestamp': 1760866780.2332988, 'inputs': {'network_load': np.float64(0.7), 'relay_reputation': np.float64(0.62), 'budget_utilization': np.float64(0.16), 'recent_win_rate': np.float64(0.3)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0036825360000000006), 'steps': [{'feature': 'network_load', 'value': np.float64(0.7), 'effect': 'multiply prob by 0.580 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.62), 'effect': 'multiply prob by 1.430 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.16), 'effect': 'multiply prob by 0.888 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.3), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.7,0.62,0.26,0.0,0.006784491932155081,"{'timestamp': 1760866780.2333298, 'inputs': {'network_load': np.float64(0.7), 'relay_reputation': np.float64(0.62), 'budget_utilization': np.float64(0.26), 'recent_win_rate': 1e-09}, 'base_prob': 0.01, 'final_prob': np.float64(0.006784491932155081), 'steps': [{'feature': 'network_load', 'value': np.float64(0.7), 'effect': 'multiply prob by 0.580 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.62), 'effect': 'multiply prob by 1.430 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.26), 'effect': 'multiply prob by 0.818 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': 1e-09, 'effect': 'multiply prob by 1.000 (higher recent wins -> lower prob)'}]}"
0.7,0.62,0.26,0.05,0.0033922460000000007,"{'timestamp': 1760866780.233355, 'inputs': {'network_load': np.float64(0.7), 'relay_reputation': np.float64(0.62), 'budget_utilization': np.float64(0.26), 'recent_win_rate': np.float64(0.05)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0033922460000000007), 'steps': [{'feature': 'network_load', 'value': np.float64(0.7), 'effect': 'multiply prob by 0.580 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.62), 'effect': 'multiply prob by 1.430 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.26), 'effect': 'multiply prob by 0.818 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.05), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.7,0.62,0.26,0.1,0.0033922460000000007,"{'timestamp': 1760866780.2333844, 'inputs': {'network_load': np.float64(0.7), 'relay_reputation': np.float64(0.62), 'budget_utilization': np.float64(0.26), 'recent_win_rate': np.float64(0.1)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0033922460000000007), 'steps': [{'feature': 'network_load', 'value': np.float64(0.7), 'effect': 'multiply prob by 0.580 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.62), 'effect': 'multiply prob by 1.430 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.26), 'effect': 'multiply prob by 0.818 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.1), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.7,0.62,0.26,0.15,0.0033922460000000007,"{'timestamp': 1760866780.2334113, 'inputs': {'network_load': np.float64(0.7), 'relay_reputation': np.float64(0.62), 'budget_utilization': np.float64(0.26), 'recent_win_rate': np.float64(0.15)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0033922460000000007), 'steps': [{'feature': 'network_load', 'value': np.float64(0.7), 'effect': 'multiply prob by 0.580 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.62), 'effect': 'multiply prob by 1.430 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.26), 'effect': 'multiply prob by 0.818 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.15), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.7,0.62,0.26,0.2,0.0033922460000000007,"{'timestamp': 1760866780.2334383, 'inputs': {'network_load': np.float64(0.7), 'relay_reputation': np.float64(0.62), 'budget_utilization': np.float64(0.26), 'recent_win_rate': np.float64(0.2)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0033922460000000007), 'steps': [{'feature': 'network_load', 'value': np.float64(0.7), 'effect': 'multiply prob by 0.580 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.62), 'effect': 'multiply prob by 1.430 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.26), 'effect': 'multiply prob by 0.818 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.2), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.7,0.62,0.26,0.25,0.0033922460000000007,"{'timestamp': 1760866780.2334635, 'inputs': {'network_load': np.float64(0.7), 'relay_reputation': np.float64(0.62), 'budget_utilization': np.float64(0.26), 'recent_win_rate': np.float64(0.25)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0033922460000000007), 'steps': [{'feature': 'network_load', 'value': np.float64(0.7), 'effect': 'multiply prob by 0.580 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.62), 'effect': 'multiply prob by 1.430 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.26), 'effect': 'multiply prob by 0.818 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.25), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.7,0.62,0.26,0.3,0.0033922460000000007,"{'timestamp': 1760866780.2334883, 'inputs': {'network_load': np.float64(0.7), 'relay_reputation': np.float64(0.62), 'budget_utilization': np.float64(0.26), 'recent_win_rate': np.float64(0.3)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0033922460000000007), 'steps': [{'feature': 'network_load', 'value': np.float64(0.7), 'effect': 'multiply prob by 0.580 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.62), 'effect': 'multiply prob by 1.430 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.26), 'effect': 'multiply prob by 0.818 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.3), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.7,0.62,0.37,0.0,0.00614585393854146,"{'timestamp': 1760866780.2335172, 'inputs': {'network_load': np.float64(0.7), 'relay_reputation': np.float64(0.62), 'budget_utilization': np.float64(0.37), 'recent_win_rate': 1e-09}, 'base_prob': 0.01, 'final_prob': np.float64(0.00614585393854146), 'steps': [{'feature': 'network_load', 'value': np.float64(0.7), 'effect': 'multiply prob by 0.580 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.62), 'effect': 'multiply prob by 1.430 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.37), 'effect': 'multiply prob by 0.741 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': 1e-09, 'effect': 'multiply prob by 1.000 (higher recent wins -> lower prob)'}]}"
0.7,0.62,0.37,0.05,0.0030729270000000005,"{'timestamp': 1760866780.2335427, 'inputs': {'network_load': np.float64(0.7), 'relay_reputation': np.float64(0.62), 'budget_utilization': np.float64(0.37), 'recent_win_rate': np.float64(0.05)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0030729270000000005), 'steps': [{'feature': 'network_load', 'value': np.float64(0.7), 'effect': 'multiply prob by 0.580 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.62), 'effect': 'multiply prob by 1.430 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.37), 'effect': 'multiply prob by 0.741 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.05), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.7,0.62,0.37,0.1,0.0030729270000000005,"{'timestamp': 1760866780.233568, 'inputs': {'network_load': np.float64(0.7), 'relay_reputation': np.float64(0.62), 'budget_utilization': np.float64(0.37), 'recent_win_rate': np.float64(0.1)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0030729270000000005), 'steps': [{'feature': 'network_load', 'value': np.float64(0.7), 'effect': 'multiply prob by 0.580 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.62), 'effect': 'multiply prob by 1.430 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.37), 'effect': 'multiply prob by 0.741 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.1), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.7,0.62,0.37,0.15,0.0030729270000000005,"{'timestamp': 1760866780.233593, 'inputs': {'network_load': np.float64(0.7), 'relay_reputation': np.float64(0.62), 'budget_utilization': np.float64(0.37), 'recent_win_rate': np.float64(0.15)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0030729270000000005), 'steps': [{'feature': 'network_load', 'value': np.float64(0.7), 'effect': 'multiply prob by 0.580 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.62), 'effect': 'multiply prob by 1.430 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.37), 'effect': 'multiply prob by 0.741 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.15), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.7,0.62,0.37,0.2,0.0030729270000000005,"{'timestamp': 1760866780.2336228, 'inputs': {'network_load': np.float64(0.7), 'relay_reputation': np.float64(0.62), 'budget_utilization': np.float64(0.37), 'recent_win_rate': np.float64(0.2)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0030729270000000005), 'steps': [{'feature': 'network_load', 'value': np.float64(0.7), 'effect': 'multiply prob by 0.580 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.62), 'effect': 'multiply prob by 1.430 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.37), 'effect': 'multiply prob by 0.741 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.2), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.7,0.62,0.37,0.25,0.0030729270000000005,"{'timestamp': 1760866780.23365, 'inputs': {'network_load': np.float64(0.7), 'relay_reputation': np.float64(0.62), 'budget_utilization': np.float64(0.37), 'recent_win_rate': np.float64(0.25)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0030729270000000005), 'steps': [{'feature': 'network_load', 'value': np.float64(0.7), 'effect': 'multiply prob by 0.580 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.62), 'effect': 'multiply prob by 1.430 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.37), 'effect': 'multiply prob by 0.741 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.25), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.7,0.62,0.37,0.3,0.0030729270000000005,"{'timestamp': 1760866780.2336764, 'inputs': {'network_load': np.float64(0.7), 'relay_reputation': np.float64(0.62), 'budget_utilization': np.float64(0.37), 'recent_win_rate': np.float64(0.3)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0030729270000000005), 'steps': [{'feature': 'network_load', 'value': np.float64(0.7), 'effect': 'multiply prob by 0.580 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.62), 'effect': 'multiply prob by 1.430 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.37), 'effect': 'multiply prob by 0.741 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.3), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.7,0.62,0.48,0.0,0.00550721594492784,"{'timestamp': 1760866780.2337034, 'inputs': {'network_load': np.float64(0.7), 'relay_reputation': np.float64(0.62), 'budget_utilization': np.float64(0.48), 'recent_win_rate': 1e-09}, 'base_prob': 0.01, 'final_prob': np.float64(0.00550721594492784), 'steps': [{'feature': 'network_load', 'value': np.float64(0.7), 'effect': 'multiply prob by 0.580 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.62), 'effect': 'multiply prob by 1.430 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.48), 'effect': 'multiply prob by 0.664 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': 1e-09, 'effect': 'multiply prob by 1.000 (higher recent wins -> lower prob)'}]}"
0.7,0.62,0.48,0.05,0.0027536080000000003,"{'timestamp': 1760866780.233729, 'inputs': {'network_load': np.float64(0.7), 'relay_reputation': np.float64(0.62), 'budget_utilization': np.float64(0.48), 'recent_win_rate': np.float64(0.05)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0027536080000000003), 'steps': [{'feature': 'network_load', 'value': np.float64(0.7), 'effect': 'multiply prob by 0.580 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.62), 'effect': 'multiply prob by 1.430 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.48), 'effect': 'multiply prob by 0.664 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.05), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.7,0.62,0.48,0.1,0.0027536080000000003,"{'timestamp': 1760866780.2338119, 'inputs': {'network_load': np.float64(0.7), 'relay_reputation': np.float64(0.62), 'budget_utilization': np.float64(0.48), 'recent_win_rate': np.float64(0.1)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0027536080000000003), 'steps': [{'feature': 'network_load', 'value': np.float64(0.7), 'effect': 'multiply prob by 0.580 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.62), 'effect': 'multiply prob by 1.430 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.48), 'effect': 'multiply prob by 0.664 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.1), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.7,0.62,0.48,0.15,0.0027536080000000003,"{'timestamp': 1760866780.233839, 'inputs': {'network_load': np.float64(0.7), 'relay_reputation': np.float64(0.62), 'budget_utilization': np.float64(0.48), 'recent_win_rate': np.float64(0.15)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0027536080000000003), 'steps': [{'feature': 'network_load', 'value': np.float64(0.7), 'effect': 'multiply prob by 0.580 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.62), 'effect': 'multiply prob by 1.430 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.48), 'effect': 'multiply prob by 0.664 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.15), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.7,0.62,0.48,0.2,0.0027536080000000003,"{'timestamp': 1760866780.2338674, 'inputs': {'network_load': np.float64(0.7), 'relay_reputation': np.float64(0.62), 'budget_utilization': np.float64(0.48), 'recent_win_rate': np.float64(0.2)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0027536080000000003), 'steps': [{'feature': 'network_load', 'value': np.float64(0.7), 'effect': 'multiply prob by 0.580 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.62), 'effect': 'multiply prob by 1.430 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.48), 'effect': 'multiply prob by 0.664 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.2), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.7,0.62,0.48,0.25,0.0027536080000000003,"{'timestamp': 1760866780.2338963, 'inputs': {'network_load': np.float64(0.7), 'relay_reputation': np.float64(0.62), 'budget_utilization': np.float64(0.48), 'recent_win_rate': np.float64(0.25)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0027536080000000003), 'steps': [{'feature': 'network_load', 'value': np.float64(0.7), 'effect': 'multiply prob by 0.580 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.62), 'effect': 'multiply prob by 1.430 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.48), 'effect': 'multiply prob by 0.664 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.25), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.7,0.62,0.48,0.3,0.0027536080000000003,"{'timestamp': 1760866780.2339234, 'inputs': {'network_load': np.float64(0.7), 'relay_reputation': np.float64(0.62), 'budget_utilization': np.float64(0.48), 'recent_win_rate': np.float64(0.3)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0027536080000000003), 'steps': [{'feature': 'network_load', 'value': np.float64(0.7), 'effect': 'multiply prob by 0.580 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.62), 'effect': 'multiply prob by 1.430 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.48), 'effect': 'multiply prob by 0.664 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.3), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.7,0.62,0.59,0.0,0.00486857795131422,"{'timestamp': 1760866780.2339528, 'inputs': {'network_load': np.float64(0.7), 'relay_reputation': np.float64(0.62), 'budget_utilization': np.float64(0.59), 'recent_win_rate': 1e-09}, 'base_prob': 0.01, 'final_prob': np.float64(0.00486857795131422), 'steps': [{'feature': 'network_load', 'value': np.float64(0.7), 'effect': 'multiply prob by 0.580 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.62), 'effect': 'multiply prob by 1.430 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.59), 'effect': 'multiply prob by 0.587 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': 1e-09, 'effect': 'multiply prob by 1.000 (higher recent wins -> lower prob)'}]}"
0.7,0.62,0.59,0.05,0.002434289,"{'timestamp': 1760866780.2339783, 'inputs': {'network_load': np.float64(0.7), 'relay_reputation': np.float64(0.62), 'budget_utilization': np.float64(0.59), 'recent_win_rate': np.float64(0.05)}, 'base_prob': 0.01, 'final_prob': np.float64(0.002434289), 'steps': [{'feature': 'network_load', 'value': np.float64(0.7), 'effect': 'multiply prob by 0.580 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.62), 'effect': 'multiply prob by 1.430 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.59), 'effect': 'multiply prob by 0.587 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.05), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.7,0.62,0.59,0.1,0.002434289,"{'timestamp': 1760866780.2340055, 'inputs': {'network_load': np.float64(0.7), 'relay_reputation': np.float64(0.62), 'budget_utilization': np.float64(0.59), 'recent_win_rate': np.float64(0.1)}, 'base_prob': 0.01, 'final_prob': np.float64(0.002434289), 'steps': [{'feature': 'network_load', 'value': np.float64(0.7), 'effect': 'multiply prob by 0.580 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.62), 'effect': 'multiply prob by 1.430 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.59), 'effect': 'multiply prob by 0.587 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.1), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.7,0.62,0.59,0.15,0.002434289,"{'timestamp': 1760866780.234031, 'inputs': {'network_load': np.float64(0.7), 'relay_reputation': np.float64(0.62), 'budget_utilization': np.float64(0.59), 'recent_win_rate': np.float64(0.15)}, 'base_prob': 0.01, 'final_prob': np.float64(0.002434289), 'steps': [{'feature': 'network_load', 'value': np.float64(0.7), 'effect': 'multiply prob by 0.580 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.62), 'effect': 'multiply prob by 1.430 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.59), 'effect': 'multiply prob by 0.587 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.15), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.7,0.62,0.59,0.2,0.002434289,"{'timestamp': 1760866780.2340562, 'inputs': {'network_load': np.float64(0.7), 'relay_reputation': np.float64(0.62), 'budget_utilization': np.float64(0.59), 'recent_win_rate': np.float64(0.2)}, 'base_prob': 0.01, 'final_prob': np.float64(0.002434289), 'steps': [{'feature': 'network_load', 'value': np.float64(0.7), 'effect': 'multiply prob by 0.580 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.62), 'effect': 'multiply prob by 1.430 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.59), 'effect': 'multiply prob by 0.587 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.2), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.7,0.62,0.59,0.25,0.002434289,"{'timestamp': 1760866780.234106, 'inputs': {'network_load': np.float64(0.7), 'relay_reputation': np.float64(0.62), 'budget_utilization': np.float64(0.59), 'recent_win_rate': np.float64(0.25)}, 'base_prob': 0.01, 'final_prob': np.float64(0.002434289), 'steps': [{'feature': 'network_load', 'value': np.float64(0.7), 'effect': 'multiply prob by 0.580 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.62), 'effect': 'multiply prob by 1.430 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.59), 'effect': 'multiply prob by 0.587 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.25), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.7,0.62,0.59,0.3,0.002434289,"{'timestamp': 1760866780.2341373, 'inputs': {'network_load': np.float64(0.7), 'relay_reputation': np.float64(0.62), 'budget_utilization': np.float64(0.59), 'recent_win_rate': np.float64(0.3)}, 'base_prob': 0.01, 'final_prob': np.float64(0.002434289), 'steps': [{'feature': 'network_load', 'value': np.float64(0.7), 'effect': 'multiply prob by 0.580 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.62), 'effect': 'multiply prob by 1.430 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.59), 'effect': 'multiply prob by 0.587 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.3), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.7,0.62,0.69,0.0,0.004287997957120021,"{'timestamp': 1760866780.2341666, 'inputs': {'network_load': np.float64(0.7), 'relay_reputation': np.float64(0.62), 'budget_utilization': np.float64(0.69), 'recent_win_rate': 1e-09}, 'base_prob': 0.01, 'final_prob': np.float64(0.004287997957120021), 'steps': [{'feature': 'network_load', 'value': np.float64(0.7), 'effect': 'multiply prob by 0.580 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.62), 'effect': 'multiply prob by 1.430 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.69), 'effect': 'multiply prob by 0.517 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': 1e-09, 'effect': 'multiply prob by 1.000 (higher recent wins -> lower prob)'}]}"
0.7,0.62,0.69,0.05,0.0021439990000000006,"{'timestamp': 1760866780.2341943, 'inputs': {'network_load': np.float64(0.7), 'relay_reputation': np.float64(0.62), 'budget_utilization': np.float64(0.69), 'recent_win_rate': np.float64(0.05)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0021439990000000006), 'steps': [{'feature': 'network_load', 'value': np.float64(0.7), 'effect': 'multiply prob by 0.580 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.62), 'effect': 'multiply prob by 1.430 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.69), 'effect': 'multiply prob by 0.517 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.05), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.7,0.62,0.69,0.1,0.0021439990000000006,"{'timestamp': 1760866780.2342196, 'inputs': {'network_load': np.float64(0.7), 'relay_reputation': np.float64(0.62), 'budget_utilization': np.float64(0.69), 'recent_win_rate': np.float64(0.1)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0021439990000000006), 'steps': [{'feature': 'network_load', 'value': np.float64(0.7), 'effect': 'multiply prob by 0.580 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.62), 'effect': 'multiply prob by 1.430 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.69), 'effect': 'multiply prob by 0.517 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.1), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.7,0.62,0.69,0.15,0.0021439990000000006,"{'timestamp': 1760866780.2342465, 'inputs': {'network_load': np.float64(0.7), 'relay_reputation': np.float64(0.62), 'budget_utilization': np.float64(0.69), 'recent_win_rate': np.float64(0.15)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0021439990000000006), 'steps': [{'feature': 'network_load', 'value': np.float64(0.7), 'effect': 'multiply prob by 0.580 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.62), 'effect': 'multiply prob by 1.430 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.69), 'effect': 'multiply prob by 0.517 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.15), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.7,0.62,0.69,0.2,0.0021439990000000006,"{'timestamp': 1760866780.2342715, 'inputs': {'network_load': np.float64(0.7), 'relay_reputation': np.float64(0.62), 'budget_utilization': np.float64(0.69), 'recent_win_rate': np.float64(0.2)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0021439990000000006), 'steps': [{'feature': 'network_load', 'value': np.float64(0.7), 'effect': 'multiply prob by 0.580 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.62), 'effect': 'multiply prob by 1.430 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.69), 'effect': 'multiply prob by 0.517 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.2), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.7,0.62,0.69,0.25,0.0021439990000000006,"{'timestamp': 1760866780.2342968, 'inputs': {'network_load': np.float64(0.7), 'relay_reputation': np.float64(0.62), 'budget_utilization': np.float64(0.69), 'recent_win_rate': np.float64(0.25)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0021439990000000006), 'steps': [{'feature': 'network_load', 'value': np.float64(0.7), 'effect': 'multiply prob by 0.580 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.62), 'effect': 'multiply prob by 1.430 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.69), 'effect': 'multiply prob by 0.517 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.25), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.7,0.62,0.69,0.3,0.0021439990000000006,"{'timestamp': 1760866780.234324, 'inputs': {'network_load': np.float64(0.7), 'relay_reputation': np.float64(0.62), 'budget_utilization': np.float64(0.69), 'recent_win_rate': np.float64(0.3)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0021439990000000006), 'steps': [{'feature': 'network_load', 'value': np.float64(0.7), 'effect': 'multiply prob by 0.580 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.62), 'effect': 'multiply prob by 1.430 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.69), 'effect': 'multiply prob by 0.517 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.3), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.7,0.62,0.8,0.0,0.0036493599635064006,"{'timestamp': 1760866780.2343583, 'inputs': {'network_load': np.float64(0.7), 'relay_reputation': np.float64(0.62), 'budget_utilization': np.float64(0.8), 'recent_win_rate': 1e-09}, 'base_prob': 0.01, 'final_prob': np.float64(0.0036493599635064006), 'steps': [{'feature': 'network_load', 'value': np.float64(0.7), 'effect': 'multiply prob by 0.580 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.62), 'effect': 'multiply prob by 1.430 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.8), 'effect': 'multiply prob by 0.440 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': 1e-09, 'effect': 'multiply prob by 1.000 (higher recent wins -> lower prob)'}]}"
0.7,0.62,0.8,0.05,0.0018246800000000004,"{'timestamp': 1760866780.2343872, 'inputs': {'network_load': np.float64(0.7), 'relay_reputation': np.float64(0.62), 'budget_utilization': np.float64(0.8), 'recent_win_rate': np.float64(0.05)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0018246800000000004), 'steps': [{'feature': 'network_load', 'value': np.float64(0.7), 'effect': 'multiply prob by 0.580 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.62), 'effect': 'multiply prob by 1.430 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.8), 'effect': 'multiply prob by 0.440 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.05), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.7,0.62,0.8,0.1,0.0018246800000000004,"{'timestamp': 1760866780.2344124, 'inputs': {'network_load': np.float64(0.7), 'relay_reputation': np.float64(0.62), 'budget_utilization': np.float64(0.8), 'recent_win_rate': np.float64(0.1)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0018246800000000004), 'steps': [{'feature': 'network_load', 'value': np.float64(0.7), 'effect': 'multiply prob by 0.580 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.62), 'effect': 'multiply prob by 1.430 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.8), 'effect': 'multiply prob by 0.440 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.1), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.7,0.62,0.8,0.15,0.0018246800000000004,"{'timestamp': 1760866780.2344377, 'inputs': {'network_load': np.float64(0.7), 'relay_reputation': np.float64(0.62), 'budget_utilization': np.float64(0.8), 'recent_win_rate': np.float64(0.15)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0018246800000000004), 'steps': [{'feature': 'network_load', 'value': np.float64(0.7), 'effect': 'multiply prob by 0.580 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.62), 'effect': 'multiply prob by 1.430 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.8), 'effect': 'multiply prob by 0.440 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.15), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.7,0.62,0.8,0.2,0.0018246800000000004,"{'timestamp': 1760866780.2344644, 'inputs': {'network_load': np.float64(0.7), 'relay_reputation': np.float64(0.62), 'budget_utilization': np.float64(0.8), 'recent_win_rate': np.float64(0.2)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0018246800000000004), 'steps': [{'feature': 'network_load', 'value': np.float64(0.7), 'effect': 'multiply prob by 0.580 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.62), 'effect': 'multiply prob by 1.430 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.8), 'effect': 'multiply prob by 0.440 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.2), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.7,0.62,0.8,0.25,0.0018246800000000004,"{'timestamp': 1760866780.2344913, 'inputs': {'network_load': np.float64(0.7), 'relay_reputation': np.float64(0.62), 'budget_utilization': np.float64(0.8), 'recent_win_rate': np.float64(0.25)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0018246800000000004), 'steps': [{'feature': 'network_load', 'value': np.float64(0.7), 'effect': 'multiply prob by 0.580 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.62), 'effect': 'multiply prob by 1.430 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.8), 'effect': 'multiply prob by 0.440 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.25), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.7,0.62,0.8,0.3,0.0018246800000000004,"{'timestamp': 1760866780.2345164, 'inputs': {'network_load': np.float64(0.7), 'relay_reputation': np.float64(0.62), 'budget_utilization': np.float64(0.8), 'recent_win_rate': np.float64(0.3)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0018246800000000004), 'steps': [{'feature': 'network_load', 'value': np.float64(0.7), 'effect': 'multiply prob by 0.580 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.62), 'effect': 'multiply prob by 1.430 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.8), 'effect': 'multiply prob by 0.440 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.3), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.7,0.73,0.05,0.0,0.00892721491072785,"{'timestamp': 1760866780.2345443, 'inputs': {'network_load': np.float64(0.7), 'relay_reputation': np.float64(0.73), 'budget_utilization': np.float64(0.05), 'recent_win_rate': 1e-09}, 'base_prob': 0.01, 'final_prob': np.float64(0.00892721491072785), 'steps': [{'feature': 'network_load', 'value': np.float64(0.7), 'effect': 'multiply prob by 0.580 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.73), 'effect': 'multiply prob by 1.595 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.05), 'effect': 'multiply prob by 0.965 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': 1e-09, 'effect': 'multiply prob by 1.000 (higher recent wins -> lower prob)'}]}"
0.7,0.73,0.05,0.05,0.0044636075,"{'timestamp': 1760866780.2345717, 'inputs': {'network_load': np.float64(0.7), 'relay_reputation': np.float64(0.73), 'budget_utilization': np.float64(0.05), 'recent_win_rate': np.float64(0.05)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0044636075), 'steps': [{'feature': 'network_load', 'value': np.float64(0.7), 'effect': 'multiply prob by 0.580 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.73), 'effect': 'multiply prob by 1.595 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.05), 'effect': 'multiply prob by 0.965 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.05), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.7,0.73,0.05,0.1,0.0044636075,"{'timestamp': 1760866780.234639, 'inputs': {'network_load': np.float64(0.7), 'relay_reputation': np.float64(0.73), 'budget_utilization': np.float64(0.05), 'recent_win_rate': np.float64(0.1)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0044636075), 'steps': [{'feature': 'network_load', 'value': np.float64(0.7), 'effect': 'multiply prob by 0.580 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.73), 'effect': 'multiply prob by 1.595 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.05), 'effect': 'multiply prob by 0.965 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.1), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.7,0.73,0.05,0.15,0.0044636075,"{'timestamp': 1760866780.2346792, 'inputs': {'network_load': np.float64(0.7), 'relay_reputation': np.float64(0.73), 'budget_utilization': np.float64(0.05), 'recent_win_rate': np.float64(0.15)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0044636075), 'steps': [{'feature': 'network_load', 'value': np.float64(0.7), 'effect': 'multiply prob by 0.580 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.73), 'effect': 'multiply prob by 1.595 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.05), 'effect': 'multiply prob by 0.965 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.15), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.7,0.73,0.05,0.2,0.0044636075,"{'timestamp': 1760866780.2347054, 'inputs': {'network_load': np.float64(0.7), 'relay_reputation': np.float64(0.73), 'budget_utilization': np.float64(0.05), 'recent_win_rate': np.float64(0.2)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0044636075), 'steps': [{'feature': 'network_load', 'value': np.float64(0.7), 'effect': 'multiply prob by 0.580 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.73), 'effect': 'multiply prob by 1.595 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.05), 'effect': 'multiply prob by 0.965 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.2), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.7,0.73,0.05,0.25,0.0044636075,"{'timestamp': 1760866780.2347307, 'inputs': {'network_load': np.float64(0.7), 'relay_reputation': np.float64(0.73), 'budget_utilization': np.float64(0.05), 'recent_win_rate': np.float64(0.25)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0044636075), 'steps': [{'feature': 'network_load', 'value': np.float64(0.7), 'effect': 'multiply prob by 0.580 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.73), 'effect': 'multiply prob by 1.595 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.05), 'effect': 'multiply prob by 0.965 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.25), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.7,0.73,0.05,0.3,0.0044636075,"{'timestamp': 1760866780.2347558, 'inputs': {'network_load': np.float64(0.7), 'relay_reputation': np.float64(0.73), 'budget_utilization': np.float64(0.05), 'recent_win_rate': np.float64(0.3)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0044636075), 'steps': [{'feature': 'network_load', 'value': np.float64(0.7), 'effect': 'multiply prob by 0.580 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.73), 'effect': 'multiply prob by 1.595 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.05), 'effect': 'multiply prob by 0.965 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.3), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.7,0.73,0.16,0.0,0.00821488791785112,"{'timestamp': 1760866780.2347882, 'inputs': {'network_load': np.float64(0.7), 'relay_reputation': np.float64(0.73), 'budget_utilization': np.float64(0.16), 'recent_win_rate': 1e-09}, 'base_prob': 0.01, 'final_prob': np.float64(0.00821488791785112), 'steps': [{'feature': 'network_load', 'value': np.float64(0.7), 'effect': 'multiply prob by 0.580 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.73), 'effect': 'multiply prob by 1.595 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.16), 'effect': 'multiply prob by 0.888 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': 1e-09, 'effect': 'multiply prob by 1.000 (higher recent wins -> lower prob)'}]}"
0.7,0.73,0.16,0.05,0.004107444,"{'timestamp': 1760866780.2348156, 'inputs': {'network_load': np.float64(0.7), 'relay_reputation': np.float64(0.73), 'budget_utilization': np.float64(0.16), 'recent_win_rate': np.float64(0.05)}, 'base_prob': 0.01, 'final_prob': np.float64(0.004107444), 'steps': [{'feature': 'network_load', 'value': np.float64(0.7), 'effect': 'multiply prob by 0.580 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.73), 'effect': 'multiply prob by 1.595 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.16), 'effect': 'multiply prob by 0.888 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.05), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.7,0.73,0.16,0.1,0.004107444,"{'timestamp': 1760866780.2349088, 'inputs': {'network_load': np.float64(0.7), 'relay_reputation': np.float64(0.73), 'budget_utilization': np.float64(0.16), 'recent_win_rate': np.float64(0.1)}, 'base_prob': 0.01, 'final_prob': np.float64(0.004107444), 'steps': [{'feature': 'network_load', 'value': np.float64(0.7), 'effect': 'multiply prob by 0.580 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.73), 'effect': 'multiply prob by 1.595 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.16), 'effect': 'multiply prob by 0.888 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.1), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.7,0.73,0.16,0.15,0.004107444,"{'timestamp': 1760866780.234939, 'inputs': {'network_load': np.float64(0.7), 'relay_reputation': np.float64(0.73), 'budget_utilization': np.float64(0.16), 'recent_win_rate': np.float64(0.15)}, 'base_prob': 0.01, 'final_prob': np.float64(0.004107444), 'steps': [{'feature': 'network_load', 'value': np.float64(0.7), 'effect': 'multiply prob by 0.580 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.73), 'effect': 'multiply prob by 1.595 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.16), 'effect': 'multiply prob by 0.888 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.15), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.7,0.73,0.16,0.2,0.004107444,"{'timestamp': 1760866780.2349644, 'inputs': {'network_load': np.float64(0.7), 'relay_reputation': np.float64(0.73), 'budget_utilization': np.float64(0.16), 'recent_win_rate': np.float64(0.2)}, 'base_prob': 0.01, 'final_prob': np.float64(0.004107444), 'steps': [{'feature': 'network_load', 'value': np.float64(0.7), 'effect': 'multiply prob by 0.580 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.73), 'effect': 'multiply prob by 1.595 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.16), 'effect': 'multiply prob by 0.888 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.2), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.7,0.73,0.16,0.25,0.004107444,"{'timestamp': 1760866780.2349896, 'inputs': {'network_load': np.float64(0.7), 'relay_reputation': np.float64(0.73), 'budget_utilization': np.float64(0.16), 'recent_win_rate': np.float64(0.25)}, 'base_prob': 0.01, 'final_prob': np.float64(0.004107444), 'steps': [{'feature': 'network_load', 'value': np.float64(0.7), 'effect': 'multiply prob by 0.580 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.73), 'effect': 'multiply prob by 1.595 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.16), 'effect': 'multiply prob by 0.888 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.25), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.7,0.73,0.16,0.3,0.004107444,"{'timestamp': 1760866780.235018, 'inputs': {'network_load': np.float64(0.7), 'relay_reputation': np.float64(0.73), 'budget_utilization': np.float64(0.16), 'recent_win_rate': np.float64(0.3)}, 'base_prob': 0.01, 'final_prob': np.float64(0.004107444), 'steps': [{'feature': 'network_load', 'value': np.float64(0.7), 'effect': 'multiply prob by 0.580 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.73), 'effect': 'multiply prob by 1.595 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.16), 'effect': 'multiply prob by 0.888 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.3), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.7,0.73,0.26,0.0,0.00756731792432682,"{'timestamp': 1760866780.2350473, 'inputs': {'network_load': np.float64(0.7), 'relay_reputation': np.float64(0.73), 'budget_utilization': np.float64(0.26), 'recent_win_rate': 1e-09}, 'base_prob': 0.01, 'final_prob': np.float64(0.00756731792432682), 'steps': [{'feature': 'network_load', 'value': np.float64(0.7), 'effect': 'multiply prob by 0.580 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.73), 'effect': 'multiply prob by 1.595 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.26), 'effect': 'multiply prob by 0.818 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': 1e-09, 'effect': 'multiply prob by 1.000 (higher recent wins -> lower prob)'}]}"
0.7,0.73,0.26,0.05,0.0037836590000000004,"{'timestamp': 1760866780.2350864, 'inputs': {'network_load': np.float64(0.7), 'relay_reputation': np.float64(0.73), 'budget_utilization': np.float64(0.26), 'recent_win_rate': np.float64(0.05)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0037836590000000004), 'steps': [{'feature': 'network_load', 'value': np.float64(0.7), 'effect': 'multiply prob by 0.580 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.73), 'effect': 'multiply prob by 1.595 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.26), 'effect': 'multiply prob by 0.818 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.05), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.7,0.73,0.26,0.1,0.0037836590000000004,"{'timestamp': 1760866780.2351122, 'inputs': {'network_load': np.float64(0.7), 'relay_reputation': np.float64(0.73), 'budget_utilization': np.float64(0.26), 'recent_win_rate': np.float64(0.1)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0037836590000000004), 'steps': [{'feature': 'network_load', 'value': np.float64(0.7), 'effect': 'multiply prob by 0.580 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.73), 'effect': 'multiply prob by 1.595 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.26), 'effect': 'multiply prob by 0.818 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.1), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.7,0.73,0.26,0.15,0.0037836590000000004,"{'timestamp': 1760866780.23514, 'inputs': {'network_load': np.float64(0.7), 'relay_reputation': np.float64(0.73), 'budget_utilization': np.float64(0.26), 'recent_win_rate': np.float64(0.15)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0037836590000000004), 'steps': [{'feature': 'network_load', 'value': np.float64(0.7), 'effect': 'multiply prob by 0.580 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.73), 'effect': 'multiply prob by 1.595 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.26), 'effect': 'multiply prob by 0.818 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.15), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.7,0.73,0.26,0.2,0.0037836590000000004,"{'timestamp': 1760866780.235167, 'inputs': {'network_load': np.float64(0.7), 'relay_reputation': np.float64(0.73), 'budget_utilization': np.float64(0.26), 'recent_win_rate': np.float64(0.2)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0037836590000000004), 'steps': [{'feature': 'network_load', 'value': np.float64(0.7), 'effect': 'multiply prob by 0.580 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.73), 'effect': 'multiply prob by 1.595 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.26), 'effect': 'multiply prob by 0.818 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.2), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.7,0.73,0.26,0.25,0.0037836590000000004,"{'timestamp': 1760866780.2351923, 'inputs': {'network_load': np.float64(0.7), 'relay_reputation': np.float64(0.73), 'budget_utilization': np.float64(0.26), 'recent_win_rate': np.float64(0.25)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0037836590000000004), 'steps': [{'feature': 'network_load', 'value': np.float64(0.7), 'effect': 'multiply prob by 0.580 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.73), 'effect': 'multiply prob by 1.595 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.26), 'effect': 'multiply prob by 0.818 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.25), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.7,0.73,0.26,0.3,0.0037836590000000004,"{'timestamp': 1760866780.23522, 'inputs': {'network_load': np.float64(0.7), 'relay_reputation': np.float64(0.73), 'budget_utilization': np.float64(0.26), 'recent_win_rate': np.float64(0.3)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0037836590000000004), 'steps': [{'feature': 'network_load', 'value': np.float64(0.7), 'effect': 'multiply prob by 0.580 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.73), 'effect': 'multiply prob by 1.595 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.26), 'effect': 'multiply prob by 0.818 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.3), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.7,0.73,0.37,0.0,0.00685499093145009,"{'timestamp': 1760866780.2352471, 'inputs': {'network_load': np.float64(0.7), 'relay_reputation': np.float64(0.73), 'budget_utilization': np.float64(0.37), 'recent_win_rate': 1e-09}, 'base_prob': 0.01, 'final_prob': np.float64(0.00685499093145009), 'steps': [{'feature': 'network_load', 'value': np.float64(0.7), 'effect': 'multiply prob by 0.580 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.73), 'effect': 'multiply prob by 1.595 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.37), 'effect': 'multiply prob by 0.741 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': 1e-09, 'effect': 'multiply prob by 1.000 (higher recent wins -> lower prob)'}]}"
0.7,0.73,0.37,0.05,0.0034274955,"{'timestamp': 1760866780.2353036, 'inputs': {'network_load': np.float64(0.7), 'relay_reputation': np.float64(0.73), 'budget_utilization': np.float64(0.37), 'recent_win_rate': np.float64(0.05)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0034274955), 'steps': [{'feature': 'network_load', 'value': np.float64(0.7), 'effect': 'multiply prob by 0.580 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.73), 'effect': 'multiply prob by 1.595 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.37), 'effect': 'multiply prob by 0.741 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.05), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.7,0.73,0.37,0.1,0.0034274955,"{'timestamp': 1760866780.2353306, 'inputs': {'network_load': np.float64(0.7), 'relay_reputation': np.float64(0.73), 'budget_utilization': np.float64(0.37), 'recent_win_rate': np.float64(0.1)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0034274955), 'steps': [{'feature': 'network_load', 'value': np.float64(0.7), 'effect': 'multiply prob by 0.580 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.73), 'effect': 'multiply prob by 1.595 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.37), 'effect': 'multiply prob by 0.741 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.1), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.7,0.73,0.37,0.15,0.0034274955,"{'timestamp': 1760866780.2353601, 'inputs': {'network_load': np.float64(0.7), 'relay_reputation': np.float64(0.73), 'budget_utilization': np.float64(0.37), 'recent_win_rate': np.float64(0.15)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0034274955), 'steps': [{'feature': 'network_load', 'value': np.float64(0.7), 'effect': 'multiply prob by 0.580 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.73), 'effect': 'multiply prob by 1.595 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.37), 'effect': 'multiply prob by 0.741 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.15), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.7,0.73,0.37,0.2,0.0034274955,"{'timestamp': 1760866780.235391, 'inputs': {'network_load': np.float64(0.7), 'relay_reputation': np.float64(0.73), 'budget_utilization': np.float64(0.37), 'recent_win_rate': np.float64(0.2)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0034274955), 'steps': [{'feature': 'network_load', 'value': np.float64(0.7), 'effect': 'multiply prob by 0.580 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.73), 'effect': 'multiply prob by 1.595 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.37), 'effect': 'multiply prob by 0.741 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.2), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.7,0.73,0.37,0.25,0.0034274955,"{'timestamp': 1760866780.2354186, 'inputs': {'network_load': np.float64(0.7), 'relay_reputation': np.float64(0.73), 'budget_utilization': np.float64(0.37), 'recent_win_rate': np.float64(0.25)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0034274955), 'steps': [{'feature': 'network_load', 'value': np.float64(0.7), 'effect': 'multiply prob by 0.580 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.73), 'effect': 'multiply prob by 1.595 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.37), 'effect': 'multiply prob by 0.741 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.25), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.7,0.73,0.37,0.3,0.0034274955,"{'timestamp': 1760866780.2354438, 'inputs': {'network_load': np.float64(0.7), 'relay_reputation': np.float64(0.73), 'budget_utilization': np.float64(0.37), 'recent_win_rate': np.float64(0.3)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0034274955), 'steps': [{'feature': 'network_load', 'value': np.float64(0.7), 'effect': 'multiply prob by 0.580 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.73), 'effect': 'multiply prob by 1.595 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.37), 'effect': 'multiply prob by 0.741 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.3), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.7,0.73,0.48,0.0,0.00614266393857336,"{'timestamp': 1760866780.2354727, 'inputs': {'network_load': np.float64(0.7), 'relay_reputation': np.float64(0.73), 'budget_utilization': np.float64(0.48), 'recent_win_rate': 1e-09}, 'base_prob': 0.01, 'final_prob': np.float64(0.00614266393857336), 'steps': [{'feature': 'network_load', 'value': np.float64(0.7), 'effect': 'multiply prob by 0.580 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.73), 'effect': 'multiply prob by 1.595 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.48), 'effect': 'multiply prob by 0.664 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': 1e-09, 'effect': 'multiply prob by 1.000 (higher recent wins -> lower prob)'}]}"
0.7,0.73,0.48,0.05,0.0030713320000000004,"{'timestamp': 1760866780.2355003, 'inputs': {'network_load': np.float64(0.7), 'relay_reputation': np.float64(0.73), 'budget_utilization': np.float64(0.48), 'recent_win_rate': np.float64(0.05)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0030713320000000004), 'steps': [{'feature': 'network_load', 'value': np.float64(0.7), 'effect': 'multiply prob by 0.580 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.73), 'effect': 'multiply prob by 1.595 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.48), 'effect': 'multiply prob by 0.664 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.05), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.7,0.73,0.48,0.1,0.0030713320000000004,"{'timestamp': 1760866780.2355258, 'inputs': {'network_load': np.float64(0.7), 'relay_reputation': np.float64(0.73), 'budget_utilization': np.float64(0.48), 'recent_win_rate': np.float64(0.1)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0030713320000000004), 'steps': [{'feature': 'network_load', 'value': np.float64(0.7), 'effect': 'multiply prob by 0.580 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.73), 'effect': 'multiply prob by 1.595 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.48), 'effect': 'multiply prob by 0.664 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.1), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.7,0.73,0.48,0.15,0.0030713320000000004,"{'timestamp': 1760866780.235551, 'inputs': {'network_load': np.float64(0.7), 'relay_reputation': np.float64(0.73), 'budget_utilization': np.float64(0.48), 'recent_win_rate': np.float64(0.15)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0030713320000000004), 'steps': [{'feature': 'network_load', 'value': np.float64(0.7), 'effect': 'multiply prob by 0.580 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.73), 'effect': 'multiply prob by 1.595 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.48), 'effect': 'multiply prob by 0.664 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.15), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.7,0.73,0.48,0.2,0.0030713320000000004,"{'timestamp': 1760866780.2355783, 'inputs': {'network_load': np.float64(0.7), 'relay_reputation': np.float64(0.73), 'budget_utilization': np.float64(0.48), 'recent_win_rate': np.float64(0.2)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0030713320000000004), 'steps': [{'feature': 'network_load', 'value': np.float64(0.7), 'effect': 'multiply prob by 0.580 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.73), 'effect': 'multiply prob by 1.595 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.48), 'effect': 'multiply prob by 0.664 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.2), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.7,0.73,0.48,0.25,0.0030713320000000004,"{'timestamp': 1760866780.2356598, 'inputs': {'network_load': np.float64(0.7), 'relay_reputation': np.float64(0.73), 'budget_utilization': np.float64(0.48), 'recent_win_rate': np.float64(0.25)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0030713320000000004), 'steps': [{'feature': 'network_load', 'value': np.float64(0.7), 'effect': 'multiply prob by 0.580 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.73), 'effect': 'multiply prob by 1.595 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.48), 'effect': 'multiply prob by 0.664 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.25), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.7,0.73,0.48,0.3,0.0030713320000000004,"{'timestamp': 1760866780.2356899, 'inputs': {'network_load': np.float64(0.7), 'relay_reputation': np.float64(0.73), 'budget_utilization': np.float64(0.48), 'recent_win_rate': np.float64(0.3)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0030713320000000004), 'steps': [{'feature': 'network_load', 'value': np.float64(0.7), 'effect': 'multiply prob by 0.580 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.73), 'effect': 'multiply prob by 1.595 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.48), 'effect': 'multiply prob by 0.664 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.3), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.7,0.73,0.59,0.0,0.00543033694569663,"{'timestamp': 1760866780.2357194, 'inputs': {'network_load': np.float64(0.7), 'relay_reputation': np.float64(0.73), 'budget_utilization': np.float64(0.59), 'recent_win_rate': 1e-09}, 'base_prob': 0.01, 'final_prob': np.float64(0.00543033694569663), 'steps': [{'feature': 'network_load', 'value': np.float64(0.7), 'effect': 'multiply prob by 0.580 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.73), 'effect': 'multiply prob by 1.595 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.59), 'effect': 'multiply prob by 0.587 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': 1e-09, 'effect': 'multiply prob by 1.000 (higher recent wins -> lower prob)'}]}"
0.7,0.73,0.59,0.05,0.0027151685,"{'timestamp': 1760866780.2357447, 'inputs': {'network_load': np.float64(0.7), 'relay_reputation': np.float64(0.73), 'budget_utilization': np.float64(0.59), 'recent_win_rate': np.float64(0.05)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0027151685), 'steps': [{'feature': 'network_load', 'value': np.float64(0.7), 'effect': 'multiply prob by 0.580 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.73), 'effect': 'multiply prob by 1.595 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.59), 'effect': 'multiply prob by 0.587 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.05), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.7,0.73,0.59,0.1,0.0027151685,"{'timestamp': 1760866780.2357697, 'inputs': {'network_load': np.float64(0.7), 'relay_reputation': np.float64(0.73), 'budget_utilization': np.float64(0.59), 'recent_win_rate': np.float64(0.1)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0027151685), 'steps': [{'feature': 'network_load', 'value': np.float64(0.7), 'effect': 'multiply prob by 0.580 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.73), 'effect': 'multiply prob by 1.595 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.59), 'effect': 'multiply prob by 0.587 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.1), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.7,0.73,0.59,0.15,0.0027151685,"{'timestamp': 1760866780.235795, 'inputs': {'network_load': np.float64(0.7), 'relay_reputation': np.float64(0.73), 'budget_utilization': np.float64(0.59), 'recent_win_rate': np.float64(0.15)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0027151685), 'steps': [{'feature': 'network_load', 'value': np.float64(0.7), 'effect': 'multiply prob by 0.580 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.73), 'effect': 'multiply prob by 1.595 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.59), 'effect': 'multiply prob by 0.587 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.15), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.7,0.73,0.59,0.2,0.0027151685,"{'timestamp': 1760866780.235822, 'inputs': {'network_load': np.float64(0.7), 'relay_reputation': np.float64(0.73), 'budget_utilization': np.float64(0.59), 'recent_win_rate': np.float64(0.2)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0027151685), 'steps': [{'feature': 'network_load', 'value': np.float64(0.7), 'effect': 'multiply prob by 0.580 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.73), 'effect': 'multiply prob by 1.595 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.59), 'effect': 'multiply prob by 0.587 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.2), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.7,0.73,0.59,0.25,0.0027151685,"{'timestamp': 1760866780.2358477, 'inputs': {'network_load': np.float64(0.7), 'relay_reputation': np.float64(0.73), 'budget_utilization': np.float64(0.59), 'recent_win_rate': np.float64(0.25)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0027151685), 'steps': [{'feature': 'network_load', 'value': np.float64(0.7), 'effect': 'multiply prob by 0.580 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.73), 'effect': 'multiply prob by 1.595 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.59), 'effect': 'multiply prob by 0.587 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.25), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.7,0.73,0.59,0.3,0.0027151685,"{'timestamp': 1760866780.2358763, 'inputs': {'network_load': np.float64(0.7), 'relay_reputation': np.float64(0.73), 'budget_utilization': np.float64(0.59), 'recent_win_rate': np.float64(0.3)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0027151685), 'steps': [{'feature': 'network_load', 'value': np.float64(0.7), 'effect': 'multiply prob by 0.580 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.73), 'effect': 'multiply prob by 1.595 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.59), 'effect': 'multiply prob by 0.587 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.3), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.7,0.73,0.69,0.0,0.0047827669521723305,"{'timestamp': 1760866780.235905, 'inputs': {'network_load': np.float64(0.7), 'relay_reputation': np.float64(0.73), 'budget_utilization': np.float64(0.69), 'recent_win_rate': 1e-09}, 'base_prob': 0.01, 'final_prob': np.float64(0.0047827669521723305), 'steps': [{'feature': 'network_load', 'value': np.float64(0.7), 'effect': 'multiply prob by 0.580 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.73), 'effect': 'multiply prob by 1.595 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.69), 'effect': 'multiply prob by 0.517 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': 1e-09, 'effect': 'multiply prob by 1.000 (higher recent wins -> lower prob)'}]}"
0.7,0.73,0.69,0.05,0.0023913835000000006,"{'timestamp': 1760866780.2359324, 'inputs': {'network_load': np.float64(0.7), 'relay_reputation': np.float64(0.73), 'budget_utilization': np.float64(0.69), 'recent_win_rate': np.float64(0.05)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0023913835000000006), 'steps': [{'feature': 'network_load', 'value': np.float64(0.7), 'effect': 'multiply prob by 0.580 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.73), 'effect': 'multiply prob by 1.595 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.69), 'effect': 'multiply prob by 0.517 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.05), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.7,0.73,0.69,0.1,0.0023913835000000006,"{'timestamp': 1760866780.2359579, 'inputs': {'network_load': np.float64(0.7), 'relay_reputation': np.float64(0.73), 'budget_utilization': np.float64(0.69), 'recent_win_rate': np.float64(0.1)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0023913835000000006), 'steps': [{'feature': 'network_load', 'value': np.float64(0.7), 'effect': 'multiply prob by 0.580 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.73), 'effect': 'multiply prob by 1.595 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.69), 'effect': 'multiply prob by 0.517 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.1), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.7,0.73,0.69,0.15,0.0023913835000000006,"{'timestamp': 1760866780.2359848, 'inputs': {'network_load': np.float64(0.7), 'relay_reputation': np.float64(0.73), 'budget_utilization': np.float64(0.69), 'recent_win_rate': np.float64(0.15)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0023913835000000006), 'steps': [{'feature': 'network_load', 'value': np.float64(0.7), 'effect': 'multiply prob by 0.580 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.73), 'effect': 'multiply prob by 1.595 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.69), 'effect': 'multiply prob by 0.517 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.15), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.7,0.73,0.69,0.2,0.0023913835000000006,"{'timestamp': 1760866780.2360098, 'inputs': {'network_load': np.float64(0.7), 'relay_reputation': np.float64(0.73), 'budget_utilization': np.float64(0.69), 'recent_win_rate': np.float64(0.2)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0023913835000000006), 'steps': [{'feature': 'network_load', 'value': np.float64(0.7), 'effect': 'multiply prob by 0.580 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.73), 'effect': 'multiply prob by 1.595 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.69), 'effect': 'multiply prob by 0.517 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.2), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.7,0.73,0.69,0.25,0.0023913835000000006,"{'timestamp': 1760866780.236035, 'inputs': {'network_load': np.float64(0.7), 'relay_reputation': np.float64(0.73), 'budget_utilization': np.float64(0.69), 'recent_win_rate': np.float64(0.25)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0023913835000000006), 'steps': [{'feature': 'network_load', 'value': np.float64(0.7), 'effect': 'multiply prob by 0.580 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.73), 'effect': 'multiply prob by 1.595 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.69), 'effect': 'multiply prob by 0.517 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.25), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.7,0.73,0.69,0.3,0.0023913835000000006,"{'timestamp': 1760866780.2360601, 'inputs': {'network_load': np.float64(0.7), 'relay_reputation': np.float64(0.73), 'budget_utilization': np.float64(0.69), 'recent_win_rate': np.float64(0.3)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0023913835000000006), 'steps': [{'feature': 'network_load', 'value': np.float64(0.7), 'effect': 'multiply prob by 0.580 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.73), 'effect': 'multiply prob by 1.595 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.69), 'effect': 'multiply prob by 0.517 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.3), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.7,0.73,0.8,0.0,0.004070439959295601,"{'timestamp': 1760866780.236089, 'inputs': {'network_load': np.float64(0.7), 'relay_reputation': np.float64(0.73), 'budget_utilization': np.float64(0.8), 'recent_win_rate': 1e-09}, 'base_prob': 0.01, 'final_prob': np.float64(0.004070439959295601), 'steps': [{'feature': 'network_load', 'value': np.float64(0.7), 'effect': 'multiply prob by 0.580 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.73), 'effect': 'multiply prob by 1.595 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.8), 'effect': 'multiply prob by 0.440 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': 1e-09, 'effect': 'multiply prob by 1.000 (higher recent wins -> lower prob)'}]}"
0.7,0.73,0.8,0.05,0.0020352200000000003,"{'timestamp': 1760866780.2361162, 'inputs': {'network_load': np.float64(0.7), 'relay_reputation': np.float64(0.73), 'budget_utilization': np.float64(0.8), 'recent_win_rate': np.float64(0.05)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0020352200000000003), 'steps': [{'feature': 'network_load', 'value': np.float64(0.7), 'effect': 'multiply prob by 0.580 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.73), 'effect': 'multiply prob by 1.595 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.8), 'effect': 'multiply prob by 0.440 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.05), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.7,0.73,0.8,0.1,0.0020352200000000003,"{'timestamp': 1760866780.2361417, 'inputs': {'network_load': np.float64(0.7), 'relay_reputation': np.float64(0.73), 'budget_utilization': np.float64(0.8), 'recent_win_rate': np.float64(0.1)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0020352200000000003), 'steps': [{'feature': 'network_load', 'value': np.float64(0.7), 'effect': 'multiply prob by 0.580 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.73), 'effect': 'multiply prob by 1.595 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.8), 'effect': 'multiply prob by 0.440 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.1), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.7,0.73,0.8,0.15,0.0020352200000000003,"{'timestamp': 1760866780.236171, 'inputs': {'network_load': np.float64(0.7), 'relay_reputation': np.float64(0.73), 'budget_utilization': np.float64(0.8), 'recent_win_rate': np.float64(0.15)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0020352200000000003), 'steps': [{'feature': 'network_load', 'value': np.float64(0.7), 'effect': 'multiply prob by 0.580 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.73), 'effect': 'multiply prob by 1.595 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.8), 'effect': 'multiply prob by 0.440 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.15), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.7,0.73,0.8,0.2,0.0020352200000000003,"{'timestamp': 1760866780.236196, 'inputs': {'network_load': np.float64(0.7), 'relay_reputation': np.float64(0.73), 'budget_utilization': np.float64(0.8), 'recent_win_rate': np.float64(0.2)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0020352200000000003), 'steps': [{'feature': 'network_load', 'value': np.float64(0.7), 'effect': 'multiply prob by 0.580 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.73), 'effect': 'multiply prob by 1.595 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.8), 'effect': 'multiply prob by 0.440 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.2), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.7,0.73,0.8,0.25,0.0020352200000000003,"{'timestamp': 1760866780.2362216, 'inputs': {'network_load': np.float64(0.7), 'relay_reputation': np.float64(0.73), 'budget_utilization': np.float64(0.8), 'recent_win_rate': np.float64(0.25)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0020352200000000003), 'steps': [{'feature': 'network_load', 'value': np.float64(0.7), 'effect': 'multiply prob by 0.580 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.73), 'effect': 'multiply prob by 1.595 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.8), 'effect': 'multiply prob by 0.440 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.25), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.7,0.73,0.8,0.3,0.0020352200000000003,"{'timestamp': 1760866780.2362485, 'inputs': {'network_load': np.float64(0.7), 'relay_reputation': np.float64(0.73), 'budget_utilization': np.float64(0.8), 'recent_win_rate': np.float64(0.3)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0020352200000000003), 'steps': [{'feature': 'network_load', 'value': np.float64(0.7), 'effect': 'multiply prob by 0.580 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.73), 'effect': 'multiply prob by 1.595 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.8), 'effect': 'multiply prob by 0.440 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.3), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.7,0.84,0.05,0.0,0.0098507199014928,"{'timestamp': 1760866780.2362766, 'inputs': {'network_load': np.float64(0.7), 'relay_reputation': np.float64(0.84), 'budget_utilization': np.float64(0.05), 'recent_win_rate': 1e-09}, 'base_prob': 0.01, 'final_prob': np.float64(0.0098507199014928), 'steps': [{'feature': 'network_load', 'value': np.float64(0.7), 'effect': 'multiply prob by 0.580 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.84), 'effect': 'multiply prob by 1.760 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.05), 'effect': 'multiply prob by 0.965 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': 1e-09, 'effect': 'multiply prob by 1.000 (higher recent wins -> lower prob)'}]}"
0.7,0.84,0.05,0.05,0.00492536,"{'timestamp': 1760866780.2363043, 'inputs': {'network_load': np.float64(0.7), 'relay_reputation': np.float64(0.84), 'budget_utilization': np.float64(0.05), 'recent_win_rate': np.float64(0.05)}, 'base_prob': 0.01, 'final_prob': np.float64(0.00492536), 'steps': [{'feature': 'network_load', 'value': np.float64(0.7), 'effect': 'multiply prob by 0.580 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.84), 'effect': 'multiply prob by 1.760 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.05), 'effect': 'multiply prob by 0.965 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.05), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.7,0.84,0.05,0.1,0.00492536,"{'timestamp': 1760866780.2363312, 'inputs': {'network_load': np.float64(0.7), 'relay_reputation': np.float64(0.84), 'budget_utilization': np.float64(0.05), 'recent_win_rate': np.float64(0.1)}, 'base_prob': 0.01, 'final_prob': np.float64(0.00492536), 'steps': [{'feature': 'network_load', 'value': np.float64(0.7), 'effect': 'multiply prob by 0.580 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.84), 'effect': 'multiply prob by 1.760 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.05), 'effect': 'multiply prob by 0.965 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.1), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.7,0.84,0.05,0.15,0.00492536,"{'timestamp': 1760866780.236357, 'inputs': {'network_load': np.float64(0.7), 'relay_reputation': np.float64(0.84), 'budget_utilization': np.float64(0.05), 'recent_win_rate': np.float64(0.15)}, 'base_prob': 0.01, 'final_prob': np.float64(0.00492536), 'steps': [{'feature': 'network_load', 'value': np.float64(0.7), 'effect': 'multiply prob by 0.580 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.84), 'effect': 'multiply prob by 1.760 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.05), 'effect': 'multiply prob by 0.965 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.15), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.7,0.84,0.05,0.2,0.00492536,"{'timestamp': 1760866780.236382, 'inputs': {'network_load': np.float64(0.7), 'relay_reputation': np.float64(0.84), 'budget_utilization': np.float64(0.05), 'recent_win_rate': np.float64(0.2)}, 'base_prob': 0.01, 'final_prob': np.float64(0.00492536), 'steps': [{'feature': 'network_load', 'value': np.float64(0.7), 'effect': 'multiply prob by 0.580 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.84), 'effect': 'multiply prob by 1.760 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.05), 'effect': 'multiply prob by 0.965 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.2), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.7,0.84,0.05,0.25,0.00492536,"{'timestamp': 1760866780.236411, 'inputs': {'network_load': np.float64(0.7), 'relay_reputation': np.float64(0.84), 'budget_utilization': np.float64(0.05), 'recent_win_rate': np.float64(0.25)}, 'base_prob': 0.01, 'final_prob': np.float64(0.00492536), 'steps': [{'feature': 'network_load', 'value': np.float64(0.7), 'effect': 'multiply prob by 0.580 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.84), 'effect': 'multiply prob by 1.760 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.05), 'effect': 'multiply prob by 0.965 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.25), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.7,0.84,0.05,0.3,0.00492536,"{'timestamp': 1760866780.2364936, 'inputs': {'network_load': np.float64(0.7), 'relay_reputation': np.float64(0.84), 'budget_utilization': np.float64(0.05), 'recent_win_rate': np.float64(0.3)}, 'base_prob': 0.01, 'final_prob': np.float64(0.00492536), 'steps': [{'feature': 'network_load', 'value': np.float64(0.7), 'effect': 'multiply prob by 0.580 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.84), 'effect': 'multiply prob by 1.760 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.05), 'effect': 'multiply prob by 0.965 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.3), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.7,0.84,0.16,0.0,0.00906470390935296,"{'timestamp': 1760866780.2365243, 'inputs': {'network_load': np.float64(0.7), 'relay_reputation': np.float64(0.84), 'budget_utilization': np.float64(0.16), 'recent_win_rate': 1e-09}, 'base_prob': 0.01, 'final_prob': np.float64(0.00906470390935296), 'steps': [{'feature': 'network_load', 'value': np.float64(0.7), 'effect': 'multiply prob by 0.580 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.84), 'effect': 'multiply prob by 1.760 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.16), 'effect': 'multiply prob by 0.888 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': 1e-09, 'effect': 'multiply prob by 1.000 (higher recent wins -> lower prob)'}]}"
0.7,0.84,0.16,0.05,0.004532352,"{'timestamp': 1760866780.2365496, 'inputs': {'network_load': np.float64(0.7), 'relay_reputation': np.float64(0.84), 'budget_utilization': np.float64(0.16), 'recent_win_rate': np.float64(0.05)}, 'base_prob': 0.01, 'final_prob': np.float64(0.004532352), 'steps': [{'feature': 'network_load', 'value': np.float64(0.7), 'effect': 'multiply prob by 0.580 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.84), 'effect': 'multiply prob by 1.760 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.16), 'effect': 'multiply prob by 0.888 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.05), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.7,0.84,0.16,0.1,0.004532352,"{'timestamp': 1760866780.236578, 'inputs': {'network_load': np.float64(0.7), 'relay_reputation': np.float64(0.84), 'budget_utilization': np.float64(0.16), 'recent_win_rate': np.float64(0.1)}, 'base_prob': 0.01, 'final_prob': np.float64(0.004532352), 'steps': [{'feature': 'network_load', 'value': np.float64(0.7), 'effect': 'multiply prob by 0.580 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.84), 'effect': 'multiply prob by 1.760 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.16), 'effect': 'multiply prob by 0.888 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.1), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.7,0.84,0.16,0.15,0.004532352,"{'timestamp': 1760866780.236605, 'inputs': {'network_load': np.float64(0.7), 'relay_reputation': np.float64(0.84), 'budget_utilization': np.float64(0.16), 'recent_win_rate': np.float64(0.15)}, 'base_prob': 0.01, 'final_prob': np.float64(0.004532352), 'steps': [{'feature': 'network_load', 'value': np.float64(0.7), 'effect': 'multiply prob by 0.580 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.84), 'effect': 'multiply prob by 1.760 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.16), 'effect': 'multiply prob by 0.888 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.15), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.7,0.84,0.16,0.2,0.004532352,"{'timestamp': 1760866780.23663, 'inputs': {'network_load': np.float64(0.7), 'relay_reputation': np.float64(0.84), 'budget_utilization': np.float64(0.16), 'recent_win_rate': np.float64(0.2)}, 'base_prob': 0.01, 'final_prob': np.float64(0.004532352), 'steps': [{'feature': 'network_load', 'value': np.float64(0.7), 'effect': 'multiply prob by 0.580 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.84), 'effect': 'multiply prob by 1.760 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.16), 'effect': 'multiply prob by 0.888 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.2), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.7,0.84,0.16,0.25,0.004532352,"{'timestamp': 1760866780.236655, 'inputs': {'network_load': np.float64(0.7), 'relay_reputation': np.float64(0.84), 'budget_utilization': np.float64(0.16), 'recent_win_rate': np.float64(0.25)}, 'base_prob': 0.01, 'final_prob': np.float64(0.004532352), 'steps': [{'feature': 'network_load', 'value': np.float64(0.7), 'effect': 'multiply prob by 0.580 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.84), 'effect': 'multiply prob by 1.760 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.16), 'effect': 'multiply prob by 0.888 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.25), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.7,0.84,0.16,0.3,0.004532352,"{'timestamp': 1760866780.2366803, 'inputs': {'network_load': np.float64(0.7), 'relay_reputation': np.float64(0.84), 'budget_utilization': np.float64(0.16), 'recent_win_rate': np.float64(0.3)}, 'base_prob': 0.01, 'final_prob': np.float64(0.004532352), 'steps': [{'feature': 'network_load', 'value': np.float64(0.7), 'effect': 'multiply prob by 0.580 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.84), 'effect': 'multiply prob by 1.760 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.16), 'effect': 'multiply prob by 0.888 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.3), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.7,0.84,0.26,0.0,0.00835014391649856,"{'timestamp': 1760866780.2367094, 'inputs': {'network_load': np.float64(0.7), 'relay_reputation': np.float64(0.84), 'budget_utilization': np.float64(0.26), 'recent_win_rate': 1e-09}, 'base_prob': 0.01, 'final_prob': np.float64(0.00835014391649856), 'steps': [{'feature': 'network_load', 'value': np.float64(0.7), 'effect': 'multiply prob by 0.580 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.84), 'effect': 'multiply prob by 1.760 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.26), 'effect': 'multiply prob by 0.818 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': 1e-09, 'effect': 'multiply prob by 1.000 (higher recent wins -> lower prob)'}]}"
0.7,0.84,0.26,0.05,0.004175072,"{'timestamp': 1760866780.2367365, 'inputs': {'network_load': np.float64(0.7), 'relay_reputation': np.float64(0.84), 'budget_utilization': np.float64(0.26), 'recent_win_rate': np.float64(0.05)}, 'base_prob': 0.01, 'final_prob': np.float64(0.004175072), 'steps': [{'feature': 'network_load', 'value': np.float64(0.7), 'effect': 'multiply prob by 0.580 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.84), 'effect': 'multiply prob by 1.760 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.26), 'effect': 'multiply prob by 0.818 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.05), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.7,0.84,0.26,0.1,0.004175072,"{'timestamp': 1760866780.2367618, 'inputs': {'network_load': np.float64(0.7), 'relay_reputation': np.float64(0.84), 'budget_utilization': np.float64(0.26), 'recent_win_rate': np.float64(0.1)}, 'base_prob': 0.01, 'final_prob': np.float64(0.004175072), 'steps': [{'feature': 'network_load', 'value': np.float64(0.7), 'effect': 'multiply prob by 0.580 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.84), 'effect': 'multiply prob by 1.760 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.26), 'effect': 'multiply prob by 0.818 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.1), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.7,0.84,0.26,0.15,0.004175072,"{'timestamp': 1760866780.236789, 'inputs': {'network_load': np.float64(0.7), 'relay_reputation': np.float64(0.84), 'budget_utilization': np.float64(0.26), 'recent_win_rate': np.float64(0.15)}, 'base_prob': 0.01, 'final_prob': np.float64(0.004175072), 'steps': [{'feature': 'network_load', 'value': np.float64(0.7), 'effect': 'multiply prob by 0.580 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.84), 'effect': 'multiply prob by 1.760 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.26), 'effect': 'multiply prob by 0.818 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.15), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.7,0.84,0.26,0.2,0.004175072,"{'timestamp': 1760866780.236816, 'inputs': {'network_load': np.float64(0.7), 'relay_reputation': np.float64(0.84), 'budget_utilization': np.float64(0.26), 'recent_win_rate': np.float64(0.2)}, 'base_prob': 0.01, 'final_prob': np.float64(0.004175072), 'steps': [{'feature': 'network_load', 'value': np.float64(0.7), 'effect': 'multiply prob by 0.580 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.84), 'effect': 'multiply prob by 1.760 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.26), 'effect': 'multiply prob by 0.818 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.2), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.7,0.84,0.26,0.25,0.004175072,"{'timestamp': 1760866780.2368412, 'inputs': {'network_load': np.float64(0.7), 'relay_reputation': np.float64(0.84), 'budget_utilization': np.float64(0.26), 'recent_win_rate': np.float64(0.25)}, 'base_prob': 0.01, 'final_prob': np.float64(0.004175072), 'steps': [{'feature': 'network_load', 'value': np.float64(0.7), 'effect': 'multiply prob by 0.580 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.84), 'effect': 'multiply prob by 1.760 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.26), 'effect': 'multiply prob by 0.818 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.25), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.7,0.84,0.26,0.3,0.004175072,"{'timestamp': 1760866780.2368665, 'inputs': {'network_load': np.float64(0.7), 'relay_reputation': np.float64(0.84), 'budget_utilization': np.float64(0.26), 'recent_win_rate': np.float64(0.3)}, 'base_prob': 0.01, 'final_prob': np.float64(0.004175072), 'steps': [{'feature': 'network_load', 'value': np.float64(0.7), 'effect': 'multiply prob by 0.580 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.84), 'effect': 'multiply prob by 1.760 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.26), 'effect': 'multiply prob by 0.818 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.3), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.7,0.84,0.37,0.0,0.007564127924358719,"{'timestamp': 1760866780.2368953, 'inputs': {'network_load': np.float64(0.7), 'relay_reputation': np.float64(0.84), 'budget_utilization': np.float64(0.37), 'recent_win_rate': 1e-09}, 'base_prob': 0.01, 'final_prob': np.float64(0.007564127924358719), 'steps': [{'feature': 'network_load', 'value': np.float64(0.7), 'effect': 'multiply prob by 0.580 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.84), 'effect': 'multiply prob by 1.760 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.37), 'effect': 'multiply prob by 0.741 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': 1e-09, 'effect': 'multiply prob by 1.000 (higher recent wins -> lower prob)'}]}"
0.7,0.84,0.37,0.05,0.003782064,"{'timestamp': 1760866780.2369204, 'inputs': {'network_load': np.float64(0.7), 'relay_reputation': np.float64(0.84), 'budget_utilization': np.float64(0.37), 'recent_win_rate': np.float64(0.05)}, 'base_prob': 0.01, 'final_prob': np.float64(0.003782064), 'steps': [{'feature': 'network_load', 'value': np.float64(0.7), 'effect': 'multiply prob by 0.580 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.84), 'effect': 'multiply prob by 1.760 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.37), 'effect': 'multiply prob by 0.741 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.05), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.7,0.84,0.37,0.1,0.003782064,"{'timestamp': 1760866780.2369473, 'inputs': {'network_load': np.float64(0.7), 'relay_reputation': np.float64(0.84), 'budget_utilization': np.float64(0.37), 'recent_win_rate': np.float64(0.1)}, 'base_prob': 0.01, 'final_prob': np.float64(0.003782064), 'steps': [{'feature': 'network_load', 'value': np.float64(0.7), 'effect': 'multiply prob by 0.580 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.84), 'effect': 'multiply prob by 1.760 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.37), 'effect': 'multiply prob by 0.741 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.1), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.7,0.84,0.37,0.15,0.003782064,"{'timestamp': 1760866780.2369726, 'inputs': {'network_load': np.float64(0.7), 'relay_reputation': np.float64(0.84), 'budget_utilization': np.float64(0.37), 'recent_win_rate': np.float64(0.15)}, 'base_prob': 0.01, 'final_prob': np.float64(0.003782064), 'steps': [{'feature': 'network_load', 'value': np.float64(0.7), 'effect': 'multiply prob by 0.580 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.84), 'effect': 'multiply prob by 1.760 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.37), 'effect': 'multiply prob by 0.741 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.15), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.7,0.84,0.37,0.2,0.003782064,"{'timestamp': 1760866780.2370014, 'inputs': {'network_load': np.float64(0.7), 'relay_reputation': np.float64(0.84), 'budget_utilization': np.float64(0.37), 'recent_win_rate': np.float64(0.2)}, 'base_prob': 0.01, 'final_prob': np.float64(0.003782064), 'steps': [{'feature': 'network_load', 'value': np.float64(0.7), 'effect': 'multiply prob by 0.580 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.84), 'effect': 'multiply prob by 1.760 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.37), 'effect': 'multiply prob by 0.741 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.2), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.7,0.84,0.37,0.25,0.003782064,"{'timestamp': 1760866780.2370307, 'inputs': {'network_load': np.float64(0.7), 'relay_reputation': np.float64(0.84), 'budget_utilization': np.float64(0.37), 'recent_win_rate': np.float64(0.25)}, 'base_prob': 0.01, 'final_prob': np.float64(0.003782064), 'steps': [{'feature': 'network_load', 'value': np.float64(0.7), 'effect': 'multiply prob by 0.580 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.84), 'effect': 'multiply prob by 1.760 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.37), 'effect': 'multiply prob by 0.741 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.25), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.7,0.84,0.37,0.3,0.003782064,"{'timestamp': 1760866780.2370698, 'inputs': {'network_load': np.float64(0.7), 'relay_reputation': np.float64(0.84), 'budget_utilization': np.float64(0.37), 'recent_win_rate': np.float64(0.3)}, 'base_prob': 0.01, 'final_prob': np.float64(0.003782064), 'steps': [{'feature': 'network_load', 'value': np.float64(0.7), 'effect': 'multiply prob by 0.580 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.84), 'effect': 'multiply prob by 1.760 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.37), 'effect': 'multiply prob by 0.741 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.3), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.7,0.84,0.48,0.0,0.00677811193221888,"{'timestamp': 1760866780.237107, 'inputs': {'network_load': np.float64(0.7), 'relay_reputation': np.float64(0.84), 'budget_utilization': np.float64(0.48), 'recent_win_rate': 1e-09}, 'base_prob': 0.01, 'final_prob': np.float64(0.00677811193221888), 'steps': [{'feature': 'network_load', 'value': np.float64(0.7), 'effect': 'multiply prob by 0.580 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.84), 'effect': 'multiply prob by 1.760 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.48), 'effect': 'multiply prob by 0.664 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': 1e-09, 'effect': 'multiply prob by 1.000 (higher recent wins -> lower prob)'}]}"
0.7,0.84,0.48,0.05,0.003389056,"{'timestamp': 1760866780.2371583, 'inputs': {'network_load': np.float64(0.7), 'relay_reputation': np.float64(0.84), 'budget_utilization': np.float64(0.48), 'recent_win_rate': np.float64(0.05)}, 'base_prob': 0.01, 'final_prob': np.float64(0.003389056), 'steps': [{'feature': 'network_load', 'value': np.float64(0.7), 'effect': 'multiply prob by 0.580 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.84), 'effect': 'multiply prob by 1.760 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.48), 'effect': 'multiply prob by 0.664 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.05), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.7,0.84,0.48,0.1,0.003389056,"{'timestamp': 1760866780.2372067, 'inputs': {'network_load': np.float64(0.7), 'relay_reputation': np.float64(0.84), 'budget_utilization': np.float64(0.48), 'recent_win_rate': np.float64(0.1)}, 'base_prob': 0.01, 'final_prob': np.float64(0.003389056), 'steps': [{'feature': 'network_load', 'value': np.float64(0.7), 'effect': 'multiply prob by 0.580 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.84), 'effect': 'multiply prob by 1.760 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.48), 'effect': 'multiply prob by 0.664 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.1), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.7,0.84,0.48,0.15,0.003389056,"{'timestamp': 1760866780.2372503, 'inputs': {'network_load': np.float64(0.7), 'relay_reputation': np.float64(0.84), 'budget_utilization': np.float64(0.48), 'recent_win_rate': np.float64(0.15)}, 'base_prob': 0.01, 'final_prob': np.float64(0.003389056), 'steps': [{'feature': 'network_load', 'value': np.float64(0.7), 'effect': 'multiply prob by 0.580 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.84), 'effect': 'multiply prob by 1.760 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.48), 'effect': 'multiply prob by 0.664 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.15), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.7,0.84,0.48,0.2,0.003389056,"{'timestamp': 1760866780.2373316, 'inputs': {'network_load': np.float64(0.7), 'relay_reputation': np.float64(0.84), 'budget_utilization': np.float64(0.48), 'recent_win_rate': np.float64(0.2)}, 'base_prob': 0.01, 'final_prob': np.float64(0.003389056), 'steps': [{'feature': 'network_load', 'value': np.float64(0.7), 'effect': 'multiply prob by 0.580 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.84), 'effect': 'multiply prob by 1.760 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.48), 'effect': 'multiply prob by 0.664 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.2), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.7,0.84,0.48,0.25,0.003389056,"{'timestamp': 1760866780.23738, 'inputs': {'network_load': np.float64(0.7), 'relay_reputation': np.float64(0.84), 'budget_utilization': np.float64(0.48), 'recent_win_rate': np.float64(0.25)}, 'base_prob': 0.01, 'final_prob': np.float64(0.003389056), 'steps': [{'feature': 'network_load', 'value': np.float64(0.7), 'effect': 'multiply prob by 0.580 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.84), 'effect': 'multiply prob by 1.760 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.48), 'effect': 'multiply prob by 0.664 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.25), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.7,0.84,0.48,0.3,0.003389056,"{'timestamp': 1760866780.2374196, 'inputs': {'network_load': np.float64(0.7), 'relay_reputation': np.float64(0.84), 'budget_utilization': np.float64(0.48), 'recent_win_rate': np.float64(0.3)}, 'base_prob': 0.01, 'final_prob': np.float64(0.003389056), 'steps': [{'feature': 'network_load', 'value': np.float64(0.7), 'effect': 'multiply prob by 0.580 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.84), 'effect': 'multiply prob by 1.760 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.48), 'effect': 'multiply prob by 0.664 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.3), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.7,0.84,0.59,0.0,0.005992095940079039,"{'timestamp': 1760866780.2374558, 'inputs': {'network_load': np.float64(0.7), 'relay_reputation': np.float64(0.84), 'budget_utilization': np.float64(0.59), 'recent_win_rate': 1e-09}, 'base_prob': 0.01, 'final_prob': np.float64(0.005992095940079039), 'steps': [{'feature': 'network_load', 'value': np.float64(0.7), 'effect': 'multiply prob by 0.580 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.84), 'effect': 'multiply prob by 1.760 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.59), 'effect': 'multiply prob by 0.587 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': 1e-09, 'effect': 'multiply prob by 1.000 (higher recent wins -> lower prob)'}]}"
0.7,0.84,0.59,0.05,0.002996048,"{'timestamp': 1760866780.2375455, 'inputs': {'network_load': np.float64(0.7), 'relay_reputation': np.float64(0.84), 'budget_utilization': np.float64(0.59), 'recent_win_rate': np.float64(0.05)}, 'base_prob': 0.01, 'final_prob': np.float64(0.002996048), 'steps': [{'feature': 'network_load', 'value': np.float64(0.7), 'effect': 'multiply prob by 0.580 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.84), 'effect': 'multiply prob by 1.760 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.59), 'effect': 'multiply prob by 0.587 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.05), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.7,0.84,0.59,0.1,0.002996048,"{'timestamp': 1760866780.2375872, 'inputs': {'network_load': np.float64(0.7), 'relay_reputation': np.float64(0.84), 'budget_utilization': np.float64(0.59), 'recent_win_rate': np.float64(0.1)}, 'base_prob': 0.01, 'final_prob': np.float64(0.002996048), 'steps': [{'feature': 'network_load', 'value': np.float64(0.7), 'effect': 'multiply prob by 0.580 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.84), 'effect': 'multiply prob by 1.760 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.59), 'effect': 'multiply prob by 0.587 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.1), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.7,0.84,0.59,0.15,0.002996048,"{'timestamp': 1760866780.237613, 'inputs': {'network_load': np.float64(0.7), 'relay_reputation': np.float64(0.84), 'budget_utilization': np.float64(0.59), 'recent_win_rate': np.float64(0.15)}, 'base_prob': 0.01, 'final_prob': np.float64(0.002996048), 'steps': [{'feature': 'network_load', 'value': np.float64(0.7), 'effect': 'multiply prob by 0.580 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.84), 'effect': 'multiply prob by 1.760 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.59), 'effect': 'multiply prob by 0.587 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.15), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.7,0.84,0.59,0.2,0.002996048,"{'timestamp': 1760866780.2376385, 'inputs': {'network_load': np.float64(0.7), 'relay_reputation': np.float64(0.84), 'budget_utilization': np.float64(0.59), 'recent_win_rate': np.float64(0.2)}, 'base_prob': 0.01, 'final_prob': np.float64(0.002996048), 'steps': [{'feature': 'network_load', 'value': np.float64(0.7), 'effect': 'multiply prob by 0.580 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.84), 'effect': 'multiply prob by 1.760 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.59), 'effect': 'multiply prob by 0.587 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.2), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.7,0.84,0.59,0.25,0.002996048,"{'timestamp': 1760866780.2376635, 'inputs': {'network_load': np.float64(0.7), 'relay_reputation': np.float64(0.84), 'budget_utilization': np.float64(0.59), 'recent_win_rate': np.float64(0.25)}, 'base_prob': 0.01, 'final_prob': np.float64(0.002996048), 'steps': [{'feature': 'network_load', 'value': np.float64(0.7), 'effect': 'multiply prob by 0.580 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.84), 'effect': 'multiply prob by 1.760 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.59), 'effect': 'multiply prob by 0.587 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.25), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.7,0.84,0.59,0.3,0.002996048,"{'timestamp': 1760866780.2376938, 'inputs': {'network_load': np.float64(0.7), 'relay_reputation': np.float64(0.84), 'budget_utilization': np.float64(0.59), 'recent_win_rate': np.float64(0.3)}, 'base_prob': 0.01, 'final_prob': np.float64(0.002996048), 'steps': [{'feature': 'network_load', 'value': np.float64(0.7), 'effect': 'multiply prob by 0.580 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.84), 'effect': 'multiply prob by 1.760 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.59), 'effect': 'multiply prob by 0.587 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.3), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.7,0.84,0.69,0.0,0.005277535947224641,"{'timestamp': 1760866780.23773, 'inputs': {'network_load': np.float64(0.7), 'relay_reputation': np.float64(0.84), 'budget_utilization': np.float64(0.69), 'recent_win_rate': 1e-09}, 'base_prob': 0.01, 'final_prob': np.float64(0.005277535947224641), 'steps': [{'feature': 'network_load', 'value': np.float64(0.7), 'effect': 'multiply prob by 0.580 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.84), 'effect': 'multiply prob by 1.760 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.69), 'effect': 'multiply prob by 0.517 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': 1e-09, 'effect': 'multiply prob by 1.000 (higher recent wins -> lower prob)'}]}"
0.7,0.84,0.69,0.05,0.0026387680000000005,"{'timestamp': 1760866780.2377634, 'inputs': {'network_load': np.float64(0.7), 'relay_reputation': np.float64(0.84), 'budget_utilization': np.float64(0.69), 'recent_win_rate': np.float64(0.05)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0026387680000000005), 'steps': [{'feature': 'network_load', 'value': np.float64(0.7), 'effect': 'multiply prob by 0.580 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.84), 'effect': 'multiply prob by 1.760 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.69), 'effect': 'multiply prob by 0.517 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.05), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.7,0.84,0.69,0.1,0.0026387680000000005,"{'timestamp': 1760866780.2377892, 'inputs': {'network_load': np.float64(0.7), 'relay_reputation': np.float64(0.84), 'budget_utilization': np.float64(0.69), 'recent_win_rate': np.float64(0.1)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0026387680000000005), 'steps': [{'feature': 'network_load', 'value': np.float64(0.7), 'effect': 'multiply prob by 0.580 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.84), 'effect': 'multiply prob by 1.760 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.69), 'effect': 'multiply prob by 0.517 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.1), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.7,0.84,0.69,0.15,0.0026387680000000005,"{'timestamp': 1760866780.2378142, 'inputs': {'network_load': np.float64(0.7), 'relay_reputation': np.float64(0.84), 'budget_utilization': np.float64(0.69), 'recent_win_rate': np.float64(0.15)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0026387680000000005), 'steps': [{'feature': 'network_load', 'value': np.float64(0.7), 'effect': 'multiply prob by 0.580 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.84), 'effect': 'multiply prob by 1.760 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.69), 'effect': 'multiply prob by 0.517 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.15), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.7,0.84,0.69,0.2,0.0026387680000000005,"{'timestamp': 1760866780.2378397, 'inputs': {'network_load': np.float64(0.7), 'relay_reputation': np.float64(0.84), 'budget_utilization': np.float64(0.69), 'recent_win_rate': np.float64(0.2)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0026387680000000005), 'steps': [{'feature': 'network_load', 'value': np.float64(0.7), 'effect': 'multiply prob by 0.580 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.84), 'effect': 'multiply prob by 1.760 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.69), 'effect': 'multiply prob by 0.517 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.2), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.7,0.84,0.69,0.25,0.0026387680000000005,"{'timestamp': 1760866780.2381935, 'inputs': {'network_load': np.float64(0.7), 'relay_reputation': np.float64(0.84), 'budget_utilization': np.float64(0.69), 'recent_win_rate': np.float64(0.25)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0026387680000000005), 'steps': [{'feature': 'network_load', 'value': np.float64(0.7), 'effect': 'multiply prob by 0.580 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.84), 'effect': 'multiply prob by 1.760 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.69), 'effect': 'multiply prob by 0.517 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.25), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.7,0.84,0.69,0.3,0.0026387680000000005,"{'timestamp': 1760866780.2382193, 'inputs': {'network_load': np.float64(0.7), 'relay_reputation': np.float64(0.84), 'budget_utilization': np.float64(0.69), 'recent_win_rate': np.float64(0.3)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0026387680000000005), 'steps': [{'feature': 'network_load', 'value': np.float64(0.7), 'effect': 'multiply prob by 0.580 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.84), 'effect': 'multiply prob by 1.760 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.69), 'effect': 'multiply prob by 0.517 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.3), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.7,0.84,0.8,0.0,0.0044915199550848005,"{'timestamp': 1760866780.2382607, 'inputs': {'network_load': np.float64(0.7), 'relay_reputation': np.float64(0.84), 'budget_utilization': np.float64(0.8), 'recent_win_rate': 1e-09}, 'base_prob': 0.01, 'final_prob': np.float64(0.0044915199550848005), 'steps': [{'feature': 'network_load', 'value': np.float64(0.7), 'effect': 'multiply prob by 0.580 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.84), 'effect': 'multiply prob by 1.760 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.8), 'effect': 'multiply prob by 0.440 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': 1e-09, 'effect': 'multiply prob by 1.000 (higher recent wins -> lower prob)'}]}"
0.7,0.84,0.8,0.05,0.0022457600000000003,"{'timestamp': 1760866780.238296, 'inputs': {'network_load': np.float64(0.7), 'relay_reputation': np.float64(0.84), 'budget_utilization': np.float64(0.8), 'recent_win_rate': np.float64(0.05)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0022457600000000003), 'steps': [{'feature': 'network_load', 'value': np.float64(0.7), 'effect': 'multiply prob by 0.580 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.84), 'effect': 'multiply prob by 1.760 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.8), 'effect': 'multiply prob by 0.440 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.05), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.7,0.84,0.8,0.1,0.0022457600000000003,"{'timestamp': 1760866780.2383223, 'inputs': {'network_load': np.float64(0.7), 'relay_reputation': np.float64(0.84), 'budget_utilization': np.float64(0.8), 'recent_win_rate': np.float64(0.1)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0022457600000000003), 'steps': [{'feature': 'network_load', 'value': np.float64(0.7), 'effect': 'multiply prob by 0.580 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.84), 'effect': 'multiply prob by 1.760 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.8), 'effect': 'multiply prob by 0.440 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.1), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.7,0.84,0.8,0.15,0.0022457600000000003,"{'timestamp': 1760866780.238353, 'inputs': {'network_load': np.float64(0.7), 'relay_reputation': np.float64(0.84), 'budget_utilization': np.float64(0.8), 'recent_win_rate': np.float64(0.15)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0022457600000000003), 'steps': [{'feature': 'network_load', 'value': np.float64(0.7), 'effect': 'multiply prob by 0.580 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.84), 'effect': 'multiply prob by 1.760 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.8), 'effect': 'multiply prob by 0.440 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.15), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.7,0.84,0.8,0.2,0.0022457600000000003,"{'timestamp': 1760866780.2383785, 'inputs': {'network_load': np.float64(0.7), 'relay_reputation': np.float64(0.84), 'budget_utilization': np.float64(0.8), 'recent_win_rate': np.float64(0.2)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0022457600000000003), 'steps': [{'feature': 'network_load', 'value': np.float64(0.7), 'effect': 'multiply prob by 0.580 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.84), 'effect': 'multiply prob by 1.760 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.8), 'effect': 'multiply prob by 0.440 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.2), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.7,0.84,0.8,0.25,0.0022457600000000003,"{'timestamp': 1760866780.23841, 'inputs': {'network_load': np.float64(0.7), 'relay_reputation': np.float64(0.84), 'budget_utilization': np.float64(0.8), 'recent_win_rate': np.float64(0.25)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0022457600000000003), 'steps': [{'feature': 'network_load', 'value': np.float64(0.7), 'effect': 'multiply prob by 0.580 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.84), 'effect': 'multiply prob by 1.760 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.8), 'effect': 'multiply prob by 0.440 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.25), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.7,0.84,0.8,0.3,0.0022457600000000003,"{'timestamp': 1760866780.238435, 'inputs': {'network_load': np.float64(0.7), 'relay_reputation': np.float64(0.84), 'budget_utilization': np.float64(0.8), 'recent_win_rate': np.float64(0.3)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0022457600000000003), 'steps': [{'feature': 'network_load', 'value': np.float64(0.7), 'effect': 'multiply prob by 0.580 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.84), 'effect': 'multiply prob by 1.760 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.8), 'effect': 'multiply prob by 0.440 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.3), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.7,0.95,0.05,0.0,0.010774224892257748,"{'timestamp': 1760866780.2384658, 'inputs': {'network_load': np.float64(0.7), 'relay_reputation': np.float64(0.95), 'budget_utilization': np.float64(0.05), 'recent_win_rate': 1e-09}, 'base_prob': 0.01, 'final_prob': np.float64(0.010774224892257748), 'steps': [{'feature': 'network_load', 'value': np.float64(0.7), 'effect': 'multiply prob by 0.580 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.95), 'effect': 'multiply prob by 1.925 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.05), 'effect': 'multiply prob by 0.965 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': 1e-09, 'effect': 'multiply prob by 1.000 (higher recent wins -> lower prob)'}]}"
0.7,0.95,0.05,0.05,0.005387112499999999,"{'timestamp': 1760866780.2384915, 'inputs': {'network_load': np.float64(0.7), 'relay_reputation': np.float64(0.95), 'budget_utilization': np.float64(0.05), 'recent_win_rate': np.float64(0.05)}, 'base_prob': 0.01, 'final_prob': np.float64(0.005387112499999999), 'steps': [{'feature': 'network_load', 'value': np.float64(0.7), 'effect': 'multiply prob by 0.580 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.95), 'effect': 'multiply prob by 1.925 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.05), 'effect': 'multiply prob by 0.965 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.05), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.7,0.95,0.05,0.1,0.005387112499999999,"{'timestamp': 1760866780.2385187, 'inputs': {'network_load': np.float64(0.7), 'relay_reputation': np.float64(0.95), 'budget_utilization': np.float64(0.05), 'recent_win_rate': np.float64(0.1)}, 'base_prob': 0.01, 'final_prob': np.float64(0.005387112499999999), 'steps': [{'feature': 'network_load', 'value': np.float64(0.7), 'effect': 'multiply prob by 0.580 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.95), 'effect': 'multiply prob by 1.925 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.05), 'effect': 'multiply prob by 0.965 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.1), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.7,0.95,0.05,0.15,0.005387112499999999,"{'timestamp': 1760866780.2385461, 'inputs': {'network_load': np.float64(0.7), 'relay_reputation': np.float64(0.95), 'budget_utilization': np.float64(0.05), 'recent_win_rate': np.float64(0.15)}, 'base_prob': 0.01, 'final_prob': np.float64(0.005387112499999999), 'steps': [{'feature': 'network_load', 'value': np.float64(0.7), 'effect': 'multiply prob by 0.580 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.95), 'effect': 'multiply prob by 1.925 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.05), 'effect': 'multiply prob by 0.965 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.15), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.7,0.95,0.05,0.2,0.005387112499999999,"{'timestamp': 1760866780.238572, 'inputs': {'network_load': np.float64(0.7), 'relay_reputation': np.float64(0.95), 'budget_utilization': np.float64(0.05), 'recent_win_rate': np.float64(0.2)}, 'base_prob': 0.01, 'final_prob': np.float64(0.005387112499999999), 'steps': [{'feature': 'network_load', 'value': np.float64(0.7), 'effect': 'multiply prob by 0.580 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.95), 'effect': 'multiply prob by 1.925 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.05), 'effect': 'multiply prob by 0.965 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.2), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.7,0.95,0.05,0.25,0.005387112499999999,"{'timestamp': 1760866780.2385972, 'inputs': {'network_load': np.float64(0.7), 'relay_reputation': np.float64(0.95), 'budget_utilization': np.float64(0.05), 'recent_win_rate': np.float64(0.25)}, 'base_prob': 0.01, 'final_prob': np.float64(0.005387112499999999), 'steps': [{'feature': 'network_load', 'value': np.float64(0.7), 'effect': 'multiply prob by 0.580 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.95), 'effect': 'multiply prob by 1.925 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.05), 'effect': 'multiply prob by 0.965 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.25), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.7,0.95,0.05,0.3,0.005387112499999999,"{'timestamp': 1760866780.2386224, 'inputs': {'network_load': np.float64(0.7), 'relay_reputation': np.float64(0.95), 'budget_utilization': np.float64(0.05), 'recent_win_rate': np.float64(0.3)}, 'base_prob': 0.01, 'final_prob': np.float64(0.005387112499999999), 'steps': [{'feature': 'network_load', 'value': np.float64(0.7), 'effect': 'multiply prob by 0.580 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.95), 'effect': 'multiply prob by 1.925 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.05), 'effect': 'multiply prob by 0.965 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.3), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.7,0.95,0.16,0.0,0.009914519900854799,"{'timestamp': 1760866780.2386513, 'inputs': {'network_load': np.float64(0.7), 'relay_reputation': np.float64(0.95), 'budget_utilization': np.float64(0.16), 'recent_win_rate': 1e-09}, 'base_prob': 0.01, 'final_prob': np.float64(0.009914519900854799), 'steps': [{'feature': 'network_load', 'value': np.float64(0.7), 'effect': 'multiply prob by 0.580 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.95), 'effect': 'multiply prob by 1.925 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.16), 'effect': 'multiply prob by 0.888 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': 1e-09, 'effect': 'multiply prob by 1.000 (higher recent wins -> lower prob)'}]}"
0.7,0.95,0.16,0.05,0.00495726,"{'timestamp': 1760866780.2386787, 'inputs': {'network_load': np.float64(0.7), 'relay_reputation': np.float64(0.95), 'budget_utilization': np.float64(0.16), 'recent_win_rate': np.float64(0.05)}, 'base_prob': 0.01, 'final_prob': np.float64(0.00495726), 'steps': [{'feature': 'network_load', 'value': np.float64(0.7), 'effect': 'multiply prob by 0.580 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.95), 'effect': 'multiply prob by 1.925 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.16), 'effect': 'multiply prob by 0.888 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.05), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.7,0.95,0.16,0.1,0.00495726,"{'timestamp': 1760866780.2387044, 'inputs': {'network_load': np.float64(0.7), 'relay_reputation': np.float64(0.95), 'budget_utilization': np.float64(0.16), 'recent_win_rate': np.float64(0.1)}, 'base_prob': 0.01, 'final_prob': np.float64(0.00495726), 'steps': [{'feature': 'network_load', 'value': np.float64(0.7), 'effect': 'multiply prob by 0.580 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.95), 'effect': 'multiply prob by 1.925 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.16), 'effect': 'multiply prob by 0.888 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.1), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.7,0.95,0.16,0.15,0.00495726,"{'timestamp': 1760866780.2387316, 'inputs': {'network_load': np.float64(0.7), 'relay_reputation': np.float64(0.95), 'budget_utilization': np.float64(0.16), 'recent_win_rate': np.float64(0.15)}, 'base_prob': 0.01, 'final_prob': np.float64(0.00495726), 'steps': [{'feature': 'network_load', 'value': np.float64(0.7), 'effect': 'multiply prob by 0.580 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.95), 'effect': 'multiply prob by 1.925 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.16), 'effect': 'multiply prob by 0.888 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.15), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.7,0.95,0.16,0.2,0.00495726,"{'timestamp': 1760866780.238757, 'inputs': {'network_load': np.float64(0.7), 'relay_reputation': np.float64(0.95), 'budget_utilization': np.float64(0.16), 'recent_win_rate': np.float64(0.2)}, 'base_prob': 0.01, 'final_prob': np.float64(0.00495726), 'steps': [{'feature': 'network_load', 'value': np.float64(0.7), 'effect': 'multiply prob by 0.580 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.95), 'effect': 'multiply prob by 1.925 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.16), 'effect': 'multiply prob by 0.888 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.2), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.7,0.95,0.16,0.25,0.00495726,"{'timestamp': 1760866780.2389069, 'inputs': {'network_load': np.float64(0.7), 'relay_reputation': np.float64(0.95), 'budget_utilization': np.float64(0.16), 'recent_win_rate': np.float64(0.25)}, 'base_prob': 0.01, 'final_prob': np.float64(0.00495726), 'steps': [{'feature': 'network_load', 'value': np.float64(0.7), 'effect': 'multiply prob by 0.580 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.95), 'effect': 'multiply prob by 1.925 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.16), 'effect': 'multiply prob by 0.888 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.25), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.7,0.95,0.16,0.3,0.00495726,"{'timestamp': 1760866780.2389345, 'inputs': {'network_load': np.float64(0.7), 'relay_reputation': np.float64(0.95), 'budget_utilization': np.float64(0.16), 'recent_win_rate': np.float64(0.3)}, 'base_prob': 0.01, 'final_prob': np.float64(0.00495726), 'steps': [{'feature': 'network_load', 'value': np.float64(0.7), 'effect': 'multiply prob by 0.580 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.95), 'effect': 'multiply prob by 1.925 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.16), 'effect': 'multiply prob by 0.888 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.3), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.7,0.95,0.26,0.0,0.0091329699086703,"{'timestamp': 1760866780.2389688, 'inputs': {'network_load': np.float64(0.7), 'relay_reputation': np.float64(0.95), 'budget_utilization': np.float64(0.26), 'recent_win_rate': 1e-09}, 'base_prob': 0.01, 'final_prob': np.float64(0.0091329699086703), 'steps': [{'feature': 'network_load', 'value': np.float64(0.7), 'effect': 'multiply prob by 0.580 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.95), 'effect': 'multiply prob by 1.925 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.26), 'effect': 'multiply prob by 0.818 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': 1e-09, 'effect': 'multiply prob by 1.000 (higher recent wins -> lower prob)'}]}"
0.7,0.95,0.26,0.05,0.004566485,"{'timestamp': 1760866780.2389944, 'inputs': {'network_load': np.float64(0.7), 'relay_reputation': np.float64(0.95), 'budget_utilization': np.float64(0.26), 'recent_win_rate': np.float64(0.05)}, 'base_prob': 0.01, 'final_prob': np.float64(0.004566485), 'steps': [{'feature': 'network_load', 'value': np.float64(0.7), 'effect': 'multiply prob by 0.580 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.95), 'effect': 'multiply prob by 1.925 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.26), 'effect': 'multiply prob by 0.818 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.05), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.7,0.95,0.26,0.1,0.004566485,"{'timestamp': 1760866780.239022, 'inputs': {'network_load': np.float64(0.7), 'relay_reputation': np.float64(0.95), 'budget_utilization': np.float64(0.26), 'recent_win_rate': np.float64(0.1)}, 'base_prob': 0.01, 'final_prob': np.float64(0.004566485), 'steps': [{'feature': 'network_load', 'value': np.float64(0.7), 'effect': 'multiply prob by 0.580 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.95), 'effect': 'multiply prob by 1.925 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.26), 'effect': 'multiply prob by 0.818 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.1), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.7,0.95,0.26,0.15,0.004566485,"{'timestamp': 1760866780.2390494, 'inputs': {'network_load': np.float64(0.7), 'relay_reputation': np.float64(0.95), 'budget_utilization': np.float64(0.26), 'recent_win_rate': np.float64(0.15)}, 'base_prob': 0.01, 'final_prob': np.float64(0.004566485), 'steps': [{'feature': 'network_load', 'value': np.float64(0.7), 'effect': 'multiply prob by 0.580 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.95), 'effect': 'multiply prob by 1.925 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.26), 'effect': 'multiply prob by 0.818 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.15), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.7,0.95,0.26,0.2,0.004566485,"{'timestamp': 1760866780.2390764, 'inputs': {'network_load': np.float64(0.7), 'relay_reputation': np.float64(0.95), 'budget_utilization': np.float64(0.26), 'recent_win_rate': np.float64(0.2)}, 'base_prob': 0.01, 'final_prob': np.float64(0.004566485), 'steps': [{'feature': 'network_load', 'value': np.float64(0.7), 'effect': 'multiply prob by 0.580 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.95), 'effect': 'multiply prob by 1.925 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.26), 'effect': 'multiply prob by 0.818 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.2), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.7,0.95,0.26,0.25,0.004566485,"{'timestamp': 1760866780.2391016, 'inputs': {'network_load': np.float64(0.7), 'relay_reputation': np.float64(0.95), 'budget_utilization': np.float64(0.26), 'recent_win_rate': np.float64(0.25)}, 'base_prob': 0.01, 'final_prob': np.float64(0.004566485), 'steps': [{'feature': 'network_load', 'value': np.float64(0.7), 'effect': 'multiply prob by 0.580 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.95), 'effect': 'multiply prob by 1.925 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.26), 'effect': 'multiply prob by 0.818 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.25), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.7,0.95,0.26,0.3,0.004566485,"{'timestamp': 1760866780.239129, 'inputs': {'network_load': np.float64(0.7), 'relay_reputation': np.float64(0.95), 'budget_utilization': np.float64(0.26), 'recent_win_rate': np.float64(0.3)}, 'base_prob': 0.01, 'final_prob': np.float64(0.004566485), 'steps': [{'feature': 'network_load', 'value': np.float64(0.7), 'effect': 'multiply prob by 0.580 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.95), 'effect': 'multiply prob by 1.925 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.26), 'effect': 'multiply prob by 0.818 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.3), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.7,0.95,0.37,0.0,0.00827326491726735,"{'timestamp': 1760866780.239181, 'inputs': {'network_load': np.float64(0.7), 'relay_reputation': np.float64(0.95), 'budget_utilization': np.float64(0.37), 'recent_win_rate': 1e-09}, 'base_prob': 0.01, 'final_prob': np.float64(0.00827326491726735), 'steps': [{'feature': 'network_load', 'value': np.float64(0.7), 'effect': 'multiply prob by 0.580 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.95), 'effect': 'multiply prob by 1.925 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.37), 'effect': 'multiply prob by 0.741 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': 1e-09, 'effect': 'multiply prob by 1.000 (higher recent wins -> lower prob)'}]}"
0.7,0.95,0.37,0.05,0.0041366325,"{'timestamp': 1760866780.2392323, 'inputs': {'network_load': np.float64(0.7), 'relay_reputation': np.float64(0.95), 'budget_utilization': np.float64(0.37), 'recent_win_rate': np.float64(0.05)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0041366325), 'steps': [{'feature': 'network_load', 'value': np.float64(0.7), 'effect': 'multiply prob by 0.580 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.95), 'effect': 'multiply prob by 1.925 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.37), 'effect': 'multiply prob by 0.741 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.05), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.7,0.95,0.37,0.1,0.0041366325,"{'timestamp': 1760866780.2392755, 'inputs': {'network_load': np.float64(0.7), 'relay_reputation': np.float64(0.95), 'budget_utilization': np.float64(0.37), 'recent_win_rate': np.float64(0.1)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0041366325), 'steps': [{'feature': 'network_load', 'value': np.float64(0.7), 'effect': 'multiply prob by 0.580 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.95), 'effect': 'multiply prob by 1.925 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.37), 'effect': 'multiply prob by 0.741 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.1), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.7,0.95,0.37,0.15,0.0041366325,"{'timestamp': 1760866780.2393732, 'inputs': {'network_load': np.float64(0.7), 'relay_reputation': np.float64(0.95), 'budget_utilization': np.float64(0.37), 'recent_win_rate': np.float64(0.15)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0041366325), 'steps': [{'feature': 'network_load', 'value': np.float64(0.7), 'effect': 'multiply prob by 0.580 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.95), 'effect': 'multiply prob by 1.925 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.37), 'effect': 'multiply prob by 0.741 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.15), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.7,0.95,0.37,0.2,0.0041366325,"{'timestamp': 1760866780.239402, 'inputs': {'network_load': np.float64(0.7), 'relay_reputation': np.float64(0.95), 'budget_utilization': np.float64(0.37), 'recent_win_rate': np.float64(0.2)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0041366325), 'steps': [{'feature': 'network_load', 'value': np.float64(0.7), 'effect': 'multiply prob by 0.580 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.95), 'effect': 'multiply prob by 1.925 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.37), 'effect': 'multiply prob by 0.741 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.2), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.7,0.95,0.37,0.25,0.0041366325,"{'timestamp': 1760866780.2394297, 'inputs': {'network_load': np.float64(0.7), 'relay_reputation': np.float64(0.95), 'budget_utilization': np.float64(0.37), 'recent_win_rate': np.float64(0.25)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0041366325), 'steps': [{'feature': 'network_load', 'value': np.float64(0.7), 'effect': 'multiply prob by 0.580 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.95), 'effect': 'multiply prob by 1.925 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.37), 'effect': 'multiply prob by 0.741 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.25), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.7,0.95,0.37,0.3,0.0041366325,"{'timestamp': 1760866780.2394783, 'inputs': {'network_load': np.float64(0.7), 'relay_reputation': np.float64(0.95), 'budget_utilization': np.float64(0.37), 'recent_win_rate': np.float64(0.3)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0041366325), 'steps': [{'feature': 'network_load', 'value': np.float64(0.7), 'effect': 'multiply prob by 0.580 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.95), 'effect': 'multiply prob by 1.925 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.37), 'effect': 'multiply prob by 0.741 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.3), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.7,0.95,0.48,0.0,0.0074135599258644,"{'timestamp': 1760866780.239529, 'inputs': {'network_load': np.float64(0.7), 'relay_reputation': np.float64(0.95), 'budget_utilization': np.float64(0.48), 'recent_win_rate': 1e-09}, 'base_prob': 0.01, 'final_prob': np.float64(0.0074135599258644), 'steps': [{'feature': 'network_load', 'value': np.float64(0.7), 'effect': 'multiply prob by 0.580 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.95), 'effect': 'multiply prob by 1.925 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.48), 'effect': 'multiply prob by 0.664 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': 1e-09, 'effect': 'multiply prob by 1.000 (higher recent wins -> lower prob)'}]}"
0.7,0.95,0.48,0.05,0.0037067800000000002,"{'timestamp': 1760866780.2395551, 'inputs': {'network_load': np.float64(0.7), 'relay_reputation': np.float64(0.95), 'budget_utilization': np.float64(0.48), 'recent_win_rate': np.float64(0.05)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0037067800000000002), 'steps': [{'feature': 'network_load', 'value': np.float64(0.7), 'effect': 'multiply prob by 0.580 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.95), 'effect': 'multiply prob by 1.925 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.48), 'effect': 'multiply prob by 0.664 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.05), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.7,0.95,0.48,0.1,0.0037067800000000002,"{'timestamp': 1760866780.2395873, 'inputs': {'network_load': np.float64(0.7), 'relay_reputation': np.float64(0.95), 'budget_utilization': np.float64(0.48), 'recent_win_rate': np.float64(0.1)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0037067800000000002), 'steps': [{'feature': 'network_load', 'value': np.float64(0.7), 'effect': 'multiply prob by 0.580 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.95), 'effect': 'multiply prob by 1.925 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.48), 'effect': 'multiply prob by 0.664 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.1), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.7,0.95,0.48,0.15,0.0037067800000000002,"{'timestamp': 1760866780.2396867, 'inputs': {'network_load': np.float64(0.7), 'relay_reputation': np.float64(0.95), 'budget_utilization': np.float64(0.48), 'recent_win_rate': np.float64(0.15)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0037067800000000002), 'steps': [{'feature': 'network_load', 'value': np.float64(0.7), 'effect': 'multiply prob by 0.580 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.95), 'effect': 'multiply prob by 1.925 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.48), 'effect': 'multiply prob by 0.664 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.15), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.7,0.95,0.48,0.2,0.0037067800000000002,"{'timestamp': 1760866780.2397656, 'inputs': {'network_load': np.float64(0.7), 'relay_reputation': np.float64(0.95), 'budget_utilization': np.float64(0.48), 'recent_win_rate': np.float64(0.2)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0037067800000000002), 'steps': [{'feature': 'network_load', 'value': np.float64(0.7), 'effect': 'multiply prob by 0.580 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.95), 'effect': 'multiply prob by 1.925 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.48), 'effect': 'multiply prob by 0.664 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.2), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.7,0.95,0.48,0.25,0.0037067800000000002,"{'timestamp': 1760866780.2397985, 'inputs': {'network_load': np.float64(0.7), 'relay_reputation': np.float64(0.95), 'budget_utilization': np.float64(0.48), 'recent_win_rate': np.float64(0.25)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0037067800000000002), 'steps': [{'feature': 'network_load', 'value': np.float64(0.7), 'effect': 'multiply prob by 0.580 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.95), 'effect': 'multiply prob by 1.925 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.48), 'effect': 'multiply prob by 0.664 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.25), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.7,0.95,0.48,0.3,0.0037067800000000002,"{'timestamp': 1760866780.2398674, 'inputs': {'network_load': np.float64(0.7), 'relay_reputation': np.float64(0.95), 'budget_utilization': np.float64(0.48), 'recent_win_rate': np.float64(0.3)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0037067800000000002), 'steps': [{'feature': 'network_load', 'value': np.float64(0.7), 'effect': 'multiply prob by 0.580 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.95), 'effect': 'multiply prob by 1.925 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.48), 'effect': 'multiply prob by 0.664 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.3), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.7,0.95,0.59,0.0,0.006553854934461449,"{'timestamp': 1760866780.239921, 'inputs': {'network_load': np.float64(0.7), 'relay_reputation': np.float64(0.95), 'budget_utilization': np.float64(0.59), 'recent_win_rate': 1e-09}, 'base_prob': 0.01, 'final_prob': np.float64(0.006553854934461449), 'steps': [{'feature': 'network_load', 'value': np.float64(0.7), 'effect': 'multiply prob by 0.580 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.95), 'effect': 'multiply prob by 1.925 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.59), 'effect': 'multiply prob by 0.587 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': 1e-09, 'effect': 'multiply prob by 1.000 (higher recent wins -> lower prob)'}]}"
0.7,0.95,0.59,0.05,0.0032769274999999995,"{'timestamp': 1760866780.2399573, 'inputs': {'network_load': np.float64(0.7), 'relay_reputation': np.float64(0.95), 'budget_utilization': np.float64(0.59), 'recent_win_rate': np.float64(0.05)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0032769274999999995), 'steps': [{'feature': 'network_load', 'value': np.float64(0.7), 'effect': 'multiply prob by 0.580 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.95), 'effect': 'multiply prob by 1.925 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.59), 'effect': 'multiply prob by 0.587 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.05), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.7,0.95,0.59,0.1,0.0032769274999999995,"{'timestamp': 1760866780.2399979, 'inputs': {'network_load': np.float64(0.7), 'relay_reputation': np.float64(0.95), 'budget_utilization': np.float64(0.59), 'recent_win_rate': np.float64(0.1)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0032769274999999995), 'steps': [{'feature': 'network_load', 'value': np.float64(0.7), 'effect': 'multiply prob by 0.580 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.95), 'effect': 'multiply prob by 1.925 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.59), 'effect': 'multiply prob by 0.587 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.1), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.7,0.95,0.59,0.15,0.0032769274999999995,"{'timestamp': 1760866780.2400358, 'inputs': {'network_load': np.float64(0.7), 'relay_reputation': np.float64(0.95), 'budget_utilization': np.float64(0.59), 'recent_win_rate': np.float64(0.15)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0032769274999999995), 'steps': [{'feature': 'network_load', 'value': np.float64(0.7), 'effect': 'multiply prob by 0.580 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.95), 'effect': 'multiply prob by 1.925 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.59), 'effect': 'multiply prob by 0.587 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.15), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.7,0.95,0.59,0.2,0.0032769274999999995,"{'timestamp': 1760866780.2400773, 'inputs': {'network_load': np.float64(0.7), 'relay_reputation': np.float64(0.95), 'budget_utilization': np.float64(0.59), 'recent_win_rate': np.float64(0.2)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0032769274999999995), 'steps': [{'feature': 'network_load', 'value': np.float64(0.7), 'effect': 'multiply prob by 0.580 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.95), 'effect': 'multiply prob by 1.925 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.59), 'effect': 'multiply prob by 0.587 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.2), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.7,0.95,0.59,0.25,0.0032769274999999995,"{'timestamp': 1760866780.2402472, 'inputs': {'network_load': np.float64(0.7), 'relay_reputation': np.float64(0.95), 'budget_utilization': np.float64(0.59), 'recent_win_rate': np.float64(0.25)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0032769274999999995), 'steps': [{'feature': 'network_load', 'value': np.float64(0.7), 'effect': 'multiply prob by 0.580 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.95), 'effect': 'multiply prob by 1.925 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.59), 'effect': 'multiply prob by 0.587 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.25), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.7,0.95,0.59,0.3,0.0032769274999999995,"{'timestamp': 1760866780.240302, 'inputs': {'network_load': np.float64(0.7), 'relay_reputation': np.float64(0.95), 'budget_utilization': np.float64(0.59), 'recent_win_rate': np.float64(0.3)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0032769274999999995), 'steps': [{'feature': 'network_load', 'value': np.float64(0.7), 'effect': 'multiply prob by 0.580 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.95), 'effect': 'multiply prob by 1.925 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.59), 'effect': 'multiply prob by 0.587 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.3), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.7,0.95,0.69,0.0,0.005772304942276951,"{'timestamp': 1760866780.240357, 'inputs': {'network_load': np.float64(0.7), 'relay_reputation': np.float64(0.95), 'budget_utilization': np.float64(0.69), 'recent_win_rate': 1e-09}, 'base_prob': 0.01, 'final_prob': np.float64(0.005772304942276951), 'steps': [{'feature': 'network_load', 'value': np.float64(0.7), 'effect': 'multiply prob by 0.580 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.95), 'effect': 'multiply prob by 1.925 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.69), 'effect': 'multiply prob by 0.517 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': 1e-09, 'effect': 'multiply prob by 1.000 (higher recent wins -> lower prob)'}]}"
0.7,0.95,0.69,0.05,0.0028861525000000005,"{'timestamp': 1760866780.2403953, 'inputs': {'network_load': np.float64(0.7), 'relay_reputation': np.float64(0.95), 'budget_utilization': np.float64(0.69), 'recent_win_rate': np.float64(0.05)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0028861525000000005), 'steps': [{'feature': 'network_load', 'value': np.float64(0.7), 'effect': 'multiply prob by 0.580 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.95), 'effect': 'multiply prob by 1.925 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.69), 'effect': 'multiply prob by 0.517 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.05), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.7,0.95,0.69,0.1,0.0028861525000000005,"{'timestamp': 1760866780.2404366, 'inputs': {'network_load': np.float64(0.7), 'relay_reputation': np.float64(0.95), 'budget_utilization': np.float64(0.69), 'recent_win_rate': np.float64(0.1)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0028861525000000005), 'steps': [{'feature': 'network_load', 'value': np.float64(0.7), 'effect': 'multiply prob by 0.580 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.95), 'effect': 'multiply prob by 1.925 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.69), 'effect': 'multiply prob by 0.517 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.1), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.7,0.95,0.69,0.15,0.0028861525000000005,"{'timestamp': 1760866780.2404716, 'inputs': {'network_load': np.float64(0.7), 'relay_reputation': np.float64(0.95), 'budget_utilization': np.float64(0.69), 'recent_win_rate': np.float64(0.15)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0028861525000000005), 'steps': [{'feature': 'network_load', 'value': np.float64(0.7), 'effect': 'multiply prob by 0.580 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.95), 'effect': 'multiply prob by 1.925 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.69), 'effect': 'multiply prob by 0.517 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.15), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.7,0.95,0.69,0.2,0.0028861525000000005,"{'timestamp': 1760866780.2405064, 'inputs': {'network_load': np.float64(0.7), 'relay_reputation': np.float64(0.95), 'budget_utilization': np.float64(0.69), 'recent_win_rate': np.float64(0.2)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0028861525000000005), 'steps': [{'feature': 'network_load', 'value': np.float64(0.7), 'effect': 'multiply prob by 0.580 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.95), 'effect': 'multiply prob by 1.925 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.69), 'effect': 'multiply prob by 0.517 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.2), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.7,0.95,0.69,0.25,0.0028861525000000005,"{'timestamp': 1760866780.2405438, 'inputs': {'network_load': np.float64(0.7), 'relay_reputation': np.float64(0.95), 'budget_utilization': np.float64(0.69), 'recent_win_rate': np.float64(0.25)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0028861525000000005), 'steps': [{'feature': 'network_load', 'value': np.float64(0.7), 'effect': 'multiply prob by 0.580 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.95), 'effect': 'multiply prob by 1.925 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.69), 'effect': 'multiply prob by 0.517 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.25), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.7,0.95,0.69,0.3,0.0028861525000000005,"{'timestamp': 1760866780.240584, 'inputs': {'network_load': np.float64(0.7), 'relay_reputation': np.float64(0.95), 'budget_utilization': np.float64(0.69), 'recent_win_rate': np.float64(0.3)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0028861525000000005), 'steps': [{'feature': 'network_load', 'value': np.float64(0.7), 'effect': 'multiply prob by 0.580 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.95), 'effect': 'multiply prob by 1.925 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.69), 'effect': 'multiply prob by 0.517 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.3), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.7,0.95,0.8,0.0,0.004912599950874,"{'timestamp': 1760866780.2406266, 'inputs': {'network_load': np.float64(0.7), 'relay_reputation': np.float64(0.95), 'budget_utilization': np.float64(0.8), 'recent_win_rate': 1e-09}, 'base_prob': 0.01, 'final_prob': np.float64(0.004912599950874), 'steps': [{'feature': 'network_load', 'value': np.float64(0.7), 'effect': 'multiply prob by 0.580 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.95), 'effect': 'multiply prob by 1.925 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.8), 'effect': 'multiply prob by 0.440 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': 1e-09, 'effect': 'multiply prob by 1.000 (higher recent wins -> lower prob)'}]}"
0.7,0.95,0.8,0.05,0.0024563000000000002,"{'timestamp': 1760866780.2406647, 'inputs': {'network_load': np.float64(0.7), 'relay_reputation': np.float64(0.95), 'budget_utilization': np.float64(0.8), 'recent_win_rate': np.float64(0.05)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0024563000000000002), 'steps': [{'feature': 'network_load', 'value': np.float64(0.7), 'effect': 'multiply prob by 0.580 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.95), 'effect': 'multiply prob by 1.925 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.8), 'effect': 'multiply prob by 0.440 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.05), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.7,0.95,0.8,0.1,0.0024563000000000002,"{'timestamp': 1760866780.2407007, 'inputs': {'network_load': np.float64(0.7), 'relay_reputation': np.float64(0.95), 'budget_utilization': np.float64(0.8), 'recent_win_rate': np.float64(0.1)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0024563000000000002), 'steps': [{'feature': 'network_load', 'value': np.float64(0.7), 'effect': 'multiply prob by 0.580 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.95), 'effect': 'multiply prob by 1.925 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.8), 'effect': 'multiply prob by 0.440 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.1), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.7,0.95,0.8,0.15,0.0024563000000000002,"{'timestamp': 1760866780.240735, 'inputs': {'network_load': np.float64(0.7), 'relay_reputation': np.float64(0.95), 'budget_utilization': np.float64(0.8), 'recent_win_rate': np.float64(0.15)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0024563000000000002), 'steps': [{'feature': 'network_load', 'value': np.float64(0.7), 'effect': 'multiply prob by 0.580 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.95), 'effect': 'multiply prob by 1.925 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.8), 'effect': 'multiply prob by 0.440 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.15), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.7,0.95,0.8,0.2,0.0024563000000000002,"{'timestamp': 1760866780.2407627, 'inputs': {'network_load': np.float64(0.7), 'relay_reputation': np.float64(0.95), 'budget_utilization': np.float64(0.8), 'recent_win_rate': np.float64(0.2)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0024563000000000002), 'steps': [{'feature': 'network_load', 'value': np.float64(0.7), 'effect': 'multiply prob by 0.580 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.95), 'effect': 'multiply prob by 1.925 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.8), 'effect': 'multiply prob by 0.440 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.2), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.7,0.95,0.8,0.25,0.0024563000000000002,"{'timestamp': 1760866780.2407918, 'inputs': {'network_load': np.float64(0.7), 'relay_reputation': np.float64(0.95), 'budget_utilization': np.float64(0.8), 'recent_win_rate': np.float64(0.25)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0024563000000000002), 'steps': [{'feature': 'network_load', 'value': np.float64(0.7), 'effect': 'multiply prob by 0.580 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.95), 'effect': 'multiply prob by 1.925 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.8), 'effect': 'multiply prob by 0.440 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.25), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.7,0.95,0.8,0.3,0.0024563000000000002,"{'timestamp': 1760866780.2408173, 'inputs': {'network_load': np.float64(0.7), 'relay_reputation': np.float64(0.95), 'budget_utilization': np.float64(0.8), 'recent_win_rate': np.float64(0.3)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0024563000000000002), 'steps': [{'feature': 'network_load', 'value': np.float64(0.7), 'effect': 'multiply prob by 0.580 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.95), 'effect': 'multiply prob by 1.925 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.8), 'effect': 'multiply prob by 0.440 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.3), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.8,0.4,0.05,0.0,0.005519799944802,"{'timestamp': 1760866780.2408576, 'inputs': {'network_load': np.float64(0.8), 'relay_reputation': np.float64(0.4), 'budget_utilization': np.float64(0.05), 'recent_win_rate': 1e-09}, 'base_prob': 0.01, 'final_prob': np.float64(0.005519799944802), 'steps': [{'feature': 'network_load', 'value': np.float64(0.8), 'effect': 'multiply prob by 0.520 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.4), 'effect': 'multiply prob by 1.100 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.05), 'effect': 'multiply prob by 0.965 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': 1e-09, 'effect': 'multiply prob by 1.000 (higher recent wins -> lower prob)'}]}"
0.8,0.4,0.05,0.05,0.0027599000000000005,"{'timestamp': 1760866780.2408867, 'inputs': {'network_load': np.float64(0.8), 'relay_reputation': np.float64(0.4), 'budget_utilization': np.float64(0.05), 'recent_win_rate': np.float64(0.05)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0027599000000000005), 'steps': [{'feature': 'network_load', 'value': np.float64(0.8), 'effect': 'multiply prob by 0.520 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.4), 'effect': 'multiply prob by 1.100 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.05), 'effect': 'multiply prob by 0.965 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.05), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.8,0.4,0.05,0.1,0.0027599000000000005,"{'timestamp': 1760866780.240914, 'inputs': {'network_load': np.float64(0.8), 'relay_reputation': np.float64(0.4), 'budget_utilization': np.float64(0.05), 'recent_win_rate': np.float64(0.1)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0027599000000000005), 'steps': [{'feature': 'network_load', 'value': np.float64(0.8), 'effect': 'multiply prob by 0.520 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.4), 'effect': 'multiply prob by 1.100 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.05), 'effect': 'multiply prob by 0.965 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.1), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.8,0.4,0.05,0.15,0.0027599000000000005,"{'timestamp': 1760866780.2409396, 'inputs': {'network_load': np.float64(0.8), 'relay_reputation': np.float64(0.4), 'budget_utilization': np.float64(0.05), 'recent_win_rate': np.float64(0.15)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0027599000000000005), 'steps': [{'feature': 'network_load', 'value': np.float64(0.8), 'effect': 'multiply prob by 0.520 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.4), 'effect': 'multiply prob by 1.100 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.05), 'effect': 'multiply prob by 0.965 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.15), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.8,0.4,0.05,0.2,0.0027599000000000005,"{'timestamp': 1760866780.2409673, 'inputs': {'network_load': np.float64(0.8), 'relay_reputation': np.float64(0.4), 'budget_utilization': np.float64(0.05), 'recent_win_rate': np.float64(0.2)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0027599000000000005), 'steps': [{'feature': 'network_load', 'value': np.float64(0.8), 'effect': 'multiply prob by 0.520 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.4), 'effect': 'multiply prob by 1.100 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.05), 'effect': 'multiply prob by 0.965 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.2), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.8,0.4,0.05,0.25,0.0027599000000000005,"{'timestamp': 1760866780.2409923, 'inputs': {'network_load': np.float64(0.8), 'relay_reputation': np.float64(0.4), 'budget_utilization': np.float64(0.05), 'recent_win_rate': np.float64(0.25)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0027599000000000005), 'steps': [{'feature': 'network_load', 'value': np.float64(0.8), 'effect': 'multiply prob by 0.520 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.4), 'effect': 'multiply prob by 1.100 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.05), 'effect': 'multiply prob by 0.965 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.25), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.8,0.4,0.05,0.3,0.0027599000000000005,"{'timestamp': 1760866780.2410562, 'inputs': {'network_load': np.float64(0.8), 'relay_reputation': np.float64(0.4), 'budget_utilization': np.float64(0.05), 'recent_win_rate': np.float64(0.3)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0027599000000000005), 'steps': [{'feature': 'network_load', 'value': np.float64(0.8), 'effect': 'multiply prob by 0.520 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.4), 'effect': 'multiply prob by 1.100 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.05), 'effect': 'multiply prob by 0.965 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.3), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.8,0.4,0.16,0.0,0.0050793599492064,"{'timestamp': 1760866780.2410967, 'inputs': {'network_load': np.float64(0.8), 'relay_reputation': np.float64(0.4), 'budget_utilization': np.float64(0.16), 'recent_win_rate': 1e-09}, 'base_prob': 0.01, 'final_prob': np.float64(0.0050793599492064), 'steps': [{'feature': 'network_load', 'value': np.float64(0.8), 'effect': 'multiply prob by 0.520 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.4), 'effect': 'multiply prob by 1.100 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.16), 'effect': 'multiply prob by 0.888 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': 1e-09, 'effect': 'multiply prob by 1.000 (higher recent wins -> lower prob)'}]}"
0.8,0.4,0.16,0.05,0.0025396800000000003,"{'timestamp': 1760866780.2411265, 'inputs': {'network_load': np.float64(0.8), 'relay_reputation': np.float64(0.4), 'budget_utilization': np.float64(0.16), 'recent_win_rate': np.float64(0.05)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0025396800000000003), 'steps': [{'feature': 'network_load', 'value': np.float64(0.8), 'effect': 'multiply prob by 0.520 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.4), 'effect': 'multiply prob by 1.100 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.16), 'effect': 'multiply prob by 0.888 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.05), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.8,0.4,0.16,0.1,0.0025396800000000003,"{'timestamp': 1760866780.241154, 'inputs': {'network_load': np.float64(0.8), 'relay_reputation': np.float64(0.4), 'budget_utilization': np.float64(0.16), 'recent_win_rate': np.float64(0.1)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0025396800000000003), 'steps': [{'feature': 'network_load', 'value': np.float64(0.8), 'effect': 'multiply prob by 0.520 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.4), 'effect': 'multiply prob by 1.100 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.16), 'effect': 'multiply prob by 0.888 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.1), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.8,0.4,0.16,0.15,0.0025396800000000003,"{'timestamp': 1760866780.2411795, 'inputs': {'network_load': np.float64(0.8), 'relay_reputation': np.float64(0.4), 'budget_utilization': np.float64(0.16), 'recent_win_rate': np.float64(0.15)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0025396800000000003), 'steps': [{'feature': 'network_load', 'value': np.float64(0.8), 'effect': 'multiply prob by 0.520 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.4), 'effect': 'multiply prob by 1.100 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.16), 'effect': 'multiply prob by 0.888 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.15), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.8,0.4,0.16,0.2,0.0025396800000000003,"{'timestamp': 1760866780.2412045, 'inputs': {'network_load': np.float64(0.8), 'relay_reputation': np.float64(0.4), 'budget_utilization': np.float64(0.16), 'recent_win_rate': np.float64(0.2)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0025396800000000003), 'steps': [{'feature': 'network_load', 'value': np.float64(0.8), 'effect': 'multiply prob by 0.520 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.4), 'effect': 'multiply prob by 1.100 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.16), 'effect': 'multiply prob by 0.888 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.2), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.8,0.4,0.16,0.25,0.0025396800000000003,"{'timestamp': 1760866780.2412298, 'inputs': {'network_load': np.float64(0.8), 'relay_reputation': np.float64(0.4), 'budget_utilization': np.float64(0.16), 'recent_win_rate': np.float64(0.25)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0025396800000000003), 'steps': [{'feature': 'network_load', 'value': np.float64(0.8), 'effect': 'multiply prob by 0.520 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.4), 'effect': 'multiply prob by 1.100 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.16), 'effect': 'multiply prob by 0.888 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.25), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.8,0.4,0.16,0.3,0.0025396800000000003,"{'timestamp': 1760866780.2412548, 'inputs': {'network_load': np.float64(0.8), 'relay_reputation': np.float64(0.4), 'budget_utilization': np.float64(0.16), 'recent_win_rate': np.float64(0.3)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0025396800000000003), 'steps': [{'feature': 'network_load', 'value': np.float64(0.8), 'effect': 'multiply prob by 0.520 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.4), 'effect': 'multiply prob by 1.100 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.16), 'effect': 'multiply prob by 0.888 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.3), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.8,0.4,0.26,0.0,0.004678959953210401,"{'timestamp': 1760866780.2412841, 'inputs': {'network_load': np.float64(0.8), 'relay_reputation': np.float64(0.4), 'budget_utilization': np.float64(0.26), 'recent_win_rate': 1e-09}, 'base_prob': 0.01, 'final_prob': np.float64(0.004678959953210401), 'steps': [{'feature': 'network_load', 'value': np.float64(0.8), 'effect': 'multiply prob by 0.520 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.4), 'effect': 'multiply prob by 1.100 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.26), 'effect': 'multiply prob by 0.818 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': 1e-09, 'effect': 'multiply prob by 1.000 (higher recent wins -> lower prob)'}]}"
0.8,0.4,0.26,0.05,0.0023394800000000006,"{'timestamp': 1760866780.2413146, 'inputs': {'network_load': np.float64(0.8), 'relay_reputation': np.float64(0.4), 'budget_utilization': np.float64(0.26), 'recent_win_rate': np.float64(0.05)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0023394800000000006), 'steps': [{'feature': 'network_load', 'value': np.float64(0.8), 'effect': 'multiply prob by 0.520 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.4), 'effect': 'multiply prob by 1.100 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.26), 'effect': 'multiply prob by 0.818 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.05), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.8,0.4,0.26,0.1,0.0023394800000000006,"{'timestamp': 1760866780.2413478, 'inputs': {'network_load': np.float64(0.8), 'relay_reputation': np.float64(0.4), 'budget_utilization': np.float64(0.26), 'recent_win_rate': np.float64(0.1)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0023394800000000006), 'steps': [{'feature': 'network_load', 'value': np.float64(0.8), 'effect': 'multiply prob by 0.520 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.4), 'effect': 'multiply prob by 1.100 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.26), 'effect': 'multiply prob by 0.818 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.1), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.8,0.4,0.26,0.15,0.0023394800000000006,"{'timestamp': 1760866780.2414558, 'inputs': {'network_load': np.float64(0.8), 'relay_reputation': np.float64(0.4), 'budget_utilization': np.float64(0.26), 'recent_win_rate': np.float64(0.15)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0023394800000000006), 'steps': [{'feature': 'network_load', 'value': np.float64(0.8), 'effect': 'multiply prob by 0.520 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.4), 'effect': 'multiply prob by 1.100 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.26), 'effect': 'multiply prob by 0.818 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.15), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.8,0.4,0.26,0.2,0.0023394800000000006,"{'timestamp': 1760866780.2414935, 'inputs': {'network_load': np.float64(0.8), 'relay_reputation': np.float64(0.4), 'budget_utilization': np.float64(0.26), 'recent_win_rate': np.float64(0.2)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0023394800000000006), 'steps': [{'feature': 'network_load', 'value': np.float64(0.8), 'effect': 'multiply prob by 0.520 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.4), 'effect': 'multiply prob by 1.100 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.26), 'effect': 'multiply prob by 0.818 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.2), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.8,0.4,0.26,0.25,0.0023394800000000006,"{'timestamp': 1760866780.2415195, 'inputs': {'network_load': np.float64(0.8), 'relay_reputation': np.float64(0.4), 'budget_utilization': np.float64(0.26), 'recent_win_rate': np.float64(0.25)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0023394800000000006), 'steps': [{'feature': 'network_load', 'value': np.float64(0.8), 'effect': 'multiply prob by 0.520 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.4), 'effect': 'multiply prob by 1.100 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.26), 'effect': 'multiply prob by 0.818 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.25), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.8,0.4,0.26,0.3,0.0023394800000000006,"{'timestamp': 1760866780.2415514, 'inputs': {'network_load': np.float64(0.8), 'relay_reputation': np.float64(0.4), 'budget_utilization': np.float64(0.26), 'recent_win_rate': np.float64(0.3)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0023394800000000006), 'steps': [{'feature': 'network_load', 'value': np.float64(0.8), 'effect': 'multiply prob by 0.520 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.4), 'effect': 'multiply prob by 1.100 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.26), 'effect': 'multiply prob by 0.818 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.3), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.8,0.4,0.37,0.0,0.0042385199576148004,"{'timestamp': 1760866780.2415807, 'inputs': {'network_load': np.float64(0.8), 'relay_reputation': np.float64(0.4), 'budget_utilization': np.float64(0.37), 'recent_win_rate': 1e-09}, 'base_prob': 0.01, 'final_prob': np.float64(0.0042385199576148004), 'steps': [{'feature': 'network_load', 'value': np.float64(0.8), 'effect': 'multiply prob by 0.520 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.4), 'effect': 'multiply prob by 1.100 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.37), 'effect': 'multiply prob by 0.741 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': 1e-09, 'effect': 'multiply prob by 1.000 (higher recent wins -> lower prob)'}]}"
0.8,0.4,0.37,0.05,0.0021192600000000004,"{'timestamp': 1760866780.2416103, 'inputs': {'network_load': np.float64(0.8), 'relay_reputation': np.float64(0.4), 'budget_utilization': np.float64(0.37), 'recent_win_rate': np.float64(0.05)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0021192600000000004), 'steps': [{'feature': 'network_load', 'value': np.float64(0.8), 'effect': 'multiply prob by 0.520 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.4), 'effect': 'multiply prob by 1.100 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.37), 'effect': 'multiply prob by 0.741 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.05), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.8,0.4,0.37,0.1,0.0021192600000000004,"{'timestamp': 1760866780.2416573, 'inputs': {'network_load': np.float64(0.8), 'relay_reputation': np.float64(0.4), 'budget_utilization': np.float64(0.37), 'recent_win_rate': np.float64(0.1)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0021192600000000004), 'steps': [{'feature': 'network_load', 'value': np.float64(0.8), 'effect': 'multiply prob by 0.520 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.4), 'effect': 'multiply prob by 1.100 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.37), 'effect': 'multiply prob by 0.741 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.1), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.8,0.4,0.37,0.15,0.0021192600000000004,"{'timestamp': 1760866780.2416868, 'inputs': {'network_load': np.float64(0.8), 'relay_reputation': np.float64(0.4), 'budget_utilization': np.float64(0.37), 'recent_win_rate': np.float64(0.15)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0021192600000000004), 'steps': [{'feature': 'network_load', 'value': np.float64(0.8), 'effect': 'multiply prob by 0.520 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.4), 'effect': 'multiply prob by 1.100 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.37), 'effect': 'multiply prob by 0.741 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.15), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.8,0.4,0.37,0.2,0.0021192600000000004,"{'timestamp': 1760866780.241714, 'inputs': {'network_load': np.float64(0.8), 'relay_reputation': np.float64(0.4), 'budget_utilization': np.float64(0.37), 'recent_win_rate': np.float64(0.2)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0021192600000000004), 'steps': [{'feature': 'network_load', 'value': np.float64(0.8), 'effect': 'multiply prob by 0.520 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.4), 'effect': 'multiply prob by 1.100 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.37), 'effect': 'multiply prob by 0.741 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.2), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.8,0.4,0.37,0.25,0.0021192600000000004,"{'timestamp': 1760866780.2417393, 'inputs': {'network_load': np.float64(0.8), 'relay_reputation': np.float64(0.4), 'budget_utilization': np.float64(0.37), 'recent_win_rate': np.float64(0.25)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0021192600000000004), 'steps': [{'feature': 'network_load', 'value': np.float64(0.8), 'effect': 'multiply prob by 0.520 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.4), 'effect': 'multiply prob by 1.100 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.37), 'effect': 'multiply prob by 0.741 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.25), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.8,0.4,0.37,0.3,0.0021192600000000004,"{'timestamp': 1760866780.2417643, 'inputs': {'network_load': np.float64(0.8), 'relay_reputation': np.float64(0.4), 'budget_utilization': np.float64(0.37), 'recent_win_rate': np.float64(0.3)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0021192600000000004), 'steps': [{'feature': 'network_load', 'value': np.float64(0.8), 'effect': 'multiply prob by 0.520 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.4), 'effect': 'multiply prob by 1.100 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.37), 'effect': 'multiply prob by 0.741 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.3), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.8,0.4,0.48,0.0,0.0037980799620192006,"{'timestamp': 1760866780.2417917, 'inputs': {'network_load': np.float64(0.8), 'relay_reputation': np.float64(0.4), 'budget_utilization': np.float64(0.48), 'recent_win_rate': 1e-09}, 'base_prob': 0.01, 'final_prob': np.float64(0.0037980799620192006), 'steps': [{'feature': 'network_load', 'value': np.float64(0.8), 'effect': 'multiply prob by 0.520 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.4), 'effect': 'multiply prob by 1.100 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.48), 'effect': 'multiply prob by 0.664 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': 1e-09, 'effect': 'multiply prob by 1.000 (higher recent wins -> lower prob)'}]}"
0.8,0.4,0.48,0.05,0.0018990400000000005,"{'timestamp': 1760866780.241817, 'inputs': {'network_load': np.float64(0.8), 'relay_reputation': np.float64(0.4), 'budget_utilization': np.float64(0.48), 'recent_win_rate': np.float64(0.05)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0018990400000000005), 'steps': [{'feature': 'network_load', 'value': np.float64(0.8), 'effect': 'multiply prob by 0.520 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.4), 'effect': 'multiply prob by 1.100 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.48), 'effect': 'multiply prob by 0.664 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.05), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.8,0.4,0.48,0.1,0.0018990400000000005,"{'timestamp': 1760866780.2418442, 'inputs': {'network_load': np.float64(0.8), 'relay_reputation': np.float64(0.4), 'budget_utilization': np.float64(0.48), 'recent_win_rate': np.float64(0.1)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0018990400000000005), 'steps': [{'feature': 'network_load', 'value': np.float64(0.8), 'effect': 'multiply prob by 0.520 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.4), 'effect': 'multiply prob by 1.100 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.48), 'effect': 'multiply prob by 0.664 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.1), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.8,0.4,0.48,0.15,0.0018990400000000005,"{'timestamp': 1760866780.24187, 'inputs': {'network_load': np.float64(0.8), 'relay_reputation': np.float64(0.4), 'budget_utilization': np.float64(0.48), 'recent_win_rate': np.float64(0.15)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0018990400000000005), 'steps': [{'feature': 'network_load', 'value': np.float64(0.8), 'effect': 'multiply prob by 0.520 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.4), 'effect': 'multiply prob by 1.100 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.48), 'effect': 'multiply prob by 0.664 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.15), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.8,0.4,0.48,0.2,0.0018990400000000005,"{'timestamp': 1760866780.2418969, 'inputs': {'network_load': np.float64(0.8), 'relay_reputation': np.float64(0.4), 'budget_utilization': np.float64(0.48), 'recent_win_rate': np.float64(0.2)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0018990400000000005), 'steps': [{'feature': 'network_load', 'value': np.float64(0.8), 'effect': 'multiply prob by 0.520 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.4), 'effect': 'multiply prob by 1.100 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.48), 'effect': 'multiply prob by 0.664 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.2), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.8,0.4,0.48,0.25,0.0018990400000000005,"{'timestamp': 1760866780.241924, 'inputs': {'network_load': np.float64(0.8), 'relay_reputation': np.float64(0.4), 'budget_utilization': np.float64(0.48), 'recent_win_rate': np.float64(0.25)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0018990400000000005), 'steps': [{'feature': 'network_load', 'value': np.float64(0.8), 'effect': 'multiply prob by 0.520 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.4), 'effect': 'multiply prob by 1.100 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.48), 'effect': 'multiply prob by 0.664 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.25), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.8,0.4,0.48,0.3,0.0018990400000000005,"{'timestamp': 1760866780.2419496, 'inputs': {'network_load': np.float64(0.8), 'relay_reputation': np.float64(0.4), 'budget_utilization': np.float64(0.48), 'recent_win_rate': np.float64(0.3)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0018990400000000005), 'steps': [{'feature': 'network_load', 'value': np.float64(0.8), 'effect': 'multiply prob by 0.520 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.4), 'effect': 'multiply prob by 1.100 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.48), 'effect': 'multiply prob by 0.664 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.3), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.8,0.4,0.59,0.0,0.0033576399664236,"{'timestamp': 1760866780.2419763, 'inputs': {'network_load': np.float64(0.8), 'relay_reputation': np.float64(0.4), 'budget_utilization': np.float64(0.59), 'recent_win_rate': 1e-09}, 'base_prob': 0.01, 'final_prob': np.float64(0.0033576399664236), 'steps': [{'feature': 'network_load', 'value': np.float64(0.8), 'effect': 'multiply prob by 0.520 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.4), 'effect': 'multiply prob by 1.100 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.59), 'effect': 'multiply prob by 0.587 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': 1e-09, 'effect': 'multiply prob by 1.000 (higher recent wins -> lower prob)'}]}"
0.8,0.4,0.59,0.05,0.0016788200000000001,"{'timestamp': 1760866780.2420037, 'inputs': {'network_load': np.float64(0.8), 'relay_reputation': np.float64(0.4), 'budget_utilization': np.float64(0.59), 'recent_win_rate': np.float64(0.05)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0016788200000000001), 'steps': [{'feature': 'network_load', 'value': np.float64(0.8), 'effect': 'multiply prob by 0.520 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.4), 'effect': 'multiply prob by 1.100 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.59), 'effect': 'multiply prob by 0.587 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.05), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.8,0.4,0.59,0.1,0.0016788200000000001,"{'timestamp': 1760866780.2420294, 'inputs': {'network_load': np.float64(0.8), 'relay_reputation': np.float64(0.4), 'budget_utilization': np.float64(0.59), 'recent_win_rate': np.float64(0.1)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0016788200000000001), 'steps': [{'feature': 'network_load', 'value': np.float64(0.8), 'effect': 'multiply prob by 0.520 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.4), 'effect': 'multiply prob by 1.100 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.59), 'effect': 'multiply prob by 0.587 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.1), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.8,0.4,0.59,0.15,0.0016788200000000001,"{'timestamp': 1760866780.2420561, 'inputs': {'network_load': np.float64(0.8), 'relay_reputation': np.float64(0.4), 'budget_utilization': np.float64(0.59), 'recent_win_rate': np.float64(0.15)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0016788200000000001), 'steps': [{'feature': 'network_load', 'value': np.float64(0.8), 'effect': 'multiply prob by 0.520 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.4), 'effect': 'multiply prob by 1.100 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.59), 'effect': 'multiply prob by 0.587 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.15), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.8,0.4,0.59,0.2,0.0016788200000000001,"{'timestamp': 1760866780.2420819, 'inputs': {'network_load': np.float64(0.8), 'relay_reputation': np.float64(0.4), 'budget_utilization': np.float64(0.59), 'recent_win_rate': np.float64(0.2)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0016788200000000001), 'steps': [{'feature': 'network_load', 'value': np.float64(0.8), 'effect': 'multiply prob by 0.520 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.4), 'effect': 'multiply prob by 1.100 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.59), 'effect': 'multiply prob by 0.587 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.2), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.8,0.4,0.59,0.25,0.0016788200000000001,"{'timestamp': 1760866780.2421117, 'inputs': {'network_load': np.float64(0.8), 'relay_reputation': np.float64(0.4), 'budget_utilization': np.float64(0.59), 'recent_win_rate': np.float64(0.25)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0016788200000000001), 'steps': [{'feature': 'network_load', 'value': np.float64(0.8), 'effect': 'multiply prob by 0.520 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.4), 'effect': 'multiply prob by 1.100 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.59), 'effect': 'multiply prob by 0.587 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.25), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.8,0.4,0.59,0.3,0.0016788200000000001,"{'timestamp': 1760866780.2421389, 'inputs': {'network_load': np.float64(0.8), 'relay_reputation': np.float64(0.4), 'budget_utilization': np.float64(0.59), 'recent_win_rate': np.float64(0.3)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0016788200000000001), 'steps': [{'feature': 'network_load', 'value': np.float64(0.8), 'effect': 'multiply prob by 0.520 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.4), 'effect': 'multiply prob by 1.100 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.59), 'effect': 'multiply prob by 0.587 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.3), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.8,0.4,0.69,0.0,0.002957239970427601,"{'timestamp': 1760866780.242166, 'inputs': {'network_load': np.float64(0.8), 'relay_reputation': np.float64(0.4), 'budget_utilization': np.float64(0.69), 'recent_win_rate': 1e-09}, 'base_prob': 0.01, 'final_prob': np.float64(0.002957239970427601), 'steps': [{'feature': 'network_load', 'value': np.float64(0.8), 'effect': 'multiply prob by 0.520 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.4), 'effect': 'multiply prob by 1.100 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.69), 'effect': 'multiply prob by 0.517 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': 1e-09, 'effect': 'multiply prob by 1.000 (higher recent wins -> lower prob)'}]}"
0.8,0.4,0.69,0.05,0.0014786200000000006,"{'timestamp': 1760866780.2421935, 'inputs': {'network_load': np.float64(0.8), 'relay_reputation': np.float64(0.4), 'budget_utilization': np.float64(0.69), 'recent_win_rate': np.float64(0.05)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0014786200000000006), 'steps': [{'feature': 'network_load', 'value': np.float64(0.8), 'effect': 'multiply prob by 0.520 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.4), 'effect': 'multiply prob by 1.100 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.69), 'effect': 'multiply prob by 0.517 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.05), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.8,0.4,0.69,0.1,0.0014786200000000006,"{'timestamp': 1760866780.2422187, 'inputs': {'network_load': np.float64(0.8), 'relay_reputation': np.float64(0.4), 'budget_utilization': np.float64(0.69), 'recent_win_rate': np.float64(0.1)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0014786200000000006), 'steps': [{'feature': 'network_load', 'value': np.float64(0.8), 'effect': 'multiply prob by 0.520 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.4), 'effect': 'multiply prob by 1.100 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.69), 'effect': 'multiply prob by 0.517 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.1), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.8,0.4,0.69,0.15,0.0014786200000000006,"{'timestamp': 1760866780.242244, 'inputs': {'network_load': np.float64(0.8), 'relay_reputation': np.float64(0.4), 'budget_utilization': np.float64(0.69), 'recent_win_rate': np.float64(0.15)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0014786200000000006), 'steps': [{'feature': 'network_load', 'value': np.float64(0.8), 'effect': 'multiply prob by 0.520 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.4), 'effect': 'multiply prob by 1.100 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.69), 'effect': 'multiply prob by 0.517 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.15), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.8,0.4,0.69,0.2,0.0014786200000000006,"{'timestamp': 1760866780.2423356, 'inputs': {'network_load': np.float64(0.8), 'relay_reputation': np.float64(0.4), 'budget_utilization': np.float64(0.69), 'recent_win_rate': np.float64(0.2)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0014786200000000006), 'steps': [{'feature': 'network_load', 'value': np.float64(0.8), 'effect': 'multiply prob by 0.520 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.4), 'effect': 'multiply prob by 1.100 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.69), 'effect': 'multiply prob by 0.517 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.2), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.8,0.4,0.69,0.25,0.0014786200000000006,"{'timestamp': 1760866780.2423642, 'inputs': {'network_load': np.float64(0.8), 'relay_reputation': np.float64(0.4), 'budget_utilization': np.float64(0.69), 'recent_win_rate': np.float64(0.25)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0014786200000000006), 'steps': [{'feature': 'network_load', 'value': np.float64(0.8), 'effect': 'multiply prob by 0.520 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.4), 'effect': 'multiply prob by 1.100 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.69), 'effect': 'multiply prob by 0.517 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.25), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.8,0.4,0.69,0.3,0.0014786200000000006,"{'timestamp': 1760866780.2423933, 'inputs': {'network_load': np.float64(0.8), 'relay_reputation': np.float64(0.4), 'budget_utilization': np.float64(0.69), 'recent_win_rate': np.float64(0.3)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0014786200000000006), 'steps': [{'feature': 'network_load', 'value': np.float64(0.8), 'effect': 'multiply prob by 0.520 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.4), 'effect': 'multiply prob by 1.100 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.69), 'effect': 'multiply prob by 0.517 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.3), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.8,0.4,0.8,0.0,0.002516799974832001,"{'timestamp': 1760866780.2424254, 'inputs': {'network_load': np.float64(0.8), 'relay_reputation': np.float64(0.4), 'budget_utilization': np.float64(0.8), 'recent_win_rate': 1e-09}, 'base_prob': 0.01, 'final_prob': np.float64(0.002516799974832001), 'steps': [{'feature': 'network_load', 'value': np.float64(0.8), 'effect': 'multiply prob by 0.520 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.4), 'effect': 'multiply prob by 1.100 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.8), 'effect': 'multiply prob by 0.440 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': 1e-09, 'effect': 'multiply prob by 1.000 (higher recent wins -> lower prob)'}]}"
0.8,0.4,0.8,0.05,0.0012584000000000004,"{'timestamp': 1760866780.2424514, 'inputs': {'network_load': np.float64(0.8), 'relay_reputation': np.float64(0.4), 'budget_utilization': np.float64(0.8), 'recent_win_rate': np.float64(0.05)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0012584000000000004), 'steps': [{'feature': 'network_load', 'value': np.float64(0.8), 'effect': 'multiply prob by 0.520 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.4), 'effect': 'multiply prob by 1.100 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.8), 'effect': 'multiply prob by 0.440 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.05), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.8,0.4,0.8,0.1,0.0012584000000000004,"{'timestamp': 1760866780.2424786, 'inputs': {'network_load': np.float64(0.8), 'relay_reputation': np.float64(0.4), 'budget_utilization': np.float64(0.8), 'recent_win_rate': np.float64(0.1)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0012584000000000004), 'steps': [{'feature': 'network_load', 'value': np.float64(0.8), 'effect': 'multiply prob by 0.520 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.4), 'effect': 'multiply prob by 1.100 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.8), 'effect': 'multiply prob by 0.440 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.1), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.8,0.4,0.8,0.15,0.0012584000000000004,"{'timestamp': 1760866780.2425044, 'inputs': {'network_load': np.float64(0.8), 'relay_reputation': np.float64(0.4), 'budget_utilization': np.float64(0.8), 'recent_win_rate': np.float64(0.15)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0012584000000000004), 'steps': [{'feature': 'network_load', 'value': np.float64(0.8), 'effect': 'multiply prob by 0.520 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.4), 'effect': 'multiply prob by 1.100 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.8), 'effect': 'multiply prob by 0.440 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.15), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.8,0.4,0.8,0.2,0.0012584000000000004,"{'timestamp': 1760866780.2425296, 'inputs': {'network_load': np.float64(0.8), 'relay_reputation': np.float64(0.4), 'budget_utilization': np.float64(0.8), 'recent_win_rate': np.float64(0.2)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0012584000000000004), 'steps': [{'feature': 'network_load', 'value': np.float64(0.8), 'effect': 'multiply prob by 0.520 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.4), 'effect': 'multiply prob by 1.100 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.8), 'effect': 'multiply prob by 0.440 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.2), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.8,0.4,0.8,0.25,0.0012584000000000004,"{'timestamp': 1760866780.242555, 'inputs': {'network_load': np.float64(0.8), 'relay_reputation': np.float64(0.4), 'budget_utilization': np.float64(0.8), 'recent_win_rate': np.float64(0.25)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0012584000000000004), 'steps': [{'feature': 'network_load', 'value': np.float64(0.8), 'effect': 'multiply prob by 0.520 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.4), 'effect': 'multiply prob by 1.100 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.8), 'effect': 'multiply prob by 0.440 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.25), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.8,0.4,0.8,0.3,0.0012584000000000004,"{'timestamp': 1760866780.24258, 'inputs': {'network_load': np.float64(0.8), 'relay_reputation': np.float64(0.4), 'budget_utilization': np.float64(0.8), 'recent_win_rate': np.float64(0.3)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0012584000000000004), 'steps': [{'feature': 'network_load', 'value': np.float64(0.8), 'effect': 'multiply prob by 0.520 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.4), 'effect': 'multiply prob by 1.100 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.8), 'effect': 'multiply prob by 0.440 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.3), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.8,0.51,0.05,0.0,0.0063477699365223,"{'timestamp': 1760866780.242614, 'inputs': {'network_load': np.float64(0.8), 'relay_reputation': np.float64(0.51), 'budget_utilization': np.float64(0.05), 'recent_win_rate': 1e-09}, 'base_prob': 0.01, 'final_prob': np.float64(0.0063477699365223), 'steps': [{'feature': 'network_load', 'value': np.float64(0.8), 'effect': 'multiply prob by 0.520 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.51), 'effect': 'multiply prob by 1.265 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.05), 'effect': 'multiply prob by 0.965 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': 1e-09, 'effect': 'multiply prob by 1.000 (higher recent wins -> lower prob)'}]}"
0.8,0.51,0.05,0.05,0.0031738850000000004,"{'timestamp': 1760866780.2426412, 'inputs': {'network_load': np.float64(0.8), 'relay_reputation': np.float64(0.51), 'budget_utilization': np.float64(0.05), 'recent_win_rate': np.float64(0.05)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0031738850000000004), 'steps': [{'feature': 'network_load', 'value': np.float64(0.8), 'effect': 'multiply prob by 0.520 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.51), 'effect': 'multiply prob by 1.265 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.05), 'effect': 'multiply prob by 0.965 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.05), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.8,0.51,0.05,0.1,0.0031738850000000004,"{'timestamp': 1760866780.2426667, 'inputs': {'network_load': np.float64(0.8), 'relay_reputation': np.float64(0.51), 'budget_utilization': np.float64(0.05), 'recent_win_rate': np.float64(0.1)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0031738850000000004), 'steps': [{'feature': 'network_load', 'value': np.float64(0.8), 'effect': 'multiply prob by 0.520 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.51), 'effect': 'multiply prob by 1.265 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.05), 'effect': 'multiply prob by 0.965 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.1), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.8,0.51,0.05,0.15,0.0031738850000000004,"{'timestamp': 1760866780.242694, 'inputs': {'network_load': np.float64(0.8), 'relay_reputation': np.float64(0.51), 'budget_utilization': np.float64(0.05), 'recent_win_rate': np.float64(0.15)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0031738850000000004), 'steps': [{'feature': 'network_load', 'value': np.float64(0.8), 'effect': 'multiply prob by 0.520 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.51), 'effect': 'multiply prob by 1.265 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.05), 'effect': 'multiply prob by 0.965 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.15), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.8,0.51,0.05,0.2,0.0031738850000000004,"{'timestamp': 1760866780.2427192, 'inputs': {'network_load': np.float64(0.8), 'relay_reputation': np.float64(0.51), 'budget_utilization': np.float64(0.05), 'recent_win_rate': np.float64(0.2)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0031738850000000004), 'steps': [{'feature': 'network_load', 'value': np.float64(0.8), 'effect': 'multiply prob by 0.520 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.51), 'effect': 'multiply prob by 1.265 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.05), 'effect': 'multiply prob by 0.965 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.2), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.8,0.51,0.05,0.25,0.0031738850000000004,"{'timestamp': 1760866780.2427442, 'inputs': {'network_load': np.float64(0.8), 'relay_reputation': np.float64(0.51), 'budget_utilization': np.float64(0.05), 'recent_win_rate': np.float64(0.25)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0031738850000000004), 'steps': [{'feature': 'network_load', 'value': np.float64(0.8), 'effect': 'multiply prob by 0.520 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.51), 'effect': 'multiply prob by 1.265 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.05), 'effect': 'multiply prob by 0.965 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.25), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.8,0.51,0.05,0.3,0.0031738850000000004,"{'timestamp': 1760866780.2427754, 'inputs': {'network_load': np.float64(0.8), 'relay_reputation': np.float64(0.51), 'budget_utilization': np.float64(0.05), 'recent_win_rate': np.float64(0.3)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0031738850000000004), 'steps': [{'feature': 'network_load', 'value': np.float64(0.8), 'effect': 'multiply prob by 0.520 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.51), 'effect': 'multiply prob by 1.265 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.05), 'effect': 'multiply prob by 0.965 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.3), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.8,0.51,0.16,0.0,0.005841263941587361,"{'timestamp': 1760866780.2428029, 'inputs': {'network_load': np.float64(0.8), 'relay_reputation': np.float64(0.51), 'budget_utilization': np.float64(0.16), 'recent_win_rate': 1e-09}, 'base_prob': 0.01, 'final_prob': np.float64(0.005841263941587361), 'steps': [{'feature': 'network_load', 'value': np.float64(0.8), 'effect': 'multiply prob by 0.520 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.51), 'effect': 'multiply prob by 1.265 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.16), 'effect': 'multiply prob by 0.888 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': 1e-09, 'effect': 'multiply prob by 1.000 (higher recent wins -> lower prob)'}]}"
0.8,0.51,0.16,0.05,0.0029206320000000007,"{'timestamp': 1760866780.2428322, 'inputs': {'network_load': np.float64(0.8), 'relay_reputation': np.float64(0.51), 'budget_utilization': np.float64(0.16), 'recent_win_rate': np.float64(0.05)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0029206320000000007), 'steps': [{'feature': 'network_load', 'value': np.float64(0.8), 'effect': 'multiply prob by 0.520 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.51), 'effect': 'multiply prob by 1.265 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.16), 'effect': 'multiply prob by 0.888 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.05), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.8,0.51,0.16,0.1,0.0029206320000000007,"{'timestamp': 1760866780.2428594, 'inputs': {'network_load': np.float64(0.8), 'relay_reputation': np.float64(0.51), 'budget_utilization': np.float64(0.16), 'recent_win_rate': np.float64(0.1)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0029206320000000007), 'steps': [{'feature': 'network_load', 'value': np.float64(0.8), 'effect': 'multiply prob by 0.520 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.51), 'effect': 'multiply prob by 1.265 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.16), 'effect': 'multiply prob by 0.888 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.1), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.8,0.51,0.16,0.15,0.0029206320000000007,"{'timestamp': 1760866780.2428846, 'inputs': {'network_load': np.float64(0.8), 'relay_reputation': np.float64(0.51), 'budget_utilization': np.float64(0.16), 'recent_win_rate': np.float64(0.15)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0029206320000000007), 'steps': [{'feature': 'network_load', 'value': np.float64(0.8), 'effect': 'multiply prob by 0.520 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.51), 'effect': 'multiply prob by 1.265 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.16), 'effect': 'multiply prob by 0.888 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.15), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.8,0.51,0.16,0.2,0.0029206320000000007,"{'timestamp': 1760866780.242912, 'inputs': {'network_load': np.float64(0.8), 'relay_reputation': np.float64(0.51), 'budget_utilization': np.float64(0.16), 'recent_win_rate': np.float64(0.2)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0029206320000000007), 'steps': [{'feature': 'network_load', 'value': np.float64(0.8), 'effect': 'multiply prob by 0.520 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.51), 'effect': 'multiply prob by 1.265 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.16), 'effect': 'multiply prob by 0.888 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.2), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.8,0.51,0.16,0.25,0.0029206320000000007,"{'timestamp': 1760866780.2429373, 'inputs': {'network_load': np.float64(0.8), 'relay_reputation': np.float64(0.51), 'budget_utilization': np.float64(0.16), 'recent_win_rate': np.float64(0.25)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0029206320000000007), 'steps': [{'feature': 'network_load', 'value': np.float64(0.8), 'effect': 'multiply prob by 0.520 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.51), 'effect': 'multiply prob by 1.265 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.16), 'effect': 'multiply prob by 0.888 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.25), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.8,0.51,0.16,0.3,0.0029206320000000007,"{'timestamp': 1760866780.2429624, 'inputs': {'network_load': np.float64(0.8), 'relay_reputation': np.float64(0.51), 'budget_utilization': np.float64(0.16), 'recent_win_rate': np.float64(0.3)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0029206320000000007), 'steps': [{'feature': 'network_load', 'value': np.float64(0.8), 'effect': 'multiply prob by 0.520 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.51), 'effect': 'multiply prob by 1.265 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.16), 'effect': 'multiply prob by 0.888 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.3), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.8,0.51,0.26,0.0,0.005380803946191961,"{'timestamp': 1760866780.2429895, 'inputs': {'network_load': np.float64(0.8), 'relay_reputation': np.float64(0.51), 'budget_utilization': np.float64(0.26), 'recent_win_rate': 1e-09}, 'base_prob': 0.01, 'final_prob': np.float64(0.005380803946191961), 'steps': [{'feature': 'network_load', 'value': np.float64(0.8), 'effect': 'multiply prob by 0.520 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.51), 'effect': 'multiply prob by 1.265 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.26), 'effect': 'multiply prob by 0.818 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': 1e-09, 'effect': 'multiply prob by 1.000 (higher recent wins -> lower prob)'}]}"
0.8,0.51,0.26,0.05,0.0026904020000000006,"{'timestamp': 1760866780.2430148, 'inputs': {'network_load': np.float64(0.8), 'relay_reputation': np.float64(0.51), 'budget_utilization': np.float64(0.26), 'recent_win_rate': np.float64(0.05)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0026904020000000006), 'steps': [{'feature': 'network_load', 'value': np.float64(0.8), 'effect': 'multiply prob by 0.520 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.51), 'effect': 'multiply prob by 1.265 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.26), 'effect': 'multiply prob by 0.818 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.05), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.8,0.51,0.26,0.1,0.0026904020000000006,"{'timestamp': 1760866780.243073, 'inputs': {'network_load': np.float64(0.8), 'relay_reputation': np.float64(0.51), 'budget_utilization': np.float64(0.26), 'recent_win_rate': np.float64(0.1)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0026904020000000006), 'steps': [{'feature': 'network_load', 'value': np.float64(0.8), 'effect': 'multiply prob by 0.520 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.51), 'effect': 'multiply prob by 1.265 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.26), 'effect': 'multiply prob by 0.818 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.1), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.8,0.51,0.26,0.15,0.0026904020000000006,"{'timestamp': 1760866780.2431045, 'inputs': {'network_load': np.float64(0.8), 'relay_reputation': np.float64(0.51), 'budget_utilization': np.float64(0.26), 'recent_win_rate': np.float64(0.15)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0026904020000000006), 'steps': [{'feature': 'network_load', 'value': np.float64(0.8), 'effect': 'multiply prob by 0.520 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.51), 'effect': 'multiply prob by 1.265 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.26), 'effect': 'multiply prob by 0.818 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.15), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.8,0.51,0.26,0.2,0.0026904020000000006,"{'timestamp': 1760866780.2431316, 'inputs': {'network_load': np.float64(0.8), 'relay_reputation': np.float64(0.51), 'budget_utilization': np.float64(0.26), 'recent_win_rate': np.float64(0.2)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0026904020000000006), 'steps': [{'feature': 'network_load', 'value': np.float64(0.8), 'effect': 'multiply prob by 0.520 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.51), 'effect': 'multiply prob by 1.265 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.26), 'effect': 'multiply prob by 0.818 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.2), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.8,0.51,0.26,0.25,0.0026904020000000006,"{'timestamp': 1760866780.243157, 'inputs': {'network_load': np.float64(0.8), 'relay_reputation': np.float64(0.51), 'budget_utilization': np.float64(0.26), 'recent_win_rate': np.float64(0.25)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0026904020000000006), 'steps': [{'feature': 'network_load', 'value': np.float64(0.8), 'effect': 'multiply prob by 0.520 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.51), 'effect': 'multiply prob by 1.265 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.26), 'effect': 'multiply prob by 0.818 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.25), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.8,0.51,0.26,0.3,0.0026904020000000006,"{'timestamp': 1760866780.2431822, 'inputs': {'network_load': np.float64(0.8), 'relay_reputation': np.float64(0.51), 'budget_utilization': np.float64(0.26), 'recent_win_rate': np.float64(0.3)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0026904020000000006), 'steps': [{'feature': 'network_load', 'value': np.float64(0.8), 'effect': 'multiply prob by 0.520 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.51), 'effect': 'multiply prob by 1.265 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.26), 'effect': 'multiply prob by 0.818 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.3), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.8,0.51,0.37,0.0,0.004874297951257021,"{'timestamp': 1760866780.2432113, 'inputs': {'network_load': np.float64(0.8), 'relay_reputation': np.float64(0.51), 'budget_utilization': np.float64(0.37), 'recent_win_rate': 1e-09}, 'base_prob': 0.01, 'final_prob': np.float64(0.004874297951257021), 'steps': [{'feature': 'network_load', 'value': np.float64(0.8), 'effect': 'multiply prob by 0.520 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.51), 'effect': 'multiply prob by 1.265 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.37), 'effect': 'multiply prob by 0.741 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': 1e-09, 'effect': 'multiply prob by 1.000 (higher recent wins -> lower prob)'}]}"
0.8,0.51,0.37,0.05,0.0024371490000000004,"{'timestamp': 1760866780.243293, 'inputs': {'network_load': np.float64(0.8), 'relay_reputation': np.float64(0.51), 'budget_utilization': np.float64(0.37), 'recent_win_rate': np.float64(0.05)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0024371490000000004), 'steps': [{'feature': 'network_load', 'value': np.float64(0.8), 'effect': 'multiply prob by 0.520 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.51), 'effect': 'multiply prob by 1.265 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.37), 'effect': 'multiply prob by 0.741 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.05), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.8,0.51,0.37,0.1,0.0024371490000000004,"{'timestamp': 1760866780.2433314, 'inputs': {'network_load': np.float64(0.8), 'relay_reputation': np.float64(0.51), 'budget_utilization': np.float64(0.37), 'recent_win_rate': np.float64(0.1)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0024371490000000004), 'steps': [{'feature': 'network_load', 'value': np.float64(0.8), 'effect': 'multiply prob by 0.520 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.51), 'effect': 'multiply prob by 1.265 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.37), 'effect': 'multiply prob by 0.741 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.1), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.8,0.51,0.37,0.15,0.0024371490000000004,"{'timestamp': 1760866780.2434242, 'inputs': {'network_load': np.float64(0.8), 'relay_reputation': np.float64(0.51), 'budget_utilization': np.float64(0.37), 'recent_win_rate': np.float64(0.15)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0024371490000000004), 'steps': [{'feature': 'network_load', 'value': np.float64(0.8), 'effect': 'multiply prob by 0.520 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.51), 'effect': 'multiply prob by 1.265 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.37), 'effect': 'multiply prob by 0.741 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.15), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.8,0.51,0.37,0.2,0.0024371490000000004,"{'timestamp': 1760866780.243455, 'inputs': {'network_load': np.float64(0.8), 'relay_reputation': np.float64(0.51), 'budget_utilization': np.float64(0.37), 'recent_win_rate': np.float64(0.2)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0024371490000000004), 'steps': [{'feature': 'network_load', 'value': np.float64(0.8), 'effect': 'multiply prob by 0.520 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.51), 'effect': 'multiply prob by 1.265 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.37), 'effect': 'multiply prob by 0.741 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.2), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.8,0.51,0.37,0.25,0.0024371490000000004,"{'timestamp': 1760866780.2434802, 'inputs': {'network_load': np.float64(0.8), 'relay_reputation': np.float64(0.51), 'budget_utilization': np.float64(0.37), 'recent_win_rate': np.float64(0.25)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0024371490000000004), 'steps': [{'feature': 'network_load', 'value': np.float64(0.8), 'effect': 'multiply prob by 0.520 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.51), 'effect': 'multiply prob by 1.265 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.37), 'effect': 'multiply prob by 0.741 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.25), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.8,0.51,0.37,0.3,0.0024371490000000004,"{'timestamp': 1760866780.2435076, 'inputs': {'network_load': np.float64(0.8), 'relay_reputation': np.float64(0.51), 'budget_utilization': np.float64(0.37), 'recent_win_rate': np.float64(0.3)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0024371490000000004), 'steps': [{'feature': 'network_load', 'value': np.float64(0.8), 'effect': 'multiply prob by 0.520 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.51), 'effect': 'multiply prob by 1.265 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.37), 'effect': 'multiply prob by 0.741 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.3), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.8,0.51,0.48,0.0,0.004367791956322082,"{'timestamp': 1760866780.2435374, 'inputs': {'network_load': np.float64(0.8), 'relay_reputation': np.float64(0.51), 'budget_utilization': np.float64(0.48), 'recent_win_rate': 1e-09}, 'base_prob': 0.01, 'final_prob': np.float64(0.004367791956322082), 'steps': [{'feature': 'network_load', 'value': np.float64(0.8), 'effect': 'multiply prob by 0.520 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.51), 'effect': 'multiply prob by 1.265 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.48), 'effect': 'multiply prob by 0.664 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': 1e-09, 'effect': 'multiply prob by 1.000 (higher recent wins -> lower prob)'}]}"
0.8,0.51,0.48,0.05,0.0021838960000000007,"{'timestamp': 1760866780.2435656, 'inputs': {'network_load': np.float64(0.8), 'relay_reputation': np.float64(0.51), 'budget_utilization': np.float64(0.48), 'recent_win_rate': np.float64(0.05)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0021838960000000007), 'steps': [{'feature': 'network_load', 'value': np.float64(0.8), 'effect': 'multiply prob by 0.520 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.51), 'effect': 'multiply prob by 1.265 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.48), 'effect': 'multiply prob by 0.664 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.05), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.8,0.51,0.48,0.1,0.0021838960000000007,"{'timestamp': 1760866780.2435908, 'inputs': {'network_load': np.float64(0.8), 'relay_reputation': np.float64(0.51), 'budget_utilization': np.float64(0.48), 'recent_win_rate': np.float64(0.1)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0021838960000000007), 'steps': [{'feature': 'network_load', 'value': np.float64(0.8), 'effect': 'multiply prob by 0.520 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.51), 'effect': 'multiply prob by 1.265 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.48), 'effect': 'multiply prob by 0.664 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.1), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.8,0.51,0.48,0.15,0.0021838960000000007,"{'timestamp': 1760866780.243616, 'inputs': {'network_load': np.float64(0.8), 'relay_reputation': np.float64(0.51), 'budget_utilization': np.float64(0.48), 'recent_win_rate': np.float64(0.15)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0021838960000000007), 'steps': [{'feature': 'network_load', 'value': np.float64(0.8), 'effect': 'multiply prob by 0.520 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.51), 'effect': 'multiply prob by 1.265 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.48), 'effect': 'multiply prob by 0.664 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.15), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.8,0.51,0.48,0.2,0.0021838960000000007,"{'timestamp': 1760866780.2436447, 'inputs': {'network_load': np.float64(0.8), 'relay_reputation': np.float64(0.51), 'budget_utilization': np.float64(0.48), 'recent_win_rate': np.float64(0.2)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0021838960000000007), 'steps': [{'feature': 'network_load', 'value': np.float64(0.8), 'effect': 'multiply prob by 0.520 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.51), 'effect': 'multiply prob by 1.265 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.48), 'effect': 'multiply prob by 0.664 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.2), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.8,0.51,0.48,0.25,0.0021838960000000007,"{'timestamp': 1760866780.2436702, 'inputs': {'network_load': np.float64(0.8), 'relay_reputation': np.float64(0.51), 'budget_utilization': np.float64(0.48), 'recent_win_rate': np.float64(0.25)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0021838960000000007), 'steps': [{'feature': 'network_load', 'value': np.float64(0.8), 'effect': 'multiply prob by 0.520 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.51), 'effect': 'multiply prob by 1.265 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.48), 'effect': 'multiply prob by 0.664 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.25), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.8,0.51,0.48,0.3,0.0021838960000000007,"{'timestamp': 1760866780.2436953, 'inputs': {'network_load': np.float64(0.8), 'relay_reputation': np.float64(0.51), 'budget_utilization': np.float64(0.48), 'recent_win_rate': np.float64(0.3)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0021838960000000007), 'steps': [{'feature': 'network_load', 'value': np.float64(0.8), 'effect': 'multiply prob by 0.520 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.51), 'effect': 'multiply prob by 1.265 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.48), 'effect': 'multiply prob by 0.664 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.3), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.8,0.51,0.59,0.0,0.0038612859613871404,"{'timestamp': 1760866780.2437222, 'inputs': {'network_load': np.float64(0.8), 'relay_reputation': np.float64(0.51), 'budget_utilization': np.float64(0.59), 'recent_win_rate': 1e-09}, 'base_prob': 0.01, 'final_prob': np.float64(0.0038612859613871404), 'steps': [{'feature': 'network_load', 'value': np.float64(0.8), 'effect': 'multiply prob by 0.520 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.51), 'effect': 'multiply prob by 1.265 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.59), 'effect': 'multiply prob by 0.587 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': 1e-09, 'effect': 'multiply prob by 1.000 (higher recent wins -> lower prob)'}]}"
0.8,0.51,0.59,0.05,0.0019306430000000003,"{'timestamp': 1760866780.2437494, 'inputs': {'network_load': np.float64(0.8), 'relay_reputation': np.float64(0.51), 'budget_utilization': np.float64(0.59), 'recent_win_rate': np.float64(0.05)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0019306430000000003), 'steps': [{'feature': 'network_load', 'value': np.float64(0.8), 'effect': 'multiply prob by 0.520 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.51), 'effect': 'multiply prob by 1.265 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.59), 'effect': 'multiply prob by 0.587 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.05), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.8,0.51,0.59,0.1,0.0019306430000000003,"{'timestamp': 1760866780.2437747, 'inputs': {'network_load': np.float64(0.8), 'relay_reputation': np.float64(0.51), 'budget_utilization': np.float64(0.59), 'recent_win_rate': np.float64(0.1)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0019306430000000003), 'steps': [{'feature': 'network_load', 'value': np.float64(0.8), 'effect': 'multiply prob by 0.520 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.51), 'effect': 'multiply prob by 1.265 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.59), 'effect': 'multiply prob by 0.587 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.1), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.8,0.51,0.59,0.15,0.0019306430000000003,"{'timestamp': 1760866780.2438018, 'inputs': {'network_load': np.float64(0.8), 'relay_reputation': np.float64(0.51), 'budget_utilization': np.float64(0.59), 'recent_win_rate': np.float64(0.15)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0019306430000000003), 'steps': [{'feature': 'network_load', 'value': np.float64(0.8), 'effect': 'multiply prob by 0.520 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.51), 'effect': 'multiply prob by 1.265 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.59), 'effect': 'multiply prob by 0.587 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.15), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.8,0.51,0.59,0.2,0.0019306430000000003,"{'timestamp': 1760866780.243827, 'inputs': {'network_load': np.float64(0.8), 'relay_reputation': np.float64(0.51), 'budget_utilization': np.float64(0.59), 'recent_win_rate': np.float64(0.2)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0019306430000000003), 'steps': [{'feature': 'network_load', 'value': np.float64(0.8), 'effect': 'multiply prob by 0.520 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.51), 'effect': 'multiply prob by 1.265 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.59), 'effect': 'multiply prob by 0.587 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.2), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.8,0.51,0.59,0.25,0.0019306430000000003,"{'timestamp': 1760866780.2438543, 'inputs': {'network_load': np.float64(0.8), 'relay_reputation': np.float64(0.51), 'budget_utilization': np.float64(0.59), 'recent_win_rate': np.float64(0.25)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0019306430000000003), 'steps': [{'feature': 'network_load', 'value': np.float64(0.8), 'effect': 'multiply prob by 0.520 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.51), 'effect': 'multiply prob by 1.265 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.59), 'effect': 'multiply prob by 0.587 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.25), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.8,0.51,0.59,0.3,0.0019306430000000003,"{'timestamp': 1760866780.2438815, 'inputs': {'network_load': np.float64(0.8), 'relay_reputation': np.float64(0.51), 'budget_utilization': np.float64(0.59), 'recent_win_rate': np.float64(0.3)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0019306430000000003), 'steps': [{'feature': 'network_load', 'value': np.float64(0.8), 'effect': 'multiply prob by 0.520 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.51), 'effect': 'multiply prob by 1.265 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.59), 'effect': 'multiply prob by 0.587 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.3), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.8,0.51,0.69,0.0,0.0034008259659917416,"{'timestamp': 1760866780.2439103, 'inputs': {'network_load': np.float64(0.8), 'relay_reputation': np.float64(0.51), 'budget_utilization': np.float64(0.69), 'recent_win_rate': 1e-09}, 'base_prob': 0.01, 'final_prob': np.float64(0.0034008259659917416), 'steps': [{'feature': 'network_load', 'value': np.float64(0.8), 'effect': 'multiply prob by 0.520 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.51), 'effect': 'multiply prob by 1.265 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.69), 'effect': 'multiply prob by 0.517 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': 1e-09, 'effect': 'multiply prob by 1.000 (higher recent wins -> lower prob)'}]}"
0.8,0.51,0.69,0.05,0.0017004130000000009,"{'timestamp': 1760866780.243938, 'inputs': {'network_load': np.float64(0.8), 'relay_reputation': np.float64(0.51), 'budget_utilization': np.float64(0.69), 'recent_win_rate': np.float64(0.05)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0017004130000000009), 'steps': [{'feature': 'network_load', 'value': np.float64(0.8), 'effect': 'multiply prob by 0.520 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.51), 'effect': 'multiply prob by 1.265 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.69), 'effect': 'multiply prob by 0.517 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.05), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.8,0.51,0.69,0.1,0.0017004130000000009,"{'timestamp': 1760866780.2439635, 'inputs': {'network_load': np.float64(0.8), 'relay_reputation': np.float64(0.51), 'budget_utilization': np.float64(0.69), 'recent_win_rate': np.float64(0.1)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0017004130000000009), 'steps': [{'feature': 'network_load', 'value': np.float64(0.8), 'effect': 'multiply prob by 0.520 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.51), 'effect': 'multiply prob by 1.265 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.69), 'effect': 'multiply prob by 0.517 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.1), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.8,0.51,0.69,0.15,0.0017004130000000009,"{'timestamp': 1760866780.243989, 'inputs': {'network_load': np.float64(0.8), 'relay_reputation': np.float64(0.51), 'budget_utilization': np.float64(0.69), 'recent_win_rate': np.float64(0.15)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0017004130000000009), 'steps': [{'feature': 'network_load', 'value': np.float64(0.8), 'effect': 'multiply prob by 0.520 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.51), 'effect': 'multiply prob by 1.265 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.69), 'effect': 'multiply prob by 0.517 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.15), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.8,0.51,0.69,0.2,0.0017004130000000009,"{'timestamp': 1760866780.2440143, 'inputs': {'network_load': np.float64(0.8), 'relay_reputation': np.float64(0.51), 'budget_utilization': np.float64(0.69), 'recent_win_rate': np.float64(0.2)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0017004130000000009), 'steps': [{'feature': 'network_load', 'value': np.float64(0.8), 'effect': 'multiply prob by 0.520 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.51), 'effect': 'multiply prob by 1.265 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.69), 'effect': 'multiply prob by 0.517 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.2), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.8,0.51,0.69,0.25,0.0017004130000000009,"{'timestamp': 1760866780.2440395, 'inputs': {'network_load': np.float64(0.8), 'relay_reputation': np.float64(0.51), 'budget_utilization': np.float64(0.69), 'recent_win_rate': np.float64(0.25)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0017004130000000009), 'steps': [{'feature': 'network_load', 'value': np.float64(0.8), 'effect': 'multiply prob by 0.520 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.51), 'effect': 'multiply prob by 1.265 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.69), 'effect': 'multiply prob by 0.517 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.25), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.8,0.51,0.69,0.3,0.0017004130000000009,"{'timestamp': 1760866780.2440681, 'inputs': {'network_load': np.float64(0.8), 'relay_reputation': np.float64(0.51), 'budget_utilization': np.float64(0.69), 'recent_win_rate': np.float64(0.3)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0017004130000000009), 'steps': [{'feature': 'network_load', 'value': np.float64(0.8), 'effect': 'multiply prob by 0.520 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.51), 'effect': 'multiply prob by 1.265 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.69), 'effect': 'multiply prob by 0.517 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.3), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.8,0.51,0.8,0.0,0.0028943199710568007,"{'timestamp': 1760866780.2440953, 'inputs': {'network_load': np.float64(0.8), 'relay_reputation': np.float64(0.51), 'budget_utilization': np.float64(0.8), 'recent_win_rate': 1e-09}, 'base_prob': 0.01, 'final_prob': np.float64(0.0028943199710568007), 'steps': [{'feature': 'network_load', 'value': np.float64(0.8), 'effect': 'multiply prob by 0.520 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.51), 'effect': 'multiply prob by 1.265 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.8), 'effect': 'multiply prob by 0.440 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': 1e-09, 'effect': 'multiply prob by 1.000 (higher recent wins -> lower prob)'}]}"
0.8,0.51,0.8,0.05,0.0014471600000000005,"{'timestamp': 1760866780.2441204, 'inputs': {'network_load': np.float64(0.8), 'relay_reputation': np.float64(0.51), 'budget_utilization': np.float64(0.8), 'recent_win_rate': np.float64(0.05)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0014471600000000005), 'steps': [{'feature': 'network_load', 'value': np.float64(0.8), 'effect': 'multiply prob by 0.520 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.51), 'effect': 'multiply prob by 1.265 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.8), 'effect': 'multiply prob by 0.440 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.05), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.8,0.51,0.8,0.1,0.0014471600000000005,"{'timestamp': 1760866780.2442021, 'inputs': {'network_load': np.float64(0.8), 'relay_reputation': np.float64(0.51), 'budget_utilization': np.float64(0.8), 'recent_win_rate': np.float64(0.1)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0014471600000000005), 'steps': [{'feature': 'network_load', 'value': np.float64(0.8), 'effect': 'multiply prob by 0.520 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.51), 'effect': 'multiply prob by 1.265 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.8), 'effect': 'multiply prob by 0.440 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.1), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.8,0.51,0.8,0.15,0.0014471600000000005,"{'timestamp': 1760866780.2442296, 'inputs': {'network_load': np.float64(0.8), 'relay_reputation': np.float64(0.51), 'budget_utilization': np.float64(0.8), 'recent_win_rate': np.float64(0.15)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0014471600000000005), 'steps': [{'feature': 'network_load', 'value': np.float64(0.8), 'effect': 'multiply prob by 0.520 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.51), 'effect': 'multiply prob by 1.265 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.8), 'effect': 'multiply prob by 0.440 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.15), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.8,0.51,0.8,0.2,0.0014471600000000005,"{'timestamp': 1760866780.2442553, 'inputs': {'network_load': np.float64(0.8), 'relay_reputation': np.float64(0.51), 'budget_utilization': np.float64(0.8), 'recent_win_rate': np.float64(0.2)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0014471600000000005), 'steps': [{'feature': 'network_load', 'value': np.float64(0.8), 'effect': 'multiply prob by 0.520 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.51), 'effect': 'multiply prob by 1.265 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.8), 'effect': 'multiply prob by 0.440 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.2), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.8,0.51,0.8,0.25,0.0014471600000000005,"{'timestamp': 1760866780.2442966, 'inputs': {'network_load': np.float64(0.8), 'relay_reputation': np.float64(0.51), 'budget_utilization': np.float64(0.8), 'recent_win_rate': np.float64(0.25)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0014471600000000005), 'steps': [{'feature': 'network_load', 'value': np.float64(0.8), 'effect': 'multiply prob by 0.520 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.51), 'effect': 'multiply prob by 1.265 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.8), 'effect': 'multiply prob by 0.440 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.25), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.8,0.51,0.8,0.3,0.0014471600000000005,"{'timestamp': 1760866780.2443354, 'inputs': {'network_load': np.float64(0.8), 'relay_reputation': np.float64(0.51), 'budget_utilization': np.float64(0.8), 'recent_win_rate': np.float64(0.3)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0014471600000000005), 'steps': [{'feature': 'network_load', 'value': np.float64(0.8), 'effect': 'multiply prob by 0.520 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.51), 'effect': 'multiply prob by 1.265 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.8), 'effect': 'multiply prob by 0.440 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.3), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.8,0.62,0.05,0.0,0.0071757399282426,"{'timestamp': 1760866780.2443693, 'inputs': {'network_load': np.float64(0.8), 'relay_reputation': np.float64(0.62), 'budget_utilization': np.float64(0.05), 'recent_win_rate': 1e-09}, 'base_prob': 0.01, 'final_prob': np.float64(0.0071757399282426), 'steps': [{'feature': 'network_load', 'value': np.float64(0.8), 'effect': 'multiply prob by 0.520 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.62), 'effect': 'multiply prob by 1.430 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.05), 'effect': 'multiply prob by 0.965 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': 1e-09, 'effect': 'multiply prob by 1.000 (higher recent wins -> lower prob)'}]}"
0.8,0.62,0.05,0.05,0.0035878700000000004,"{'timestamp': 1760866780.2443972, 'inputs': {'network_load': np.float64(0.8), 'relay_reputation': np.float64(0.62), 'budget_utilization': np.float64(0.05), 'recent_win_rate': np.float64(0.05)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0035878700000000004), 'steps': [{'feature': 'network_load', 'value': np.float64(0.8), 'effect': 'multiply prob by 0.520 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.62), 'effect': 'multiply prob by 1.430 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.05), 'effect': 'multiply prob by 0.965 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.05), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.8,0.62,0.05,0.1,0.0035878700000000004,"{'timestamp': 1760866780.244423, 'inputs': {'network_load': np.float64(0.8), 'relay_reputation': np.float64(0.62), 'budget_utilization': np.float64(0.05), 'recent_win_rate': np.float64(0.1)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0035878700000000004), 'steps': [{'feature': 'network_load', 'value': np.float64(0.8), 'effect': 'multiply prob by 0.520 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.62), 'effect': 'multiply prob by 1.430 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.05), 'effect': 'multiply prob by 0.965 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.1), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.8,0.62,0.05,0.15,0.0035878700000000004,"{'timestamp': 1760866780.2444503, 'inputs': {'network_load': np.float64(0.8), 'relay_reputation': np.float64(0.62), 'budget_utilization': np.float64(0.05), 'recent_win_rate': np.float64(0.15)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0035878700000000004), 'steps': [{'feature': 'network_load', 'value': np.float64(0.8), 'effect': 'multiply prob by 0.520 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.62), 'effect': 'multiply prob by 1.430 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.05), 'effect': 'multiply prob by 0.965 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.15), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.8,0.62,0.05,0.2,0.0035878700000000004,"{'timestamp': 1760866780.2444754, 'inputs': {'network_load': np.float64(0.8), 'relay_reputation': np.float64(0.62), 'budget_utilization': np.float64(0.05), 'recent_win_rate': np.float64(0.2)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0035878700000000004), 'steps': [{'feature': 'network_load', 'value': np.float64(0.8), 'effect': 'multiply prob by 0.520 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.62), 'effect': 'multiply prob by 1.430 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.05), 'effect': 'multiply prob by 0.965 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.2), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.8,0.62,0.05,0.25,0.0035878700000000004,"{'timestamp': 1760866780.2445006, 'inputs': {'network_load': np.float64(0.8), 'relay_reputation': np.float64(0.62), 'budget_utilization': np.float64(0.05), 'recent_win_rate': np.float64(0.25)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0035878700000000004), 'steps': [{'feature': 'network_load', 'value': np.float64(0.8), 'effect': 'multiply prob by 0.520 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.62), 'effect': 'multiply prob by 1.430 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.05), 'effect': 'multiply prob by 0.965 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.25), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.8,0.62,0.05,0.3,0.0035878700000000004,"{'timestamp': 1760866780.2445276, 'inputs': {'network_load': np.float64(0.8), 'relay_reputation': np.float64(0.62), 'budget_utilization': np.float64(0.05), 'recent_win_rate': np.float64(0.3)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0035878700000000004), 'steps': [{'feature': 'network_load', 'value': np.float64(0.8), 'effect': 'multiply prob by 0.520 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.62), 'effect': 'multiply prob by 1.430 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.05), 'effect': 'multiply prob by 0.965 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.3), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.8,0.62,0.16,0.0,0.00660316793396832,"{'timestamp': 1760866780.2445548, 'inputs': {'network_load': np.float64(0.8), 'relay_reputation': np.float64(0.62), 'budget_utilization': np.float64(0.16), 'recent_win_rate': 1e-09}, 'base_prob': 0.01, 'final_prob': np.float64(0.00660316793396832), 'steps': [{'feature': 'network_load', 'value': np.float64(0.8), 'effect': 'multiply prob by 0.520 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.62), 'effect': 'multiply prob by 1.430 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.16), 'effect': 'multiply prob by 0.888 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': 1e-09, 'effect': 'multiply prob by 1.000 (higher recent wins -> lower prob)'}]}"
0.8,0.62,0.16,0.05,0.003301584,"{'timestamp': 1760866780.2445836, 'inputs': {'network_load': np.float64(0.8), 'relay_reputation': np.float64(0.62), 'budget_utilization': np.float64(0.16), 'recent_win_rate': np.float64(0.05)}, 'base_prob': 0.01, 'final_prob': np.float64(0.003301584), 'steps': [{'feature': 'network_load', 'value': np.float64(0.8), 'effect': 'multiply prob by 0.520 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.62), 'effect': 'multiply prob by 1.430 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.16), 'effect': 'multiply prob by 0.888 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.05), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.8,0.62,0.16,0.1,0.003301584,"{'timestamp': 1760866780.244609, 'inputs': {'network_load': np.float64(0.8), 'relay_reputation': np.float64(0.62), 'budget_utilization': np.float64(0.16), 'recent_win_rate': np.float64(0.1)}, 'base_prob': 0.01, 'final_prob': np.float64(0.003301584), 'steps': [{'feature': 'network_load', 'value': np.float64(0.8), 'effect': 'multiply prob by 0.520 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.62), 'effect': 'multiply prob by 1.430 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.16), 'effect': 'multiply prob by 0.888 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.1), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.8,0.62,0.16,0.15,0.003301584,"{'timestamp': 1760866780.2446342, 'inputs': {'network_load': np.float64(0.8), 'relay_reputation': np.float64(0.62), 'budget_utilization': np.float64(0.16), 'recent_win_rate': np.float64(0.15)}, 'base_prob': 0.01, 'final_prob': np.float64(0.003301584), 'steps': [{'feature': 'network_load', 'value': np.float64(0.8), 'effect': 'multiply prob by 0.520 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.62), 'effect': 'multiply prob by 1.430 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.16), 'effect': 'multiply prob by 0.888 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.15), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.8,0.62,0.16,0.2,0.003301584,"{'timestamp': 1760866780.2446592, 'inputs': {'network_load': np.float64(0.8), 'relay_reputation': np.float64(0.62), 'budget_utilization': np.float64(0.16), 'recent_win_rate': np.float64(0.2)}, 'base_prob': 0.01, 'final_prob': np.float64(0.003301584), 'steps': [{'feature': 'network_load', 'value': np.float64(0.8), 'effect': 'multiply prob by 0.520 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.62), 'effect': 'multiply prob by 1.430 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.16), 'effect': 'multiply prob by 0.888 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.2), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.8,0.62,0.16,0.25,0.003301584,"{'timestamp': 1760866780.2446842, 'inputs': {'network_load': np.float64(0.8), 'relay_reputation': np.float64(0.62), 'budget_utilization': np.float64(0.16), 'recent_win_rate': np.float64(0.25)}, 'base_prob': 0.01, 'final_prob': np.float64(0.003301584), 'steps': [{'feature': 'network_load', 'value': np.float64(0.8), 'effect': 'multiply prob by 0.520 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.62), 'effect': 'multiply prob by 1.430 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.16), 'effect': 'multiply prob by 0.888 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.25), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.8,0.62,0.16,0.3,0.003301584,"{'timestamp': 1760866780.2447114, 'inputs': {'network_load': np.float64(0.8), 'relay_reputation': np.float64(0.62), 'budget_utilization': np.float64(0.16), 'recent_win_rate': np.float64(0.3)}, 'base_prob': 0.01, 'final_prob': np.float64(0.003301584), 'steps': [{'feature': 'network_load', 'value': np.float64(0.8), 'effect': 'multiply prob by 0.520 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.62), 'effect': 'multiply prob by 1.430 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.16), 'effect': 'multiply prob by 0.888 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.3), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.8,0.62,0.26,0.0,0.006082647939173521,"{'timestamp': 1760866780.2447383, 'inputs': {'network_load': np.float64(0.8), 'relay_reputation': np.float64(0.62), 'budget_utilization': np.float64(0.26), 'recent_win_rate': 1e-09}, 'base_prob': 0.01, 'final_prob': np.float64(0.006082647939173521), 'steps': [{'feature': 'network_load', 'value': np.float64(0.8), 'effect': 'multiply prob by 0.520 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.62), 'effect': 'multiply prob by 1.430 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.26), 'effect': 'multiply prob by 0.818 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': 1e-09, 'effect': 'multiply prob by 1.000 (higher recent wins -> lower prob)'}]}"
0.8,0.62,0.26,0.05,0.0030413240000000006,"{'timestamp': 1760866780.2447636, 'inputs': {'network_load': np.float64(0.8), 'relay_reputation': np.float64(0.62), 'budget_utilization': np.float64(0.26), 'recent_win_rate': np.float64(0.05)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0030413240000000006), 'steps': [{'feature': 'network_load', 'value': np.float64(0.8), 'effect': 'multiply prob by 0.520 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.62), 'effect': 'multiply prob by 1.430 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.26), 'effect': 'multiply prob by 0.818 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.05), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.8,0.62,0.26,0.1,0.0030413240000000006,"{'timestamp': 1760866780.2447922, 'inputs': {'network_load': np.float64(0.8), 'relay_reputation': np.float64(0.62), 'budget_utilization': np.float64(0.26), 'recent_win_rate': np.float64(0.1)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0030413240000000006), 'steps': [{'feature': 'network_load', 'value': np.float64(0.8), 'effect': 'multiply prob by 0.520 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.62), 'effect': 'multiply prob by 1.430 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.26), 'effect': 'multiply prob by 0.818 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.1), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.8,0.62,0.26,0.15,0.0030413240000000006,"{'timestamp': 1760866780.2448208, 'inputs': {'network_load': np.float64(0.8), 'relay_reputation': np.float64(0.62), 'budget_utilization': np.float64(0.26), 'recent_win_rate': np.float64(0.15)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0030413240000000006), 'steps': [{'feature': 'network_load', 'value': np.float64(0.8), 'effect': 'multiply prob by 0.520 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.62), 'effect': 'multiply prob by 1.430 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.26), 'effect': 'multiply prob by 0.818 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.15), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.8,0.62,0.26,0.2,0.0030413240000000006,"{'timestamp': 1760866780.2448463, 'inputs': {'network_load': np.float64(0.8), 'relay_reputation': np.float64(0.62), 'budget_utilization': np.float64(0.26), 'recent_win_rate': np.float64(0.2)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0030413240000000006), 'steps': [{'feature': 'network_load', 'value': np.float64(0.8), 'effect': 'multiply prob by 0.520 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.62), 'effect': 'multiply prob by 1.430 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.26), 'effect': 'multiply prob by 0.818 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.2), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.8,0.62,0.26,0.25,0.0030413240000000006,"{'timestamp': 1760866780.2448733, 'inputs': {'network_load': np.float64(0.8), 'relay_reputation': np.float64(0.62), 'budget_utilization': np.float64(0.26), 'recent_win_rate': np.float64(0.25)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0030413240000000006), 'steps': [{'feature': 'network_load', 'value': np.float64(0.8), 'effect': 'multiply prob by 0.520 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.62), 'effect': 'multiply prob by 1.430 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.26), 'effect': 'multiply prob by 0.818 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.25), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.8,0.62,0.26,0.3,0.0030413240000000006,"{'timestamp': 1760866780.2449138, 'inputs': {'network_load': np.float64(0.8), 'relay_reputation': np.float64(0.62), 'budget_utilization': np.float64(0.26), 'recent_win_rate': np.float64(0.3)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0030413240000000006), 'steps': [{'feature': 'network_load', 'value': np.float64(0.8), 'effect': 'multiply prob by 0.520 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.62), 'effect': 'multiply prob by 1.430 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.26), 'effect': 'multiply prob by 0.818 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.3), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.8,0.62,0.37,0.0,0.005510075944899241,"{'timestamp': 1760866780.244954, 'inputs': {'network_load': np.float64(0.8), 'relay_reputation': np.float64(0.62), 'budget_utilization': np.float64(0.37), 'recent_win_rate': 1e-09}, 'base_prob': 0.01, 'final_prob': np.float64(0.005510075944899241), 'steps': [{'feature': 'network_load', 'value': np.float64(0.8), 'effect': 'multiply prob by 0.520 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.62), 'effect': 'multiply prob by 1.430 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.37), 'effect': 'multiply prob by 0.741 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': 1e-09, 'effect': 'multiply prob by 1.000 (higher recent wins -> lower prob)'}]}"
0.8,0.62,0.37,0.05,0.0027550380000000005,"{'timestamp': 1760866780.2449806, 'inputs': {'network_load': np.float64(0.8), 'relay_reputation': np.float64(0.62), 'budget_utilization': np.float64(0.37), 'recent_win_rate': np.float64(0.05)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0027550380000000005), 'steps': [{'feature': 'network_load', 'value': np.float64(0.8), 'effect': 'multiply prob by 0.520 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.62), 'effect': 'multiply prob by 1.430 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.37), 'effect': 'multiply prob by 0.741 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.05), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.8,0.62,0.37,0.1,0.0027550380000000005,"{'timestamp': 1760866780.2450056, 'inputs': {'network_load': np.float64(0.8), 'relay_reputation': np.float64(0.62), 'budget_utilization': np.float64(0.37), 'recent_win_rate': np.float64(0.1)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0027550380000000005), 'steps': [{'feature': 'network_load', 'value': np.float64(0.8), 'effect': 'multiply prob by 0.520 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.62), 'effect': 'multiply prob by 1.430 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.37), 'effect': 'multiply prob by 0.741 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.1), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.8,0.62,0.37,0.15,0.0027550380000000005,"{'timestamp': 1760866780.2450986, 'inputs': {'network_load': np.float64(0.8), 'relay_reputation': np.float64(0.62), 'budget_utilization': np.float64(0.37), 'recent_win_rate': np.float64(0.15)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0027550380000000005), 'steps': [{'feature': 'network_load', 'value': np.float64(0.8), 'effect': 'multiply prob by 0.520 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.62), 'effect': 'multiply prob by 1.430 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.37), 'effect': 'multiply prob by 0.741 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.15), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.8,0.62,0.37,0.2,0.0027550380000000005,"{'timestamp': 1760866780.2451313, 'inputs': {'network_load': np.float64(0.8), 'relay_reputation': np.float64(0.62), 'budget_utilization': np.float64(0.37), 'recent_win_rate': np.float64(0.2)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0027550380000000005), 'steps': [{'feature': 'network_load', 'value': np.float64(0.8), 'effect': 'multiply prob by 0.520 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.62), 'effect': 'multiply prob by 1.430 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.37), 'effect': 'multiply prob by 0.741 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.2), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.8,0.62,0.37,0.25,0.0027550380000000005,"{'timestamp': 1760866780.2451568, 'inputs': {'network_load': np.float64(0.8), 'relay_reputation': np.float64(0.62), 'budget_utilization': np.float64(0.37), 'recent_win_rate': np.float64(0.25)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0027550380000000005), 'steps': [{'feature': 'network_load', 'value': np.float64(0.8), 'effect': 'multiply prob by 0.520 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.62), 'effect': 'multiply prob by 1.430 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.37), 'effect': 'multiply prob by 0.741 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.25), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.8,0.62,0.37,0.3,0.0027550380000000005,"{'timestamp': 1760866780.2451823, 'inputs': {'network_load': np.float64(0.8), 'relay_reputation': np.float64(0.62), 'budget_utilization': np.float64(0.37), 'recent_win_rate': np.float64(0.3)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0027550380000000005), 'steps': [{'feature': 'network_load', 'value': np.float64(0.8), 'effect': 'multiply prob by 0.520 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.62), 'effect': 'multiply prob by 1.430 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.37), 'effect': 'multiply prob by 0.741 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.3), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.8,0.62,0.48,0.0,0.00493750395062496,"{'timestamp': 1760866780.2452114, 'inputs': {'network_load': np.float64(0.8), 'relay_reputation': np.float64(0.62), 'budget_utilization': np.float64(0.48), 'recent_win_rate': 1e-09}, 'base_prob': 0.01, 'final_prob': np.float64(0.00493750395062496), 'steps': [{'feature': 'network_load', 'value': np.float64(0.8), 'effect': 'multiply prob by 0.520 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.62), 'effect': 'multiply prob by 1.430 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.48), 'effect': 'multiply prob by 0.664 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': 1e-09, 'effect': 'multiply prob by 1.000 (higher recent wins -> lower prob)'}]}"
0.8,0.62,0.48,0.05,0.0024687520000000003,"{'timestamp': 1760866780.2452388, 'inputs': {'network_load': np.float64(0.8), 'relay_reputation': np.float64(0.62), 'budget_utilization': np.float64(0.48), 'recent_win_rate': np.float64(0.05)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0024687520000000003), 'steps': [{'feature': 'network_load', 'value': np.float64(0.8), 'effect': 'multiply prob by 0.520 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.62), 'effect': 'multiply prob by 1.430 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.48), 'effect': 'multiply prob by 0.664 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.05), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.8,0.62,0.48,0.1,0.0024687520000000003,"{'timestamp': 1760866780.2452643, 'inputs': {'network_load': np.float64(0.8), 'relay_reputation': np.float64(0.62), 'budget_utilization': np.float64(0.48), 'recent_win_rate': np.float64(0.1)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0024687520000000003), 'steps': [{'feature': 'network_load', 'value': np.float64(0.8), 'effect': 'multiply prob by 0.520 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.62), 'effect': 'multiply prob by 1.430 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.48), 'effect': 'multiply prob by 0.664 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.1), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.8,0.62,0.48,0.15,0.0024687520000000003,"{'timestamp': 1760866780.2452898, 'inputs': {'network_load': np.float64(0.8), 'relay_reputation': np.float64(0.62), 'budget_utilization': np.float64(0.48), 'recent_win_rate': np.float64(0.15)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0024687520000000003), 'steps': [{'feature': 'network_load', 'value': np.float64(0.8), 'effect': 'multiply prob by 0.520 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.62), 'effect': 'multiply prob by 1.430 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.48), 'effect': 'multiply prob by 0.664 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.15), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.8,0.62,0.48,0.2,0.0024687520000000003,"{'timestamp': 1760866780.2453234, 'inputs': {'network_load': np.float64(0.8), 'relay_reputation': np.float64(0.62), 'budget_utilization': np.float64(0.48), 'recent_win_rate': np.float64(0.2)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0024687520000000003), 'steps': [{'feature': 'network_load', 'value': np.float64(0.8), 'effect': 'multiply prob by 0.520 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.62), 'effect': 'multiply prob by 1.430 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.48), 'effect': 'multiply prob by 0.664 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.2), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.8,0.62,0.48,0.25,0.0024687520000000003,"{'timestamp': 1760866780.2453535, 'inputs': {'network_load': np.float64(0.8), 'relay_reputation': np.float64(0.62), 'budget_utilization': np.float64(0.48), 'recent_win_rate': np.float64(0.25)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0024687520000000003), 'steps': [{'feature': 'network_load', 'value': np.float64(0.8), 'effect': 'multiply prob by 0.520 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.62), 'effect': 'multiply prob by 1.430 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.48), 'effect': 'multiply prob by 0.664 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.25), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.8,0.62,0.48,0.3,0.0024687520000000003,"{'timestamp': 1760866780.2453785, 'inputs': {'network_load': np.float64(0.8), 'relay_reputation': np.float64(0.62), 'budget_utilization': np.float64(0.48), 'recent_win_rate': np.float64(0.3)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0024687520000000003), 'steps': [{'feature': 'network_load', 'value': np.float64(0.8), 'effect': 'multiply prob by 0.520 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.62), 'effect': 'multiply prob by 1.430 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.48), 'effect': 'multiply prob by 0.664 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.3), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.8,0.62,0.59,0.0,0.00436493195635068,"{'timestamp': 1760866780.2454095, 'inputs': {'network_load': np.float64(0.8), 'relay_reputation': np.float64(0.62), 'budget_utilization': np.float64(0.59), 'recent_win_rate': 1e-09}, 'base_prob': 0.01, 'final_prob': np.float64(0.00436493195635068), 'steps': [{'feature': 'network_load', 'value': np.float64(0.8), 'effect': 'multiply prob by 0.520 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.62), 'effect': 'multiply prob by 1.430 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.59), 'effect': 'multiply prob by 0.587 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': 1e-09, 'effect': 'multiply prob by 1.000 (higher recent wins -> lower prob)'}]}"
0.8,0.62,0.59,0.05,0.002182466,"{'timestamp': 1760866780.2454348, 'inputs': {'network_load': np.float64(0.8), 'relay_reputation': np.float64(0.62), 'budget_utilization': np.float64(0.59), 'recent_win_rate': np.float64(0.05)}, 'base_prob': 0.01, 'final_prob': np.float64(0.002182466), 'steps': [{'feature': 'network_load', 'value': np.float64(0.8), 'effect': 'multiply prob by 0.520 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.62), 'effect': 'multiply prob by 1.430 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.59), 'effect': 'multiply prob by 0.587 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.05), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.8,0.62,0.59,0.1,0.002182466,"{'timestamp': 1760866780.245462, 'inputs': {'network_load': np.float64(0.8), 'relay_reputation': np.float64(0.62), 'budget_utilization': np.float64(0.59), 'recent_win_rate': np.float64(0.1)}, 'base_prob': 0.01, 'final_prob': np.float64(0.002182466), 'steps': [{'feature': 'network_load', 'value': np.float64(0.8), 'effect': 'multiply prob by 0.520 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.62), 'effect': 'multiply prob by 1.430 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.59), 'effect': 'multiply prob by 0.587 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.1), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.8,0.62,0.59,0.15,0.002182466,"{'timestamp': 1760866780.2454872, 'inputs': {'network_load': np.float64(0.8), 'relay_reputation': np.float64(0.62), 'budget_utilization': np.float64(0.59), 'recent_win_rate': np.float64(0.15)}, 'base_prob': 0.01, 'final_prob': np.float64(0.002182466), 'steps': [{'feature': 'network_load', 'value': np.float64(0.8), 'effect': 'multiply prob by 0.520 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.62), 'effect': 'multiply prob by 1.430 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.59), 'effect': 'multiply prob by 0.587 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.15), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.8,0.62,0.59,0.2,0.002182466,"{'timestamp': 1760866780.2455122, 'inputs': {'network_load': np.float64(0.8), 'relay_reputation': np.float64(0.62), 'budget_utilization': np.float64(0.59), 'recent_win_rate': np.float64(0.2)}, 'base_prob': 0.01, 'final_prob': np.float64(0.002182466), 'steps': [{'feature': 'network_load', 'value': np.float64(0.8), 'effect': 'multiply prob by 0.520 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.62), 'effect': 'multiply prob by 1.430 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.59), 'effect': 'multiply prob by 0.587 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.2), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.8,0.62,0.59,0.25,0.002182466,"{'timestamp': 1760866780.2455406, 'inputs': {'network_load': np.float64(0.8), 'relay_reputation': np.float64(0.62), 'budget_utilization': np.float64(0.59), 'recent_win_rate': np.float64(0.25)}, 'base_prob': 0.01, 'final_prob': np.float64(0.002182466), 'steps': [{'feature': 'network_load', 'value': np.float64(0.8), 'effect': 'multiply prob by 0.520 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.62), 'effect': 'multiply prob by 1.430 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.59), 'effect': 'multiply prob by 0.587 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.25), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.8,0.62,0.59,0.3,0.002182466,"{'timestamp': 1760866780.245566, 'inputs': {'network_load': np.float64(0.8), 'relay_reputation': np.float64(0.62), 'budget_utilization': np.float64(0.59), 'recent_win_rate': np.float64(0.3)}, 'base_prob': 0.01, 'final_prob': np.float64(0.002182466), 'steps': [{'feature': 'network_load', 'value': np.float64(0.8), 'effect': 'multiply prob by 0.520 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.62), 'effect': 'multiply prob by 1.430 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.59), 'effect': 'multiply prob by 0.587 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.3), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.8,0.62,0.69,0.0,0.003844411961555881,"{'timestamp': 1760866780.2455928, 'inputs': {'network_load': np.float64(0.8), 'relay_reputation': np.float64(0.62), 'budget_utilization': np.float64(0.69), 'recent_win_rate': 1e-09}, 'base_prob': 0.01, 'final_prob': np.float64(0.003844411961555881), 'steps': [{'feature': 'network_load', 'value': np.float64(0.8), 'effect': 'multiply prob by 0.520 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.62), 'effect': 'multiply prob by 1.430 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.69), 'effect': 'multiply prob by 0.517 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': 1e-09, 'effect': 'multiply prob by 1.000 (higher recent wins -> lower prob)'}]}"
0.8,0.62,0.69,0.05,0.0019222060000000007,"{'timestamp': 1760866780.245618, 'inputs': {'network_load': np.float64(0.8), 'relay_reputation': np.float64(0.62), 'budget_utilization': np.float64(0.69), 'recent_win_rate': np.float64(0.05)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0019222060000000007), 'steps': [{'feature': 'network_load', 'value': np.float64(0.8), 'effect': 'multiply prob by 0.520 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.62), 'effect': 'multiply prob by 1.430 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.69), 'effect': 'multiply prob by 0.517 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.05), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.8,0.62,0.69,0.1,0.0019222060000000007,"{'timestamp': 1760866780.2456434, 'inputs': {'network_load': np.float64(0.8), 'relay_reputation': np.float64(0.62), 'budget_utilization': np.float64(0.69), 'recent_win_rate': np.float64(0.1)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0019222060000000007), 'steps': [{'feature': 'network_load', 'value': np.float64(0.8), 'effect': 'multiply prob by 0.520 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.62), 'effect': 'multiply prob by 1.430 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.69), 'effect': 'multiply prob by 0.517 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.1), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.8,0.62,0.69,0.15,0.0019222060000000007,"{'timestamp': 1760866780.2456725, 'inputs': {'network_load': np.float64(0.8), 'relay_reputation': np.float64(0.62), 'budget_utilization': np.float64(0.69), 'recent_win_rate': np.float64(0.15)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0019222060000000007), 'steps': [{'feature': 'network_load', 'value': np.float64(0.8), 'effect': 'multiply prob by 0.520 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.62), 'effect': 'multiply prob by 1.430 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.69), 'effect': 'multiply prob by 0.517 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.15), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.8,0.62,0.69,0.2,0.0019222060000000007,"{'timestamp': 1760866780.2456977, 'inputs': {'network_load': np.float64(0.8), 'relay_reputation': np.float64(0.62), 'budget_utilization': np.float64(0.69), 'recent_win_rate': np.float64(0.2)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0019222060000000007), 'steps': [{'feature': 'network_load', 'value': np.float64(0.8), 'effect': 'multiply prob by 0.520 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.62), 'effect': 'multiply prob by 1.430 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.69), 'effect': 'multiply prob by 0.517 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.2), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.8,0.62,0.69,0.25,0.0019222060000000007,"{'timestamp': 1760866780.2457228, 'inputs': {'network_load': np.float64(0.8), 'relay_reputation': np.float64(0.62), 'budget_utilization': np.float64(0.69), 'recent_win_rate': np.float64(0.25)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0019222060000000007), 'steps': [{'feature': 'network_load', 'value': np.float64(0.8), 'effect': 'multiply prob by 0.520 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.62), 'effect': 'multiply prob by 1.430 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.69), 'effect': 'multiply prob by 0.517 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.25), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.8,0.62,0.69,0.3,0.0019222060000000007,"{'timestamp': 1760866780.2457502, 'inputs': {'network_load': np.float64(0.8), 'relay_reputation': np.float64(0.62), 'budget_utilization': np.float64(0.69), 'recent_win_rate': np.float64(0.3)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0019222060000000007), 'steps': [{'feature': 'network_load', 'value': np.float64(0.8), 'effect': 'multiply prob by 0.520 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.62), 'effect': 'multiply prob by 1.430 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.69), 'effect': 'multiply prob by 0.517 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.3), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.8,0.62,0.8,0.0,0.0032718399672816006,"{'timestamp': 1760866780.245779, 'inputs': {'network_load': np.float64(0.8), 'relay_reputation': np.float64(0.62), 'budget_utilization': np.float64(0.8), 'recent_win_rate': 1e-09}, 'base_prob': 0.01, 'final_prob': np.float64(0.0032718399672816006), 'steps': [{'feature': 'network_load', 'value': np.float64(0.8), 'effect': 'multiply prob by 0.520 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.62), 'effect': 'multiply prob by 1.430 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.8), 'effect': 'multiply prob by 0.440 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': 1e-09, 'effect': 'multiply prob by 1.000 (higher recent wins -> lower prob)'}]}"
0.8,0.62,0.8,0.05,0.0016359200000000003,"{'timestamp': 1760866780.2458045, 'inputs': {'network_load': np.float64(0.8), 'relay_reputation': np.float64(0.62), 'budget_utilization': np.float64(0.8), 'recent_win_rate': np.float64(0.05)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0016359200000000003), 'steps': [{'feature': 'network_load', 'value': np.float64(0.8), 'effect': 'multiply prob by 0.520 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.62), 'effect': 'multiply prob by 1.430 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.8), 'effect': 'multiply prob by 0.440 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.05), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.8,0.62,0.8,0.1,0.0016359200000000003,"{'timestamp': 1760866780.2458317, 'inputs': {'network_load': np.float64(0.8), 'relay_reputation': np.float64(0.62), 'budget_utilization': np.float64(0.8), 'recent_win_rate': np.float64(0.1)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0016359200000000003), 'steps': [{'feature': 'network_load', 'value': np.float64(0.8), 'effect': 'multiply prob by 0.520 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.62), 'effect': 'multiply prob by 1.430 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.8), 'effect': 'multiply prob by 0.440 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.1), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.8,0.62,0.8,0.15,0.0016359200000000003,"{'timestamp': 1760866780.2458568, 'inputs': {'network_load': np.float64(0.8), 'relay_reputation': np.float64(0.62), 'budget_utilization': np.float64(0.8), 'recent_win_rate': np.float64(0.15)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0016359200000000003), 'steps': [{'feature': 'network_load', 'value': np.float64(0.8), 'effect': 'multiply prob by 0.520 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.62), 'effect': 'multiply prob by 1.430 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.8), 'effect': 'multiply prob by 0.440 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.15), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.8,0.62,0.8,0.2,0.0016359200000000003,"{'timestamp': 1760866780.2458837, 'inputs': {'network_load': np.float64(0.8), 'relay_reputation': np.float64(0.62), 'budget_utilization': np.float64(0.8), 'recent_win_rate': np.float64(0.2)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0016359200000000003), 'steps': [{'feature': 'network_load', 'value': np.float64(0.8), 'effect': 'multiply prob by 0.520 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.62), 'effect': 'multiply prob by 1.430 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.8), 'effect': 'multiply prob by 0.440 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.2), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.8,0.62,0.8,0.25,0.0016359200000000003,"{'timestamp': 1760866780.245909, 'inputs': {'network_load': np.float64(0.8), 'relay_reputation': np.float64(0.62), 'budget_utilization': np.float64(0.8), 'recent_win_rate': np.float64(0.25)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0016359200000000003), 'steps': [{'feature': 'network_load', 'value': np.float64(0.8), 'effect': 'multiply prob by 0.520 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.62), 'effect': 'multiply prob by 1.430 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.8), 'effect': 'multiply prob by 0.440 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.25), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.8,0.62,0.8,0.3,0.0016359200000000003,"{'timestamp': 1760866780.245934, 'inputs': {'network_load': np.float64(0.8), 'relay_reputation': np.float64(0.62), 'budget_utilization': np.float64(0.8), 'recent_win_rate': np.float64(0.3)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0016359200000000003), 'steps': [{'feature': 'network_load', 'value': np.float64(0.8), 'effect': 'multiply prob by 0.520 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.62), 'effect': 'multiply prob by 1.430 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.8), 'effect': 'multiply prob by 0.440 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.3), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.8,0.73,0.05,0.0,0.0080037099199629,"{'timestamp': 1760866780.2460248, 'inputs': {'network_load': np.float64(0.8), 'relay_reputation': np.float64(0.73), 'budget_utilization': np.float64(0.05), 'recent_win_rate': 1e-09}, 'base_prob': 0.01, 'final_prob': np.float64(0.0080037099199629), 'steps': [{'feature': 'network_load', 'value': np.float64(0.8), 'effect': 'multiply prob by 0.520 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.73), 'effect': 'multiply prob by 1.595 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.05), 'effect': 'multiply prob by 0.965 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': 1e-09, 'effect': 'multiply prob by 1.000 (higher recent wins -> lower prob)'}]}"
0.8,0.73,0.05,0.05,0.004001855,"{'timestamp': 1760866780.2460513, 'inputs': {'network_load': np.float64(0.8), 'relay_reputation': np.float64(0.73), 'budget_utilization': np.float64(0.05), 'recent_win_rate': np.float64(0.05)}, 'base_prob': 0.01, 'final_prob': np.float64(0.004001855), 'steps': [{'feature': 'network_load', 'value': np.float64(0.8), 'effect': 'multiply prob by 0.520 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.73), 'effect': 'multiply prob by 1.595 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.05), 'effect': 'multiply prob by 0.965 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.05), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.8,0.73,0.05,0.1,0.004001855,"{'timestamp': 1760866780.2460792, 'inputs': {'network_load': np.float64(0.8), 'relay_reputation': np.float64(0.73), 'budget_utilization': np.float64(0.05), 'recent_win_rate': np.float64(0.1)}, 'base_prob': 0.01, 'final_prob': np.float64(0.004001855), 'steps': [{'feature': 'network_load', 'value': np.float64(0.8), 'effect': 'multiply prob by 0.520 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.73), 'effect': 'multiply prob by 1.595 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.05), 'effect': 'multiply prob by 0.965 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.1), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.8,0.73,0.05,0.15,0.004001855,"{'timestamp': 1760866780.2461045, 'inputs': {'network_load': np.float64(0.8), 'relay_reputation': np.float64(0.73), 'budget_utilization': np.float64(0.05), 'recent_win_rate': np.float64(0.15)}, 'base_prob': 0.01, 'final_prob': np.float64(0.004001855), 'steps': [{'feature': 'network_load', 'value': np.float64(0.8), 'effect': 'multiply prob by 0.520 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.73), 'effect': 'multiply prob by 1.595 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.05), 'effect': 'multiply prob by 0.965 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.15), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.8,0.73,0.05,0.2,0.004001855,"{'timestamp': 1760866780.2461298, 'inputs': {'network_load': np.float64(0.8), 'relay_reputation': np.float64(0.73), 'budget_utilization': np.float64(0.05), 'recent_win_rate': np.float64(0.2)}, 'base_prob': 0.01, 'final_prob': np.float64(0.004001855), 'steps': [{'feature': 'network_load', 'value': np.float64(0.8), 'effect': 'multiply prob by 0.520 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.73), 'effect': 'multiply prob by 1.595 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.05), 'effect': 'multiply prob by 0.965 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.2), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.8,0.73,0.05,0.25,0.004001855,"{'timestamp': 1760866780.2461572, 'inputs': {'network_load': np.float64(0.8), 'relay_reputation': np.float64(0.73), 'budget_utilization': np.float64(0.05), 'recent_win_rate': np.float64(0.25)}, 'base_prob': 0.01, 'final_prob': np.float64(0.004001855), 'steps': [{'feature': 'network_load', 'value': np.float64(0.8), 'effect': 'multiply prob by 0.520 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.73), 'effect': 'multiply prob by 1.595 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.05), 'effect': 'multiply prob by 0.965 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.25), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.8,0.73,0.05,0.3,0.004001855,"{'timestamp': 1760866780.2461822, 'inputs': {'network_load': np.float64(0.8), 'relay_reputation': np.float64(0.73), 'budget_utilization': np.float64(0.05), 'recent_win_rate': np.float64(0.3)}, 'base_prob': 0.01, 'final_prob': np.float64(0.004001855), 'steps': [{'feature': 'network_load', 'value': np.float64(0.8), 'effect': 'multiply prob by 0.520 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.73), 'effect': 'multiply prob by 1.595 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.05), 'effect': 'multiply prob by 0.965 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.3), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.8,0.73,0.16,0.0,0.007365071926349281,"{'timestamp': 1760866780.2462113, 'inputs': {'network_load': np.float64(0.8), 'relay_reputation': np.float64(0.73), 'budget_utilization': np.float64(0.16), 'recent_win_rate': 1e-09}, 'base_prob': 0.01, 'final_prob': np.float64(0.007365071926349281), 'steps': [{'feature': 'network_load', 'value': np.float64(0.8), 'effect': 'multiply prob by 0.520 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.73), 'effect': 'multiply prob by 1.595 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.16), 'effect': 'multiply prob by 0.888 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': 1e-09, 'effect': 'multiply prob by 1.000 (higher recent wins -> lower prob)'}]}"
0.8,0.73,0.16,0.05,0.0036825360000000006,"{'timestamp': 1760866780.2462382, 'inputs': {'network_load': np.float64(0.8), 'relay_reputation': np.float64(0.73), 'budget_utilization': np.float64(0.16), 'recent_win_rate': np.float64(0.05)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0036825360000000006), 'steps': [{'feature': 'network_load', 'value': np.float64(0.8), 'effect': 'multiply prob by 0.520 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.73), 'effect': 'multiply prob by 1.595 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.16), 'effect': 'multiply prob by 0.888 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.05), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.8,0.73,0.16,0.1,0.0036825360000000006,"{'timestamp': 1760866780.2462656, 'inputs': {'network_load': np.float64(0.8), 'relay_reputation': np.float64(0.73), 'budget_utilization': np.float64(0.16), 'recent_win_rate': np.float64(0.1)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0036825360000000006), 'steps': [{'feature': 'network_load', 'value': np.float64(0.8), 'effect': 'multiply prob by 0.520 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.73), 'effect': 'multiply prob by 1.595 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.16), 'effect': 'multiply prob by 0.888 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.1), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.8,0.73,0.16,0.15,0.0036825360000000006,"{'timestamp': 1760866780.246297, 'inputs': {'network_load': np.float64(0.8), 'relay_reputation': np.float64(0.73), 'budget_utilization': np.float64(0.16), 'recent_win_rate': np.float64(0.15)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0036825360000000006), 'steps': [{'feature': 'network_load', 'value': np.float64(0.8), 'effect': 'multiply prob by 0.520 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.73), 'effect': 'multiply prob by 1.595 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.16), 'effect': 'multiply prob by 0.888 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.15), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.8,0.73,0.16,0.2,0.0036825360000000006,"{'timestamp': 1760866780.2463312, 'inputs': {'network_load': np.float64(0.8), 'relay_reputation': np.float64(0.73), 'budget_utilization': np.float64(0.16), 'recent_win_rate': np.float64(0.2)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0036825360000000006), 'steps': [{'feature': 'network_load', 'value': np.float64(0.8), 'effect': 'multiply prob by 0.520 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.73), 'effect': 'multiply prob by 1.595 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.16), 'effect': 'multiply prob by 0.888 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.2), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.8,0.73,0.16,0.25,0.0036825360000000006,"{'timestamp': 1760866780.2463589, 'inputs': {'network_load': np.float64(0.8), 'relay_reputation': np.float64(0.73), 'budget_utilization': np.float64(0.16), 'recent_win_rate': np.float64(0.25)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0036825360000000006), 'steps': [{'feature': 'network_load', 'value': np.float64(0.8), 'effect': 'multiply prob by 0.520 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.73), 'effect': 'multiply prob by 1.595 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.16), 'effect': 'multiply prob by 0.888 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.25), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.8,0.73,0.16,0.3,0.0036825360000000006,"{'timestamp': 1760866780.2463841, 'inputs': {'network_load': np.float64(0.8), 'relay_reputation': np.float64(0.73), 'budget_utilization': np.float64(0.16), 'recent_win_rate': np.float64(0.3)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0036825360000000006), 'steps': [{'feature': 'network_load', 'value': np.float64(0.8), 'effect': 'multiply prob by 0.520 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.73), 'effect': 'multiply prob by 1.595 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.16), 'effect': 'multiply prob by 0.888 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.3), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.8,0.73,0.26,0.0,0.006784491932155081,"{'timestamp': 1760866780.2464116, 'inputs': {'network_load': np.float64(0.8), 'relay_reputation': np.float64(0.73), 'budget_utilization': np.float64(0.26), 'recent_win_rate': 1e-09}, 'base_prob': 0.01, 'final_prob': np.float64(0.006784491932155081), 'steps': [{'feature': 'network_load', 'value': np.float64(0.8), 'effect': 'multiply prob by 0.520 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.73), 'effect': 'multiply prob by 1.595 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.26), 'effect': 'multiply prob by 0.818 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': 1e-09, 'effect': 'multiply prob by 1.000 (higher recent wins -> lower prob)'}]}"
0.8,0.73,0.26,0.05,0.0033922460000000007,"{'timestamp': 1760866780.2464392, 'inputs': {'network_load': np.float64(0.8), 'relay_reputation': np.float64(0.73), 'budget_utilization': np.float64(0.26), 'recent_win_rate': np.float64(0.05)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0033922460000000007), 'steps': [{'feature': 'network_load', 'value': np.float64(0.8), 'effect': 'multiply prob by 0.520 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.73), 'effect': 'multiply prob by 1.595 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.26), 'effect': 'multiply prob by 0.818 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.05), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.8,0.73,0.26,0.1,0.0033922460000000007,"{'timestamp': 1760866780.2464676, 'inputs': {'network_load': np.float64(0.8), 'relay_reputation': np.float64(0.73), 'budget_utilization': np.float64(0.26), 'recent_win_rate': np.float64(0.1)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0033922460000000007), 'steps': [{'feature': 'network_load', 'value': np.float64(0.8), 'effect': 'multiply prob by 0.520 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.73), 'effect': 'multiply prob by 1.595 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.26), 'effect': 'multiply prob by 0.818 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.1), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.8,0.73,0.26,0.15,0.0033922460000000007,"{'timestamp': 1760866780.2464926, 'inputs': {'network_load': np.float64(0.8), 'relay_reputation': np.float64(0.73), 'budget_utilization': np.float64(0.26), 'recent_win_rate': np.float64(0.15)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0033922460000000007), 'steps': [{'feature': 'network_load', 'value': np.float64(0.8), 'effect': 'multiply prob by 0.520 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.73), 'effect': 'multiply prob by 1.595 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.26), 'effect': 'multiply prob by 0.818 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.15), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.8,0.73,0.26,0.2,0.0033922460000000007,"{'timestamp': 1760866780.2465177, 'inputs': {'network_load': np.float64(0.8), 'relay_reputation': np.float64(0.73), 'budget_utilization': np.float64(0.26), 'recent_win_rate': np.float64(0.2)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0033922460000000007), 'steps': [{'feature': 'network_load', 'value': np.float64(0.8), 'effect': 'multiply prob by 0.520 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.73), 'effect': 'multiply prob by 1.595 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.26), 'effect': 'multiply prob by 0.818 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.2), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.8,0.73,0.26,0.25,0.0033922460000000007,"{'timestamp': 1760866780.2465432, 'inputs': {'network_load': np.float64(0.8), 'relay_reputation': np.float64(0.73), 'budget_utilization': np.float64(0.26), 'recent_win_rate': np.float64(0.25)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0033922460000000007), 'steps': [{'feature': 'network_load', 'value': np.float64(0.8), 'effect': 'multiply prob by 0.520 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.73), 'effect': 'multiply prob by 1.595 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.26), 'effect': 'multiply prob by 0.818 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.25), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.8,0.73,0.26,0.3,0.0033922460000000007,"{'timestamp': 1760866780.246568, 'inputs': {'network_load': np.float64(0.8), 'relay_reputation': np.float64(0.73), 'budget_utilization': np.float64(0.26), 'recent_win_rate': np.float64(0.3)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0033922460000000007), 'steps': [{'feature': 'network_load', 'value': np.float64(0.8), 'effect': 'multiply prob by 0.520 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.73), 'effect': 'multiply prob by 1.595 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.26), 'effect': 'multiply prob by 0.818 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.3), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.8,0.73,0.37,0.0,0.00614585393854146,"{'timestamp': 1760866780.246597, 'inputs': {'network_load': np.float64(0.8), 'relay_reputation': np.float64(0.73), 'budget_utilization': np.float64(0.37), 'recent_win_rate': 1e-09}, 'base_prob': 0.01, 'final_prob': np.float64(0.00614585393854146), 'steps': [{'feature': 'network_load', 'value': np.float64(0.8), 'effect': 'multiply prob by 0.520 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.73), 'effect': 'multiply prob by 1.595 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.37), 'effect': 'multiply prob by 0.741 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': 1e-09, 'effect': 'multiply prob by 1.000 (higher recent wins -> lower prob)'}]}"
0.8,0.73,0.37,0.05,0.0030729270000000005,"{'timestamp': 1760866780.2466223, 'inputs': {'network_load': np.float64(0.8), 'relay_reputation': np.float64(0.73), 'budget_utilization': np.float64(0.37), 'recent_win_rate': np.float64(0.05)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0030729270000000005), 'steps': [{'feature': 'network_load', 'value': np.float64(0.8), 'effect': 'multiply prob by 0.520 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.73), 'effect': 'multiply prob by 1.595 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.37), 'effect': 'multiply prob by 0.741 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.05), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.8,0.73,0.37,0.1,0.0030729270000000005,"{'timestamp': 1760866780.2466476, 'inputs': {'network_load': np.float64(0.8), 'relay_reputation': np.float64(0.73), 'budget_utilization': np.float64(0.37), 'recent_win_rate': np.float64(0.1)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0030729270000000005), 'steps': [{'feature': 'network_load', 'value': np.float64(0.8), 'effect': 'multiply prob by 0.520 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.73), 'effect': 'multiply prob by 1.595 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.37), 'effect': 'multiply prob by 0.741 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.1), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.8,0.73,0.37,0.15,0.0030729270000000005,"{'timestamp': 1760866780.2466767, 'inputs': {'network_load': np.float64(0.8), 'relay_reputation': np.float64(0.73), 'budget_utilization': np.float64(0.37), 'recent_win_rate': np.float64(0.15)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0030729270000000005), 'steps': [{'feature': 'network_load', 'value': np.float64(0.8), 'effect': 'multiply prob by 0.520 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.73), 'effect': 'multiply prob by 1.595 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.37), 'effect': 'multiply prob by 0.741 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.15), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.8,0.73,0.37,0.2,0.0030729270000000005,"{'timestamp': 1760866780.2467036, 'inputs': {'network_load': np.float64(0.8), 'relay_reputation': np.float64(0.73), 'budget_utilization': np.float64(0.37), 'recent_win_rate': np.float64(0.2)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0030729270000000005), 'steps': [{'feature': 'network_load', 'value': np.float64(0.8), 'effect': 'multiply prob by 0.520 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.73), 'effect': 'multiply prob by 1.595 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.37), 'effect': 'multiply prob by 0.741 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.2), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.8,0.73,0.37,0.25,0.0030729270000000005,"{'timestamp': 1760866780.2467327, 'inputs': {'network_load': np.float64(0.8), 'relay_reputation': np.float64(0.73), 'budget_utilization': np.float64(0.37), 'recent_win_rate': np.float64(0.25)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0030729270000000005), 'steps': [{'feature': 'network_load', 'value': np.float64(0.8), 'effect': 'multiply prob by 0.520 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.73), 'effect': 'multiply prob by 1.595 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.37), 'effect': 'multiply prob by 0.741 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.25), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.8,0.73,0.37,0.3,0.0030729270000000005,"{'timestamp': 1760866780.246758, 'inputs': {'network_load': np.float64(0.8), 'relay_reputation': np.float64(0.73), 'budget_utilization': np.float64(0.37), 'recent_win_rate': np.float64(0.3)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0030729270000000005), 'steps': [{'feature': 'network_load', 'value': np.float64(0.8), 'effect': 'multiply prob by 0.520 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.73), 'effect': 'multiply prob by 1.595 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.37), 'effect': 'multiply prob by 0.741 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.3), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.8,0.73,0.48,0.0,0.00550721594492784,"{'timestamp': 1760866780.2468424, 'inputs': {'network_load': np.float64(0.8), 'relay_reputation': np.float64(0.73), 'budget_utilization': np.float64(0.48), 'recent_win_rate': 1e-09}, 'base_prob': 0.01, 'final_prob': np.float64(0.00550721594492784), 'steps': [{'feature': 'network_load', 'value': np.float64(0.8), 'effect': 'multiply prob by 0.520 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.73), 'effect': 'multiply prob by 1.595 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.48), 'effect': 'multiply prob by 0.664 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': 1e-09, 'effect': 'multiply prob by 1.000 (higher recent wins -> lower prob)'}]}"
0.8,0.73,0.48,0.05,0.0027536080000000003,"{'timestamp': 1760866780.2468696, 'inputs': {'network_load': np.float64(0.8), 'relay_reputation': np.float64(0.73), 'budget_utilization': np.float64(0.48), 'recent_win_rate': np.float64(0.05)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0027536080000000003), 'steps': [{'feature': 'network_load', 'value': np.float64(0.8), 'effect': 'multiply prob by 0.520 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.73), 'effect': 'multiply prob by 1.595 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.48), 'effect': 'multiply prob by 0.664 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.05), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.8,0.73,0.48,0.1,0.0027536080000000003,"{'timestamp': 1760866780.2469075, 'inputs': {'network_load': np.float64(0.8), 'relay_reputation': np.float64(0.73), 'budget_utilization': np.float64(0.48), 'recent_win_rate': np.float64(0.1)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0027536080000000003), 'steps': [{'feature': 'network_load', 'value': np.float64(0.8), 'effect': 'multiply prob by 0.520 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.73), 'effect': 'multiply prob by 1.595 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.48), 'effect': 'multiply prob by 0.664 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.1), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.8,0.73,0.48,0.15,0.0027536080000000003,"{'timestamp': 1760866780.2469358, 'inputs': {'network_load': np.float64(0.8), 'relay_reputation': np.float64(0.73), 'budget_utilization': np.float64(0.48), 'recent_win_rate': np.float64(0.15)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0027536080000000003), 'steps': [{'feature': 'network_load', 'value': np.float64(0.8), 'effect': 'multiply prob by 0.520 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.73), 'effect': 'multiply prob by 1.595 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.48), 'effect': 'multiply prob by 0.664 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.15), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.8,0.73,0.48,0.2,0.0027536080000000003,"{'timestamp': 1760866780.2469628, 'inputs': {'network_load': np.float64(0.8), 'relay_reputation': np.float64(0.73), 'budget_utilization': np.float64(0.48), 'recent_win_rate': np.float64(0.2)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0027536080000000003), 'steps': [{'feature': 'network_load', 'value': np.float64(0.8), 'effect': 'multiply prob by 0.520 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.73), 'effect': 'multiply prob by 1.595 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.48), 'effect': 'multiply prob by 0.664 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.2), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.8,0.73,0.48,0.25,0.0027536080000000003,"{'timestamp': 1760866780.2469897, 'inputs': {'network_load': np.float64(0.8), 'relay_reputation': np.float64(0.73), 'budget_utilization': np.float64(0.48), 'recent_win_rate': np.float64(0.25)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0027536080000000003), 'steps': [{'feature': 'network_load', 'value': np.float64(0.8), 'effect': 'multiply prob by 0.520 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.73), 'effect': 'multiply prob by 1.595 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.48), 'effect': 'multiply prob by 0.664 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.25), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.8,0.73,0.48,0.3,0.0027536080000000003,"{'timestamp': 1760866780.2470152, 'inputs': {'network_load': np.float64(0.8), 'relay_reputation': np.float64(0.73), 'budget_utilization': np.float64(0.48), 'recent_win_rate': np.float64(0.3)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0027536080000000003), 'steps': [{'feature': 'network_load', 'value': np.float64(0.8), 'effect': 'multiply prob by 0.520 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.73), 'effect': 'multiply prob by 1.595 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.48), 'effect': 'multiply prob by 0.664 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.3), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.8,0.73,0.59,0.0,0.00486857795131422,"{'timestamp': 1760866780.2470427, 'inputs': {'network_load': np.float64(0.8), 'relay_reputation': np.float64(0.73), 'budget_utilization': np.float64(0.59), 'recent_win_rate': 1e-09}, 'base_prob': 0.01, 'final_prob': np.float64(0.00486857795131422), 'steps': [{'feature': 'network_load', 'value': np.float64(0.8), 'effect': 'multiply prob by 0.520 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.73), 'effect': 'multiply prob by 1.595 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.59), 'effect': 'multiply prob by 0.587 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': 1e-09, 'effect': 'multiply prob by 1.000 (higher recent wins -> lower prob)'}]}"
0.8,0.73,0.59,0.05,0.002434289,"{'timestamp': 1760866780.2470973, 'inputs': {'network_load': np.float64(0.8), 'relay_reputation': np.float64(0.73), 'budget_utilization': np.float64(0.59), 'recent_win_rate': np.float64(0.05)}, 'base_prob': 0.01, 'final_prob': np.float64(0.002434289), 'steps': [{'feature': 'network_load', 'value': np.float64(0.8), 'effect': 'multiply prob by 0.520 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.73), 'effect': 'multiply prob by 1.595 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.59), 'effect': 'multiply prob by 0.587 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.05), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.8,0.73,0.59,0.1,0.002434289,"{'timestamp': 1760866780.2471292, 'inputs': {'network_load': np.float64(0.8), 'relay_reputation': np.float64(0.73), 'budget_utilization': np.float64(0.59), 'recent_win_rate': np.float64(0.1)}, 'base_prob': 0.01, 'final_prob': np.float64(0.002434289), 'steps': [{'feature': 'network_load', 'value': np.float64(0.8), 'effect': 'multiply prob by 0.520 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.73), 'effect': 'multiply prob by 1.595 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.59), 'effect': 'multiply prob by 0.587 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.1), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.8,0.73,0.59,0.15,0.002434289,"{'timestamp': 1760866780.2471547, 'inputs': {'network_load': np.float64(0.8), 'relay_reputation': np.float64(0.73), 'budget_utilization': np.float64(0.59), 'recent_win_rate': np.float64(0.15)}, 'base_prob': 0.01, 'final_prob': np.float64(0.002434289), 'steps': [{'feature': 'network_load', 'value': np.float64(0.8), 'effect': 'multiply prob by 0.520 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.73), 'effect': 'multiply prob by 1.595 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.59), 'effect': 'multiply prob by 0.587 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.15), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.8,0.73,0.59,0.2,0.002434289,"{'timestamp': 1760866780.2471817, 'inputs': {'network_load': np.float64(0.8), 'relay_reputation': np.float64(0.73), 'budget_utilization': np.float64(0.59), 'recent_win_rate': np.float64(0.2)}, 'base_prob': 0.01, 'final_prob': np.float64(0.002434289), 'steps': [{'feature': 'network_load', 'value': np.float64(0.8), 'effect': 'multiply prob by 0.520 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.73), 'effect': 'multiply prob by 1.595 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.59), 'effect': 'multiply prob by 0.587 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.2), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.8,0.73,0.59,0.25,0.002434289,"{'timestamp': 1760866780.247207, 'inputs': {'network_load': np.float64(0.8), 'relay_reputation': np.float64(0.73), 'budget_utilization': np.float64(0.59), 'recent_win_rate': np.float64(0.25)}, 'base_prob': 0.01, 'final_prob': np.float64(0.002434289), 'steps': [{'feature': 'network_load', 'value': np.float64(0.8), 'effect': 'multiply prob by 0.520 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.73), 'effect': 'multiply prob by 1.595 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.59), 'effect': 'multiply prob by 0.587 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.25), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.8,0.73,0.59,0.3,0.002434289,"{'timestamp': 1760866780.2472355, 'inputs': {'network_load': np.float64(0.8), 'relay_reputation': np.float64(0.73), 'budget_utilization': np.float64(0.59), 'recent_win_rate': np.float64(0.3)}, 'base_prob': 0.01, 'final_prob': np.float64(0.002434289), 'steps': [{'feature': 'network_load', 'value': np.float64(0.8), 'effect': 'multiply prob by 0.520 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.73), 'effect': 'multiply prob by 1.595 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.59), 'effect': 'multiply prob by 0.587 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.3), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.8,0.73,0.69,0.0,0.004287997957120021,"{'timestamp': 1760866780.2472663, 'inputs': {'network_load': np.float64(0.8), 'relay_reputation': np.float64(0.73), 'budget_utilization': np.float64(0.69), 'recent_win_rate': 1e-09}, 'base_prob': 0.01, 'final_prob': np.float64(0.004287997957120021), 'steps': [{'feature': 'network_load', 'value': np.float64(0.8), 'effect': 'multiply prob by 0.520 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.73), 'effect': 'multiply prob by 1.595 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.69), 'effect': 'multiply prob by 0.517 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': 1e-09, 'effect': 'multiply prob by 1.000 (higher recent wins -> lower prob)'}]}"
0.8,0.73,0.69,0.05,0.0021439990000000006,"{'timestamp': 1760866780.2472918, 'inputs': {'network_load': np.float64(0.8), 'relay_reputation': np.float64(0.73), 'budget_utilization': np.float64(0.69), 'recent_win_rate': np.float64(0.05)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0021439990000000006), 'steps': [{'feature': 'network_load', 'value': np.float64(0.8), 'effect': 'multiply prob by 0.520 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.73), 'effect': 'multiply prob by 1.595 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.69), 'effect': 'multiply prob by 0.517 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.05), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.8,0.73,0.69,0.1,0.0021439990000000006,"{'timestamp': 1760866780.2473238, 'inputs': {'network_load': np.float64(0.8), 'relay_reputation': np.float64(0.73), 'budget_utilization': np.float64(0.69), 'recent_win_rate': np.float64(0.1)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0021439990000000006), 'steps': [{'feature': 'network_load', 'value': np.float64(0.8), 'effect': 'multiply prob by 0.520 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.73), 'effect': 'multiply prob by 1.595 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.69), 'effect': 'multiply prob by 0.517 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.1), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.8,0.73,0.69,0.15,0.0021439990000000006,"{'timestamp': 1760866780.2473536, 'inputs': {'network_load': np.float64(0.8), 'relay_reputation': np.float64(0.73), 'budget_utilization': np.float64(0.69), 'recent_win_rate': np.float64(0.15)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0021439990000000006), 'steps': [{'feature': 'network_load', 'value': np.float64(0.8), 'effect': 'multiply prob by 0.520 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.73), 'effect': 'multiply prob by 1.595 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.69), 'effect': 'multiply prob by 0.517 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.15), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.8,0.73,0.69,0.2,0.0021439990000000006,"{'timestamp': 1760866780.2473788, 'inputs': {'network_load': np.float64(0.8), 'relay_reputation': np.float64(0.73), 'budget_utilization': np.float64(0.69), 'recent_win_rate': np.float64(0.2)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0021439990000000006), 'steps': [{'feature': 'network_load', 'value': np.float64(0.8), 'effect': 'multiply prob by 0.520 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.73), 'effect': 'multiply prob by 1.595 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.69), 'effect': 'multiply prob by 0.517 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.2), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.8,0.73,0.69,0.25,0.0021439990000000006,"{'timestamp': 1760866780.2474086, 'inputs': {'network_load': np.float64(0.8), 'relay_reputation': np.float64(0.73), 'budget_utilization': np.float64(0.69), 'recent_win_rate': np.float64(0.25)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0021439990000000006), 'steps': [{'feature': 'network_load', 'value': np.float64(0.8), 'effect': 'multiply prob by 0.520 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.73), 'effect': 'multiply prob by 1.595 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.69), 'effect': 'multiply prob by 0.517 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.25), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.8,0.73,0.69,0.3,0.0021439990000000006,"{'timestamp': 1760866780.2474341, 'inputs': {'network_load': np.float64(0.8), 'relay_reputation': np.float64(0.73), 'budget_utilization': np.float64(0.69), 'recent_win_rate': np.float64(0.3)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0021439990000000006), 'steps': [{'feature': 'network_load', 'value': np.float64(0.8), 'effect': 'multiply prob by 0.520 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.73), 'effect': 'multiply prob by 1.595 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.69), 'effect': 'multiply prob by 0.517 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.3), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.8,0.73,0.8,0.0,0.0036493599635064006,"{'timestamp': 1760866780.2474613, 'inputs': {'network_load': np.float64(0.8), 'relay_reputation': np.float64(0.73), 'budget_utilization': np.float64(0.8), 'recent_win_rate': 1e-09}, 'base_prob': 0.01, 'final_prob': np.float64(0.0036493599635064006), 'steps': [{'feature': 'network_load', 'value': np.float64(0.8), 'effect': 'multiply prob by 0.520 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.73), 'effect': 'multiply prob by 1.595 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.8), 'effect': 'multiply prob by 0.440 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': 1e-09, 'effect': 'multiply prob by 1.000 (higher recent wins -> lower prob)'}]}"
0.8,0.73,0.8,0.05,0.0018246800000000004,"{'timestamp': 1760866780.2474864, 'inputs': {'network_load': np.float64(0.8), 'relay_reputation': np.float64(0.73), 'budget_utilization': np.float64(0.8), 'recent_win_rate': np.float64(0.05)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0018246800000000004), 'steps': [{'feature': 'network_load', 'value': np.float64(0.8), 'effect': 'multiply prob by 0.520 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.73), 'effect': 'multiply prob by 1.595 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.8), 'effect': 'multiply prob by 0.440 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.05), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.8,0.73,0.8,0.1,0.0018246800000000004,"{'timestamp': 1760866780.2475133, 'inputs': {'network_load': np.float64(0.8), 'relay_reputation': np.float64(0.73), 'budget_utilization': np.float64(0.8), 'recent_win_rate': np.float64(0.1)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0018246800000000004), 'steps': [{'feature': 'network_load', 'value': np.float64(0.8), 'effect': 'multiply prob by 0.520 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.73), 'effect': 'multiply prob by 1.595 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.8), 'effect': 'multiply prob by 0.440 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.1), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.8,0.73,0.8,0.15,0.0018246800000000004,"{'timestamp': 1760866780.247539, 'inputs': {'network_load': np.float64(0.8), 'relay_reputation': np.float64(0.73), 'budget_utilization': np.float64(0.8), 'recent_win_rate': np.float64(0.15)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0018246800000000004), 'steps': [{'feature': 'network_load', 'value': np.float64(0.8), 'effect': 'multiply prob by 0.520 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.73), 'effect': 'multiply prob by 1.595 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.8), 'effect': 'multiply prob by 0.440 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.15), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.8,0.73,0.8,0.2,0.0018246800000000004,"{'timestamp': 1760866780.2475655, 'inputs': {'network_load': np.float64(0.8), 'relay_reputation': np.float64(0.73), 'budget_utilization': np.float64(0.8), 'recent_win_rate': np.float64(0.2)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0018246800000000004), 'steps': [{'feature': 'network_load', 'value': np.float64(0.8), 'effect': 'multiply prob by 0.520 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.73), 'effect': 'multiply prob by 1.595 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.8), 'effect': 'multiply prob by 0.440 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.2), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.8,0.73,0.8,0.25,0.0018246800000000004,"{'timestamp': 1760866780.2475905, 'inputs': {'network_load': np.float64(0.8), 'relay_reputation': np.float64(0.73), 'budget_utilization': np.float64(0.8), 'recent_win_rate': np.float64(0.25)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0018246800000000004), 'steps': [{'feature': 'network_load', 'value': np.float64(0.8), 'effect': 'multiply prob by 0.520 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.73), 'effect': 'multiply prob by 1.595 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.8), 'effect': 'multiply prob by 0.440 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.25), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.8,0.73,0.8,0.3,0.0018246800000000004,"{'timestamp': 1760866780.2476199, 'inputs': {'network_load': np.float64(0.8), 'relay_reputation': np.float64(0.73), 'budget_utilization': np.float64(0.8), 'recent_win_rate': np.float64(0.3)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0018246800000000004), 'steps': [{'feature': 'network_load', 'value': np.float64(0.8), 'effect': 'multiply prob by 0.520 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.73), 'effect': 'multiply prob by 1.595 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.8), 'effect': 'multiply prob by 0.440 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.3), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.8,0.84,0.05,0.0,0.0088316799116832,"{'timestamp': 1760866780.2476478, 'inputs': {'network_load': np.float64(0.8), 'relay_reputation': np.float64(0.84), 'budget_utilization': np.float64(0.05), 'recent_win_rate': 1e-09}, 'base_prob': 0.01, 'final_prob': np.float64(0.0088316799116832), 'steps': [{'feature': 'network_load', 'value': np.float64(0.8), 'effect': 'multiply prob by 0.520 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.84), 'effect': 'multiply prob by 1.760 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.05), 'effect': 'multiply prob by 0.965 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': 1e-09, 'effect': 'multiply prob by 1.000 (higher recent wins -> lower prob)'}]}"
0.8,0.84,0.05,0.05,0.00441584,"{'timestamp': 1760866780.247675, 'inputs': {'network_load': np.float64(0.8), 'relay_reputation': np.float64(0.84), 'budget_utilization': np.float64(0.05), 'recent_win_rate': np.float64(0.05)}, 'base_prob': 0.01, 'final_prob': np.float64(0.00441584), 'steps': [{'feature': 'network_load', 'value': np.float64(0.8), 'effect': 'multiply prob by 0.520 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.84), 'effect': 'multiply prob by 1.760 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.05), 'effect': 'multiply prob by 0.965 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.05), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.8,0.84,0.05,0.1,0.00441584,"{'timestamp': 1760866780.2477572, 'inputs': {'network_load': np.float64(0.8), 'relay_reputation': np.float64(0.84), 'budget_utilization': np.float64(0.05), 'recent_win_rate': np.float64(0.1)}, 'base_prob': 0.01, 'final_prob': np.float64(0.00441584), 'steps': [{'feature': 'network_load', 'value': np.float64(0.8), 'effect': 'multiply prob by 0.520 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.84), 'effect': 'multiply prob by 1.760 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.05), 'effect': 'multiply prob by 0.965 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.1), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.8,0.84,0.05,0.15,0.00441584,"{'timestamp': 1760866780.247784, 'inputs': {'network_load': np.float64(0.8), 'relay_reputation': np.float64(0.84), 'budget_utilization': np.float64(0.05), 'recent_win_rate': np.float64(0.15)}, 'base_prob': 0.01, 'final_prob': np.float64(0.00441584), 'steps': [{'feature': 'network_load', 'value': np.float64(0.8), 'effect': 'multiply prob by 0.520 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.84), 'effect': 'multiply prob by 1.760 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.05), 'effect': 'multiply prob by 0.965 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.15), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.8,0.84,0.05,0.2,0.00441584,"{'timestamp': 1760866780.2478096, 'inputs': {'network_load': np.float64(0.8), 'relay_reputation': np.float64(0.84), 'budget_utilization': np.float64(0.05), 'recent_win_rate': np.float64(0.2)}, 'base_prob': 0.01, 'final_prob': np.float64(0.00441584), 'steps': [{'feature': 'network_load', 'value': np.float64(0.8), 'effect': 'multiply prob by 0.520 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.84), 'effect': 'multiply prob by 1.760 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.05), 'effect': 'multiply prob by 0.965 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.2), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.8,0.84,0.05,0.25,0.00441584,"{'timestamp': 1760866780.2478347, 'inputs': {'network_load': np.float64(0.8), 'relay_reputation': np.float64(0.84), 'budget_utilization': np.float64(0.05), 'recent_win_rate': np.float64(0.25)}, 'base_prob': 0.01, 'final_prob': np.float64(0.00441584), 'steps': [{'feature': 'network_load', 'value': np.float64(0.8), 'effect': 'multiply prob by 0.520 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.84), 'effect': 'multiply prob by 1.760 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.05), 'effect': 'multiply prob by 0.965 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.25), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.8,0.84,0.05,0.3,0.00441584,"{'timestamp': 1760866780.24786, 'inputs': {'network_load': np.float64(0.8), 'relay_reputation': np.float64(0.84), 'budget_utilization': np.float64(0.05), 'recent_win_rate': np.float64(0.3)}, 'base_prob': 0.01, 'final_prob': np.float64(0.00441584), 'steps': [{'feature': 'network_load', 'value': np.float64(0.8), 'effect': 'multiply prob by 0.520 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.84), 'effect': 'multiply prob by 1.760 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.05), 'effect': 'multiply prob by 0.965 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.3), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.8,0.84,0.16,0.0,0.008126975918730241,"{'timestamp': 1760866780.247893, 'inputs': {'network_load': np.float64(0.8), 'relay_reputation': np.float64(0.84), 'budget_utilization': np.float64(0.16), 'recent_win_rate': 1e-09}, 'base_prob': 0.01, 'final_prob': np.float64(0.008126975918730241), 'steps': [{'feature': 'network_load', 'value': np.float64(0.8), 'effect': 'multiply prob by 0.520 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.84), 'effect': 'multiply prob by 1.760 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.16), 'effect': 'multiply prob by 0.888 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': 1e-09, 'effect': 'multiply prob by 1.000 (higher recent wins -> lower prob)'}]}"
0.8,0.84,0.16,0.05,0.0040634880000000005,"{'timestamp': 1760866780.247919, 'inputs': {'network_load': np.float64(0.8), 'relay_reputation': np.float64(0.84), 'budget_utilization': np.float64(0.16), 'recent_win_rate': np.float64(0.05)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0040634880000000005), 'steps': [{'feature': 'network_load', 'value': np.float64(0.8), 'effect': 'multiply prob by 0.520 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.84), 'effect': 'multiply prob by 1.760 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.16), 'effect': 'multiply prob by 0.888 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.05), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.8,0.84,0.16,0.1,0.0040634880000000005,"{'timestamp': 1760866780.247944, 'inputs': {'network_load': np.float64(0.8), 'relay_reputation': np.float64(0.84), 'budget_utilization': np.float64(0.16), 'recent_win_rate': np.float64(0.1)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0040634880000000005), 'steps': [{'feature': 'network_load', 'value': np.float64(0.8), 'effect': 'multiply prob by 0.520 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.84), 'effect': 'multiply prob by 1.760 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.16), 'effect': 'multiply prob by 0.888 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.1), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.8,0.84,0.16,0.15,0.0040634880000000005,"{'timestamp': 1760866780.2479715, 'inputs': {'network_load': np.float64(0.8), 'relay_reputation': np.float64(0.84), 'budget_utilization': np.float64(0.16), 'recent_win_rate': np.float64(0.15)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0040634880000000005), 'steps': [{'feature': 'network_load', 'value': np.float64(0.8), 'effect': 'multiply prob by 0.520 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.84), 'effect': 'multiply prob by 1.760 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.16), 'effect': 'multiply prob by 0.888 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.15), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.8,0.84,0.16,0.2,0.0040634880000000005,"{'timestamp': 1760866780.2479987, 'inputs': {'network_load': np.float64(0.8), 'relay_reputation': np.float64(0.84), 'budget_utilization': np.float64(0.16), 'recent_win_rate': np.float64(0.2)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0040634880000000005), 'steps': [{'feature': 'network_load', 'value': np.float64(0.8), 'effect': 'multiply prob by 0.520 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.84), 'effect': 'multiply prob by 1.760 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.16), 'effect': 'multiply prob by 0.888 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.2), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.8,0.84,0.16,0.25,0.0040634880000000005,"{'timestamp': 1760866780.2480237, 'inputs': {'network_load': np.float64(0.8), 'relay_reputation': np.float64(0.84), 'budget_utilization': np.float64(0.16), 'recent_win_rate': np.float64(0.25)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0040634880000000005), 'steps': [{'feature': 'network_load', 'value': np.float64(0.8), 'effect': 'multiply prob by 0.520 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.84), 'effect': 'multiply prob by 1.760 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.16), 'effect': 'multiply prob by 0.888 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.25), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.8,0.84,0.16,0.3,0.0040634880000000005,"{'timestamp': 1760866780.2480526, 'inputs': {'network_load': np.float64(0.8), 'relay_reputation': np.float64(0.84), 'budget_utilization': np.float64(0.16), 'recent_win_rate': np.float64(0.3)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0040634880000000005), 'steps': [{'feature': 'network_load', 'value': np.float64(0.8), 'effect': 'multiply prob by 0.520 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.84), 'effect': 'multiply prob by 1.760 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.16), 'effect': 'multiply prob by 0.888 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.3), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.8,0.84,0.26,0.0,0.00748633592513664,"{'timestamp': 1760866780.2480798, 'inputs': {'network_load': np.float64(0.8), 'relay_reputation': np.float64(0.84), 'budget_utilization': np.float64(0.26), 'recent_win_rate': 1e-09}, 'base_prob': 0.01, 'final_prob': np.float64(0.00748633592513664), 'steps': [{'feature': 'network_load', 'value': np.float64(0.8), 'effect': 'multiply prob by 0.520 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.84), 'effect': 'multiply prob by 1.760 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.26), 'effect': 'multiply prob by 0.818 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': 1e-09, 'effect': 'multiply prob by 1.000 (higher recent wins -> lower prob)'}]}"
0.8,0.84,0.26,0.05,0.0037431680000000003,"{'timestamp': 1760866780.248107, 'inputs': {'network_load': np.float64(0.8), 'relay_reputation': np.float64(0.84), 'budget_utilization': np.float64(0.26), 'recent_win_rate': np.float64(0.05)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0037431680000000003), 'steps': [{'feature': 'network_load', 'value': np.float64(0.8), 'effect': 'multiply prob by 0.520 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.84), 'effect': 'multiply prob by 1.760 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.26), 'effect': 'multiply prob by 0.818 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.05), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.8,0.84,0.26,0.1,0.0037431680000000003,"{'timestamp': 1760866780.2481327, 'inputs': {'network_load': np.float64(0.8), 'relay_reputation': np.float64(0.84), 'budget_utilization': np.float64(0.26), 'recent_win_rate': np.float64(0.1)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0037431680000000003), 'steps': [{'feature': 'network_load', 'value': np.float64(0.8), 'effect': 'multiply prob by 0.520 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.84), 'effect': 'multiply prob by 1.760 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.26), 'effect': 'multiply prob by 0.818 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.1), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.8,0.84,0.26,0.15,0.0037431680000000003,"{'timestamp': 1760866780.24816, 'inputs': {'network_load': np.float64(0.8), 'relay_reputation': np.float64(0.84), 'budget_utilization': np.float64(0.26), 'recent_win_rate': np.float64(0.15)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0037431680000000003), 'steps': [{'feature': 'network_load', 'value': np.float64(0.8), 'effect': 'multiply prob by 0.520 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.84), 'effect': 'multiply prob by 1.760 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.26), 'effect': 'multiply prob by 0.818 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.15), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.8,0.84,0.26,0.2,0.0037431680000000003,"{'timestamp': 1760866780.2481868, 'inputs': {'network_load': np.float64(0.8), 'relay_reputation': np.float64(0.84), 'budget_utilization': np.float64(0.26), 'recent_win_rate': np.float64(0.2)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0037431680000000003), 'steps': [{'feature': 'network_load', 'value': np.float64(0.8), 'effect': 'multiply prob by 0.520 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.84), 'effect': 'multiply prob by 1.760 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.26), 'effect': 'multiply prob by 0.818 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.2), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.8,0.84,0.26,0.25,0.0037431680000000003,"{'timestamp': 1760866780.2482123, 'inputs': {'network_load': np.float64(0.8), 'relay_reputation': np.float64(0.84), 'budget_utilization': np.float64(0.26), 'recent_win_rate': np.float64(0.25)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0037431680000000003), 'steps': [{'feature': 'network_load', 'value': np.float64(0.8), 'effect': 'multiply prob by 0.520 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.84), 'effect': 'multiply prob by 1.760 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.26), 'effect': 'multiply prob by 0.818 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.25), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.8,0.84,0.26,0.3,0.0037431680000000003,"{'timestamp': 1760866780.2482376, 'inputs': {'network_load': np.float64(0.8), 'relay_reputation': np.float64(0.84), 'budget_utilization': np.float64(0.26), 'recent_win_rate': np.float64(0.3)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0037431680000000003), 'steps': [{'feature': 'network_load', 'value': np.float64(0.8), 'effect': 'multiply prob by 0.520 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.84), 'effect': 'multiply prob by 1.760 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.26), 'effect': 'multiply prob by 0.818 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.3), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.8,0.84,0.37,0.0,0.00678163193218368,"{'timestamp': 1760866780.2482648, 'inputs': {'network_load': np.float64(0.8), 'relay_reputation': np.float64(0.84), 'budget_utilization': np.float64(0.37), 'recent_win_rate': 1e-09}, 'base_prob': 0.01, 'final_prob': np.float64(0.00678163193218368), 'steps': [{'feature': 'network_load', 'value': np.float64(0.8), 'effect': 'multiply prob by 0.520 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.84), 'effect': 'multiply prob by 1.760 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.37), 'effect': 'multiply prob by 0.741 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': 1e-09, 'effect': 'multiply prob by 1.000 (higher recent wins -> lower prob)'}]}"
0.8,0.84,0.37,0.05,0.003390816,"{'timestamp': 1760866780.2482898, 'inputs': {'network_load': np.float64(0.8), 'relay_reputation': np.float64(0.84), 'budget_utilization': np.float64(0.37), 'recent_win_rate': np.float64(0.05)}, 'base_prob': 0.01, 'final_prob': np.float64(0.003390816), 'steps': [{'feature': 'network_load', 'value': np.float64(0.8), 'effect': 'multiply prob by 0.520 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.84), 'effect': 'multiply prob by 1.760 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.37), 'effect': 'multiply prob by 0.741 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.05), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.8,0.84,0.37,0.1,0.003390816,"{'timestamp': 1760866780.248326, 'inputs': {'network_load': np.float64(0.8), 'relay_reputation': np.float64(0.84), 'budget_utilization': np.float64(0.37), 'recent_win_rate': np.float64(0.1)}, 'base_prob': 0.01, 'final_prob': np.float64(0.003390816), 'steps': [{'feature': 'network_load', 'value': np.float64(0.8), 'effect': 'multiply prob by 0.520 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.84), 'effect': 'multiply prob by 1.760 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.37), 'effect': 'multiply prob by 0.741 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.1), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.8,0.84,0.37,0.15,0.003390816,"{'timestamp': 1760866780.2483573, 'inputs': {'network_load': np.float64(0.8), 'relay_reputation': np.float64(0.84), 'budget_utilization': np.float64(0.37), 'recent_win_rate': np.float64(0.15)}, 'base_prob': 0.01, 'final_prob': np.float64(0.003390816), 'steps': [{'feature': 'network_load', 'value': np.float64(0.8), 'effect': 'multiply prob by 0.520 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.84), 'effect': 'multiply prob by 1.760 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.37), 'effect': 'multiply prob by 0.741 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.15), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.8,0.84,0.37,0.2,0.003390816,"{'timestamp': 1760866780.2483826, 'inputs': {'network_load': np.float64(0.8), 'relay_reputation': np.float64(0.84), 'budget_utilization': np.float64(0.37), 'recent_win_rate': np.float64(0.2)}, 'base_prob': 0.01, 'final_prob': np.float64(0.003390816), 'steps': [{'feature': 'network_load', 'value': np.float64(0.8), 'effect': 'multiply prob by 0.520 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.84), 'effect': 'multiply prob by 1.760 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.37), 'effect': 'multiply prob by 0.741 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.2), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.8,0.84,0.37,0.25,0.003390816,"{'timestamp': 1760866780.2484078, 'inputs': {'network_load': np.float64(0.8), 'relay_reputation': np.float64(0.84), 'budget_utilization': np.float64(0.37), 'recent_win_rate': np.float64(0.25)}, 'base_prob': 0.01, 'final_prob': np.float64(0.003390816), 'steps': [{'feature': 'network_load', 'value': np.float64(0.8), 'effect': 'multiply prob by 0.520 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.84), 'effect': 'multiply prob by 1.760 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.37), 'effect': 'multiply prob by 0.741 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.25), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.8,0.84,0.37,0.3,0.003390816,"{'timestamp': 1760866780.248435, 'inputs': {'network_load': np.float64(0.8), 'relay_reputation': np.float64(0.84), 'budget_utilization': np.float64(0.37), 'recent_win_rate': np.float64(0.3)}, 'base_prob': 0.01, 'final_prob': np.float64(0.003390816), 'steps': [{'feature': 'network_load', 'value': np.float64(0.8), 'effect': 'multiply prob by 0.520 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.84), 'effect': 'multiply prob by 1.760 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.37), 'effect': 'multiply prob by 0.741 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.3), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.8,0.84,0.48,0.0,0.00607692793923072,"{'timestamp': 1760866780.2484736, 'inputs': {'network_load': np.float64(0.8), 'relay_reputation': np.float64(0.84), 'budget_utilization': np.float64(0.48), 'recent_win_rate': 1e-09}, 'base_prob': 0.01, 'final_prob': np.float64(0.00607692793923072), 'steps': [{'feature': 'network_load', 'value': np.float64(0.8), 'effect': 'multiply prob by 0.520 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.84), 'effect': 'multiply prob by 1.760 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.48), 'effect': 'multiply prob by 0.664 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': 1e-09, 'effect': 'multiply prob by 1.000 (higher recent wins -> lower prob)'}]}"
0.8,0.84,0.48,0.05,0.0030384640000000003,"{'timestamp': 1760866780.2485063, 'inputs': {'network_load': np.float64(0.8), 'relay_reputation': np.float64(0.84), 'budget_utilization': np.float64(0.48), 'recent_win_rate': np.float64(0.05)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0030384640000000003), 'steps': [{'feature': 'network_load', 'value': np.float64(0.8), 'effect': 'multiply prob by 0.520 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.84), 'effect': 'multiply prob by 1.760 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.48), 'effect': 'multiply prob by 0.664 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.05), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.8,0.84,0.48,0.1,0.0030384640000000003,"{'timestamp': 1760866780.248544, 'inputs': {'network_load': np.float64(0.8), 'relay_reputation': np.float64(0.84), 'budget_utilization': np.float64(0.48), 'recent_win_rate': np.float64(0.1)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0030384640000000003), 'steps': [{'feature': 'network_load', 'value': np.float64(0.8), 'effect': 'multiply prob by 0.520 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.84), 'effect': 'multiply prob by 1.760 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.48), 'effect': 'multiply prob by 0.664 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.1), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.8,0.84,0.48,0.15,0.0030384640000000003,"{'timestamp': 1760866780.2485883, 'inputs': {'network_load': np.float64(0.8), 'relay_reputation': np.float64(0.84), 'budget_utilization': np.float64(0.48), 'recent_win_rate': np.float64(0.15)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0030384640000000003), 'steps': [{'feature': 'network_load', 'value': np.float64(0.8), 'effect': 'multiply prob by 0.520 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.84), 'effect': 'multiply prob by 1.760 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.48), 'effect': 'multiply prob by 0.664 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.15), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.8,0.84,0.48,0.2,0.0030384640000000003,"{'timestamp': 1760866780.2487004, 'inputs': {'network_load': np.float64(0.8), 'relay_reputation': np.float64(0.84), 'budget_utilization': np.float64(0.48), 'recent_win_rate': np.float64(0.2)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0030384640000000003), 'steps': [{'feature': 'network_load', 'value': np.float64(0.8), 'effect': 'multiply prob by 0.520 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.84), 'effect': 'multiply prob by 1.760 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.48), 'effect': 'multiply prob by 0.664 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.2), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.8,0.84,0.48,0.25,0.0030384640000000003,"{'timestamp': 1760866780.2487388, 'inputs': {'network_load': np.float64(0.8), 'relay_reputation': np.float64(0.84), 'budget_utilization': np.float64(0.48), 'recent_win_rate': np.float64(0.25)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0030384640000000003), 'steps': [{'feature': 'network_load', 'value': np.float64(0.8), 'effect': 'multiply prob by 0.520 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.84), 'effect': 'multiply prob by 1.760 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.48), 'effect': 'multiply prob by 0.664 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.25), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.8,0.84,0.48,0.3,0.0030384640000000003,"{'timestamp': 1760866780.2487667, 'inputs': {'network_load': np.float64(0.8), 'relay_reputation': np.float64(0.84), 'budget_utilization': np.float64(0.48), 'recent_win_rate': np.float64(0.3)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0030384640000000003), 'steps': [{'feature': 'network_load', 'value': np.float64(0.8), 'effect': 'multiply prob by 0.520 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.84), 'effect': 'multiply prob by 1.760 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.48), 'effect': 'multiply prob by 0.664 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.3), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.8,0.84,0.59,0.0,0.00537222394627776,"{'timestamp': 1760866780.248796, 'inputs': {'network_load': np.float64(0.8), 'relay_reputation': np.float64(0.84), 'budget_utilization': np.float64(0.59), 'recent_win_rate': 1e-09}, 'base_prob': 0.01, 'final_prob': np.float64(0.00537222394627776), 'steps': [{'feature': 'network_load', 'value': np.float64(0.8), 'effect': 'multiply prob by 0.520 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.84), 'effect': 'multiply prob by 1.760 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.59), 'effect': 'multiply prob by 0.587 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': 1e-09, 'effect': 'multiply prob by 1.000 (higher recent wins -> lower prob)'}]}"
0.8,0.84,0.59,0.05,0.002686112,"{'timestamp': 1760866780.2488213, 'inputs': {'network_load': np.float64(0.8), 'relay_reputation': np.float64(0.84), 'budget_utilization': np.float64(0.59), 'recent_win_rate': np.float64(0.05)}, 'base_prob': 0.01, 'final_prob': np.float64(0.002686112), 'steps': [{'feature': 'network_load', 'value': np.float64(0.8), 'effect': 'multiply prob by 0.520 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.84), 'effect': 'multiply prob by 1.760 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.59), 'effect': 'multiply prob by 0.587 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.05), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.8,0.84,0.59,0.1,0.002686112,"{'timestamp': 1760866780.2488465, 'inputs': {'network_load': np.float64(0.8), 'relay_reputation': np.float64(0.84), 'budget_utilization': np.float64(0.59), 'recent_win_rate': np.float64(0.1)}, 'base_prob': 0.01, 'final_prob': np.float64(0.002686112), 'steps': [{'feature': 'network_load', 'value': np.float64(0.8), 'effect': 'multiply prob by 0.520 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.84), 'effect': 'multiply prob by 1.760 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.59), 'effect': 'multiply prob by 0.587 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.1), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.8,0.84,0.59,0.15,0.002686112,"{'timestamp': 1760866780.2488716, 'inputs': {'network_load': np.float64(0.8), 'relay_reputation': np.float64(0.84), 'budget_utilization': np.float64(0.59), 'recent_win_rate': np.float64(0.15)}, 'base_prob': 0.01, 'final_prob': np.float64(0.002686112), 'steps': [{'feature': 'network_load', 'value': np.float64(0.8), 'effect': 'multiply prob by 0.520 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.84), 'effect': 'multiply prob by 1.760 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.59), 'effect': 'multiply prob by 0.587 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.15), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.8,0.84,0.59,0.2,0.002686112,"{'timestamp': 1760866780.2489007, 'inputs': {'network_load': np.float64(0.8), 'relay_reputation': np.float64(0.84), 'budget_utilization': np.float64(0.59), 'recent_win_rate': np.float64(0.2)}, 'base_prob': 0.01, 'final_prob': np.float64(0.002686112), 'steps': [{'feature': 'network_load', 'value': np.float64(0.8), 'effect': 'multiply prob by 0.520 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.84), 'effect': 'multiply prob by 1.760 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.59), 'effect': 'multiply prob by 0.587 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.2), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.8,0.84,0.59,0.25,0.002686112,"{'timestamp': 1760866780.248926, 'inputs': {'network_load': np.float64(0.8), 'relay_reputation': np.float64(0.84), 'budget_utilization': np.float64(0.59), 'recent_win_rate': np.float64(0.25)}, 'base_prob': 0.01, 'final_prob': np.float64(0.002686112), 'steps': [{'feature': 'network_load', 'value': np.float64(0.8), 'effect': 'multiply prob by 0.520 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.84), 'effect': 'multiply prob by 1.760 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.59), 'effect': 'multiply prob by 0.587 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.25), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.8,0.84,0.59,0.3,0.002686112,"{'timestamp': 1760866780.248951, 'inputs': {'network_load': np.float64(0.8), 'relay_reputation': np.float64(0.84), 'budget_utilization': np.float64(0.59), 'recent_win_rate': np.float64(0.3)}, 'base_prob': 0.01, 'final_prob': np.float64(0.002686112), 'steps': [{'feature': 'network_load', 'value': np.float64(0.8), 'effect': 'multiply prob by 0.520 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.84), 'effect': 'multiply prob by 1.760 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.59), 'effect': 'multiply prob by 0.587 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.3), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.8,0.84,0.69,0.0,0.004731583952684161,"{'timestamp': 1760866780.248978, 'inputs': {'network_load': np.float64(0.8), 'relay_reputation': np.float64(0.84), 'budget_utilization': np.float64(0.69), 'recent_win_rate': 1e-09}, 'base_prob': 0.01, 'final_prob': np.float64(0.004731583952684161), 'steps': [{'feature': 'network_load', 'value': np.float64(0.8), 'effect': 'multiply prob by 0.520 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.84), 'effect': 'multiply prob by 1.760 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.69), 'effect': 'multiply prob by 0.517 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': 1e-09, 'effect': 'multiply prob by 1.000 (higher recent wins -> lower prob)'}]}"
0.8,0.84,0.69,0.05,0.0023657920000000007,"{'timestamp': 1760866780.2490032, 'inputs': {'network_load': np.float64(0.8), 'relay_reputation': np.float64(0.84), 'budget_utilization': np.float64(0.69), 'recent_win_rate': np.float64(0.05)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0023657920000000007), 'steps': [{'feature': 'network_load', 'value': np.float64(0.8), 'effect': 'multiply prob by 0.520 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.84), 'effect': 'multiply prob by 1.760 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.69), 'effect': 'multiply prob by 0.517 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.05), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.8,0.84,0.69,0.1,0.0023657920000000007,"{'timestamp': 1760866780.2490304, 'inputs': {'network_load': np.float64(0.8), 'relay_reputation': np.float64(0.84), 'budget_utilization': np.float64(0.69), 'recent_win_rate': np.float64(0.1)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0023657920000000007), 'steps': [{'feature': 'network_load', 'value': np.float64(0.8), 'effect': 'multiply prob by 0.520 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.84), 'effect': 'multiply prob by 1.760 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.69), 'effect': 'multiply prob by 0.517 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.1), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.8,0.84,0.69,0.15,0.0023657920000000007,"{'timestamp': 1760866780.2490783, 'inputs': {'network_load': np.float64(0.8), 'relay_reputation': np.float64(0.84), 'budget_utilization': np.float64(0.69), 'recent_win_rate': np.float64(0.15)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0023657920000000007), 'steps': [{'feature': 'network_load', 'value': np.float64(0.8), 'effect': 'multiply prob by 0.520 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.84), 'effect': 'multiply prob by 1.760 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.69), 'effect': 'multiply prob by 0.517 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.15), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.8,0.84,0.69,0.2,0.0023657920000000007,"{'timestamp': 1760866780.2491143, 'inputs': {'network_load': np.float64(0.8), 'relay_reputation': np.float64(0.84), 'budget_utilization': np.float64(0.69), 'recent_win_rate': np.float64(0.2)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0023657920000000007), 'steps': [{'feature': 'network_load', 'value': np.float64(0.8), 'effect': 'multiply prob by 0.520 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.84), 'effect': 'multiply prob by 1.760 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.69), 'effect': 'multiply prob by 0.517 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.2), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.8,0.84,0.69,0.25,0.0023657920000000007,"{'timestamp': 1760866780.2491443, 'inputs': {'network_load': np.float64(0.8), 'relay_reputation': np.float64(0.84), 'budget_utilization': np.float64(0.69), 'recent_win_rate': np.float64(0.25)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0023657920000000007), 'steps': [{'feature': 'network_load', 'value': np.float64(0.8), 'effect': 'multiply prob by 0.520 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.84), 'effect': 'multiply prob by 1.760 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.69), 'effect': 'multiply prob by 0.517 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.25), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.8,0.84,0.69,0.3,0.0023657920000000007,"{'timestamp': 1760866780.249172, 'inputs': {'network_load': np.float64(0.8), 'relay_reputation': np.float64(0.84), 'budget_utilization': np.float64(0.69), 'recent_win_rate': np.float64(0.3)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0023657920000000007), 'steps': [{'feature': 'network_load', 'value': np.float64(0.8), 'effect': 'multiply prob by 0.520 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.84), 'effect': 'multiply prob by 1.760 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.69), 'effect': 'multiply prob by 0.517 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.3), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.8,0.84,0.8,0.0,0.0040268799597312005,"{'timestamp': 1760866780.249203, 'inputs': {'network_load': np.float64(0.8), 'relay_reputation': np.float64(0.84), 'budget_utilization': np.float64(0.8), 'recent_win_rate': 1e-09}, 'base_prob': 0.01, 'final_prob': np.float64(0.0040268799597312005), 'steps': [{'feature': 'network_load', 'value': np.float64(0.8), 'effect': 'multiply prob by 0.520 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.84), 'effect': 'multiply prob by 1.760 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.8), 'effect': 'multiply prob by 0.440 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': 1e-09, 'effect': 'multiply prob by 1.000 (higher recent wins -> lower prob)'}]}"
0.8,0.84,0.8,0.05,0.0020134400000000005,"{'timestamp': 1760866780.2492318, 'inputs': {'network_load': np.float64(0.8), 'relay_reputation': np.float64(0.84), 'budget_utilization': np.float64(0.8), 'recent_win_rate': np.float64(0.05)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0020134400000000005), 'steps': [{'feature': 'network_load', 'value': np.float64(0.8), 'effect': 'multiply prob by 0.520 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.84), 'effect': 'multiply prob by 1.760 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.8), 'effect': 'multiply prob by 0.440 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.05), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.8,0.84,0.8,0.1,0.0020134400000000005,"{'timestamp': 1760866780.249259, 'inputs': {'network_load': np.float64(0.8), 'relay_reputation': np.float64(0.84), 'budget_utilization': np.float64(0.8), 'recent_win_rate': np.float64(0.1)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0020134400000000005), 'steps': [{'feature': 'network_load', 'value': np.float64(0.8), 'effect': 'multiply prob by 0.520 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.84), 'effect': 'multiply prob by 1.760 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.8), 'effect': 'multiply prob by 0.440 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.1), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.8,0.84,0.8,0.15,0.0020134400000000005,"{'timestamp': 1760866780.2492862, 'inputs': {'network_load': np.float64(0.8), 'relay_reputation': np.float64(0.84), 'budget_utilization': np.float64(0.8), 'recent_win_rate': np.float64(0.15)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0020134400000000005), 'steps': [{'feature': 'network_load', 'value': np.float64(0.8), 'effect': 'multiply prob by 0.520 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.84), 'effect': 'multiply prob by 1.760 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.8), 'effect': 'multiply prob by 0.440 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.15), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.8,0.84,0.8,0.2,0.0020134400000000005,"{'timestamp': 1760866780.2493136, 'inputs': {'network_load': np.float64(0.8), 'relay_reputation': np.float64(0.84), 'budget_utilization': np.float64(0.8), 'recent_win_rate': np.float64(0.2)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0020134400000000005), 'steps': [{'feature': 'network_load', 'value': np.float64(0.8), 'effect': 'multiply prob by 0.520 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.84), 'effect': 'multiply prob by 1.760 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.8), 'effect': 'multiply prob by 0.440 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.2), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.8,0.84,0.8,0.25,0.0020134400000000005,"{'timestamp': 1760866780.2493389, 'inputs': {'network_load': np.float64(0.8), 'relay_reputation': np.float64(0.84), 'budget_utilization': np.float64(0.8), 'recent_win_rate': np.float64(0.25)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0020134400000000005), 'steps': [{'feature': 'network_load', 'value': np.float64(0.8), 'effect': 'multiply prob by 0.520 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.84), 'effect': 'multiply prob by 1.760 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.8), 'effect': 'multiply prob by 0.440 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.25), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.8,0.84,0.8,0.3,0.0020134400000000005,"{'timestamp': 1760866780.2493706, 'inputs': {'network_load': np.float64(0.8), 'relay_reputation': np.float64(0.84), 'budget_utilization': np.float64(0.8), 'recent_win_rate': np.float64(0.3)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0020134400000000005), 'steps': [{'feature': 'network_load', 'value': np.float64(0.8), 'effect': 'multiply prob by 0.520 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.84), 'effect': 'multiply prob by 1.760 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.8), 'effect': 'multiply prob by 0.440 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.3), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.8,0.95,0.05,0.0,0.009659649903403499,"{'timestamp': 1760866780.249399, 'inputs': {'network_load': np.float64(0.8), 'relay_reputation': np.float64(0.95), 'budget_utilization': np.float64(0.05), 'recent_win_rate': 1e-09}, 'base_prob': 0.01, 'final_prob': np.float64(0.009659649903403499), 'steps': [{'feature': 'network_load', 'value': np.float64(0.8), 'effect': 'multiply prob by 0.520 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.95), 'effect': 'multiply prob by 1.925 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.05), 'effect': 'multiply prob by 0.965 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': 1e-09, 'effect': 'multiply prob by 1.000 (higher recent wins -> lower prob)'}]}"
0.8,0.95,0.05,0.05,0.004829824999999999,"{'timestamp': 1760866780.2494245, 'inputs': {'network_load': np.float64(0.8), 'relay_reputation': np.float64(0.95), 'budget_utilization': np.float64(0.05), 'recent_win_rate': np.float64(0.05)}, 'base_prob': 0.01, 'final_prob': np.float64(0.004829824999999999), 'steps': [{'feature': 'network_load', 'value': np.float64(0.8), 'effect': 'multiply prob by 0.520 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.95), 'effect': 'multiply prob by 1.925 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.05), 'effect': 'multiply prob by 0.965 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.05), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.8,0.95,0.05,0.1,0.004829824999999999,"{'timestamp': 1760866780.24945, 'inputs': {'network_load': np.float64(0.8), 'relay_reputation': np.float64(0.95), 'budget_utilization': np.float64(0.05), 'recent_win_rate': np.float64(0.1)}, 'base_prob': 0.01, 'final_prob': np.float64(0.004829824999999999), 'steps': [{'feature': 'network_load', 'value': np.float64(0.8), 'effect': 'multiply prob by 0.520 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.95), 'effect': 'multiply prob by 1.925 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.05), 'effect': 'multiply prob by 0.965 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.1), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.8,0.95,0.05,0.15,0.004829824999999999,"{'timestamp': 1760866780.2494752, 'inputs': {'network_load': np.float64(0.8), 'relay_reputation': np.float64(0.95), 'budget_utilization': np.float64(0.05), 'recent_win_rate': np.float64(0.15)}, 'base_prob': 0.01, 'final_prob': np.float64(0.004829824999999999), 'steps': [{'feature': 'network_load', 'value': np.float64(0.8), 'effect': 'multiply prob by 0.520 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.95), 'effect': 'multiply prob by 1.925 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.05), 'effect': 'multiply prob by 0.965 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.15), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.8,0.95,0.05,0.2,0.004829824999999999,"{'timestamp': 1760866780.2495024, 'inputs': {'network_load': np.float64(0.8), 'relay_reputation': np.float64(0.95), 'budget_utilization': np.float64(0.05), 'recent_win_rate': np.float64(0.2)}, 'base_prob': 0.01, 'final_prob': np.float64(0.004829824999999999), 'steps': [{'feature': 'network_load', 'value': np.float64(0.8), 'effect': 'multiply prob by 0.520 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.95), 'effect': 'multiply prob by 1.925 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.05), 'effect': 'multiply prob by 0.965 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.2), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.8,0.95,0.05,0.25,0.004829824999999999,"{'timestamp': 1760866780.2495286, 'inputs': {'network_load': np.float64(0.8), 'relay_reputation': np.float64(0.95), 'budget_utilization': np.float64(0.05), 'recent_win_rate': np.float64(0.25)}, 'base_prob': 0.01, 'final_prob': np.float64(0.004829824999999999), 'steps': [{'feature': 'network_load', 'value': np.float64(0.8), 'effect': 'multiply prob by 0.520 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.95), 'effect': 'multiply prob by 1.925 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.05), 'effect': 'multiply prob by 0.965 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.25), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.8,0.95,0.05,0.3,0.004829824999999999,"{'timestamp': 1760866780.249575, 'inputs': {'network_load': np.float64(0.8), 'relay_reputation': np.float64(0.95), 'budget_utilization': np.float64(0.05), 'recent_win_rate': np.float64(0.3)}, 'base_prob': 0.01, 'final_prob': np.float64(0.004829824999999999), 'steps': [{'feature': 'network_load', 'value': np.float64(0.8), 'effect': 'multiply prob by 0.520 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.95), 'effect': 'multiply prob by 1.925 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.05), 'effect': 'multiply prob by 0.965 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.3), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.8,0.95,0.16,0.0,0.0088888799111112,"{'timestamp': 1760866780.2496047, 'inputs': {'network_load': np.float64(0.8), 'relay_reputation': np.float64(0.95), 'budget_utilization': np.float64(0.16), 'recent_win_rate': 1e-09}, 'base_prob': 0.01, 'final_prob': np.float64(0.0088888799111112), 'steps': [{'feature': 'network_load', 'value': np.float64(0.8), 'effect': 'multiply prob by 0.520 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.95), 'effect': 'multiply prob by 1.925 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.16), 'effect': 'multiply prob by 0.888 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': 1e-09, 'effect': 'multiply prob by 1.000 (higher recent wins -> lower prob)'}]}"
0.8,0.95,0.16,0.05,0.00444444,"{'timestamp': 1760866780.2496955, 'inputs': {'network_load': np.float64(0.8), 'relay_reputation': np.float64(0.95), 'budget_utilization': np.float64(0.16), 'recent_win_rate': np.float64(0.05)}, 'base_prob': 0.01, 'final_prob': np.float64(0.00444444), 'steps': [{'feature': 'network_load', 'value': np.float64(0.8), 'effect': 'multiply prob by 0.520 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.95), 'effect': 'multiply prob by 1.925 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.16), 'effect': 'multiply prob by 0.888 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.05), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.8,0.95,0.16,0.1,0.00444444,"{'timestamp': 1760866780.2497337, 'inputs': {'network_load': np.float64(0.8), 'relay_reputation': np.float64(0.95), 'budget_utilization': np.float64(0.16), 'recent_win_rate': np.float64(0.1)}, 'base_prob': 0.01, 'final_prob': np.float64(0.00444444), 'steps': [{'feature': 'network_load', 'value': np.float64(0.8), 'effect': 'multiply prob by 0.520 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.95), 'effect': 'multiply prob by 1.925 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.16), 'effect': 'multiply prob by 0.888 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.1), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.8,0.95,0.16,0.15,0.00444444,"{'timestamp': 1760866780.2497637, 'inputs': {'network_load': np.float64(0.8), 'relay_reputation': np.float64(0.95), 'budget_utilization': np.float64(0.16), 'recent_win_rate': np.float64(0.15)}, 'base_prob': 0.01, 'final_prob': np.float64(0.00444444), 'steps': [{'feature': 'network_load', 'value': np.float64(0.8), 'effect': 'multiply prob by 0.520 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.95), 'effect': 'multiply prob by 1.925 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.16), 'effect': 'multiply prob by 0.888 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.15), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.8,0.95,0.16,0.2,0.00444444,"{'timestamp': 1760866780.2497895, 'inputs': {'network_load': np.float64(0.8), 'relay_reputation': np.float64(0.95), 'budget_utilization': np.float64(0.16), 'recent_win_rate': np.float64(0.2)}, 'base_prob': 0.01, 'final_prob': np.float64(0.00444444), 'steps': [{'feature': 'network_load', 'value': np.float64(0.8), 'effect': 'multiply prob by 0.520 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.95), 'effect': 'multiply prob by 1.925 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.16), 'effect': 'multiply prob by 0.888 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.2), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.8,0.95,0.16,0.25,0.00444444,"{'timestamp': 1760866780.2498574, 'inputs': {'network_load': np.float64(0.8), 'relay_reputation': np.float64(0.95), 'budget_utilization': np.float64(0.16), 'recent_win_rate': np.float64(0.25)}, 'base_prob': 0.01, 'final_prob': np.float64(0.00444444), 'steps': [{'feature': 'network_load', 'value': np.float64(0.8), 'effect': 'multiply prob by 0.520 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.95), 'effect': 'multiply prob by 1.925 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.16), 'effect': 'multiply prob by 0.888 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.25), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.8,0.95,0.16,0.3,0.00444444,"{'timestamp': 1760866780.2498882, 'inputs': {'network_load': np.float64(0.8), 'relay_reputation': np.float64(0.95), 'budget_utilization': np.float64(0.16), 'recent_win_rate': np.float64(0.3)}, 'base_prob': 0.01, 'final_prob': np.float64(0.00444444), 'steps': [{'feature': 'network_load', 'value': np.float64(0.8), 'effect': 'multiply prob by 0.520 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.95), 'effect': 'multiply prob by 1.925 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.16), 'effect': 'multiply prob by 0.888 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.3), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.8,0.95,0.26,0.0,0.0081881799181182,"{'timestamp': 1760866780.2499185, 'inputs': {'network_load': np.float64(0.8), 'relay_reputation': np.float64(0.95), 'budget_utilization': np.float64(0.26), 'recent_win_rate': 1e-09}, 'base_prob': 0.01, 'final_prob': np.float64(0.0081881799181182), 'steps': [{'feature': 'network_load', 'value': np.float64(0.8), 'effect': 'multiply prob by 0.520 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.95), 'effect': 'multiply prob by 1.925 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.26), 'effect': 'multiply prob by 0.818 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': 1e-09, 'effect': 'multiply prob by 1.000 (higher recent wins -> lower prob)'}]}"
0.8,0.95,0.26,0.05,0.00409409,"{'timestamp': 1760866780.2499475, 'inputs': {'network_load': np.float64(0.8), 'relay_reputation': np.float64(0.95), 'budget_utilization': np.float64(0.26), 'recent_win_rate': np.float64(0.05)}, 'base_prob': 0.01, 'final_prob': np.float64(0.00409409), 'steps': [{'feature': 'network_load', 'value': np.float64(0.8), 'effect': 'multiply prob by 0.520 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.95), 'effect': 'multiply prob by 1.925 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.26), 'effect': 'multiply prob by 0.818 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.05), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.8,0.95,0.26,0.1,0.00409409,"{'timestamp': 1760866780.2499733, 'inputs': {'network_load': np.float64(0.8), 'relay_reputation': np.float64(0.95), 'budget_utilization': np.float64(0.26), 'recent_win_rate': np.float64(0.1)}, 'base_prob': 0.01, 'final_prob': np.float64(0.00409409), 'steps': [{'feature': 'network_load', 'value': np.float64(0.8), 'effect': 'multiply prob by 0.520 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.95), 'effect': 'multiply prob by 1.925 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.26), 'effect': 'multiply prob by 0.818 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.1), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.8,0.95,0.26,0.15,0.00409409,"{'timestamp': 1760866780.2499986, 'inputs': {'network_load': np.float64(0.8), 'relay_reputation': np.float64(0.95), 'budget_utilization': np.float64(0.26), 'recent_win_rate': np.float64(0.15)}, 'base_prob': 0.01, 'final_prob': np.float64(0.00409409), 'steps': [{'feature': 'network_load', 'value': np.float64(0.8), 'effect': 'multiply prob by 0.520 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.95), 'effect': 'multiply prob by 1.925 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.26), 'effect': 'multiply prob by 0.818 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.15), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.8,0.95,0.26,0.2,0.00409409,"{'timestamp': 1760866780.2500296, 'inputs': {'network_load': np.float64(0.8), 'relay_reputation': np.float64(0.95), 'budget_utilization': np.float64(0.26), 'recent_win_rate': np.float64(0.2)}, 'base_prob': 0.01, 'final_prob': np.float64(0.00409409), 'steps': [{'feature': 'network_load', 'value': np.float64(0.8), 'effect': 'multiply prob by 0.520 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.95), 'effect': 'multiply prob by 1.925 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.26), 'effect': 'multiply prob by 0.818 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.2), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.8,0.95,0.26,0.25,0.00409409,"{'timestamp': 1760866780.2500548, 'inputs': {'network_load': np.float64(0.8), 'relay_reputation': np.float64(0.95), 'budget_utilization': np.float64(0.26), 'recent_win_rate': np.float64(0.25)}, 'base_prob': 0.01, 'final_prob': np.float64(0.00409409), 'steps': [{'feature': 'network_load', 'value': np.float64(0.8), 'effect': 'multiply prob by 0.520 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.95), 'effect': 'multiply prob by 1.925 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.26), 'effect': 'multiply prob by 0.818 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.25), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.8,0.95,0.26,0.3,0.00409409,"{'timestamp': 1760866780.2500818, 'inputs': {'network_load': np.float64(0.8), 'relay_reputation': np.float64(0.95), 'budget_utilization': np.float64(0.26), 'recent_win_rate': np.float64(0.3)}, 'base_prob': 0.01, 'final_prob': np.float64(0.00409409), 'steps': [{'feature': 'network_load', 'value': np.float64(0.8), 'effect': 'multiply prob by 0.520 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.95), 'effect': 'multiply prob by 1.925 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.26), 'effect': 'multiply prob by 0.818 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.3), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.8,0.95,0.37,0.0,0.0074174099258259,"{'timestamp': 1760866780.2501092, 'inputs': {'network_load': np.float64(0.8), 'relay_reputation': np.float64(0.95), 'budget_utilization': np.float64(0.37), 'recent_win_rate': 1e-09}, 'base_prob': 0.01, 'final_prob': np.float64(0.0074174099258259), 'steps': [{'feature': 'network_load', 'value': np.float64(0.8), 'effect': 'multiply prob by 0.520 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.95), 'effect': 'multiply prob by 1.925 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.37), 'effect': 'multiply prob by 0.741 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': 1e-09, 'effect': 'multiply prob by 1.000 (higher recent wins -> lower prob)'}]}"
0.8,0.95,0.37,0.05,0.003708705,"{'timestamp': 1760866780.2501345, 'inputs': {'network_load': np.float64(0.8), 'relay_reputation': np.float64(0.95), 'budget_utilization': np.float64(0.37), 'recent_win_rate': np.float64(0.05)}, 'base_prob': 0.01, 'final_prob': np.float64(0.003708705), 'steps': [{'feature': 'network_load', 'value': np.float64(0.8), 'effect': 'multiply prob by 0.520 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.95), 'effect': 'multiply prob by 1.925 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.37), 'effect': 'multiply prob by 0.741 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.05), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.8,0.95,0.37,0.1,0.003708705,"{'timestamp': 1760866780.2501616, 'inputs': {'network_load': np.float64(0.8), 'relay_reputation': np.float64(0.95), 'budget_utilization': np.float64(0.37), 'recent_win_rate': np.float64(0.1)}, 'base_prob': 0.01, 'final_prob': np.float64(0.003708705), 'steps': [{'feature': 'network_load', 'value': np.float64(0.8), 'effect': 'multiply prob by 0.520 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.95), 'effect': 'multiply prob by 1.925 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.37), 'effect': 'multiply prob by 0.741 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.1), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.8,0.95,0.37,0.15,0.003708705,"{'timestamp': 1760866780.250189, 'inputs': {'network_load': np.float64(0.8), 'relay_reputation': np.float64(0.95), 'budget_utilization': np.float64(0.37), 'recent_win_rate': np.float64(0.15)}, 'base_prob': 0.01, 'final_prob': np.float64(0.003708705), 'steps': [{'feature': 'network_load', 'value': np.float64(0.8), 'effect': 'multiply prob by 0.520 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.95), 'effect': 'multiply prob by 1.925 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.37), 'effect': 'multiply prob by 0.741 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.15), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.8,0.95,0.37,0.2,0.003708705,"{'timestamp': 1760866780.2502177, 'inputs': {'network_load': np.float64(0.8), 'relay_reputation': np.float64(0.95), 'budget_utilization': np.float64(0.37), 'recent_win_rate': np.float64(0.2)}, 'base_prob': 0.01, 'final_prob': np.float64(0.003708705), 'steps': [{'feature': 'network_load', 'value': np.float64(0.8), 'effect': 'multiply prob by 0.520 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.95), 'effect': 'multiply prob by 1.925 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.37), 'effect': 'multiply prob by 0.741 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.2), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.8,0.95,0.37,0.25,0.003708705,"{'timestamp': 1760866780.2502446, 'inputs': {'network_load': np.float64(0.8), 'relay_reputation': np.float64(0.95), 'budget_utilization': np.float64(0.37), 'recent_win_rate': np.float64(0.25)}, 'base_prob': 0.01, 'final_prob': np.float64(0.003708705), 'steps': [{'feature': 'network_load', 'value': np.float64(0.8), 'effect': 'multiply prob by 0.520 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.95), 'effect': 'multiply prob by 1.925 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.37), 'effect': 'multiply prob by 0.741 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.25), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.8,0.95,0.37,0.3,0.003708705,"{'timestamp': 1760866780.25027, 'inputs': {'network_load': np.float64(0.8), 'relay_reputation': np.float64(0.95), 'budget_utilization': np.float64(0.37), 'recent_win_rate': np.float64(0.3)}, 'base_prob': 0.01, 'final_prob': np.float64(0.003708705), 'steps': [{'feature': 'network_load', 'value': np.float64(0.8), 'effect': 'multiply prob by 0.520 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.95), 'effect': 'multiply prob by 1.925 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.37), 'effect': 'multiply prob by 0.741 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.3), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.8,0.95,0.48,0.0,0.0066466399335336004,"{'timestamp': 1760866780.250297, 'inputs': {'network_load': np.float64(0.8), 'relay_reputation': np.float64(0.95), 'budget_utilization': np.float64(0.48), 'recent_win_rate': 1e-09}, 'base_prob': 0.01, 'final_prob': np.float64(0.0066466399335336004), 'steps': [{'feature': 'network_load', 'value': np.float64(0.8), 'effect': 'multiply prob by 0.520 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.95), 'effect': 'multiply prob by 1.925 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.48), 'effect': 'multiply prob by 0.664 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': 1e-09, 'effect': 'multiply prob by 1.000 (higher recent wins -> lower prob)'}]}"
0.8,0.95,0.48,0.05,0.0033233200000000003,"{'timestamp': 1760866780.2503223, 'inputs': {'network_load': np.float64(0.8), 'relay_reputation': np.float64(0.95), 'budget_utilization': np.float64(0.48), 'recent_win_rate': np.float64(0.05)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0033233200000000003), 'steps': [{'feature': 'network_load', 'value': np.float64(0.8), 'effect': 'multiply prob by 0.520 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.95), 'effect': 'multiply prob by 1.925 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.48), 'effect': 'multiply prob by 0.664 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.05), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.8,0.95,0.48,0.1,0.0033233200000000003,"{'timestamp': 1760866780.2503517, 'inputs': {'network_load': np.float64(0.8), 'relay_reputation': np.float64(0.95), 'budget_utilization': np.float64(0.48), 'recent_win_rate': np.float64(0.1)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0033233200000000003), 'steps': [{'feature': 'network_load', 'value': np.float64(0.8), 'effect': 'multiply prob by 0.520 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.95), 'effect': 'multiply prob by 1.925 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.48), 'effect': 'multiply prob by 0.664 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.1), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.8,0.95,0.48,0.15,0.0033233200000000003,"{'timestamp': 1760866780.2503805, 'inputs': {'network_load': np.float64(0.8), 'relay_reputation': np.float64(0.95), 'budget_utilization': np.float64(0.48), 'recent_win_rate': np.float64(0.15)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0033233200000000003), 'steps': [{'feature': 'network_load', 'value': np.float64(0.8), 'effect': 'multiply prob by 0.520 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.95), 'effect': 'multiply prob by 1.925 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.48), 'effect': 'multiply prob by 0.664 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.15), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.8,0.95,0.48,0.2,0.0033233200000000003,"{'timestamp': 1760866780.2504058, 'inputs': {'network_load': np.float64(0.8), 'relay_reputation': np.float64(0.95), 'budget_utilization': np.float64(0.48), 'recent_win_rate': np.float64(0.2)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0033233200000000003), 'steps': [{'feature': 'network_load', 'value': np.float64(0.8), 'effect': 'multiply prob by 0.520 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.95), 'effect': 'multiply prob by 1.925 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.48), 'effect': 'multiply prob by 0.664 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.2), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.8,0.95,0.48,0.25,0.0033233200000000003,"{'timestamp': 1760866780.2504508, 'inputs': {'network_load': np.float64(0.8), 'relay_reputation': np.float64(0.95), 'budget_utilization': np.float64(0.48), 'recent_win_rate': np.float64(0.25)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0033233200000000003), 'steps': [{'feature': 'network_load', 'value': np.float64(0.8), 'effect': 'multiply prob by 0.520 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.95), 'effect': 'multiply prob by 1.925 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.48), 'effect': 'multiply prob by 0.664 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.25), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.8,0.95,0.48,0.3,0.0033233200000000003,"{'timestamp': 1760866780.2504761, 'inputs': {'network_load': np.float64(0.8), 'relay_reputation': np.float64(0.95), 'budget_utilization': np.float64(0.48), 'recent_win_rate': np.float64(0.3)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0033233200000000003), 'steps': [{'feature': 'network_load', 'value': np.float64(0.8), 'effect': 'multiply prob by 0.520 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.95), 'effect': 'multiply prob by 1.925 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.48), 'effect': 'multiply prob by 0.664 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.3), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.8,0.95,0.59,0.0,0.005875869941241299,"{'timestamp': 1760866780.2505035, 'inputs': {'network_load': np.float64(0.8), 'relay_reputation': np.float64(0.95), 'budget_utilization': np.float64(0.59), 'recent_win_rate': 1e-09}, 'base_prob': 0.01, 'final_prob': np.float64(0.005875869941241299), 'steps': [{'feature': 'network_load', 'value': np.float64(0.8), 'effect': 'multiply prob by 0.520 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.95), 'effect': 'multiply prob by 1.925 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.59), 'effect': 'multiply prob by 0.587 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': 1e-09, 'effect': 'multiply prob by 1.000 (higher recent wins -> lower prob)'}]}"
0.8,0.95,0.59,0.05,0.0029379349999999996,"{'timestamp': 1760866780.250531, 'inputs': {'network_load': np.float64(0.8), 'relay_reputation': np.float64(0.95), 'budget_utilization': np.float64(0.59), 'recent_win_rate': np.float64(0.05)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0029379349999999996), 'steps': [{'feature': 'network_load', 'value': np.float64(0.8), 'effect': 'multiply prob by 0.520 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.95), 'effect': 'multiply prob by 1.925 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.59), 'effect': 'multiply prob by 0.587 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.05), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.8,0.95,0.59,0.1,0.0029379349999999996,"{'timestamp': 1760866780.2505562, 'inputs': {'network_load': np.float64(0.8), 'relay_reputation': np.float64(0.95), 'budget_utilization': np.float64(0.59), 'recent_win_rate': np.float64(0.1)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0029379349999999996), 'steps': [{'feature': 'network_load', 'value': np.float64(0.8), 'effect': 'multiply prob by 0.520 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.95), 'effect': 'multiply prob by 1.925 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.59), 'effect': 'multiply prob by 0.587 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.1), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.8,0.95,0.59,0.15,0.0029379349999999996,"{'timestamp': 1760866780.2505815, 'inputs': {'network_load': np.float64(0.8), 'relay_reputation': np.float64(0.95), 'budget_utilization': np.float64(0.59), 'recent_win_rate': np.float64(0.15)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0029379349999999996), 'steps': [{'feature': 'network_load', 'value': np.float64(0.8), 'effect': 'multiply prob by 0.520 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.95), 'effect': 'multiply prob by 1.925 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.59), 'effect': 'multiply prob by 0.587 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.15), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.8,0.95,0.59,0.2,0.0029379349999999996,"{'timestamp': 1760866780.250665, 'inputs': {'network_load': np.float64(0.8), 'relay_reputation': np.float64(0.95), 'budget_utilization': np.float64(0.59), 'recent_win_rate': np.float64(0.2)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0029379349999999996), 'steps': [{'feature': 'network_load', 'value': np.float64(0.8), 'effect': 'multiply prob by 0.520 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.95), 'effect': 'multiply prob by 1.925 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.59), 'effect': 'multiply prob by 0.587 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.2), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.8,0.95,0.59,0.25,0.0029379349999999996,"{'timestamp': 1760866780.2506945, 'inputs': {'network_load': np.float64(0.8), 'relay_reputation': np.float64(0.95), 'budget_utilization': np.float64(0.59), 'recent_win_rate': np.float64(0.25)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0029379349999999996), 'steps': [{'feature': 'network_load', 'value': np.float64(0.8), 'effect': 'multiply prob by 0.520 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.95), 'effect': 'multiply prob by 1.925 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.59), 'effect': 'multiply prob by 0.587 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.25), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.8,0.95,0.59,0.3,0.0029379349999999996,"{'timestamp': 1760866780.250722, 'inputs': {'network_load': np.float64(0.8), 'relay_reputation': np.float64(0.95), 'budget_utilization': np.float64(0.59), 'recent_win_rate': np.float64(0.3)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0029379349999999996), 'steps': [{'feature': 'network_load', 'value': np.float64(0.8), 'effect': 'multiply prob by 0.520 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.95), 'effect': 'multiply prob by 1.925 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.59), 'effect': 'multiply prob by 0.587 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.3), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.8,0.95,0.69,0.0,0.005175169948248301,"{'timestamp': 1760866780.2507515, 'inputs': {'network_load': np.float64(0.8), 'relay_reputation': np.float64(0.95), 'budget_utilization': np.float64(0.69), 'recent_win_rate': 1e-09}, 'base_prob': 0.01, 'final_prob': np.float64(0.005175169948248301), 'steps': [{'feature': 'network_load', 'value': np.float64(0.8), 'effect': 'multiply prob by 0.520 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.95), 'effect': 'multiply prob by 1.925 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.69), 'effect': 'multiply prob by 0.517 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': 1e-09, 'effect': 'multiply prob by 1.000 (higher recent wins -> lower prob)'}]}"
0.8,0.95,0.69,0.05,0.0025875850000000008,"{'timestamp': 1760866780.250777, 'inputs': {'network_load': np.float64(0.8), 'relay_reputation': np.float64(0.95), 'budget_utilization': np.float64(0.69), 'recent_win_rate': np.float64(0.05)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0025875850000000008), 'steps': [{'feature': 'network_load', 'value': np.float64(0.8), 'effect': 'multiply prob by 0.520 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.95), 'effect': 'multiply prob by 1.925 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.69), 'effect': 'multiply prob by 0.517 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.05), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.8,0.95,0.69,0.1,0.0025875850000000008,"{'timestamp': 1760866780.250825, 'inputs': {'network_load': np.float64(0.8), 'relay_reputation': np.float64(0.95), 'budget_utilization': np.float64(0.69), 'recent_win_rate': np.float64(0.1)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0025875850000000008), 'steps': [{'feature': 'network_load', 'value': np.float64(0.8), 'effect': 'multiply prob by 0.520 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.95), 'effect': 'multiply prob by 1.925 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.69), 'effect': 'multiply prob by 0.517 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.1), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.8,0.95,0.69,0.15,0.0025875850000000008,"{'timestamp': 1760866780.2508621, 'inputs': {'network_load': np.float64(0.8), 'relay_reputation': np.float64(0.95), 'budget_utilization': np.float64(0.69), 'recent_win_rate': np.float64(0.15)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0025875850000000008), 'steps': [{'feature': 'network_load', 'value': np.float64(0.8), 'effect': 'multiply prob by 0.520 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.95), 'effect': 'multiply prob by 1.925 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.69), 'effect': 'multiply prob by 0.517 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.15), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.8,0.95,0.69,0.2,0.0025875850000000008,"{'timestamp': 1760866780.2508883, 'inputs': {'network_load': np.float64(0.8), 'relay_reputation': np.float64(0.95), 'budget_utilization': np.float64(0.69), 'recent_win_rate': np.float64(0.2)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0025875850000000008), 'steps': [{'feature': 'network_load', 'value': np.float64(0.8), 'effect': 'multiply prob by 0.520 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.95), 'effect': 'multiply prob by 1.925 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.69), 'effect': 'multiply prob by 0.517 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.2), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.8,0.95,0.69,0.25,0.0025875850000000008,"{'timestamp': 1760866780.2509193, 'inputs': {'network_load': np.float64(0.8), 'relay_reputation': np.float64(0.95), 'budget_utilization': np.float64(0.69), 'recent_win_rate': np.float64(0.25)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0025875850000000008), 'steps': [{'feature': 'network_load', 'value': np.float64(0.8), 'effect': 'multiply prob by 0.520 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.95), 'effect': 'multiply prob by 1.925 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.69), 'effect': 'multiply prob by 0.517 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.25), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.8,0.95,0.69,0.3,0.0025875850000000008,"{'timestamp': 1760866780.250947, 'inputs': {'network_load': np.float64(0.8), 'relay_reputation': np.float64(0.95), 'budget_utilization': np.float64(0.69), 'recent_win_rate': np.float64(0.3)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0025875850000000008), 'steps': [{'feature': 'network_load', 'value': np.float64(0.8), 'effect': 'multiply prob by 0.520 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.95), 'effect': 'multiply prob by 1.925 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.69), 'effect': 'multiply prob by 0.517 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.3), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.8,0.95,0.8,0.0,0.004404399955956,"{'timestamp': 1760866780.2509766, 'inputs': {'network_load': np.float64(0.8), 'relay_reputation': np.float64(0.95), 'budget_utilization': np.float64(0.8), 'recent_win_rate': 1e-09}, 'base_prob': 0.01, 'final_prob': np.float64(0.004404399955956), 'steps': [{'feature': 'network_load', 'value': np.float64(0.8), 'effect': 'multiply prob by 0.520 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.95), 'effect': 'multiply prob by 1.925 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.8), 'effect': 'multiply prob by 0.440 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': 1e-09, 'effect': 'multiply prob by 1.000 (higher recent wins -> lower prob)'}]}"
0.8,0.95,0.8,0.05,0.0022022,"{'timestamp': 1760866780.251002, 'inputs': {'network_load': np.float64(0.8), 'relay_reputation': np.float64(0.95), 'budget_utilization': np.float64(0.8), 'recent_win_rate': np.float64(0.05)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0022022), 'steps': [{'feature': 'network_load', 'value': np.float64(0.8), 'effect': 'multiply prob by 0.520 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.95), 'effect': 'multiply prob by 1.925 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.8), 'effect': 'multiply prob by 0.440 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.05), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.8,0.95,0.8,0.1,0.0022022,"{'timestamp': 1760866780.2510273, 'inputs': {'network_load': np.float64(0.8), 'relay_reputation': np.float64(0.95), 'budget_utilization': np.float64(0.8), 'recent_win_rate': np.float64(0.1)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0022022), 'steps': [{'feature': 'network_load', 'value': np.float64(0.8), 'effect': 'multiply prob by 0.520 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.95), 'effect': 'multiply prob by 1.925 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.8), 'effect': 'multiply prob by 0.440 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.1), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.8,0.95,0.8,0.15,0.0022022,"{'timestamp': 1760866780.2510564, 'inputs': {'network_load': np.float64(0.8), 'relay_reputation': np.float64(0.95), 'budget_utilization': np.float64(0.8), 'recent_win_rate': np.float64(0.15)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0022022), 'steps': [{'feature': 'network_load', 'value': np.float64(0.8), 'effect': 'multiply prob by 0.520 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.95), 'effect': 'multiply prob by 1.925 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.8), 'effect': 'multiply prob by 0.440 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.15), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.8,0.95,0.8,0.2,0.0022022,"{'timestamp': 1760866780.2511125, 'inputs': {'network_load': np.float64(0.8), 'relay_reputation': np.float64(0.95), 'budget_utilization': np.float64(0.8), 'recent_win_rate': np.float64(0.2)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0022022), 'steps': [{'feature': 'network_load', 'value': np.float64(0.8), 'effect': 'multiply prob by 0.520 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.95), 'effect': 'multiply prob by 1.925 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.8), 'effect': 'multiply prob by 0.440 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.2), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.8,0.95,0.8,0.25,0.0022022,"{'timestamp': 1760866780.2511394, 'inputs': {'network_load': np.float64(0.8), 'relay_reputation': np.float64(0.95), 'budget_utilization': np.float64(0.8), 'recent_win_rate': np.float64(0.25)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0022022), 'steps': [{'feature': 'network_load', 'value': np.float64(0.8), 'effect': 'multiply prob by 0.520 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.95), 'effect': 'multiply prob by 1.925 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.8), 'effect': 'multiply prob by 0.440 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.25), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.8,0.95,0.8,0.3,0.0022022,"{'timestamp': 1760866780.2511687, 'inputs': {'network_load': np.float64(0.8), 'relay_reputation': np.float64(0.95), 'budget_utilization': np.float64(0.8), 'recent_win_rate': np.float64(0.3)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0022022), 'steps': [{'feature': 'network_load', 'value': np.float64(0.8), 'effect': 'multiply prob by 0.520 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.95), 'effect': 'multiply prob by 1.925 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.8), 'effect': 'multiply prob by 0.440 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.3), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.9,0.4,0.05,0.0,0.004882899951171,"{'timestamp': 1760866780.2512038, 'inputs': {'network_load': np.float64(0.9), 'relay_reputation': np.float64(0.4), 'budget_utilization': np.float64(0.05), 'recent_win_rate': 1e-09}, 'base_prob': 0.01, 'final_prob': np.float64(0.004882899951171), 'steps': [{'feature': 'network_load', 'value': np.float64(0.9), 'effect': 'multiply prob by 0.460 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.4), 'effect': 'multiply prob by 1.100 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.05), 'effect': 'multiply prob by 0.965 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': 1e-09, 'effect': 'multiply prob by 1.000 (higher recent wins -> lower prob)'}]}"
0.9,0.4,0.05,0.05,0.00244145,"{'timestamp': 1760866780.251231, 'inputs': {'network_load': np.float64(0.9), 'relay_reputation': np.float64(0.4), 'budget_utilization': np.float64(0.05), 'recent_win_rate': np.float64(0.05)}, 'base_prob': 0.01, 'final_prob': np.float64(0.00244145), 'steps': [{'feature': 'network_load', 'value': np.float64(0.9), 'effect': 'multiply prob by 0.460 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.4), 'effect': 'multiply prob by 1.100 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.05), 'effect': 'multiply prob by 0.965 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.05), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.9,0.4,0.05,0.1,0.00244145,"{'timestamp': 1760866780.251256, 'inputs': {'network_load': np.float64(0.9), 'relay_reputation': np.float64(0.4), 'budget_utilization': np.float64(0.05), 'recent_win_rate': np.float64(0.1)}, 'base_prob': 0.01, 'final_prob': np.float64(0.00244145), 'steps': [{'feature': 'network_load', 'value': np.float64(0.9), 'effect': 'multiply prob by 0.460 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.4), 'effect': 'multiply prob by 1.100 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.05), 'effect': 'multiply prob by 0.965 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.1), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.9,0.4,0.05,0.15,0.00244145,"{'timestamp': 1760866780.2512813, 'inputs': {'network_load': np.float64(0.9), 'relay_reputation': np.float64(0.4), 'budget_utilization': np.float64(0.05), 'recent_win_rate': np.float64(0.15)}, 'base_prob': 0.01, 'final_prob': np.float64(0.00244145), 'steps': [{'feature': 'network_load', 'value': np.float64(0.9), 'effect': 'multiply prob by 0.460 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.4), 'effect': 'multiply prob by 1.100 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.05), 'effect': 'multiply prob by 0.965 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.15), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.9,0.4,0.05,0.2,0.00244145,"{'timestamp': 1760866780.251309, 'inputs': {'network_load': np.float64(0.9), 'relay_reputation': np.float64(0.4), 'budget_utilization': np.float64(0.05), 'recent_win_rate': np.float64(0.2)}, 'base_prob': 0.01, 'final_prob': np.float64(0.00244145), 'steps': [{'feature': 'network_load', 'value': np.float64(0.9), 'effect': 'multiply prob by 0.460 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.4), 'effect': 'multiply prob by 1.100 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.05), 'effect': 'multiply prob by 0.965 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.2), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.9,0.4,0.05,0.25,0.00244145,"{'timestamp': 1760866780.251334, 'inputs': {'network_load': np.float64(0.9), 'relay_reputation': np.float64(0.4), 'budget_utilization': np.float64(0.05), 'recent_win_rate': np.float64(0.25)}, 'base_prob': 0.01, 'final_prob': np.float64(0.00244145), 'steps': [{'feature': 'network_load', 'value': np.float64(0.9), 'effect': 'multiply prob by 0.460 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.4), 'effect': 'multiply prob by 1.100 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.05), 'effect': 'multiply prob by 0.965 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.25), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.9,0.4,0.05,0.3,0.00244145,"{'timestamp': 1760866780.2513607, 'inputs': {'network_load': np.float64(0.9), 'relay_reputation': np.float64(0.4), 'budget_utilization': np.float64(0.05), 'recent_win_rate': np.float64(0.3)}, 'base_prob': 0.01, 'final_prob': np.float64(0.00244145), 'steps': [{'feature': 'network_load', 'value': np.float64(0.9), 'effect': 'multiply prob by 0.460 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.4), 'effect': 'multiply prob by 1.100 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.05), 'effect': 'multiply prob by 0.965 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.3), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.9,0.4,0.16,0.0,0.0044932799550672,"{'timestamp': 1760866780.2513895, 'inputs': {'network_load': np.float64(0.9), 'relay_reputation': np.float64(0.4), 'budget_utilization': np.float64(0.16), 'recent_win_rate': 1e-09}, 'base_prob': 0.01, 'final_prob': np.float64(0.0044932799550672), 'steps': [{'feature': 'network_load', 'value': np.float64(0.9), 'effect': 'multiply prob by 0.460 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.4), 'effect': 'multiply prob by 1.100 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.16), 'effect': 'multiply prob by 0.888 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': 1e-09, 'effect': 'multiply prob by 1.000 (higher recent wins -> lower prob)'}]}"
0.9,0.4,0.16,0.05,0.0022466400000000003,"{'timestamp': 1760866780.2514148, 'inputs': {'network_load': np.float64(0.9), 'relay_reputation': np.float64(0.4), 'budget_utilization': np.float64(0.16), 'recent_win_rate': np.float64(0.05)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0022466400000000003), 'steps': [{'feature': 'network_load', 'value': np.float64(0.9), 'effect': 'multiply prob by 0.460 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.4), 'effect': 'multiply prob by 1.100 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.16), 'effect': 'multiply prob by 0.888 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.05), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.9,0.4,0.16,0.1,0.0022466400000000003,"{'timestamp': 1760866780.2514398, 'inputs': {'network_load': np.float64(0.9), 'relay_reputation': np.float64(0.4), 'budget_utilization': np.float64(0.16), 'recent_win_rate': np.float64(0.1)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0022466400000000003), 'steps': [{'feature': 'network_load', 'value': np.float64(0.9), 'effect': 'multiply prob by 0.460 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.4), 'effect': 'multiply prob by 1.100 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.16), 'effect': 'multiply prob by 0.888 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.1), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.9,0.4,0.16,0.15,0.0022466400000000003,"{'timestamp': 1760866780.2514668, 'inputs': {'network_load': np.float64(0.9), 'relay_reputation': np.float64(0.4), 'budget_utilization': np.float64(0.16), 'recent_win_rate': np.float64(0.15)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0022466400000000003), 'steps': [{'feature': 'network_load', 'value': np.float64(0.9), 'effect': 'multiply prob by 0.460 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.4), 'effect': 'multiply prob by 1.100 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.16), 'effect': 'multiply prob by 0.888 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.15), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.9,0.4,0.16,0.2,0.0022466400000000003,"{'timestamp': 1760866780.2514923, 'inputs': {'network_load': np.float64(0.9), 'relay_reputation': np.float64(0.4), 'budget_utilization': np.float64(0.16), 'recent_win_rate': np.float64(0.2)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0022466400000000003), 'steps': [{'feature': 'network_load', 'value': np.float64(0.9), 'effect': 'multiply prob by 0.460 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.4), 'effect': 'multiply prob by 1.100 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.16), 'effect': 'multiply prob by 0.888 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.2), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.9,0.4,0.16,0.25,0.0022466400000000003,"{'timestamp': 1760866780.251573, 'inputs': {'network_load': np.float64(0.9), 'relay_reputation': np.float64(0.4), 'budget_utilization': np.float64(0.16), 'recent_win_rate': np.float64(0.25)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0022466400000000003), 'steps': [{'feature': 'network_load', 'value': np.float64(0.9), 'effect': 'multiply prob by 0.460 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.4), 'effect': 'multiply prob by 1.100 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.16), 'effect': 'multiply prob by 0.888 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.25), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.9,0.4,0.16,0.3,0.0022466400000000003,"{'timestamp': 1760866780.2515993, 'inputs': {'network_load': np.float64(0.9), 'relay_reputation': np.float64(0.4), 'budget_utilization': np.float64(0.16), 'recent_win_rate': np.float64(0.3)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0022466400000000003), 'steps': [{'feature': 'network_load', 'value': np.float64(0.9), 'effect': 'multiply prob by 0.460 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.4), 'effect': 'multiply prob by 1.100 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.16), 'effect': 'multiply prob by 0.888 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.3), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.9,0.4,0.26,0.0,0.0041390799586092,"{'timestamp': 1760866780.2516284, 'inputs': {'network_load': np.float64(0.9), 'relay_reputation': np.float64(0.4), 'budget_utilization': np.float64(0.26), 'recent_win_rate': 1e-09}, 'base_prob': 0.01, 'final_prob': np.float64(0.0041390799586092), 'steps': [{'feature': 'network_load', 'value': np.float64(0.9), 'effect': 'multiply prob by 0.460 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.4), 'effect': 'multiply prob by 1.100 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.26), 'effect': 'multiply prob by 0.818 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': 1e-09, 'effect': 'multiply prob by 1.000 (higher recent wins -> lower prob)'}]}"
0.9,0.4,0.26,0.05,0.0020695400000000004,"{'timestamp': 1760866780.2516575, 'inputs': {'network_load': np.float64(0.9), 'relay_reputation': np.float64(0.4), 'budget_utilization': np.float64(0.26), 'recent_win_rate': np.float64(0.05)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0020695400000000004), 'steps': [{'feature': 'network_load', 'value': np.float64(0.9), 'effect': 'multiply prob by 0.460 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.4), 'effect': 'multiply prob by 1.100 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.26), 'effect': 'multiply prob by 0.818 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.05), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.9,0.4,0.26,0.1,0.0020695400000000004,"{'timestamp': 1760866780.2516863, 'inputs': {'network_load': np.float64(0.9), 'relay_reputation': np.float64(0.4), 'budget_utilization': np.float64(0.26), 'recent_win_rate': np.float64(0.1)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0020695400000000004), 'steps': [{'feature': 'network_load', 'value': np.float64(0.9), 'effect': 'multiply prob by 0.460 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.4), 'effect': 'multiply prob by 1.100 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.26), 'effect': 'multiply prob by 0.818 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.1), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.9,0.4,0.26,0.15,0.0020695400000000004,"{'timestamp': 1760866780.2517135, 'inputs': {'network_load': np.float64(0.9), 'relay_reputation': np.float64(0.4), 'budget_utilization': np.float64(0.26), 'recent_win_rate': np.float64(0.15)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0020695400000000004), 'steps': [{'feature': 'network_load', 'value': np.float64(0.9), 'effect': 'multiply prob by 0.460 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.4), 'effect': 'multiply prob by 1.100 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.26), 'effect': 'multiply prob by 0.818 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.15), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.9,0.4,0.26,0.2,0.0020695400000000004,"{'timestamp': 1760866780.2517385, 'inputs': {'network_load': np.float64(0.9), 'relay_reputation': np.float64(0.4), 'budget_utilization': np.float64(0.26), 'recent_win_rate': np.float64(0.2)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0020695400000000004), 'steps': [{'feature': 'network_load', 'value': np.float64(0.9), 'effect': 'multiply prob by 0.460 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.4), 'effect': 'multiply prob by 1.100 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.26), 'effect': 'multiply prob by 0.818 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.2), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.9,0.4,0.26,0.25,0.0020695400000000004,"{'timestamp': 1760866780.2517638, 'inputs': {'network_load': np.float64(0.9), 'relay_reputation': np.float64(0.4), 'budget_utilization': np.float64(0.26), 'recent_win_rate': np.float64(0.25)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0020695400000000004), 'steps': [{'feature': 'network_load', 'value': np.float64(0.9), 'effect': 'multiply prob by 0.460 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.4), 'effect': 'multiply prob by 1.100 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.26), 'effect': 'multiply prob by 0.818 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.25), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.9,0.4,0.26,0.3,0.0020695400000000004,"{'timestamp': 1760866780.251789, 'inputs': {'network_load': np.float64(0.9), 'relay_reputation': np.float64(0.4), 'budget_utilization': np.float64(0.26), 'recent_win_rate': np.float64(0.3)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0020695400000000004), 'steps': [{'feature': 'network_load', 'value': np.float64(0.9), 'effect': 'multiply prob by 0.460 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.4), 'effect': 'multiply prob by 1.100 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.26), 'effect': 'multiply prob by 0.818 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.3), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.9,0.4,0.37,0.0,0.0037494599625053997,"{'timestamp': 1760866780.251816, 'inputs': {'network_load': np.float64(0.9), 'relay_reputation': np.float64(0.4), 'budget_utilization': np.float64(0.37), 'recent_win_rate': 1e-09}, 'base_prob': 0.01, 'final_prob': np.float64(0.0037494599625053997), 'steps': [{'feature': 'network_load', 'value': np.float64(0.9), 'effect': 'multiply prob by 0.460 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.4), 'effect': 'multiply prob by 1.100 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.37), 'effect': 'multiply prob by 0.741 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': 1e-09, 'effect': 'multiply prob by 1.000 (higher recent wins -> lower prob)'}]}"
0.9,0.4,0.37,0.05,0.00187473,"{'timestamp': 1760866780.2518506, 'inputs': {'network_load': np.float64(0.9), 'relay_reputation': np.float64(0.4), 'budget_utilization': np.float64(0.37), 'recent_win_rate': np.float64(0.05)}, 'base_prob': 0.01, 'final_prob': np.float64(0.00187473), 'steps': [{'feature': 'network_load', 'value': np.float64(0.9), 'effect': 'multiply prob by 0.460 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.4), 'effect': 'multiply prob by 1.100 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.37), 'effect': 'multiply prob by 0.741 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.05), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.9,0.4,0.37,0.1,0.00187473,"{'timestamp': 1760866780.2518888, 'inputs': {'network_load': np.float64(0.9), 'relay_reputation': np.float64(0.4), 'budget_utilization': np.float64(0.37), 'recent_win_rate': np.float64(0.1)}, 'base_prob': 0.01, 'final_prob': np.float64(0.00187473), 'steps': [{'feature': 'network_load', 'value': np.float64(0.9), 'effect': 'multiply prob by 0.460 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.4), 'effect': 'multiply prob by 1.100 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.37), 'effect': 'multiply prob by 0.741 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.1), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.9,0.4,0.37,0.15,0.00187473,"{'timestamp': 1760866780.251922, 'inputs': {'network_load': np.float64(0.9), 'relay_reputation': np.float64(0.4), 'budget_utilization': np.float64(0.37), 'recent_win_rate': np.float64(0.15)}, 'base_prob': 0.01, 'final_prob': np.float64(0.00187473), 'steps': [{'feature': 'network_load', 'value': np.float64(0.9), 'effect': 'multiply prob by 0.460 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.4), 'effect': 'multiply prob by 1.100 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.37), 'effect': 'multiply prob by 0.741 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.15), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.9,0.4,0.37,0.2,0.00187473,"{'timestamp': 1760866780.2519565, 'inputs': {'network_load': np.float64(0.9), 'relay_reputation': np.float64(0.4), 'budget_utilization': np.float64(0.37), 'recent_win_rate': np.float64(0.2)}, 'base_prob': 0.01, 'final_prob': np.float64(0.00187473), 'steps': [{'feature': 'network_load', 'value': np.float64(0.9), 'effect': 'multiply prob by 0.460 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.4), 'effect': 'multiply prob by 1.100 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.37), 'effect': 'multiply prob by 0.741 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.2), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.9,0.4,0.37,0.25,0.00187473,"{'timestamp': 1760866780.2520175, 'inputs': {'network_load': np.float64(0.9), 'relay_reputation': np.float64(0.4), 'budget_utilization': np.float64(0.37), 'recent_win_rate': np.float64(0.25)}, 'base_prob': 0.01, 'final_prob': np.float64(0.00187473), 'steps': [{'feature': 'network_load', 'value': np.float64(0.9), 'effect': 'multiply prob by 0.460 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.4), 'effect': 'multiply prob by 1.100 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.37), 'effect': 'multiply prob by 0.741 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.25), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.9,0.4,0.37,0.3,0.00187473,"{'timestamp': 1760866780.2520576, 'inputs': {'network_load': np.float64(0.9), 'relay_reputation': np.float64(0.4), 'budget_utilization': np.float64(0.37), 'recent_win_rate': np.float64(0.3)}, 'base_prob': 0.01, 'final_prob': np.float64(0.00187473), 'steps': [{'feature': 'network_load', 'value': np.float64(0.9), 'effect': 'multiply prob by 0.460 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.4), 'effect': 'multiply prob by 1.100 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.37), 'effect': 'multiply prob by 0.741 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.3), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.9,0.4,0.48,0.0,0.0033598399664016,"{'timestamp': 1760866780.25211, 'inputs': {'network_load': np.float64(0.9), 'relay_reputation': np.float64(0.4), 'budget_utilization': np.float64(0.48), 'recent_win_rate': 1e-09}, 'base_prob': 0.01, 'final_prob': np.float64(0.0033598399664016), 'steps': [{'feature': 'network_load', 'value': np.float64(0.9), 'effect': 'multiply prob by 0.460 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.4), 'effect': 'multiply prob by 1.100 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.48), 'effect': 'multiply prob by 0.664 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': 1e-09, 'effect': 'multiply prob by 1.000 (higher recent wins -> lower prob)'}]}"
0.9,0.4,0.48,0.05,0.0016799200000000001,"{'timestamp': 1760866780.2521474, 'inputs': {'network_load': np.float64(0.9), 'relay_reputation': np.float64(0.4), 'budget_utilization': np.float64(0.48), 'recent_win_rate': np.float64(0.05)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0016799200000000001), 'steps': [{'feature': 'network_load', 'value': np.float64(0.9), 'effect': 'multiply prob by 0.460 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.4), 'effect': 'multiply prob by 1.100 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.48), 'effect': 'multiply prob by 0.664 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.05), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.9,0.4,0.48,0.1,0.0016799200000000001,"{'timestamp': 1760866780.2521842, 'inputs': {'network_load': np.float64(0.9), 'relay_reputation': np.float64(0.4), 'budget_utilization': np.float64(0.48), 'recent_win_rate': np.float64(0.1)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0016799200000000001), 'steps': [{'feature': 'network_load', 'value': np.float64(0.9), 'effect': 'multiply prob by 0.460 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.4), 'effect': 'multiply prob by 1.100 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.48), 'effect': 'multiply prob by 0.664 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.1), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.9,0.4,0.48,0.15,0.0016799200000000001,"{'timestamp': 1760866780.2522385, 'inputs': {'network_load': np.float64(0.9), 'relay_reputation': np.float64(0.4), 'budget_utilization': np.float64(0.48), 'recent_win_rate': np.float64(0.15)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0016799200000000001), 'steps': [{'feature': 'network_load', 'value': np.float64(0.9), 'effect': 'multiply prob by 0.460 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.4), 'effect': 'multiply prob by 1.100 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.48), 'effect': 'multiply prob by 0.664 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.15), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.9,0.4,0.48,0.2,0.0016799200000000001,"{'timestamp': 1760866780.2523005, 'inputs': {'network_load': np.float64(0.9), 'relay_reputation': np.float64(0.4), 'budget_utilization': np.float64(0.48), 'recent_win_rate': np.float64(0.2)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0016799200000000001), 'steps': [{'feature': 'network_load', 'value': np.float64(0.9), 'effect': 'multiply prob by 0.460 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.4), 'effect': 'multiply prob by 1.100 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.48), 'effect': 'multiply prob by 0.664 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.2), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.9,0.4,0.48,0.25,0.0016799200000000001,"{'timestamp': 1760866780.2523317, 'inputs': {'network_load': np.float64(0.9), 'relay_reputation': np.float64(0.4), 'budget_utilization': np.float64(0.48), 'recent_win_rate': np.float64(0.25)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0016799200000000001), 'steps': [{'feature': 'network_load', 'value': np.float64(0.9), 'effect': 'multiply prob by 0.460 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.4), 'effect': 'multiply prob by 1.100 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.48), 'effect': 'multiply prob by 0.664 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.25), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.9,0.4,0.48,0.3,0.0016799200000000001,"{'timestamp': 1760866780.2523575, 'inputs': {'network_load': np.float64(0.9), 'relay_reputation': np.float64(0.4), 'budget_utilization': np.float64(0.48), 'recent_win_rate': np.float64(0.3)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0016799200000000001), 'steps': [{'feature': 'network_load', 'value': np.float64(0.9), 'effect': 'multiply prob by 0.460 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.4), 'effect': 'multiply prob by 1.100 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.48), 'effect': 'multiply prob by 0.664 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.3), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.9,0.4,0.59,0.0,0.0029702199702977996,"{'timestamp': 1760866780.252389, 'inputs': {'network_load': np.float64(0.9), 'relay_reputation': np.float64(0.4), 'budget_utilization': np.float64(0.59), 'recent_win_rate': 1e-09}, 'base_prob': 0.01, 'final_prob': np.float64(0.0029702199702977996), 'steps': [{'feature': 'network_load', 'value': np.float64(0.9), 'effect': 'multiply prob by 0.460 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.4), 'effect': 'multiply prob by 1.100 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.59), 'effect': 'multiply prob by 0.587 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': 1e-09, 'effect': 'multiply prob by 1.000 (higher recent wins -> lower prob)'}]}"
0.9,0.4,0.59,0.05,0.00148511,"{'timestamp': 1760866780.2524145, 'inputs': {'network_load': np.float64(0.9), 'relay_reputation': np.float64(0.4), 'budget_utilization': np.float64(0.59), 'recent_win_rate': np.float64(0.05)}, 'base_prob': 0.01, 'final_prob': np.float64(0.00148511), 'steps': [{'feature': 'network_load', 'value': np.float64(0.9), 'effect': 'multiply prob by 0.460 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.4), 'effect': 'multiply prob by 1.100 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.59), 'effect': 'multiply prob by 0.587 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.05), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.9,0.4,0.59,0.1,0.00148511,"{'timestamp': 1760866780.2524626, 'inputs': {'network_load': np.float64(0.9), 'relay_reputation': np.float64(0.4), 'budget_utilization': np.float64(0.59), 'recent_win_rate': np.float64(0.1)}, 'base_prob': 0.01, 'final_prob': np.float64(0.00148511), 'steps': [{'feature': 'network_load', 'value': np.float64(0.9), 'effect': 'multiply prob by 0.460 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.4), 'effect': 'multiply prob by 1.100 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.59), 'effect': 'multiply prob by 0.587 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.1), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.9,0.4,0.59,0.15,0.00148511,"{'timestamp': 1760866780.2524905, 'inputs': {'network_load': np.float64(0.9), 'relay_reputation': np.float64(0.4), 'budget_utilization': np.float64(0.59), 'recent_win_rate': np.float64(0.15)}, 'base_prob': 0.01, 'final_prob': np.float64(0.00148511), 'steps': [{'feature': 'network_load', 'value': np.float64(0.9), 'effect': 'multiply prob by 0.460 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.4), 'effect': 'multiply prob by 1.100 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.59), 'effect': 'multiply prob by 0.587 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.15), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.9,0.4,0.59,0.2,0.00148511,"{'timestamp': 1760866780.252518, 'inputs': {'network_load': np.float64(0.9), 'relay_reputation': np.float64(0.4), 'budget_utilization': np.float64(0.59), 'recent_win_rate': np.float64(0.2)}, 'base_prob': 0.01, 'final_prob': np.float64(0.00148511), 'steps': [{'feature': 'network_load', 'value': np.float64(0.9), 'effect': 'multiply prob by 0.460 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.4), 'effect': 'multiply prob by 1.100 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.59), 'effect': 'multiply prob by 0.587 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.2), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.9,0.4,0.59,0.25,0.00148511,"{'timestamp': 1760866780.2525432, 'inputs': {'network_load': np.float64(0.9), 'relay_reputation': np.float64(0.4), 'budget_utilization': np.float64(0.59), 'recent_win_rate': np.float64(0.25)}, 'base_prob': 0.01, 'final_prob': np.float64(0.00148511), 'steps': [{'feature': 'network_load', 'value': np.float64(0.9), 'effect': 'multiply prob by 0.460 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.4), 'effect': 'multiply prob by 1.100 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.59), 'effect': 'multiply prob by 0.587 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.25), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.9,0.4,0.59,0.3,0.00148511,"{'timestamp': 1760866780.2525685, 'inputs': {'network_load': np.float64(0.9), 'relay_reputation': np.float64(0.4), 'budget_utilization': np.float64(0.59), 'recent_win_rate': np.float64(0.3)}, 'base_prob': 0.01, 'final_prob': np.float64(0.00148511), 'steps': [{'feature': 'network_load', 'value': np.float64(0.9), 'effect': 'multiply prob by 0.460 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.4), 'effect': 'multiply prob by 1.100 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.59), 'effect': 'multiply prob by 0.587 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.3), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.9,0.4,0.69,0.0,0.0026160199738398003,"{'timestamp': 1760866780.252596, 'inputs': {'network_load': np.float64(0.9), 'relay_reputation': np.float64(0.4), 'budget_utilization': np.float64(0.69), 'recent_win_rate': 1e-09}, 'base_prob': 0.01, 'final_prob': np.float64(0.0026160199738398003), 'steps': [{'feature': 'network_load', 'value': np.float64(0.9), 'effect': 'multiply prob by 0.460 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.4), 'effect': 'multiply prob by 1.100 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.69), 'effect': 'multiply prob by 0.517 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': 1e-09, 'effect': 'multiply prob by 1.000 (higher recent wins -> lower prob)'}]}"
0.9,0.4,0.69,0.05,0.0013080100000000003,"{'timestamp': 1760866780.2526875, 'inputs': {'network_load': np.float64(0.9), 'relay_reputation': np.float64(0.4), 'budget_utilization': np.float64(0.69), 'recent_win_rate': np.float64(0.05)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0013080100000000003), 'steps': [{'feature': 'network_load', 'value': np.float64(0.9), 'effect': 'multiply prob by 0.460 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.4), 'effect': 'multiply prob by 1.100 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.69), 'effect': 'multiply prob by 0.517 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.05), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.9,0.4,0.69,0.1,0.0013080100000000003,"{'timestamp': 1760866780.2527285, 'inputs': {'network_load': np.float64(0.9), 'relay_reputation': np.float64(0.4), 'budget_utilization': np.float64(0.69), 'recent_win_rate': np.float64(0.1)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0013080100000000003), 'steps': [{'feature': 'network_load', 'value': np.float64(0.9), 'effect': 'multiply prob by 0.460 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.4), 'effect': 'multiply prob by 1.100 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.69), 'effect': 'multiply prob by 0.517 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.1), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.9,0.4,0.69,0.15,0.0013080100000000003,"{'timestamp': 1760866780.252755, 'inputs': {'network_load': np.float64(0.9), 'relay_reputation': np.float64(0.4), 'budget_utilization': np.float64(0.69), 'recent_win_rate': np.float64(0.15)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0013080100000000003), 'steps': [{'feature': 'network_load', 'value': np.float64(0.9), 'effect': 'multiply prob by 0.460 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.4), 'effect': 'multiply prob by 1.100 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.69), 'effect': 'multiply prob by 0.517 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.15), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.9,0.4,0.69,0.2,0.0013080100000000003,"{'timestamp': 1760866780.252783, 'inputs': {'network_load': np.float64(0.9), 'relay_reputation': np.float64(0.4), 'budget_utilization': np.float64(0.69), 'recent_win_rate': np.float64(0.2)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0013080100000000003), 'steps': [{'feature': 'network_load', 'value': np.float64(0.9), 'effect': 'multiply prob by 0.460 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.4), 'effect': 'multiply prob by 1.100 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.69), 'effect': 'multiply prob by 0.517 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.2), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.9,0.4,0.69,0.25,0.0013080100000000003,"{'timestamp': 1760866780.2528117, 'inputs': {'network_load': np.float64(0.9), 'relay_reputation': np.float64(0.4), 'budget_utilization': np.float64(0.69), 'recent_win_rate': np.float64(0.25)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0013080100000000003), 'steps': [{'feature': 'network_load', 'value': np.float64(0.9), 'effect': 'multiply prob by 0.460 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.4), 'effect': 'multiply prob by 1.100 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.69), 'effect': 'multiply prob by 0.517 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.25), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.9,0.4,0.69,0.3,0.0013080100000000003,"{'timestamp': 1760866780.2528389, 'inputs': {'network_load': np.float64(0.9), 'relay_reputation': np.float64(0.4), 'budget_utilization': np.float64(0.69), 'recent_win_rate': np.float64(0.3)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0013080100000000003), 'steps': [{'feature': 'network_load', 'value': np.float64(0.9), 'effect': 'multiply prob by 0.460 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.4), 'effect': 'multiply prob by 1.100 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.69), 'effect': 'multiply prob by 0.517 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.3), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.9,0.4,0.8,0.0,0.0022263999777360002,"{'timestamp': 1760866780.2528696, 'inputs': {'network_load': np.float64(0.9), 'relay_reputation': np.float64(0.4), 'budget_utilization': np.float64(0.8), 'recent_win_rate': 1e-09}, 'base_prob': 0.01, 'final_prob': np.float64(0.0022263999777360002), 'steps': [{'feature': 'network_load', 'value': np.float64(0.9), 'effect': 'multiply prob by 0.460 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.4), 'effect': 'multiply prob by 1.100 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.8), 'effect': 'multiply prob by 0.440 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': 1e-09, 'effect': 'multiply prob by 1.000 (higher recent wins -> lower prob)'}]}"
0.9,0.4,0.8,0.05,0.0011132000000000002,"{'timestamp': 1760866780.252895, 'inputs': {'network_load': np.float64(0.9), 'relay_reputation': np.float64(0.4), 'budget_utilization': np.float64(0.8), 'recent_win_rate': np.float64(0.05)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0011132000000000002), 'steps': [{'feature': 'network_load', 'value': np.float64(0.9), 'effect': 'multiply prob by 0.460 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.4), 'effect': 'multiply prob by 1.100 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.8), 'effect': 'multiply prob by 0.440 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.05), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.9,0.4,0.8,0.1,0.0011132000000000002,"{'timestamp': 1760866780.2529206, 'inputs': {'network_load': np.float64(0.9), 'relay_reputation': np.float64(0.4), 'budget_utilization': np.float64(0.8), 'recent_win_rate': np.float64(0.1)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0011132000000000002), 'steps': [{'feature': 'network_load', 'value': np.float64(0.9), 'effect': 'multiply prob by 0.460 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.4), 'effect': 'multiply prob by 1.100 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.8), 'effect': 'multiply prob by 0.440 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.1), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.9,0.4,0.8,0.15,0.0011132000000000002,"{'timestamp': 1760866780.252946, 'inputs': {'network_load': np.float64(0.9), 'relay_reputation': np.float64(0.4), 'budget_utilization': np.float64(0.8), 'recent_win_rate': np.float64(0.15)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0011132000000000002), 'steps': [{'feature': 'network_load', 'value': np.float64(0.9), 'effect': 'multiply prob by 0.460 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.4), 'effect': 'multiply prob by 1.100 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.8), 'effect': 'multiply prob by 0.440 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.15), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.9,0.4,0.8,0.2,0.0011132000000000002,"{'timestamp': 1760866780.252971, 'inputs': {'network_load': np.float64(0.9), 'relay_reputation': np.float64(0.4), 'budget_utilization': np.float64(0.8), 'recent_win_rate': np.float64(0.2)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0011132000000000002), 'steps': [{'feature': 'network_load', 'value': np.float64(0.9), 'effect': 'multiply prob by 0.460 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.4), 'effect': 'multiply prob by 1.100 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.8), 'effect': 'multiply prob by 0.440 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.2), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.9,0.4,0.8,0.25,0.0011132000000000002,"{'timestamp': 1760866780.2529984, 'inputs': {'network_load': np.float64(0.9), 'relay_reputation': np.float64(0.4), 'budget_utilization': np.float64(0.8), 'recent_win_rate': np.float64(0.25)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0011132000000000002), 'steps': [{'feature': 'network_load', 'value': np.float64(0.9), 'effect': 'multiply prob by 0.460 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.4), 'effect': 'multiply prob by 1.100 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.8), 'effect': 'multiply prob by 0.440 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.25), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.9,0.4,0.8,0.3,0.0011132000000000002,"{'timestamp': 1760866780.253029, 'inputs': {'network_load': np.float64(0.9), 'relay_reputation': np.float64(0.4), 'budget_utilization': np.float64(0.8), 'recent_win_rate': np.float64(0.3)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0011132000000000002), 'steps': [{'feature': 'network_load', 'value': np.float64(0.9), 'effect': 'multiply prob by 0.460 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.4), 'effect': 'multiply prob by 1.100 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.8), 'effect': 'multiply prob by 0.440 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.3), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.9,0.51,0.05,0.0,0.00561533494384665,"{'timestamp': 1760866780.2530577, 'inputs': {'network_load': np.float64(0.9), 'relay_reputation': np.float64(0.51), 'budget_utilization': np.float64(0.05), 'recent_win_rate': 1e-09}, 'base_prob': 0.01, 'final_prob': np.float64(0.00561533494384665), 'steps': [{'feature': 'network_load', 'value': np.float64(0.9), 'effect': 'multiply prob by 0.460 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.51), 'effect': 'multiply prob by 1.265 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.05), 'effect': 'multiply prob by 0.965 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': 1e-09, 'effect': 'multiply prob by 1.000 (higher recent wins -> lower prob)'}]}"
0.9,0.51,0.05,0.05,0.0028076675,"{'timestamp': 1760866780.2531183, 'inputs': {'network_load': np.float64(0.9), 'relay_reputation': np.float64(0.51), 'budget_utilization': np.float64(0.05), 'recent_win_rate': np.float64(0.05)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0028076675), 'steps': [{'feature': 'network_load', 'value': np.float64(0.9), 'effect': 'multiply prob by 0.460 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.51), 'effect': 'multiply prob by 1.265 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.05), 'effect': 'multiply prob by 0.965 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.05), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.9,0.51,0.05,0.1,0.0028076675,"{'timestamp': 1760866780.253145, 'inputs': {'network_load': np.float64(0.9), 'relay_reputation': np.float64(0.51), 'budget_utilization': np.float64(0.05), 'recent_win_rate': np.float64(0.1)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0028076675), 'steps': [{'feature': 'network_load', 'value': np.float64(0.9), 'effect': 'multiply prob by 0.460 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.51), 'effect': 'multiply prob by 1.265 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.05), 'effect': 'multiply prob by 0.965 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.1), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.9,0.51,0.05,0.15,0.0028076675,"{'timestamp': 1760866780.2531745, 'inputs': {'network_load': np.float64(0.9), 'relay_reputation': np.float64(0.51), 'budget_utilization': np.float64(0.05), 'recent_win_rate': np.float64(0.15)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0028076675), 'steps': [{'feature': 'network_load', 'value': np.float64(0.9), 'effect': 'multiply prob by 0.460 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.51), 'effect': 'multiply prob by 1.265 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.05), 'effect': 'multiply prob by 0.965 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.15), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.9,0.51,0.05,0.2,0.0028076675,"{'timestamp': 1760866780.2532, 'inputs': {'network_load': np.float64(0.9), 'relay_reputation': np.float64(0.51), 'budget_utilization': np.float64(0.05), 'recent_win_rate': np.float64(0.2)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0028076675), 'steps': [{'feature': 'network_load', 'value': np.float64(0.9), 'effect': 'multiply prob by 0.460 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.51), 'effect': 'multiply prob by 1.265 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.05), 'effect': 'multiply prob by 0.965 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.2), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.9,0.51,0.05,0.25,0.0028076675,"{'timestamp': 1760866780.2532248, 'inputs': {'network_load': np.float64(0.9), 'relay_reputation': np.float64(0.51), 'budget_utilization': np.float64(0.05), 'recent_win_rate': np.float64(0.25)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0028076675), 'steps': [{'feature': 'network_load', 'value': np.float64(0.9), 'effect': 'multiply prob by 0.460 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.51), 'effect': 'multiply prob by 1.265 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.05), 'effect': 'multiply prob by 0.965 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.25), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.9,0.51,0.05,0.3,0.0028076675,"{'timestamp': 1760866780.2532501, 'inputs': {'network_load': np.float64(0.9), 'relay_reputation': np.float64(0.51), 'budget_utilization': np.float64(0.05), 'recent_win_rate': np.float64(0.3)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0028076675), 'steps': [{'feature': 'network_load', 'value': np.float64(0.9), 'effect': 'multiply prob by 0.460 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.51), 'effect': 'multiply prob by 1.265 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.05), 'effect': 'multiply prob by 0.965 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.3), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.9,0.51,0.16,0.0,0.005167271948327281,"{'timestamp': 1760866780.2532916, 'inputs': {'network_load': np.float64(0.9), 'relay_reputation': np.float64(0.51), 'budget_utilization': np.float64(0.16), 'recent_win_rate': 1e-09}, 'base_prob': 0.01, 'final_prob': np.float64(0.005167271948327281), 'steps': [{'feature': 'network_load', 'value': np.float64(0.9), 'effect': 'multiply prob by 0.460 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.51), 'effect': 'multiply prob by 1.265 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.16), 'effect': 'multiply prob by 0.888 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': 1e-09, 'effect': 'multiply prob by 1.000 (higher recent wins -> lower prob)'}]}"
0.9,0.51,0.16,0.05,0.0025836360000000003,"{'timestamp': 1760866780.2533238, 'inputs': {'network_load': np.float64(0.9), 'relay_reputation': np.float64(0.51), 'budget_utilization': np.float64(0.16), 'recent_win_rate': np.float64(0.05)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0025836360000000003), 'steps': [{'feature': 'network_load', 'value': np.float64(0.9), 'effect': 'multiply prob by 0.460 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.51), 'effect': 'multiply prob by 1.265 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.16), 'effect': 'multiply prob by 0.888 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.05), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.9,0.51,0.16,0.1,0.0025836360000000003,"{'timestamp': 1760866780.2533529, 'inputs': {'network_load': np.float64(0.9), 'relay_reputation': np.float64(0.51), 'budget_utilization': np.float64(0.16), 'recent_win_rate': np.float64(0.1)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0025836360000000003), 'steps': [{'feature': 'network_load', 'value': np.float64(0.9), 'effect': 'multiply prob by 0.460 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.51), 'effect': 'multiply prob by 1.265 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.16), 'effect': 'multiply prob by 0.888 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.1), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.9,0.51,0.16,0.15,0.0025836360000000003,"{'timestamp': 1760866780.2533782, 'inputs': {'network_load': np.float64(0.9), 'relay_reputation': np.float64(0.51), 'budget_utilization': np.float64(0.16), 'recent_win_rate': np.float64(0.15)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0025836360000000003), 'steps': [{'feature': 'network_load', 'value': np.float64(0.9), 'effect': 'multiply prob by 0.460 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.51), 'effect': 'multiply prob by 1.265 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.16), 'effect': 'multiply prob by 0.888 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.15), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.9,0.51,0.16,0.2,0.0025836360000000003,"{'timestamp': 1760866780.2534034, 'inputs': {'network_load': np.float64(0.9), 'relay_reputation': np.float64(0.51), 'budget_utilization': np.float64(0.16), 'recent_win_rate': np.float64(0.2)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0025836360000000003), 'steps': [{'feature': 'network_load', 'value': np.float64(0.9), 'effect': 'multiply prob by 0.460 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.51), 'effect': 'multiply prob by 1.265 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.16), 'effect': 'multiply prob by 0.888 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.2), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.9,0.51,0.16,0.25,0.0025836360000000003,"{'timestamp': 1760866780.2534306, 'inputs': {'network_load': np.float64(0.9), 'relay_reputation': np.float64(0.51), 'budget_utilization': np.float64(0.16), 'recent_win_rate': np.float64(0.25)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0025836360000000003), 'steps': [{'feature': 'network_load', 'value': np.float64(0.9), 'effect': 'multiply prob by 0.460 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.51), 'effect': 'multiply prob by 1.265 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.16), 'effect': 'multiply prob by 0.888 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.25), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.9,0.51,0.16,0.3,0.0025836360000000003,"{'timestamp': 1760866780.2534556, 'inputs': {'network_load': np.float64(0.9), 'relay_reputation': np.float64(0.51), 'budget_utilization': np.float64(0.16), 'recent_win_rate': np.float64(0.3)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0025836360000000003), 'steps': [{'feature': 'network_load', 'value': np.float64(0.9), 'effect': 'multiply prob by 0.460 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.51), 'effect': 'multiply prob by 1.265 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.16), 'effect': 'multiply prob by 0.888 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.3), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.9,0.51,0.26,0.0,0.0047599419524005804,"{'timestamp': 1760866780.2534847, 'inputs': {'network_load': np.float64(0.9), 'relay_reputation': np.float64(0.51), 'budget_utilization': np.float64(0.26), 'recent_win_rate': 1e-09}, 'base_prob': 0.01, 'final_prob': np.float64(0.0047599419524005804), 'steps': [{'feature': 'network_load', 'value': np.float64(0.9), 'effect': 'multiply prob by 0.460 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.51), 'effect': 'multiply prob by 1.265 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.26), 'effect': 'multiply prob by 0.818 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': 1e-09, 'effect': 'multiply prob by 1.000 (higher recent wins -> lower prob)'}]}"
0.9,0.51,0.26,0.05,0.0023799710000000003,"{'timestamp': 1760866780.2535646, 'inputs': {'network_load': np.float64(0.9), 'relay_reputation': np.float64(0.51), 'budget_utilization': np.float64(0.26), 'recent_win_rate': np.float64(0.05)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0023799710000000003), 'steps': [{'feature': 'network_load', 'value': np.float64(0.9), 'effect': 'multiply prob by 0.460 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.51), 'effect': 'multiply prob by 1.265 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.26), 'effect': 'multiply prob by 0.818 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.05), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.9,0.51,0.26,0.1,0.0023799710000000003,"{'timestamp': 1760866780.253591, 'inputs': {'network_load': np.float64(0.9), 'relay_reputation': np.float64(0.51), 'budget_utilization': np.float64(0.26), 'recent_win_rate': np.float64(0.1)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0023799710000000003), 'steps': [{'feature': 'network_load', 'value': np.float64(0.9), 'effect': 'multiply prob by 0.460 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.51), 'effect': 'multiply prob by 1.265 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.26), 'effect': 'multiply prob by 0.818 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.1), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.9,0.51,0.26,0.15,0.0023799710000000003,"{'timestamp': 1760866780.2536163, 'inputs': {'network_load': np.float64(0.9), 'relay_reputation': np.float64(0.51), 'budget_utilization': np.float64(0.26), 'recent_win_rate': np.float64(0.15)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0023799710000000003), 'steps': [{'feature': 'network_load', 'value': np.float64(0.9), 'effect': 'multiply prob by 0.460 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.51), 'effect': 'multiply prob by 1.265 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.26), 'effect': 'multiply prob by 0.818 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.15), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.9,0.51,0.26,0.2,0.0023799710000000003,"{'timestamp': 1760866780.2536447, 'inputs': {'network_load': np.float64(0.9), 'relay_reputation': np.float64(0.51), 'budget_utilization': np.float64(0.26), 'recent_win_rate': np.float64(0.2)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0023799710000000003), 'steps': [{'feature': 'network_load', 'value': np.float64(0.9), 'effect': 'multiply prob by 0.460 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.51), 'effect': 'multiply prob by 1.265 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.26), 'effect': 'multiply prob by 0.818 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.2), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.9,0.51,0.26,0.25,0.0023799710000000003,"{'timestamp': 1760866780.2536716, 'inputs': {'network_load': np.float64(0.9), 'relay_reputation': np.float64(0.51), 'budget_utilization': np.float64(0.26), 'recent_win_rate': np.float64(0.25)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0023799710000000003), 'steps': [{'feature': 'network_load', 'value': np.float64(0.9), 'effect': 'multiply prob by 0.460 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.51), 'effect': 'multiply prob by 1.265 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.26), 'effect': 'multiply prob by 0.818 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.25), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.9,0.51,0.26,0.3,0.0023799710000000003,"{'timestamp': 1760866780.253697, 'inputs': {'network_load': np.float64(0.9), 'relay_reputation': np.float64(0.51), 'budget_utilization': np.float64(0.26), 'recent_win_rate': np.float64(0.3)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0023799710000000003), 'steps': [{'feature': 'network_load', 'value': np.float64(0.9), 'effect': 'multiply prob by 0.460 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.51), 'effect': 'multiply prob by 1.265 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.26), 'effect': 'multiply prob by 0.818 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.3), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.9,0.51,0.37,0.0,0.0043118789568812104,"{'timestamp': 1760866780.2537262, 'inputs': {'network_load': np.float64(0.9), 'relay_reputation': np.float64(0.51), 'budget_utilization': np.float64(0.37), 'recent_win_rate': 1e-09}, 'base_prob': 0.01, 'final_prob': np.float64(0.0043118789568812104), 'steps': [{'feature': 'network_load', 'value': np.float64(0.9), 'effect': 'multiply prob by 0.460 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.51), 'effect': 'multiply prob by 1.265 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.37), 'effect': 'multiply prob by 0.741 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': 1e-09, 'effect': 'multiply prob by 1.000 (higher recent wins -> lower prob)'}]}"
0.9,0.51,0.37,0.05,0.0021559395,"{'timestamp': 1760866780.2537515, 'inputs': {'network_load': np.float64(0.9), 'relay_reputation': np.float64(0.51), 'budget_utilization': np.float64(0.37), 'recent_win_rate': np.float64(0.05)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0021559395), 'steps': [{'feature': 'network_load', 'value': np.float64(0.9), 'effect': 'multiply prob by 0.460 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.51), 'effect': 'multiply prob by 1.265 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.37), 'effect': 'multiply prob by 0.741 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.05), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.9,0.51,0.37,0.1,0.0021559395,"{'timestamp': 1760866780.2537794, 'inputs': {'network_load': np.float64(0.9), 'relay_reputation': np.float64(0.51), 'budget_utilization': np.float64(0.37), 'recent_win_rate': np.float64(0.1)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0021559395), 'steps': [{'feature': 'network_load', 'value': np.float64(0.9), 'effect': 'multiply prob by 0.460 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.51), 'effect': 'multiply prob by 1.265 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.37), 'effect': 'multiply prob by 0.741 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.1), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.9,0.51,0.37,0.15,0.0021559395,"{'timestamp': 1760866780.2538064, 'inputs': {'network_load': np.float64(0.9), 'relay_reputation': np.float64(0.51), 'budget_utilization': np.float64(0.37), 'recent_win_rate': np.float64(0.15)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0021559395), 'steps': [{'feature': 'network_load', 'value': np.float64(0.9), 'effect': 'multiply prob by 0.460 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.51), 'effect': 'multiply prob by 1.265 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.37), 'effect': 'multiply prob by 0.741 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.15), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.9,0.51,0.37,0.2,0.0021559395,"{'timestamp': 1760866780.2538803, 'inputs': {'network_load': np.float64(0.9), 'relay_reputation': np.float64(0.51), 'budget_utilization': np.float64(0.37), 'recent_win_rate': np.float64(0.2)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0021559395), 'steps': [{'feature': 'network_load', 'value': np.float64(0.9), 'effect': 'multiply prob by 0.460 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.51), 'effect': 'multiply prob by 1.265 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.37), 'effect': 'multiply prob by 0.741 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.2), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.9,0.51,0.37,0.25,0.0021559395,"{'timestamp': 1760866780.2539067, 'inputs': {'network_load': np.float64(0.9), 'relay_reputation': np.float64(0.51), 'budget_utilization': np.float64(0.37), 'recent_win_rate': np.float64(0.25)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0021559395), 'steps': [{'feature': 'network_load', 'value': np.float64(0.9), 'effect': 'multiply prob by 0.460 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.51), 'effect': 'multiply prob by 1.265 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.37), 'effect': 'multiply prob by 0.741 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.25), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.9,0.51,0.37,0.3,0.0021559395,"{'timestamp': 1760866780.253935, 'inputs': {'network_load': np.float64(0.9), 'relay_reputation': np.float64(0.51), 'budget_utilization': np.float64(0.37), 'recent_win_rate': np.float64(0.3)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0021559395), 'steps': [{'feature': 'network_load', 'value': np.float64(0.9), 'effect': 'multiply prob by 0.460 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.51), 'effect': 'multiply prob by 1.265 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.37), 'effect': 'multiply prob by 0.741 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.3), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.9,0.51,0.48,0.0,0.00386381596136184,"{'timestamp': 1760866780.253965, 'inputs': {'network_load': np.float64(0.9), 'relay_reputation': np.float64(0.51), 'budget_utilization': np.float64(0.48), 'recent_win_rate': 1e-09}, 'base_prob': 0.01, 'final_prob': np.float64(0.00386381596136184), 'steps': [{'feature': 'network_load', 'value': np.float64(0.9), 'effect': 'multiply prob by 0.460 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.51), 'effect': 'multiply prob by 1.265 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.48), 'effect': 'multiply prob by 0.664 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': 1e-09, 'effect': 'multiply prob by 1.000 (higher recent wins -> lower prob)'}]}"
0.9,0.51,0.48,0.05,0.0019319080000000002,"{'timestamp': 1760866780.2539902, 'inputs': {'network_load': np.float64(0.9), 'relay_reputation': np.float64(0.51), 'budget_utilization': np.float64(0.48), 'recent_win_rate': np.float64(0.05)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0019319080000000002), 'steps': [{'feature': 'network_load', 'value': np.float64(0.9), 'effect': 'multiply prob by 0.460 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.51), 'effect': 'multiply prob by 1.265 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.48), 'effect': 'multiply prob by 0.664 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.05), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.9,0.51,0.48,0.1,0.0019319080000000002,"{'timestamp': 1760866780.2540197, 'inputs': {'network_load': np.float64(0.9), 'relay_reputation': np.float64(0.51), 'budget_utilization': np.float64(0.48), 'recent_win_rate': np.float64(0.1)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0019319080000000002), 'steps': [{'feature': 'network_load', 'value': np.float64(0.9), 'effect': 'multiply prob by 0.460 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.51), 'effect': 'multiply prob by 1.265 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.48), 'effect': 'multiply prob by 0.664 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.1), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.9,0.51,0.48,0.15,0.0019319080000000002,"{'timestamp': 1760866780.254047, 'inputs': {'network_load': np.float64(0.9), 'relay_reputation': np.float64(0.51), 'budget_utilization': np.float64(0.48), 'recent_win_rate': np.float64(0.15)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0019319080000000002), 'steps': [{'feature': 'network_load', 'value': np.float64(0.9), 'effect': 'multiply prob by 0.460 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.51), 'effect': 'multiply prob by 1.265 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.48), 'effect': 'multiply prob by 0.664 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.15), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.9,0.51,0.48,0.2,0.0019319080000000002,"{'timestamp': 1760866780.2540724, 'inputs': {'network_load': np.float64(0.9), 'relay_reputation': np.float64(0.51), 'budget_utilization': np.float64(0.48), 'recent_win_rate': np.float64(0.2)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0019319080000000002), 'steps': [{'feature': 'network_load', 'value': np.float64(0.9), 'effect': 'multiply prob by 0.460 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.51), 'effect': 'multiply prob by 1.265 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.48), 'effect': 'multiply prob by 0.664 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.2), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.9,0.51,0.48,0.25,0.0019319080000000002,"{'timestamp': 1760866780.2540991, 'inputs': {'network_load': np.float64(0.9), 'relay_reputation': np.float64(0.51), 'budget_utilization': np.float64(0.48), 'recent_win_rate': np.float64(0.25)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0019319080000000002), 'steps': [{'feature': 'network_load', 'value': np.float64(0.9), 'effect': 'multiply prob by 0.460 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.51), 'effect': 'multiply prob by 1.265 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.48), 'effect': 'multiply prob by 0.664 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.25), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.9,0.51,0.48,0.3,0.0019319080000000002,"{'timestamp': 1760866780.2541246, 'inputs': {'network_load': np.float64(0.9), 'relay_reputation': np.float64(0.51), 'budget_utilization': np.float64(0.48), 'recent_win_rate': np.float64(0.3)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0019319080000000002), 'steps': [{'feature': 'network_load', 'value': np.float64(0.9), 'effect': 'multiply prob by 0.460 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.51), 'effect': 'multiply prob by 1.265 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.48), 'effect': 'multiply prob by 0.664 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.3), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.9,0.51,0.59,0.0,0.00341575296584247,"{'timestamp': 1760866780.2541535, 'inputs': {'network_load': np.float64(0.9), 'relay_reputation': np.float64(0.51), 'budget_utilization': np.float64(0.59), 'recent_win_rate': 1e-09}, 'base_prob': 0.01, 'final_prob': np.float64(0.00341575296584247), 'steps': [{'feature': 'network_load', 'value': np.float64(0.9), 'effect': 'multiply prob by 0.460 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.51), 'effect': 'multiply prob by 1.265 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.59), 'effect': 'multiply prob by 0.587 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': 1e-09, 'effect': 'multiply prob by 1.000 (higher recent wins -> lower prob)'}]}"
0.9,0.51,0.59,0.05,0.0017078765,"{'timestamp': 1760866780.2541788, 'inputs': {'network_load': np.float64(0.9), 'relay_reputation': np.float64(0.51), 'budget_utilization': np.float64(0.59), 'recent_win_rate': np.float64(0.05)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0017078765), 'steps': [{'feature': 'network_load', 'value': np.float64(0.9), 'effect': 'multiply prob by 0.460 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.51), 'effect': 'multiply prob by 1.265 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.59), 'effect': 'multiply prob by 0.587 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.05), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.9,0.51,0.59,0.1,0.0017078765,"{'timestamp': 1760866780.2542043, 'inputs': {'network_load': np.float64(0.9), 'relay_reputation': np.float64(0.51), 'budget_utilization': np.float64(0.59), 'recent_win_rate': np.float64(0.1)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0017078765), 'steps': [{'feature': 'network_load', 'value': np.float64(0.9), 'effect': 'multiply prob by 0.460 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.51), 'effect': 'multiply prob by 1.265 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.59), 'effect': 'multiply prob by 0.587 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.1), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.9,0.51,0.59,0.15,0.0017078765,"{'timestamp': 1760866780.2542312, 'inputs': {'network_load': np.float64(0.9), 'relay_reputation': np.float64(0.51), 'budget_utilization': np.float64(0.59), 'recent_win_rate': np.float64(0.15)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0017078765), 'steps': [{'feature': 'network_load', 'value': np.float64(0.9), 'effect': 'multiply prob by 0.460 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.51), 'effect': 'multiply prob by 1.265 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.59), 'effect': 'multiply prob by 0.587 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.15), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.9,0.51,0.59,0.2,0.0017078765,"{'timestamp': 1760866780.2542582, 'inputs': {'network_load': np.float64(0.9), 'relay_reputation': np.float64(0.51), 'budget_utilization': np.float64(0.59), 'recent_win_rate': np.float64(0.2)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0017078765), 'steps': [{'feature': 'network_load', 'value': np.float64(0.9), 'effect': 'multiply prob by 0.460 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.51), 'effect': 'multiply prob by 1.265 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.59), 'effect': 'multiply prob by 0.587 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.2), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.9,0.51,0.59,0.25,0.0017078765,"{'timestamp': 1760866780.254287, 'inputs': {'network_load': np.float64(0.9), 'relay_reputation': np.float64(0.51), 'budget_utilization': np.float64(0.59), 'recent_win_rate': np.float64(0.25)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0017078765), 'steps': [{'feature': 'network_load', 'value': np.float64(0.9), 'effect': 'multiply prob by 0.460 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.51), 'effect': 'multiply prob by 1.265 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.59), 'effect': 'multiply prob by 0.587 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.25), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.9,0.51,0.59,0.3,0.0017078765,"{'timestamp': 1760866780.2543206, 'inputs': {'network_load': np.float64(0.9), 'relay_reputation': np.float64(0.51), 'budget_utilization': np.float64(0.59), 'recent_win_rate': np.float64(0.3)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0017078765), 'steps': [{'feature': 'network_load', 'value': np.float64(0.9), 'effect': 'multiply prob by 0.460 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.51), 'effect': 'multiply prob by 1.265 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.59), 'effect': 'multiply prob by 0.587 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.3), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.9,0.51,0.69,0.0,0.0030084229699157707,"{'timestamp': 1760866780.2543492, 'inputs': {'network_load': np.float64(0.9), 'relay_reputation': np.float64(0.51), 'budget_utilization': np.float64(0.69), 'recent_win_rate': 1e-09}, 'base_prob': 0.01, 'final_prob': np.float64(0.0030084229699157707), 'steps': [{'feature': 'network_load', 'value': np.float64(0.9), 'effect': 'multiply prob by 0.460 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.51), 'effect': 'multiply prob by 1.265 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.69), 'effect': 'multiply prob by 0.517 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': 1e-09, 'effect': 'multiply prob by 1.000 (higher recent wins -> lower prob)'}]}"
0.9,0.51,0.69,0.05,0.0015042115000000005,"{'timestamp': 1760866780.254375, 'inputs': {'network_load': np.float64(0.9), 'relay_reputation': np.float64(0.51), 'budget_utilization': np.float64(0.69), 'recent_win_rate': np.float64(0.05)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0015042115000000005), 'steps': [{'feature': 'network_load', 'value': np.float64(0.9), 'effect': 'multiply prob by 0.460 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.51), 'effect': 'multiply prob by 1.265 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.69), 'effect': 'multiply prob by 0.517 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.05), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.9,0.51,0.69,0.1,0.0015042115000000005,"{'timestamp': 1760866780.2544003, 'inputs': {'network_load': np.float64(0.9), 'relay_reputation': np.float64(0.51), 'budget_utilization': np.float64(0.69), 'recent_win_rate': np.float64(0.1)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0015042115000000005), 'steps': [{'feature': 'network_load', 'value': np.float64(0.9), 'effect': 'multiply prob by 0.460 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.51), 'effect': 'multiply prob by 1.265 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.69), 'effect': 'multiply prob by 0.517 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.1), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.9,0.51,0.69,0.15,0.0015042115000000005,"{'timestamp': 1760866780.254428, 'inputs': {'network_load': np.float64(0.9), 'relay_reputation': np.float64(0.51), 'budget_utilization': np.float64(0.69), 'recent_win_rate': np.float64(0.15)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0015042115000000005), 'steps': [{'feature': 'network_load', 'value': np.float64(0.9), 'effect': 'multiply prob by 0.460 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.51), 'effect': 'multiply prob by 1.265 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.69), 'effect': 'multiply prob by 0.517 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.15), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.9,0.51,0.69,0.2,0.0015042115000000005,"{'timestamp': 1760866780.2545066, 'inputs': {'network_load': np.float64(0.9), 'relay_reputation': np.float64(0.51), 'budget_utilization': np.float64(0.69), 'recent_win_rate': np.float64(0.2)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0015042115000000005), 'steps': [{'feature': 'network_load', 'value': np.float64(0.9), 'effect': 'multiply prob by 0.460 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.51), 'effect': 'multiply prob by 1.265 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.69), 'effect': 'multiply prob by 0.517 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.2), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.9,0.51,0.69,0.25,0.0015042115000000005,"{'timestamp': 1760866780.2545362, 'inputs': {'network_load': np.float64(0.9), 'relay_reputation': np.float64(0.51), 'budget_utilization': np.float64(0.69), 'recent_win_rate': np.float64(0.25)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0015042115000000005), 'steps': [{'feature': 'network_load', 'value': np.float64(0.9), 'effect': 'multiply prob by 0.460 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.51), 'effect': 'multiply prob by 1.265 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.69), 'effect': 'multiply prob by 0.517 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.25), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.9,0.51,0.69,0.3,0.0015042115000000005,"{'timestamp': 1760866780.2545614, 'inputs': {'network_load': np.float64(0.9), 'relay_reputation': np.float64(0.51), 'budget_utilization': np.float64(0.69), 'recent_win_rate': np.float64(0.3)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0015042115000000005), 'steps': [{'feature': 'network_load', 'value': np.float64(0.9), 'effect': 'multiply prob by 0.460 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.51), 'effect': 'multiply prob by 1.265 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.69), 'effect': 'multiply prob by 0.517 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.3), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.9,0.51,0.8,0.0,0.0025603599743964007,"{'timestamp': 1760866780.2545903, 'inputs': {'network_load': np.float64(0.9), 'relay_reputation': np.float64(0.51), 'budget_utilization': np.float64(0.8), 'recent_win_rate': 1e-09}, 'base_prob': 0.01, 'final_prob': np.float64(0.0025603599743964007), 'steps': [{'feature': 'network_load', 'value': np.float64(0.9), 'effect': 'multiply prob by 0.460 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.51), 'effect': 'multiply prob by 1.265 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.8), 'effect': 'multiply prob by 0.440 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': 1e-09, 'effect': 'multiply prob by 1.000 (higher recent wins -> lower prob)'}]}"
0.9,0.51,0.8,0.05,0.0012801800000000003,"{'timestamp': 1760866780.2546155, 'inputs': {'network_load': np.float64(0.9), 'relay_reputation': np.float64(0.51), 'budget_utilization': np.float64(0.8), 'recent_win_rate': np.float64(0.05)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0012801800000000003), 'steps': [{'feature': 'network_load', 'value': np.float64(0.9), 'effect': 'multiply prob by 0.460 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.51), 'effect': 'multiply prob by 1.265 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.8), 'effect': 'multiply prob by 0.440 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.05), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.9,0.51,0.8,0.1,0.0012801800000000003,"{'timestamp': 1760866780.254643, 'inputs': {'network_load': np.float64(0.9), 'relay_reputation': np.float64(0.51), 'budget_utilization': np.float64(0.8), 'recent_win_rate': np.float64(0.1)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0012801800000000003), 'steps': [{'feature': 'network_load', 'value': np.float64(0.9), 'effect': 'multiply prob by 0.460 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.51), 'effect': 'multiply prob by 1.265 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.8), 'effect': 'multiply prob by 0.440 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.1), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.9,0.51,0.8,0.15,0.0012801800000000003,"{'timestamp': 1760866780.2546682, 'inputs': {'network_load': np.float64(0.9), 'relay_reputation': np.float64(0.51), 'budget_utilization': np.float64(0.8), 'recent_win_rate': np.float64(0.15)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0012801800000000003), 'steps': [{'feature': 'network_load', 'value': np.float64(0.9), 'effect': 'multiply prob by 0.460 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.51), 'effect': 'multiply prob by 1.265 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.8), 'effect': 'multiply prob by 0.440 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.15), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.9,0.51,0.8,0.2,0.0012801800000000003,"{'timestamp': 1760866780.2546933, 'inputs': {'network_load': np.float64(0.9), 'relay_reputation': np.float64(0.51), 'budget_utilization': np.float64(0.8), 'recent_win_rate': np.float64(0.2)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0012801800000000003), 'steps': [{'feature': 'network_load', 'value': np.float64(0.9), 'effect': 'multiply prob by 0.460 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.51), 'effect': 'multiply prob by 1.265 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.8), 'effect': 'multiply prob by 0.440 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.2), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.9,0.51,0.8,0.25,0.0012801800000000003,"{'timestamp': 1760866780.2547188, 'inputs': {'network_load': np.float64(0.9), 'relay_reputation': np.float64(0.51), 'budget_utilization': np.float64(0.8), 'recent_win_rate': np.float64(0.25)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0012801800000000003), 'steps': [{'feature': 'network_load', 'value': np.float64(0.9), 'effect': 'multiply prob by 0.460 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.51), 'effect': 'multiply prob by 1.265 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.8), 'effect': 'multiply prob by 0.440 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.25), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.9,0.51,0.8,0.3,0.0012801800000000003,"{'timestamp': 1760866780.2547474, 'inputs': {'network_load': np.float64(0.9), 'relay_reputation': np.float64(0.51), 'budget_utilization': np.float64(0.8), 'recent_win_rate': np.float64(0.3)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0012801800000000003), 'steps': [{'feature': 'network_load', 'value': np.float64(0.9), 'effect': 'multiply prob by 0.460 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.51), 'effect': 'multiply prob by 1.265 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.8), 'effect': 'multiply prob by 0.440 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.3), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.9,0.62,0.05,0.0,0.006347769936522299,"{'timestamp': 1760866780.2547827, 'inputs': {'network_load': np.float64(0.9), 'relay_reputation': np.float64(0.62), 'budget_utilization': np.float64(0.05), 'recent_win_rate': 1e-09}, 'base_prob': 0.01, 'final_prob': np.float64(0.006347769936522299), 'steps': [{'feature': 'network_load', 'value': np.float64(0.9), 'effect': 'multiply prob by 0.460 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.62), 'effect': 'multiply prob by 1.430 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.05), 'effect': 'multiply prob by 0.965 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': 1e-09, 'effect': 'multiply prob by 1.000 (higher recent wins -> lower prob)'}]}"
0.9,0.62,0.05,0.05,0.0031738849999999996,"{'timestamp': 1760866780.254808, 'inputs': {'network_load': np.float64(0.9), 'relay_reputation': np.float64(0.62), 'budget_utilization': np.float64(0.05), 'recent_win_rate': np.float64(0.05)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0031738849999999996), 'steps': [{'feature': 'network_load', 'value': np.float64(0.9), 'effect': 'multiply prob by 0.460 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.62), 'effect': 'multiply prob by 1.430 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.05), 'effect': 'multiply prob by 0.965 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.05), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.9,0.62,0.05,0.1,0.0031738849999999996,"{'timestamp': 1760866780.2548335, 'inputs': {'network_load': np.float64(0.9), 'relay_reputation': np.float64(0.62), 'budget_utilization': np.float64(0.05), 'recent_win_rate': np.float64(0.1)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0031738849999999996), 'steps': [{'feature': 'network_load', 'value': np.float64(0.9), 'effect': 'multiply prob by 0.460 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.62), 'effect': 'multiply prob by 1.430 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.05), 'effect': 'multiply prob by 0.965 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.1), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.9,0.62,0.05,0.15,0.0031738849999999996,"{'timestamp': 1760866780.2548587, 'inputs': {'network_load': np.float64(0.9), 'relay_reputation': np.float64(0.62), 'budget_utilization': np.float64(0.05), 'recent_win_rate': np.float64(0.15)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0031738849999999996), 'steps': [{'feature': 'network_load', 'value': np.float64(0.9), 'effect': 'multiply prob by 0.460 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.62), 'effect': 'multiply prob by 1.430 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.05), 'effect': 'multiply prob by 0.965 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.15), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.9,0.62,0.05,0.2,0.0031738849999999996,"{'timestamp': 1760866780.2548838, 'inputs': {'network_load': np.float64(0.9), 'relay_reputation': np.float64(0.62), 'budget_utilization': np.float64(0.05), 'recent_win_rate': np.float64(0.2)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0031738849999999996), 'steps': [{'feature': 'network_load', 'value': np.float64(0.9), 'effect': 'multiply prob by 0.460 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.62), 'effect': 'multiply prob by 1.430 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.05), 'effect': 'multiply prob by 0.965 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.2), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.9,0.62,0.05,0.25,0.0031738849999999996,"{'timestamp': 1760866780.2549086, 'inputs': {'network_load': np.float64(0.9), 'relay_reputation': np.float64(0.62), 'budget_utilization': np.float64(0.05), 'recent_win_rate': np.float64(0.25)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0031738849999999996), 'steps': [{'feature': 'network_load', 'value': np.float64(0.9), 'effect': 'multiply prob by 0.460 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.62), 'effect': 'multiply prob by 1.430 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.05), 'effect': 'multiply prob by 0.965 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.25), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.9,0.62,0.05,0.3,0.0031738849999999996,"{'timestamp': 1760866780.2549376, 'inputs': {'network_load': np.float64(0.9), 'relay_reputation': np.float64(0.62), 'budget_utilization': np.float64(0.05), 'recent_win_rate': np.float64(0.3)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0031738849999999996), 'steps': [{'feature': 'network_load', 'value': np.float64(0.9), 'effect': 'multiply prob by 0.460 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.62), 'effect': 'multiply prob by 1.430 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.05), 'effect': 'multiply prob by 0.965 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.3), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.9,0.62,0.16,0.0,0.0058412639415873595,"{'timestamp': 1760866780.2549663, 'inputs': {'network_load': np.float64(0.9), 'relay_reputation': np.float64(0.62), 'budget_utilization': np.float64(0.16), 'recent_win_rate': 1e-09}, 'base_prob': 0.01, 'final_prob': np.float64(0.0058412639415873595), 'steps': [{'feature': 'network_load', 'value': np.float64(0.9), 'effect': 'multiply prob by 0.460 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.62), 'effect': 'multiply prob by 1.430 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.16), 'effect': 'multiply prob by 0.888 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': 1e-09, 'effect': 'multiply prob by 1.000 (higher recent wins -> lower prob)'}]}"
0.9,0.62,0.16,0.05,0.002920632,"{'timestamp': 1760866780.2549915, 'inputs': {'network_load': np.float64(0.9), 'relay_reputation': np.float64(0.62), 'budget_utilization': np.float64(0.16), 'recent_win_rate': np.float64(0.05)}, 'base_prob': 0.01, 'final_prob': np.float64(0.002920632), 'steps': [{'feature': 'network_load', 'value': np.float64(0.9), 'effect': 'multiply prob by 0.460 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.62), 'effect': 'multiply prob by 1.430 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.16), 'effect': 'multiply prob by 0.888 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.05), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.9,0.62,0.16,0.1,0.002920632,"{'timestamp': 1760866780.2550168, 'inputs': {'network_load': np.float64(0.9), 'relay_reputation': np.float64(0.62), 'budget_utilization': np.float64(0.16), 'recent_win_rate': np.float64(0.1)}, 'base_prob': 0.01, 'final_prob': np.float64(0.002920632), 'steps': [{'feature': 'network_load', 'value': np.float64(0.9), 'effect': 'multiply prob by 0.460 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.62), 'effect': 'multiply prob by 1.430 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.16), 'effect': 'multiply prob by 0.888 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.1), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.9,0.62,0.16,0.15,0.002920632,"{'timestamp': 1760866780.255042, 'inputs': {'network_load': np.float64(0.9), 'relay_reputation': np.float64(0.62), 'budget_utilization': np.float64(0.16), 'recent_win_rate': np.float64(0.15)}, 'base_prob': 0.01, 'final_prob': np.float64(0.002920632), 'steps': [{'feature': 'network_load', 'value': np.float64(0.9), 'effect': 'multiply prob by 0.460 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.62), 'effect': 'multiply prob by 1.430 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.16), 'effect': 'multiply prob by 0.888 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.15), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.9,0.62,0.16,0.2,0.002920632,"{'timestamp': 1760866780.2550693, 'inputs': {'network_load': np.float64(0.9), 'relay_reputation': np.float64(0.62), 'budget_utilization': np.float64(0.16), 'recent_win_rate': np.float64(0.2)}, 'base_prob': 0.01, 'final_prob': np.float64(0.002920632), 'steps': [{'feature': 'network_load', 'value': np.float64(0.9), 'effect': 'multiply prob by 0.460 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.62), 'effect': 'multiply prob by 1.430 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.16), 'effect': 'multiply prob by 0.888 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.2), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.9,0.62,0.16,0.25,0.002920632,"{'timestamp': 1760866780.2551248, 'inputs': {'network_load': np.float64(0.9), 'relay_reputation': np.float64(0.62), 'budget_utilization': np.float64(0.16), 'recent_win_rate': np.float64(0.25)}, 'base_prob': 0.01, 'final_prob': np.float64(0.002920632), 'steps': [{'feature': 'network_load', 'value': np.float64(0.9), 'effect': 'multiply prob by 0.460 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.62), 'effect': 'multiply prob by 1.430 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.16), 'effect': 'multiply prob by 0.888 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.25), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.9,0.62,0.16,0.3,0.002920632,"{'timestamp': 1760866780.2551644, 'inputs': {'network_load': np.float64(0.9), 'relay_reputation': np.float64(0.62), 'budget_utilization': np.float64(0.16), 'recent_win_rate': np.float64(0.3)}, 'base_prob': 0.01, 'final_prob': np.float64(0.002920632), 'steps': [{'feature': 'network_load', 'value': np.float64(0.9), 'effect': 'multiply prob by 0.460 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.62), 'effect': 'multiply prob by 1.430 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.16), 'effect': 'multiply prob by 0.888 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.3), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.9,0.62,0.26,0.0,0.00538080394619196,"{'timestamp': 1760866780.2551978, 'inputs': {'network_load': np.float64(0.9), 'relay_reputation': np.float64(0.62), 'budget_utilization': np.float64(0.26), 'recent_win_rate': 1e-09}, 'base_prob': 0.01, 'final_prob': np.float64(0.00538080394619196), 'steps': [{'feature': 'network_load', 'value': np.float64(0.9), 'effect': 'multiply prob by 0.460 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.62), 'effect': 'multiply prob by 1.430 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.26), 'effect': 'multiply prob by 0.818 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': 1e-09, 'effect': 'multiply prob by 1.000 (higher recent wins -> lower prob)'}]}"
0.9,0.62,0.26,0.05,0.002690402,"{'timestamp': 1760866780.2552238, 'inputs': {'network_load': np.float64(0.9), 'relay_reputation': np.float64(0.62), 'budget_utilization': np.float64(0.26), 'recent_win_rate': np.float64(0.05)}, 'base_prob': 0.01, 'final_prob': np.float64(0.002690402), 'steps': [{'feature': 'network_load', 'value': np.float64(0.9), 'effect': 'multiply prob by 0.460 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.62), 'effect': 'multiply prob by 1.430 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.26), 'effect': 'multiply prob by 0.818 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.05), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.9,0.62,0.26,0.1,0.002690402,"{'timestamp': 1760866780.2552528, 'inputs': {'network_load': np.float64(0.9), 'relay_reputation': np.float64(0.62), 'budget_utilization': np.float64(0.26), 'recent_win_rate': np.float64(0.1)}, 'base_prob': 0.01, 'final_prob': np.float64(0.002690402), 'steps': [{'feature': 'network_load', 'value': np.float64(0.9), 'effect': 'multiply prob by 0.460 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.62), 'effect': 'multiply prob by 1.430 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.26), 'effect': 'multiply prob by 0.818 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.1), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.9,0.62,0.26,0.15,0.002690402,"{'timestamp': 1760866780.255278, 'inputs': {'network_load': np.float64(0.9), 'relay_reputation': np.float64(0.62), 'budget_utilization': np.float64(0.26), 'recent_win_rate': np.float64(0.15)}, 'base_prob': 0.01, 'final_prob': np.float64(0.002690402), 'steps': [{'feature': 'network_load', 'value': np.float64(0.9), 'effect': 'multiply prob by 0.460 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.62), 'effect': 'multiply prob by 1.430 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.26), 'effect': 'multiply prob by 0.818 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.15), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.9,0.62,0.26,0.2,0.002690402,"{'timestamp': 1760866780.2553105, 'inputs': {'network_load': np.float64(0.9), 'relay_reputation': np.float64(0.62), 'budget_utilization': np.float64(0.26), 'recent_win_rate': np.float64(0.2)}, 'base_prob': 0.01, 'final_prob': np.float64(0.002690402), 'steps': [{'feature': 'network_load', 'value': np.float64(0.9), 'effect': 'multiply prob by 0.460 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.62), 'effect': 'multiply prob by 1.430 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.26), 'effect': 'multiply prob by 0.818 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.2), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.9,0.62,0.26,0.25,0.002690402,"{'timestamp': 1760866780.2553399, 'inputs': {'network_load': np.float64(0.9), 'relay_reputation': np.float64(0.62), 'budget_utilization': np.float64(0.26), 'recent_win_rate': np.float64(0.25)}, 'base_prob': 0.01, 'final_prob': np.float64(0.002690402), 'steps': [{'feature': 'network_load', 'value': np.float64(0.9), 'effect': 'multiply prob by 0.460 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.62), 'effect': 'multiply prob by 1.430 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.26), 'effect': 'multiply prob by 0.818 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.25), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.9,0.62,0.26,0.3,0.002690402,"{'timestamp': 1760866780.2553675, 'inputs': {'network_load': np.float64(0.9), 'relay_reputation': np.float64(0.62), 'budget_utilization': np.float64(0.26), 'recent_win_rate': np.float64(0.3)}, 'base_prob': 0.01, 'final_prob': np.float64(0.002690402), 'steps': [{'feature': 'network_load', 'value': np.float64(0.9), 'effect': 'multiply prob by 0.460 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.62), 'effect': 'multiply prob by 1.430 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.26), 'effect': 'multiply prob by 0.818 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.3), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.9,0.62,0.37,0.0,0.00487429795125702,"{'timestamp': 1760866780.2554522, 'inputs': {'network_load': np.float64(0.9), 'relay_reputation': np.float64(0.62), 'budget_utilization': np.float64(0.37), 'recent_win_rate': 1e-09}, 'base_prob': 0.01, 'final_prob': np.float64(0.00487429795125702), 'steps': [{'feature': 'network_load', 'value': np.float64(0.9), 'effect': 'multiply prob by 0.460 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.62), 'effect': 'multiply prob by 1.430 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.37), 'effect': 'multiply prob by 0.741 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': 1e-09, 'effect': 'multiply prob by 1.000 (higher recent wins -> lower prob)'}]}"
0.9,0.62,0.37,0.05,0.002437149,"{'timestamp': 1760866780.2554808, 'inputs': {'network_load': np.float64(0.9), 'relay_reputation': np.float64(0.62), 'budget_utilization': np.float64(0.37), 'recent_win_rate': np.float64(0.05)}, 'base_prob': 0.01, 'final_prob': np.float64(0.002437149), 'steps': [{'feature': 'network_load', 'value': np.float64(0.9), 'effect': 'multiply prob by 0.460 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.62), 'effect': 'multiply prob by 1.430 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.37), 'effect': 'multiply prob by 0.741 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.05), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.9,0.62,0.37,0.1,0.002437149,"{'timestamp': 1760866780.2555065, 'inputs': {'network_load': np.float64(0.9), 'relay_reputation': np.float64(0.62), 'budget_utilization': np.float64(0.37), 'recent_win_rate': np.float64(0.1)}, 'base_prob': 0.01, 'final_prob': np.float64(0.002437149), 'steps': [{'feature': 'network_load', 'value': np.float64(0.9), 'effect': 'multiply prob by 0.460 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.62), 'effect': 'multiply prob by 1.430 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.37), 'effect': 'multiply prob by 0.741 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.1), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.9,0.62,0.37,0.15,0.002437149,"{'timestamp': 1760866780.2555318, 'inputs': {'network_load': np.float64(0.9), 'relay_reputation': np.float64(0.62), 'budget_utilization': np.float64(0.37), 'recent_win_rate': np.float64(0.15)}, 'base_prob': 0.01, 'final_prob': np.float64(0.002437149), 'steps': [{'feature': 'network_load', 'value': np.float64(0.9), 'effect': 'multiply prob by 0.460 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.62), 'effect': 'multiply prob by 1.430 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.37), 'effect': 'multiply prob by 0.741 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.15), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.9,0.62,0.37,0.2,0.002437149,"{'timestamp': 1760866780.2555587, 'inputs': {'network_load': np.float64(0.9), 'relay_reputation': np.float64(0.62), 'budget_utilization': np.float64(0.37), 'recent_win_rate': np.float64(0.2)}, 'base_prob': 0.01, 'final_prob': np.float64(0.002437149), 'steps': [{'feature': 'network_load', 'value': np.float64(0.9), 'effect': 'multiply prob by 0.460 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.62), 'effect': 'multiply prob by 1.430 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.37), 'effect': 'multiply prob by 0.741 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.2), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.9,0.62,0.37,0.25,0.002437149,"{'timestamp': 1760866780.2555842, 'inputs': {'network_load': np.float64(0.9), 'relay_reputation': np.float64(0.62), 'budget_utilization': np.float64(0.37), 'recent_win_rate': np.float64(0.25)}, 'base_prob': 0.01, 'final_prob': np.float64(0.002437149), 'steps': [{'feature': 'network_load', 'value': np.float64(0.9), 'effect': 'multiply prob by 0.460 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.62), 'effect': 'multiply prob by 1.430 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.37), 'effect': 'multiply prob by 0.741 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.25), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.9,0.62,0.37,0.3,0.002437149,"{'timestamp': 1760866780.2556114, 'inputs': {'network_load': np.float64(0.9), 'relay_reputation': np.float64(0.62), 'budget_utilization': np.float64(0.37), 'recent_win_rate': np.float64(0.3)}, 'base_prob': 0.01, 'final_prob': np.float64(0.002437149), 'steps': [{'feature': 'network_load', 'value': np.float64(0.9), 'effect': 'multiply prob by 0.460 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.62), 'effect': 'multiply prob by 1.430 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.37), 'effect': 'multiply prob by 0.741 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.3), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.9,0.62,0.48,0.0,0.00436779195632208,"{'timestamp': 1760866780.2556388, 'inputs': {'network_load': np.float64(0.9), 'relay_reputation': np.float64(0.62), 'budget_utilization': np.float64(0.48), 'recent_win_rate': 1e-09}, 'base_prob': 0.01, 'final_prob': np.float64(0.00436779195632208), 'steps': [{'feature': 'network_load', 'value': np.float64(0.9), 'effect': 'multiply prob by 0.460 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.62), 'effect': 'multiply prob by 1.430 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.48), 'effect': 'multiply prob by 0.664 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': 1e-09, 'effect': 'multiply prob by 1.000 (higher recent wins -> lower prob)'}]}"
0.9,0.62,0.48,0.05,0.002183896,"{'timestamp': 1760866780.255664, 'inputs': {'network_load': np.float64(0.9), 'relay_reputation': np.float64(0.62), 'budget_utilization': np.float64(0.48), 'recent_win_rate': np.float64(0.05)}, 'base_prob': 0.01, 'final_prob': np.float64(0.002183896), 'steps': [{'feature': 'network_load', 'value': np.float64(0.9), 'effect': 'multiply prob by 0.460 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.62), 'effect': 'multiply prob by 1.430 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.48), 'effect': 'multiply prob by 0.664 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.05), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.9,0.62,0.48,0.1,0.002183896,"{'timestamp': 1760866780.2556932, 'inputs': {'network_load': np.float64(0.9), 'relay_reputation': np.float64(0.62), 'budget_utilization': np.float64(0.48), 'recent_win_rate': np.float64(0.1)}, 'base_prob': 0.01, 'final_prob': np.float64(0.002183896), 'steps': [{'feature': 'network_load', 'value': np.float64(0.9), 'effect': 'multiply prob by 0.460 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.62), 'effect': 'multiply prob by 1.430 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.48), 'effect': 'multiply prob by 0.664 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.1), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.9,0.62,0.48,0.15,0.002183896,"{'timestamp': 1760866780.255719, 'inputs': {'network_load': np.float64(0.9), 'relay_reputation': np.float64(0.62), 'budget_utilization': np.float64(0.48), 'recent_win_rate': np.float64(0.15)}, 'base_prob': 0.01, 'final_prob': np.float64(0.002183896), 'steps': [{'feature': 'network_load', 'value': np.float64(0.9), 'effect': 'multiply prob by 0.460 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.62), 'effect': 'multiply prob by 1.430 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.48), 'effect': 'multiply prob by 0.664 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.15), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.9,0.62,0.48,0.2,0.002183896,"{'timestamp': 1760866780.2557476, 'inputs': {'network_load': np.float64(0.9), 'relay_reputation': np.float64(0.62), 'budget_utilization': np.float64(0.48), 'recent_win_rate': np.float64(0.2)}, 'base_prob': 0.01, 'final_prob': np.float64(0.002183896), 'steps': [{'feature': 'network_load', 'value': np.float64(0.9), 'effect': 'multiply prob by 0.460 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.62), 'effect': 'multiply prob by 1.430 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.48), 'effect': 'multiply prob by 0.664 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.2), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.9,0.62,0.48,0.25,0.002183896,"{'timestamp': 1760866780.255773, 'inputs': {'network_load': np.float64(0.9), 'relay_reputation': np.float64(0.62), 'budget_utilization': np.float64(0.48), 'recent_win_rate': np.float64(0.25)}, 'base_prob': 0.01, 'final_prob': np.float64(0.002183896), 'steps': [{'feature': 'network_load', 'value': np.float64(0.9), 'effect': 'multiply prob by 0.460 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.62), 'effect': 'multiply prob by 1.430 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.48), 'effect': 'multiply prob by 0.664 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.25), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.9,0.62,0.48,0.3,0.002183896,"{'timestamp': 1760866780.2557983, 'inputs': {'network_load': np.float64(0.9), 'relay_reputation': np.float64(0.62), 'budget_utilization': np.float64(0.48), 'recent_win_rate': np.float64(0.3)}, 'base_prob': 0.01, 'final_prob': np.float64(0.002183896), 'steps': [{'feature': 'network_load', 'value': np.float64(0.9), 'effect': 'multiply prob by 0.460 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.62), 'effect': 'multiply prob by 1.430 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.48), 'effect': 'multiply prob by 0.664 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.3), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.9,0.62,0.59,0.0,0.003861285961387139,"{'timestamp': 1760866780.255825, 'inputs': {'network_load': np.float64(0.9), 'relay_reputation': np.float64(0.62), 'budget_utilization': np.float64(0.59), 'recent_win_rate': 1e-09}, 'base_prob': 0.01, 'final_prob': np.float64(0.003861285961387139), 'steps': [{'feature': 'network_load', 'value': np.float64(0.9), 'effect': 'multiply prob by 0.460 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.62), 'effect': 'multiply prob by 1.430 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.59), 'effect': 'multiply prob by 0.587 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': 1e-09, 'effect': 'multiply prob by 1.000 (higher recent wins -> lower prob)'}]}"
0.9,0.62,0.59,0.05,0.0019306429999999997,"{'timestamp': 1760866780.2558506, 'inputs': {'network_load': np.float64(0.9), 'relay_reputation': np.float64(0.62), 'budget_utilization': np.float64(0.59), 'recent_win_rate': np.float64(0.05)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0019306429999999997), 'steps': [{'feature': 'network_load', 'value': np.float64(0.9), 'effect': 'multiply prob by 0.460 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.62), 'effect': 'multiply prob by 1.430 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.59), 'effect': 'multiply prob by 0.587 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.05), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.9,0.62,0.59,0.1,0.0019306429999999997,"{'timestamp': 1760866780.2558777, 'inputs': {'network_load': np.float64(0.9), 'relay_reputation': np.float64(0.62), 'budget_utilization': np.float64(0.59), 'recent_win_rate': np.float64(0.1)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0019306429999999997), 'steps': [{'feature': 'network_load', 'value': np.float64(0.9), 'effect': 'multiply prob by 0.460 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.62), 'effect': 'multiply prob by 1.430 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.59), 'effect': 'multiply prob by 0.587 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.1), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.9,0.62,0.59,0.15,0.0019306429999999997,"{'timestamp': 1760866780.2559044, 'inputs': {'network_load': np.float64(0.9), 'relay_reputation': np.float64(0.62), 'budget_utilization': np.float64(0.59), 'recent_win_rate': np.float64(0.15)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0019306429999999997), 'steps': [{'feature': 'network_load', 'value': np.float64(0.9), 'effect': 'multiply prob by 0.460 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.62), 'effect': 'multiply prob by 1.430 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.59), 'effect': 'multiply prob by 0.587 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.15), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.9,0.62,0.59,0.2,0.0019306429999999997,"{'timestamp': 1760866780.25593, 'inputs': {'network_load': np.float64(0.9), 'relay_reputation': np.float64(0.62), 'budget_utilization': np.float64(0.59), 'recent_win_rate': np.float64(0.2)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0019306429999999997), 'steps': [{'feature': 'network_load', 'value': np.float64(0.9), 'effect': 'multiply prob by 0.460 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.62), 'effect': 'multiply prob by 1.430 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.59), 'effect': 'multiply prob by 0.587 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.2), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.9,0.62,0.59,0.25,0.0019306429999999997,"{'timestamp': 1760866780.2559566, 'inputs': {'network_load': np.float64(0.9), 'relay_reputation': np.float64(0.62), 'budget_utilization': np.float64(0.59), 'recent_win_rate': np.float64(0.25)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0019306429999999997), 'steps': [{'feature': 'network_load', 'value': np.float64(0.9), 'effect': 'multiply prob by 0.460 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.62), 'effect': 'multiply prob by 1.430 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.59), 'effect': 'multiply prob by 0.587 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.25), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.9,0.62,0.59,0.3,0.0019306429999999997,"{'timestamp': 1760866780.2559838, 'inputs': {'network_load': np.float64(0.9), 'relay_reputation': np.float64(0.62), 'budget_utilization': np.float64(0.59), 'recent_win_rate': np.float64(0.3)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0019306429999999997), 'steps': [{'feature': 'network_load', 'value': np.float64(0.9), 'effect': 'multiply prob by 0.460 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.62), 'effect': 'multiply prob by 1.430 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.59), 'effect': 'multiply prob by 0.587 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.3), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.9,0.62,0.69,0.0,0.0034008259659917403,"{'timestamp': 1760866780.2560105, 'inputs': {'network_load': np.float64(0.9), 'relay_reputation': np.float64(0.62), 'budget_utilization': np.float64(0.69), 'recent_win_rate': 1e-09}, 'base_prob': 0.01, 'final_prob': np.float64(0.0034008259659917403), 'steps': [{'feature': 'network_load', 'value': np.float64(0.9), 'effect': 'multiply prob by 0.460 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.62), 'effect': 'multiply prob by 1.430 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.69), 'effect': 'multiply prob by 0.517 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': 1e-09, 'effect': 'multiply prob by 1.000 (higher recent wins -> lower prob)'}]}"
0.9,0.62,0.69,0.05,0.0017004130000000002,"{'timestamp': 1760866780.2560391, 'inputs': {'network_load': np.float64(0.9), 'relay_reputation': np.float64(0.62), 'budget_utilization': np.float64(0.69), 'recent_win_rate': np.float64(0.05)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0017004130000000002), 'steps': [{'feature': 'network_load', 'value': np.float64(0.9), 'effect': 'multiply prob by 0.460 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.62), 'effect': 'multiply prob by 1.430 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.69), 'effect': 'multiply prob by 0.517 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.05), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.9,0.62,0.69,0.1,0.0017004130000000002,"{'timestamp': 1760866780.2560644, 'inputs': {'network_load': np.float64(0.9), 'relay_reputation': np.float64(0.62), 'budget_utilization': np.float64(0.69), 'recent_win_rate': np.float64(0.1)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0017004130000000002), 'steps': [{'feature': 'network_load', 'value': np.float64(0.9), 'effect': 'multiply prob by 0.460 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.62), 'effect': 'multiply prob by 1.430 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.69), 'effect': 'multiply prob by 0.517 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.1), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.9,0.62,0.69,0.15,0.0017004130000000002,"{'timestamp': 1760866780.2560897, 'inputs': {'network_load': np.float64(0.9), 'relay_reputation': np.float64(0.62), 'budget_utilization': np.float64(0.69), 'recent_win_rate': np.float64(0.15)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0017004130000000002), 'steps': [{'feature': 'network_load', 'value': np.float64(0.9), 'effect': 'multiply prob by 0.460 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.62), 'effect': 'multiply prob by 1.430 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.69), 'effect': 'multiply prob by 0.517 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.15), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.9,0.62,0.69,0.2,0.0017004130000000002,"{'timestamp': 1760866780.2561162, 'inputs': {'network_load': np.float64(0.9), 'relay_reputation': np.float64(0.62), 'budget_utilization': np.float64(0.69), 'recent_win_rate': np.float64(0.2)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0017004130000000002), 'steps': [{'feature': 'network_load', 'value': np.float64(0.9), 'effect': 'multiply prob by 0.460 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.62), 'effect': 'multiply prob by 1.430 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.69), 'effect': 'multiply prob by 0.517 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.2), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.9,0.62,0.69,0.25,0.0017004130000000002,"{'timestamp': 1760866780.2561417, 'inputs': {'network_load': np.float64(0.9), 'relay_reputation': np.float64(0.62), 'budget_utilization': np.float64(0.69), 'recent_win_rate': np.float64(0.25)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0017004130000000002), 'steps': [{'feature': 'network_load', 'value': np.float64(0.9), 'effect': 'multiply prob by 0.460 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.62), 'effect': 'multiply prob by 1.430 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.69), 'effect': 'multiply prob by 0.517 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.25), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.9,0.62,0.69,0.3,0.0017004130000000002,"{'timestamp': 1760866780.2562163, 'inputs': {'network_load': np.float64(0.9), 'relay_reputation': np.float64(0.62), 'budget_utilization': np.float64(0.69), 'recent_win_rate': np.float64(0.3)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0017004130000000002), 'steps': [{'feature': 'network_load', 'value': np.float64(0.9), 'effect': 'multiply prob by 0.460 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.62), 'effect': 'multiply prob by 1.430 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.69), 'effect': 'multiply prob by 0.517 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.3), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.9,0.62,0.8,0.0,0.0028943199710568,"{'timestamp': 1760866780.2562547, 'inputs': {'network_load': np.float64(0.9), 'relay_reputation': np.float64(0.62), 'budget_utilization': np.float64(0.8), 'recent_win_rate': 1e-09}, 'base_prob': 0.01, 'final_prob': np.float64(0.0028943199710568), 'steps': [{'feature': 'network_load', 'value': np.float64(0.9), 'effect': 'multiply prob by 0.460 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.62), 'effect': 'multiply prob by 1.430 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.8), 'effect': 'multiply prob by 0.440 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': 1e-09, 'effect': 'multiply prob by 1.000 (higher recent wins -> lower prob)'}]}"
0.9,0.62,0.8,0.05,0.00144716,"{'timestamp': 1760866780.2562804, 'inputs': {'network_load': np.float64(0.9), 'relay_reputation': np.float64(0.62), 'budget_utilization': np.float64(0.8), 'recent_win_rate': np.float64(0.05)}, 'base_prob': 0.01, 'final_prob': np.float64(0.00144716), 'steps': [{'feature': 'network_load', 'value': np.float64(0.9), 'effect': 'multiply prob by 0.460 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.62), 'effect': 'multiply prob by 1.430 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.8), 'effect': 'multiply prob by 0.440 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.05), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.9,0.62,0.8,0.1,0.00144716,"{'timestamp': 1760866780.2563124, 'inputs': {'network_load': np.float64(0.9), 'relay_reputation': np.float64(0.62), 'budget_utilization': np.float64(0.8), 'recent_win_rate': np.float64(0.1)}, 'base_prob': 0.01, 'final_prob': np.float64(0.00144716), 'steps': [{'feature': 'network_load', 'value': np.float64(0.9), 'effect': 'multiply prob by 0.460 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.62), 'effect': 'multiply prob by 1.430 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.8), 'effect': 'multiply prob by 0.440 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.1), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.9,0.62,0.8,0.15,0.00144716,"{'timestamp': 1760866780.2563396, 'inputs': {'network_load': np.float64(0.9), 'relay_reputation': np.float64(0.62), 'budget_utilization': np.float64(0.8), 'recent_win_rate': np.float64(0.15)}, 'base_prob': 0.01, 'final_prob': np.float64(0.00144716), 'steps': [{'feature': 'network_load', 'value': np.float64(0.9), 'effect': 'multiply prob by 0.460 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.62), 'effect': 'multiply prob by 1.430 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.8), 'effect': 'multiply prob by 0.440 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.15), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.9,0.62,0.8,0.2,0.00144716,"{'timestamp': 1760866780.2563682, 'inputs': {'network_load': np.float64(0.9), 'relay_reputation': np.float64(0.62), 'budget_utilization': np.float64(0.8), 'recent_win_rate': np.float64(0.2)}, 'base_prob': 0.01, 'final_prob': np.float64(0.00144716), 'steps': [{'feature': 'network_load', 'value': np.float64(0.9), 'effect': 'multiply prob by 0.460 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.62), 'effect': 'multiply prob by 1.430 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.8), 'effect': 'multiply prob by 0.440 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.2), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.9,0.62,0.8,0.25,0.00144716,"{'timestamp': 1760866780.2563953, 'inputs': {'network_load': np.float64(0.9), 'relay_reputation': np.float64(0.62), 'budget_utilization': np.float64(0.8), 'recent_win_rate': np.float64(0.25)}, 'base_prob': 0.01, 'final_prob': np.float64(0.00144716), 'steps': [{'feature': 'network_load', 'value': np.float64(0.9), 'effect': 'multiply prob by 0.460 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.62), 'effect': 'multiply prob by 1.430 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.8), 'effect': 'multiply prob by 0.440 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.25), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.9,0.62,0.8,0.3,0.00144716,"{'timestamp': 1760866780.2564206, 'inputs': {'network_load': np.float64(0.9), 'relay_reputation': np.float64(0.62), 'budget_utilization': np.float64(0.8), 'recent_win_rate': np.float64(0.3)}, 'base_prob': 0.01, 'final_prob': np.float64(0.00144716), 'steps': [{'feature': 'network_load', 'value': np.float64(0.9), 'effect': 'multiply prob by 0.460 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.62), 'effect': 'multiply prob by 1.430 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.8), 'effect': 'multiply prob by 0.440 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.3), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.9,0.73,0.05,0.0,0.007080204929197949,"{'timestamp': 1760866780.256449, 'inputs': {'network_load': np.float64(0.9), 'relay_reputation': np.float64(0.73), 'budget_utilization': np.float64(0.05), 'recent_win_rate': 1e-09}, 'base_prob': 0.01, 'final_prob': np.float64(0.007080204929197949), 'steps': [{'feature': 'network_load', 'value': np.float64(0.9), 'effect': 'multiply prob by 0.460 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.73), 'effect': 'multiply prob by 1.595 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.05), 'effect': 'multiply prob by 0.965 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': 1e-09, 'effect': 'multiply prob by 1.000 (higher recent wins -> lower prob)'}]}"
0.9,0.73,0.05,0.05,0.0035401024999999996,"{'timestamp': 1760866780.2564743, 'inputs': {'network_load': np.float64(0.9), 'relay_reputation': np.float64(0.73), 'budget_utilization': np.float64(0.05), 'recent_win_rate': np.float64(0.05)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0035401024999999996), 'steps': [{'feature': 'network_load', 'value': np.float64(0.9), 'effect': 'multiply prob by 0.460 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.73), 'effect': 'multiply prob by 1.595 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.05), 'effect': 'multiply prob by 0.965 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.05), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.9,0.73,0.05,0.1,0.0035401024999999996,"{'timestamp': 1760866780.2565012, 'inputs': {'network_load': np.float64(0.9), 'relay_reputation': np.float64(0.73), 'budget_utilization': np.float64(0.05), 'recent_win_rate': np.float64(0.1)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0035401024999999996), 'steps': [{'feature': 'network_load', 'value': np.float64(0.9), 'effect': 'multiply prob by 0.460 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.73), 'effect': 'multiply prob by 1.595 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.05), 'effect': 'multiply prob by 0.965 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.1), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.9,0.73,0.05,0.15,0.0035401024999999996,"{'timestamp': 1760866780.2565267, 'inputs': {'network_load': np.float64(0.9), 'relay_reputation': np.float64(0.73), 'budget_utilization': np.float64(0.05), 'recent_win_rate': np.float64(0.15)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0035401024999999996), 'steps': [{'feature': 'network_load', 'value': np.float64(0.9), 'effect': 'multiply prob by 0.460 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.73), 'effect': 'multiply prob by 1.595 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.05), 'effect': 'multiply prob by 0.965 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.15), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.9,0.73,0.05,0.2,0.0035401024999999996,"{'timestamp': 1760866780.256556, 'inputs': {'network_load': np.float64(0.9), 'relay_reputation': np.float64(0.73), 'budget_utilization': np.float64(0.05), 'recent_win_rate': np.float64(0.2)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0035401024999999996), 'steps': [{'feature': 'network_load', 'value': np.float64(0.9), 'effect': 'multiply prob by 0.460 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.73), 'effect': 'multiply prob by 1.595 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.05), 'effect': 'multiply prob by 0.965 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.2), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.9,0.73,0.05,0.25,0.0035401024999999996,"{'timestamp': 1760866780.2565827, 'inputs': {'network_load': np.float64(0.9), 'relay_reputation': np.float64(0.73), 'budget_utilization': np.float64(0.05), 'recent_win_rate': np.float64(0.25)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0035401024999999996), 'steps': [{'feature': 'network_load', 'value': np.float64(0.9), 'effect': 'multiply prob by 0.460 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.73), 'effect': 'multiply prob by 1.595 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.05), 'effect': 'multiply prob by 0.965 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.25), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.9,0.73,0.05,0.3,0.0035401024999999996,"{'timestamp': 1760866780.2566113, 'inputs': {'network_load': np.float64(0.9), 'relay_reputation': np.float64(0.73), 'budget_utilization': np.float64(0.05), 'recent_win_rate': np.float64(0.3)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0035401024999999996), 'steps': [{'feature': 'network_load', 'value': np.float64(0.9), 'effect': 'multiply prob by 0.460 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.73), 'effect': 'multiply prob by 1.595 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.05), 'effect': 'multiply prob by 0.965 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.3), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.9,0.73,0.16,0.0,0.006515255934847439,"{'timestamp': 1760866780.2566402, 'inputs': {'network_load': np.float64(0.9), 'relay_reputation': np.float64(0.73), 'budget_utilization': np.float64(0.16), 'recent_win_rate': 1e-09}, 'base_prob': 0.01, 'final_prob': np.float64(0.006515255934847439), 'steps': [{'feature': 'network_load', 'value': np.float64(0.9), 'effect': 'multiply prob by 0.460 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.73), 'effect': 'multiply prob by 1.595 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.16), 'effect': 'multiply prob by 0.888 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': 1e-09, 'effect': 'multiply prob by 1.000 (higher recent wins -> lower prob)'}]}"
0.9,0.73,0.16,0.05,0.003257628,"{'timestamp': 1760866780.2566924, 'inputs': {'network_load': np.float64(0.9), 'relay_reputation': np.float64(0.73), 'budget_utilization': np.float64(0.16), 'recent_win_rate': np.float64(0.05)}, 'base_prob': 0.01, 'final_prob': np.float64(0.003257628), 'steps': [{'feature': 'network_load', 'value': np.float64(0.9), 'effect': 'multiply prob by 0.460 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.73), 'effect': 'multiply prob by 1.595 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.16), 'effect': 'multiply prob by 0.888 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.05), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.9,0.73,0.16,0.1,0.003257628,"{'timestamp': 1760866780.2567341, 'inputs': {'network_load': np.float64(0.9), 'relay_reputation': np.float64(0.73), 'budget_utilization': np.float64(0.16), 'recent_win_rate': np.float64(0.1)}, 'base_prob': 0.01, 'final_prob': np.float64(0.003257628), 'steps': [{'feature': 'network_load', 'value': np.float64(0.9), 'effect': 'multiply prob by 0.460 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.73), 'effect': 'multiply prob by 1.595 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.16), 'effect': 'multiply prob by 0.888 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.1), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.9,0.73,0.16,0.15,0.003257628,"{'timestamp': 1760866780.2567601, 'inputs': {'network_load': np.float64(0.9), 'relay_reputation': np.float64(0.73), 'budget_utilization': np.float64(0.16), 'recent_win_rate': np.float64(0.15)}, 'base_prob': 0.01, 'final_prob': np.float64(0.003257628), 'steps': [{'feature': 'network_load', 'value': np.float64(0.9), 'effect': 'multiply prob by 0.460 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.73), 'effect': 'multiply prob by 1.595 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.16), 'effect': 'multiply prob by 0.888 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.15), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.9,0.73,0.16,0.2,0.003257628,"{'timestamp': 1760866780.2567854, 'inputs': {'network_load': np.float64(0.9), 'relay_reputation': np.float64(0.73), 'budget_utilization': np.float64(0.16), 'recent_win_rate': np.float64(0.2)}, 'base_prob': 0.01, 'final_prob': np.float64(0.003257628), 'steps': [{'feature': 'network_load', 'value': np.float64(0.9), 'effect': 'multiply prob by 0.460 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.73), 'effect': 'multiply prob by 1.595 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.16), 'effect': 'multiply prob by 0.888 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.2), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.9,0.73,0.16,0.25,0.003257628,"{'timestamp': 1760866780.2568104, 'inputs': {'network_load': np.float64(0.9), 'relay_reputation': np.float64(0.73), 'budget_utilization': np.float64(0.16), 'recent_win_rate': np.float64(0.25)}, 'base_prob': 0.01, 'final_prob': np.float64(0.003257628), 'steps': [{'feature': 'network_load', 'value': np.float64(0.9), 'effect': 'multiply prob by 0.460 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.73), 'effect': 'multiply prob by 1.595 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.16), 'effect': 'multiply prob by 0.888 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.25), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.9,0.73,0.16,0.3,0.003257628,"{'timestamp': 1760866780.25684, 'inputs': {'network_load': np.float64(0.9), 'relay_reputation': np.float64(0.73), 'budget_utilization': np.float64(0.16), 'recent_win_rate': np.float64(0.3)}, 'base_prob': 0.01, 'final_prob': np.float64(0.003257628), 'steps': [{'feature': 'network_load', 'value': np.float64(0.9), 'effect': 'multiply prob by 0.460 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.73), 'effect': 'multiply prob by 1.595 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.16), 'effect': 'multiply prob by 0.888 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.3), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.9,0.73,0.26,0.0,0.00600166593998334,"{'timestamp': 1760866780.256871, 'inputs': {'network_load': np.float64(0.9), 'relay_reputation': np.float64(0.73), 'budget_utilization': np.float64(0.26), 'recent_win_rate': 1e-09}, 'base_prob': 0.01, 'final_prob': np.float64(0.00600166593998334), 'steps': [{'feature': 'network_load', 'value': np.float64(0.9), 'effect': 'multiply prob by 0.460 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.73), 'effect': 'multiply prob by 1.595 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.26), 'effect': 'multiply prob by 0.818 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': 1e-09, 'effect': 'multiply prob by 1.000 (higher recent wins -> lower prob)'}]}"
0.9,0.73,0.26,0.05,0.003000833,"{'timestamp': 1760866780.2568965, 'inputs': {'network_load': np.float64(0.9), 'relay_reputation': np.float64(0.73), 'budget_utilization': np.float64(0.26), 'recent_win_rate': np.float64(0.05)}, 'base_prob': 0.01, 'final_prob': np.float64(0.003000833), 'steps': [{'feature': 'network_load', 'value': np.float64(0.9), 'effect': 'multiply prob by 0.460 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.73), 'effect': 'multiply prob by 1.595 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.26), 'effect': 'multiply prob by 0.818 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.05), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.9,0.73,0.26,0.1,0.003000833,"{'timestamp': 1760866780.2569218, 'inputs': {'network_load': np.float64(0.9), 'relay_reputation': np.float64(0.73), 'budget_utilization': np.float64(0.26), 'recent_win_rate': np.float64(0.1)}, 'base_prob': 0.01, 'final_prob': np.float64(0.003000833), 'steps': [{'feature': 'network_load', 'value': np.float64(0.9), 'effect': 'multiply prob by 0.460 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.73), 'effect': 'multiply prob by 1.595 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.26), 'effect': 'multiply prob by 0.818 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.1), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.9,0.73,0.26,0.15,0.003000833,"{'timestamp': 1760866780.256947, 'inputs': {'network_load': np.float64(0.9), 'relay_reputation': np.float64(0.73), 'budget_utilization': np.float64(0.26), 'recent_win_rate': np.float64(0.15)}, 'base_prob': 0.01, 'final_prob': np.float64(0.003000833), 'steps': [{'feature': 'network_load', 'value': np.float64(0.9), 'effect': 'multiply prob by 0.460 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.73), 'effect': 'multiply prob by 1.595 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.26), 'effect': 'multiply prob by 0.818 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.15), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.9,0.73,0.26,0.2,0.003000833,"{'timestamp': 1760866780.2569747, 'inputs': {'network_load': np.float64(0.9), 'relay_reputation': np.float64(0.73), 'budget_utilization': np.float64(0.26), 'recent_win_rate': np.float64(0.2)}, 'base_prob': 0.01, 'final_prob': np.float64(0.003000833), 'steps': [{'feature': 'network_load', 'value': np.float64(0.9), 'effect': 'multiply prob by 0.460 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.73), 'effect': 'multiply prob by 1.595 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.26), 'effect': 'multiply prob by 0.818 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.2), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.9,0.73,0.26,0.25,0.003000833,"{'timestamp': 1760866780.257, 'inputs': {'network_load': np.float64(0.9), 'relay_reputation': np.float64(0.73), 'budget_utilization': np.float64(0.26), 'recent_win_rate': np.float64(0.25)}, 'base_prob': 0.01, 'final_prob': np.float64(0.003000833), 'steps': [{'feature': 'network_load', 'value': np.float64(0.9), 'effect': 'multiply prob by 0.460 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.73), 'effect': 'multiply prob by 1.595 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.26), 'effect': 'multiply prob by 0.818 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.25), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.9,0.73,0.26,0.3,0.003000833,"{'timestamp': 1760866780.257025, 'inputs': {'network_load': np.float64(0.9), 'relay_reputation': np.float64(0.73), 'budget_utilization': np.float64(0.26), 'recent_win_rate': np.float64(0.3)}, 'base_prob': 0.01, 'final_prob': np.float64(0.003000833), 'steps': [{'feature': 'network_load', 'value': np.float64(0.9), 'effect': 'multiply prob by 0.460 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.73), 'effect': 'multiply prob by 1.595 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.26), 'effect': 'multiply prob by 0.818 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.3), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.9,0.73,0.37,0.0,0.005436716945632829,"{'timestamp': 1760866780.2570522, 'inputs': {'network_load': np.float64(0.9), 'relay_reputation': np.float64(0.73), 'budget_utilization': np.float64(0.37), 'recent_win_rate': 1e-09}, 'base_prob': 0.01, 'final_prob': np.float64(0.005436716945632829), 'steps': [{'feature': 'network_load', 'value': np.float64(0.9), 'effect': 'multiply prob by 0.460 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.73), 'effect': 'multiply prob by 1.595 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.37), 'effect': 'multiply prob by 0.741 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': 1e-09, 'effect': 'multiply prob by 1.000 (higher recent wins -> lower prob)'}]}"
0.9,0.73,0.37,0.05,0.0027183585,"{'timestamp': 1760866780.2570794, 'inputs': {'network_load': np.float64(0.9), 'relay_reputation': np.float64(0.73), 'budget_utilization': np.float64(0.37), 'recent_win_rate': np.float64(0.05)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0027183585), 'steps': [{'feature': 'network_load', 'value': np.float64(0.9), 'effect': 'multiply prob by 0.460 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.73), 'effect': 'multiply prob by 1.595 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.37), 'effect': 'multiply prob by 0.741 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.05), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.9,0.73,0.37,0.1,0.0027183585,"{'timestamp': 1760866780.25718, 'inputs': {'network_load': np.float64(0.9), 'relay_reputation': np.float64(0.73), 'budget_utilization': np.float64(0.37), 'recent_win_rate': np.float64(0.1)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0027183585), 'steps': [{'feature': 'network_load', 'value': np.float64(0.9), 'effect': 'multiply prob by 0.460 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.73), 'effect': 'multiply prob by 1.595 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.37), 'effect': 'multiply prob by 0.741 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.1), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.9,0.73,0.37,0.15,0.0027183585,"{'timestamp': 1760866780.2572222, 'inputs': {'network_load': np.float64(0.9), 'relay_reputation': np.float64(0.73), 'budget_utilization': np.float64(0.37), 'recent_win_rate': np.float64(0.15)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0027183585), 'steps': [{'feature': 'network_load', 'value': np.float64(0.9), 'effect': 'multiply prob by 0.460 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.73), 'effect': 'multiply prob by 1.595 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.37), 'effect': 'multiply prob by 0.741 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.15), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.9,0.73,0.37,0.2,0.0027183585,"{'timestamp': 1760866780.2572484, 'inputs': {'network_load': np.float64(0.9), 'relay_reputation': np.float64(0.73), 'budget_utilization': np.float64(0.37), 'recent_win_rate': np.float64(0.2)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0027183585), 'steps': [{'feature': 'network_load', 'value': np.float64(0.9), 'effect': 'multiply prob by 0.460 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.73), 'effect': 'multiply prob by 1.595 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.37), 'effect': 'multiply prob by 0.741 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.2), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.9,0.73,0.37,0.25,0.0027183585,"{'timestamp': 1760866780.257274, 'inputs': {'network_load': np.float64(0.9), 'relay_reputation': np.float64(0.73), 'budget_utilization': np.float64(0.37), 'recent_win_rate': np.float64(0.25)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0027183585), 'steps': [{'feature': 'network_load', 'value': np.float64(0.9), 'effect': 'multiply prob by 0.460 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.73), 'effect': 'multiply prob by 1.595 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.37), 'effect': 'multiply prob by 0.741 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.25), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.9,0.73,0.37,0.3,0.0027183585,"{'timestamp': 1760866780.257304, 'inputs': {'network_load': np.float64(0.9), 'relay_reputation': np.float64(0.73), 'budget_utilization': np.float64(0.37), 'recent_win_rate': np.float64(0.3)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0027183585), 'steps': [{'feature': 'network_load', 'value': np.float64(0.9), 'effect': 'multiply prob by 0.460 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.73), 'effect': 'multiply prob by 1.595 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.37), 'effect': 'multiply prob by 0.741 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.3), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.9,0.73,0.48,0.0,0.00487176795128232,"{'timestamp': 1760866780.2573397, 'inputs': {'network_load': np.float64(0.9), 'relay_reputation': np.float64(0.73), 'budget_utilization': np.float64(0.48), 'recent_win_rate': 1e-09}, 'base_prob': 0.01, 'final_prob': np.float64(0.00487176795128232), 'steps': [{'feature': 'network_load', 'value': np.float64(0.9), 'effect': 'multiply prob by 0.460 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.73), 'effect': 'multiply prob by 1.595 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.48), 'effect': 'multiply prob by 0.664 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': 1e-09, 'effect': 'multiply prob by 1.000 (higher recent wins -> lower prob)'}]}"
0.9,0.73,0.48,0.05,0.002435884,"{'timestamp': 1760866780.2573972, 'inputs': {'network_load': np.float64(0.9), 'relay_reputation': np.float64(0.73), 'budget_utilization': np.float64(0.48), 'recent_win_rate': np.float64(0.05)}, 'base_prob': 0.01, 'final_prob': np.float64(0.002435884), 'steps': [{'feature': 'network_load', 'value': np.float64(0.9), 'effect': 'multiply prob by 0.460 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.73), 'effect': 'multiply prob by 1.595 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.48), 'effect': 'multiply prob by 0.664 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.05), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.9,0.73,0.48,0.1,0.002435884,"{'timestamp': 1760866780.2574246, 'inputs': {'network_load': np.float64(0.9), 'relay_reputation': np.float64(0.73), 'budget_utilization': np.float64(0.48), 'recent_win_rate': np.float64(0.1)}, 'base_prob': 0.01, 'final_prob': np.float64(0.002435884), 'steps': [{'feature': 'network_load', 'value': np.float64(0.9), 'effect': 'multiply prob by 0.460 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.73), 'effect': 'multiply prob by 1.595 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.48), 'effect': 'multiply prob by 0.664 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.1), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.9,0.73,0.48,0.15,0.002435884,"{'timestamp': 1760866780.2574499, 'inputs': {'network_load': np.float64(0.9), 'relay_reputation': np.float64(0.73), 'budget_utilization': np.float64(0.48), 'recent_win_rate': np.float64(0.15)}, 'base_prob': 0.01, 'final_prob': np.float64(0.002435884), 'steps': [{'feature': 'network_load', 'value': np.float64(0.9), 'effect': 'multiply prob by 0.460 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.73), 'effect': 'multiply prob by 1.595 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.48), 'effect': 'multiply prob by 0.664 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.15), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.9,0.73,0.48,0.2,0.002435884,"{'timestamp': 1760866780.2574751, 'inputs': {'network_load': np.float64(0.9), 'relay_reputation': np.float64(0.73), 'budget_utilization': np.float64(0.48), 'recent_win_rate': np.float64(0.2)}, 'base_prob': 0.01, 'final_prob': np.float64(0.002435884), 'steps': [{'feature': 'network_load', 'value': np.float64(0.9), 'effect': 'multiply prob by 0.460 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.73), 'effect': 'multiply prob by 1.595 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.48), 'effect': 'multiply prob by 0.664 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.2), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.9,0.73,0.48,0.25,0.002435884,"{'timestamp': 1760866780.2575004, 'inputs': {'network_load': np.float64(0.9), 'relay_reputation': np.float64(0.73), 'budget_utilization': np.float64(0.48), 'recent_win_rate': np.float64(0.25)}, 'base_prob': 0.01, 'final_prob': np.float64(0.002435884), 'steps': [{'feature': 'network_load', 'value': np.float64(0.9), 'effect': 'multiply prob by 0.460 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.73), 'effect': 'multiply prob by 1.595 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.48), 'effect': 'multiply prob by 0.664 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.25), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.9,0.73,0.48,0.3,0.002435884,"{'timestamp': 1760866780.2575274, 'inputs': {'network_load': np.float64(0.9), 'relay_reputation': np.float64(0.73), 'budget_utilization': np.float64(0.48), 'recent_win_rate': np.float64(0.3)}, 'base_prob': 0.01, 'final_prob': np.float64(0.002435884), 'steps': [{'feature': 'network_load', 'value': np.float64(0.9), 'effect': 'multiply prob by 0.460 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.73), 'effect': 'multiply prob by 1.595 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.48), 'effect': 'multiply prob by 0.664 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.3), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.9,0.73,0.59,0.0,0.004306818956931809,"{'timestamp': 1760866780.2575545, 'inputs': {'network_load': np.float64(0.9), 'relay_reputation': np.float64(0.73), 'budget_utilization': np.float64(0.59), 'recent_win_rate': 1e-09}, 'base_prob': 0.01, 'final_prob': np.float64(0.004306818956931809), 'steps': [{'feature': 'network_load', 'value': np.float64(0.9), 'effect': 'multiply prob by 0.460 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.73), 'effect': 'multiply prob by 1.595 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.59), 'effect': 'multiply prob by 0.587 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': 1e-09, 'effect': 'multiply prob by 1.000 (higher recent wins -> lower prob)'}]}"
0.9,0.73,0.59,0.05,0.0021534095,"{'timestamp': 1760866780.2575798, 'inputs': {'network_load': np.float64(0.9), 'relay_reputation': np.float64(0.73), 'budget_utilization': np.float64(0.59), 'recent_win_rate': np.float64(0.05)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0021534095), 'steps': [{'feature': 'network_load', 'value': np.float64(0.9), 'effect': 'multiply prob by 0.460 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.73), 'effect': 'multiply prob by 1.595 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.59), 'effect': 'multiply prob by 0.587 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.05), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.9,0.73,0.59,0.1,0.0021534095,"{'timestamp': 1760866780.257605, 'inputs': {'network_load': np.float64(0.9), 'relay_reputation': np.float64(0.73), 'budget_utilization': np.float64(0.59), 'recent_win_rate': np.float64(0.1)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0021534095), 'steps': [{'feature': 'network_load', 'value': np.float64(0.9), 'effect': 'multiply prob by 0.460 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.73), 'effect': 'multiply prob by 1.595 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.59), 'effect': 'multiply prob by 0.587 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.1), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.9,0.73,0.59,0.15,0.0021534095,"{'timestamp': 1760866780.257632, 'inputs': {'network_load': np.float64(0.9), 'relay_reputation': np.float64(0.73), 'budget_utilization': np.float64(0.59), 'recent_win_rate': np.float64(0.15)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0021534095), 'steps': [{'feature': 'network_load', 'value': np.float64(0.9), 'effect': 'multiply prob by 0.460 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.73), 'effect': 'multiply prob by 1.595 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.59), 'effect': 'multiply prob by 0.587 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.15), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.9,0.73,0.59,0.2,0.0021534095,"{'timestamp': 1760866780.257659, 'inputs': {'network_load': np.float64(0.9), 'relay_reputation': np.float64(0.73), 'budget_utilization': np.float64(0.59), 'recent_win_rate': np.float64(0.2)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0021534095), 'steps': [{'feature': 'network_load', 'value': np.float64(0.9), 'effect': 'multiply prob by 0.460 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.73), 'effect': 'multiply prob by 1.595 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.59), 'effect': 'multiply prob by 0.587 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.2), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.9,0.73,0.59,0.25,0.0021534095,"{'timestamp': 1760866780.257686, 'inputs': {'network_load': np.float64(0.9), 'relay_reputation': np.float64(0.73), 'budget_utilization': np.float64(0.59), 'recent_win_rate': np.float64(0.25)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0021534095), 'steps': [{'feature': 'network_load', 'value': np.float64(0.9), 'effect': 'multiply prob by 0.460 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.73), 'effect': 'multiply prob by 1.595 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.59), 'effect': 'multiply prob by 0.587 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.25), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.9,0.73,0.59,0.3,0.0021534095,"{'timestamp': 1760866780.2577112, 'inputs': {'network_load': np.float64(0.9), 'relay_reputation': np.float64(0.73), 'budget_utilization': np.float64(0.59), 'recent_win_rate': np.float64(0.3)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0021534095), 'steps': [{'feature': 'network_load', 'value': np.float64(0.9), 'effect': 'multiply prob by 0.460 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.73), 'effect': 'multiply prob by 1.595 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.59), 'effect': 'multiply prob by 0.587 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.3), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.9,0.73,0.69,0.0,0.0037932289620677107,"{'timestamp': 1760866780.2577822, 'inputs': {'network_load': np.float64(0.9), 'relay_reputation': np.float64(0.73), 'budget_utilization': np.float64(0.69), 'recent_win_rate': 1e-09}, 'base_prob': 0.01, 'final_prob': np.float64(0.0037932289620677107), 'steps': [{'feature': 'network_load', 'value': np.float64(0.9), 'effect': 'multiply prob by 0.460 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.73), 'effect': 'multiply prob by 1.595 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.69), 'effect': 'multiply prob by 0.517 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': 1e-09, 'effect': 'multiply prob by 1.000 (higher recent wins -> lower prob)'}]}"
0.9,0.73,0.69,0.05,0.0018966145000000004,"{'timestamp': 1760866780.2578206, 'inputs': {'network_load': np.float64(0.9), 'relay_reputation': np.float64(0.73), 'budget_utilization': np.float64(0.69), 'recent_win_rate': np.float64(0.05)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0018966145000000004), 'steps': [{'feature': 'network_load', 'value': np.float64(0.9), 'effect': 'multiply prob by 0.460 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.73), 'effect': 'multiply prob by 1.595 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.69), 'effect': 'multiply prob by 0.517 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.05), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.9,0.73,0.69,0.1,0.0018966145000000004,"{'timestamp': 1760866780.2578468, 'inputs': {'network_load': np.float64(0.9), 'relay_reputation': np.float64(0.73), 'budget_utilization': np.float64(0.69), 'recent_win_rate': np.float64(0.1)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0018966145000000004), 'steps': [{'feature': 'network_load', 'value': np.float64(0.9), 'effect': 'multiply prob by 0.460 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.73), 'effect': 'multiply prob by 1.595 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.69), 'effect': 'multiply prob by 0.517 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.1), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.9,0.73,0.69,0.15,0.0018966145000000004,"{'timestamp': 1760866780.257888, 'inputs': {'network_load': np.float64(0.9), 'relay_reputation': np.float64(0.73), 'budget_utilization': np.float64(0.69), 'recent_win_rate': np.float64(0.15)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0018966145000000004), 'steps': [{'feature': 'network_load', 'value': np.float64(0.9), 'effect': 'multiply prob by 0.460 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.73), 'effect': 'multiply prob by 1.595 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.69), 'effect': 'multiply prob by 0.517 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.15), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.9,0.73,0.69,0.2,0.0018966145000000004,"{'timestamp': 1760866780.2579172, 'inputs': {'network_load': np.float64(0.9), 'relay_reputation': np.float64(0.73), 'budget_utilization': np.float64(0.69), 'recent_win_rate': np.float64(0.2)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0018966145000000004), 'steps': [{'feature': 'network_load', 'value': np.float64(0.9), 'effect': 'multiply prob by 0.460 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.73), 'effect': 'multiply prob by 1.595 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.69), 'effect': 'multiply prob by 0.517 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.2), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.9,0.73,0.69,0.25,0.0018966145000000004,"{'timestamp': 1760866780.2579424, 'inputs': {'network_load': np.float64(0.9), 'relay_reputation': np.float64(0.73), 'budget_utilization': np.float64(0.69), 'recent_win_rate': np.float64(0.25)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0018966145000000004), 'steps': [{'feature': 'network_load', 'value': np.float64(0.9), 'effect': 'multiply prob by 0.460 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.73), 'effect': 'multiply prob by 1.595 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.69), 'effect': 'multiply prob by 0.517 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.25), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.9,0.73,0.69,0.3,0.0018966145000000004,"{'timestamp': 1760866780.2579677, 'inputs': {'network_load': np.float64(0.9), 'relay_reputation': np.float64(0.73), 'budget_utilization': np.float64(0.69), 'recent_win_rate': np.float64(0.3)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0018966145000000004), 'steps': [{'feature': 'network_load', 'value': np.float64(0.9), 'effect': 'multiply prob by 0.460 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.73), 'effect': 'multiply prob by 1.595 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.69), 'effect': 'multiply prob by 0.517 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.3), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.9,0.73,0.8,0.0,0.0032282799677172003,"{'timestamp': 1760866780.2579987, 'inputs': {'network_load': np.float64(0.9), 'relay_reputation': np.float64(0.73), 'budget_utilization': np.float64(0.8), 'recent_win_rate': 1e-09}, 'base_prob': 0.01, 'final_prob': np.float64(0.0032282799677172003), 'steps': [{'feature': 'network_load', 'value': np.float64(0.9), 'effect': 'multiply prob by 0.460 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.73), 'effect': 'multiply prob by 1.595 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.8), 'effect': 'multiply prob by 0.440 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': 1e-09, 'effect': 'multiply prob by 1.000 (higher recent wins -> lower prob)'}]}"
0.9,0.73,0.8,0.05,0.0016141400000000002,"{'timestamp': 1760866780.2580261, 'inputs': {'network_load': np.float64(0.9), 'relay_reputation': np.float64(0.73), 'budget_utilization': np.float64(0.8), 'recent_win_rate': np.float64(0.05)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0016141400000000002), 'steps': [{'feature': 'network_load', 'value': np.float64(0.9), 'effect': 'multiply prob by 0.460 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.73), 'effect': 'multiply prob by 1.595 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.8), 'effect': 'multiply prob by 0.440 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.05), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.9,0.73,0.8,0.1,0.0016141400000000002,"{'timestamp': 1760866780.2580514, 'inputs': {'network_load': np.float64(0.9), 'relay_reputation': np.float64(0.73), 'budget_utilization': np.float64(0.8), 'recent_win_rate': np.float64(0.1)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0016141400000000002), 'steps': [{'feature': 'network_load', 'value': np.float64(0.9), 'effect': 'multiply prob by 0.460 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.73), 'effect': 'multiply prob by 1.595 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.8), 'effect': 'multiply prob by 0.440 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.1), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.9,0.73,0.8,0.15,0.0016141400000000002,"{'timestamp': 1760866780.2580764, 'inputs': {'network_load': np.float64(0.9), 'relay_reputation': np.float64(0.73), 'budget_utilization': np.float64(0.8), 'recent_win_rate': np.float64(0.15)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0016141400000000002), 'steps': [{'feature': 'network_load', 'value': np.float64(0.9), 'effect': 'multiply prob by 0.460 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.73), 'effect': 'multiply prob by 1.595 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.8), 'effect': 'multiply prob by 0.440 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.15), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.9,0.73,0.8,0.2,0.0016141400000000002,"{'timestamp': 1760866780.2581015, 'inputs': {'network_load': np.float64(0.9), 'relay_reputation': np.float64(0.73), 'budget_utilization': np.float64(0.8), 'recent_win_rate': np.float64(0.2)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0016141400000000002), 'steps': [{'feature': 'network_load', 'value': np.float64(0.9), 'effect': 'multiply prob by 0.460 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.73), 'effect': 'multiply prob by 1.595 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.8), 'effect': 'multiply prob by 0.440 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.2), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.9,0.73,0.8,0.25,0.0016141400000000002,"{'timestamp': 1760866780.2581284, 'inputs': {'network_load': np.float64(0.9), 'relay_reputation': np.float64(0.73), 'budget_utilization': np.float64(0.8), 'recent_win_rate': np.float64(0.25)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0016141400000000002), 'steps': [{'feature': 'network_load', 'value': np.float64(0.9), 'effect': 'multiply prob by 0.460 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.73), 'effect': 'multiply prob by 1.595 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.8), 'effect': 'multiply prob by 0.440 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.25), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.9,0.73,0.8,0.3,0.0016141400000000002,"{'timestamp': 1760866780.2581577, 'inputs': {'network_load': np.float64(0.9), 'relay_reputation': np.float64(0.73), 'budget_utilization': np.float64(0.8), 'recent_win_rate': np.float64(0.3)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0016141400000000002), 'steps': [{'feature': 'network_load', 'value': np.float64(0.9), 'effect': 'multiply prob by 0.460 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.73), 'effect': 'multiply prob by 1.595 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.8), 'effect': 'multiply prob by 0.440 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.3), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.9,0.84,0.05,0.0,0.0078126399218736,"{'timestamp': 1760866780.2581866, 'inputs': {'network_load': np.float64(0.9), 'relay_reputation': np.float64(0.84), 'budget_utilization': np.float64(0.05), 'recent_win_rate': 1e-09}, 'base_prob': 0.01, 'final_prob': np.float64(0.0078126399218736), 'steps': [{'feature': 'network_load', 'value': np.float64(0.9), 'effect': 'multiply prob by 0.460 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.84), 'effect': 'multiply prob by 1.760 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.05), 'effect': 'multiply prob by 0.965 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': 1e-09, 'effect': 'multiply prob by 1.000 (higher recent wins -> lower prob)'}]}"
0.9,0.84,0.05,0.05,0.0039063200000000005,"{'timestamp': 1760866780.2582119, 'inputs': {'network_load': np.float64(0.9), 'relay_reputation': np.float64(0.84), 'budget_utilization': np.float64(0.05), 'recent_win_rate': np.float64(0.05)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0039063200000000005), 'steps': [{'feature': 'network_load', 'value': np.float64(0.9), 'effect': 'multiply prob by 0.460 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.84), 'effect': 'multiply prob by 1.760 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.05), 'effect': 'multiply prob by 0.965 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.05), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.9,0.84,0.05,0.1,0.0039063200000000005,"{'timestamp': 1760866780.2582366, 'inputs': {'network_load': np.float64(0.9), 'relay_reputation': np.float64(0.84), 'budget_utilization': np.float64(0.05), 'recent_win_rate': np.float64(0.1)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0039063200000000005), 'steps': [{'feature': 'network_load', 'value': np.float64(0.9), 'effect': 'multiply prob by 0.460 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.84), 'effect': 'multiply prob by 1.760 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.05), 'effect': 'multiply prob by 0.965 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.1), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.9,0.84,0.05,0.15,0.0039063200000000005,"{'timestamp': 1760866780.258262, 'inputs': {'network_load': np.float64(0.9), 'relay_reputation': np.float64(0.84), 'budget_utilization': np.float64(0.05), 'recent_win_rate': np.float64(0.15)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0039063200000000005), 'steps': [{'feature': 'network_load', 'value': np.float64(0.9), 'effect': 'multiply prob by 0.460 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.84), 'effect': 'multiply prob by 1.760 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.05), 'effect': 'multiply prob by 0.965 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.15), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.9,0.84,0.05,0.2,0.0039063200000000005,"{'timestamp': 1760866780.2582896, 'inputs': {'network_load': np.float64(0.9), 'relay_reputation': np.float64(0.84), 'budget_utilization': np.float64(0.05), 'recent_win_rate': np.float64(0.2)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0039063200000000005), 'steps': [{'feature': 'network_load', 'value': np.float64(0.9), 'effect': 'multiply prob by 0.460 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.84), 'effect': 'multiply prob by 1.760 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.05), 'effect': 'multiply prob by 0.965 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.2), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.9,0.84,0.05,0.25,0.0039063200000000005,"{'timestamp': 1760866780.258364, 'inputs': {'network_load': np.float64(0.9), 'relay_reputation': np.float64(0.84), 'budget_utilization': np.float64(0.05), 'recent_win_rate': np.float64(0.25)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0039063200000000005), 'steps': [{'feature': 'network_load', 'value': np.float64(0.9), 'effect': 'multiply prob by 0.460 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.84), 'effect': 'multiply prob by 1.760 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.05), 'effect': 'multiply prob by 0.965 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.25), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.9,0.84,0.05,0.3,0.0039063200000000005,"{'timestamp': 1760866780.2584076, 'inputs': {'network_load': np.float64(0.9), 'relay_reputation': np.float64(0.84), 'budget_utilization': np.float64(0.05), 'recent_win_rate': np.float64(0.3)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0039063200000000005), 'steps': [{'feature': 'network_load', 'value': np.float64(0.9), 'effect': 'multiply prob by 0.460 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.84), 'effect': 'multiply prob by 1.760 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.05), 'effect': 'multiply prob by 0.965 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.3), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.9,0.84,0.16,0.0,0.00718924792810752,"{'timestamp': 1760866780.2584372, 'inputs': {'network_load': np.float64(0.9), 'relay_reputation': np.float64(0.84), 'budget_utilization': np.float64(0.16), 'recent_win_rate': 1e-09}, 'base_prob': 0.01, 'final_prob': np.float64(0.00718924792810752), 'steps': [{'feature': 'network_load', 'value': np.float64(0.9), 'effect': 'multiply prob by 0.460 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.84), 'effect': 'multiply prob by 1.760 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.16), 'effect': 'multiply prob by 0.888 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': 1e-09, 'effect': 'multiply prob by 1.000 (higher recent wins -> lower prob)'}]}"
0.9,0.84,0.16,0.05,0.0035946240000000003,"{'timestamp': 1760866780.2584627, 'inputs': {'network_load': np.float64(0.9), 'relay_reputation': np.float64(0.84), 'budget_utilization': np.float64(0.16), 'recent_win_rate': np.float64(0.05)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0035946240000000003), 'steps': [{'feature': 'network_load', 'value': np.float64(0.9), 'effect': 'multiply prob by 0.460 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.84), 'effect': 'multiply prob by 1.760 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.16), 'effect': 'multiply prob by 0.888 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.05), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.9,0.84,0.16,0.1,0.0035946240000000003,"{'timestamp': 1760866780.2584877, 'inputs': {'network_load': np.float64(0.9), 'relay_reputation': np.float64(0.84), 'budget_utilization': np.float64(0.16), 'recent_win_rate': np.float64(0.1)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0035946240000000003), 'steps': [{'feature': 'network_load', 'value': np.float64(0.9), 'effect': 'multiply prob by 0.460 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.84), 'effect': 'multiply prob by 1.760 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.16), 'effect': 'multiply prob by 0.888 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.1), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.9,0.84,0.16,0.15,0.0035946240000000003,"{'timestamp': 1760866780.2585156, 'inputs': {'network_load': np.float64(0.9), 'relay_reputation': np.float64(0.84), 'budget_utilization': np.float64(0.16), 'recent_win_rate': np.float64(0.15)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0035946240000000003), 'steps': [{'feature': 'network_load', 'value': np.float64(0.9), 'effect': 'multiply prob by 0.460 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.84), 'effect': 'multiply prob by 1.760 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.16), 'effect': 'multiply prob by 0.888 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.15), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.9,0.84,0.16,0.2,0.0035946240000000003,"{'timestamp': 1760866780.2585409, 'inputs': {'network_load': np.float64(0.9), 'relay_reputation': np.float64(0.84), 'budget_utilization': np.float64(0.16), 'recent_win_rate': np.float64(0.2)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0035946240000000003), 'steps': [{'feature': 'network_load', 'value': np.float64(0.9), 'effect': 'multiply prob by 0.460 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.84), 'effect': 'multiply prob by 1.760 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.16), 'effect': 'multiply prob by 0.888 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.2), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.9,0.84,0.16,0.25,0.0035946240000000003,"{'timestamp': 1760866780.258566, 'inputs': {'network_load': np.float64(0.9), 'relay_reputation': np.float64(0.84), 'budget_utilization': np.float64(0.16), 'recent_win_rate': np.float64(0.25)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0035946240000000003), 'steps': [{'feature': 'network_load', 'value': np.float64(0.9), 'effect': 'multiply prob by 0.460 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.84), 'effect': 'multiply prob by 1.760 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.16), 'effect': 'multiply prob by 0.888 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.25), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.9,0.84,0.16,0.3,0.0035946240000000003,"{'timestamp': 1760866780.2585912, 'inputs': {'network_load': np.float64(0.9), 'relay_reputation': np.float64(0.84), 'budget_utilization': np.float64(0.16), 'recent_win_rate': np.float64(0.3)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0035946240000000003), 'steps': [{'feature': 'network_load', 'value': np.float64(0.9), 'effect': 'multiply prob by 0.460 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.84), 'effect': 'multiply prob by 1.760 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.16), 'effect': 'multiply prob by 0.888 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.3), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.9,0.84,0.26,0.0,0.00662252793377472,"{'timestamp': 1760866780.2586217, 'inputs': {'network_load': np.float64(0.9), 'relay_reputation': np.float64(0.84), 'budget_utilization': np.float64(0.26), 'recent_win_rate': 1e-09}, 'base_prob': 0.01, 'final_prob': np.float64(0.00662252793377472), 'steps': [{'feature': 'network_load', 'value': np.float64(0.9), 'effect': 'multiply prob by 0.460 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.84), 'effect': 'multiply prob by 1.760 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.26), 'effect': 'multiply prob by 0.818 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': 1e-09, 'effect': 'multiply prob by 1.000 (higher recent wins -> lower prob)'}]}"
0.9,0.84,0.26,0.05,0.0033112640000000004,"{'timestamp': 1760866780.2586906, 'inputs': {'network_load': np.float64(0.9), 'relay_reputation': np.float64(0.84), 'budget_utilization': np.float64(0.26), 'recent_win_rate': np.float64(0.05)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0033112640000000004), 'steps': [{'feature': 'network_load', 'value': np.float64(0.9), 'effect': 'multiply prob by 0.460 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.84), 'effect': 'multiply prob by 1.760 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.26), 'effect': 'multiply prob by 0.818 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.05), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.9,0.84,0.26,0.1,0.0033112640000000004,"{'timestamp': 1760866780.258729, 'inputs': {'network_load': np.float64(0.9), 'relay_reputation': np.float64(0.84), 'budget_utilization': np.float64(0.26), 'recent_win_rate': np.float64(0.1)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0033112640000000004), 'steps': [{'feature': 'network_load', 'value': np.float64(0.9), 'effect': 'multiply prob by 0.460 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.84), 'effect': 'multiply prob by 1.760 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.26), 'effect': 'multiply prob by 0.818 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.1), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.9,0.84,0.26,0.15,0.0033112640000000004,"{'timestamp': 1760866780.2587547, 'inputs': {'network_load': np.float64(0.9), 'relay_reputation': np.float64(0.84), 'budget_utilization': np.float64(0.26), 'recent_win_rate': np.float64(0.15)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0033112640000000004), 'steps': [{'feature': 'network_load', 'value': np.float64(0.9), 'effect': 'multiply prob by 0.460 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.84), 'effect': 'multiply prob by 1.760 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.26), 'effect': 'multiply prob by 0.818 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.15), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.9,0.84,0.26,0.2,0.0033112640000000004,"{'timestamp': 1760866780.25878, 'inputs': {'network_load': np.float64(0.9), 'relay_reputation': np.float64(0.84), 'budget_utilization': np.float64(0.26), 'recent_win_rate': np.float64(0.2)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0033112640000000004), 'steps': [{'feature': 'network_load', 'value': np.float64(0.9), 'effect': 'multiply prob by 0.460 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.84), 'effect': 'multiply prob by 1.760 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.26), 'effect': 'multiply prob by 0.818 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.2), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.9,0.84,0.26,0.25,0.0033112640000000004,"{'timestamp': 1760866780.2588053, 'inputs': {'network_load': np.float64(0.9), 'relay_reputation': np.float64(0.84), 'budget_utilization': np.float64(0.26), 'recent_win_rate': np.float64(0.25)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0033112640000000004), 'steps': [{'feature': 'network_load', 'value': np.float64(0.9), 'effect': 'multiply prob by 0.460 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.84), 'effect': 'multiply prob by 1.760 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.26), 'effect': 'multiply prob by 0.818 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.25), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.9,0.84,0.26,0.3,0.0033112640000000004,"{'timestamp': 1760866780.25883, 'inputs': {'network_load': np.float64(0.9), 'relay_reputation': np.float64(0.84), 'budget_utilization': np.float64(0.26), 'recent_win_rate': np.float64(0.3)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0033112640000000004), 'steps': [{'feature': 'network_load', 'value': np.float64(0.9), 'effect': 'multiply prob by 0.460 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.84), 'effect': 'multiply prob by 1.760 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.26), 'effect': 'multiply prob by 0.818 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.3), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.9,0.84,0.37,0.0,0.00599913594000864,"{'timestamp': 1760866780.2588644, 'inputs': {'network_load': np.float64(0.9), 'relay_reputation': np.float64(0.84), 'budget_utilization': np.float64(0.37), 'recent_win_rate': 1e-09}, 'base_prob': 0.01, 'final_prob': np.float64(0.00599913594000864), 'steps': [{'feature': 'network_load', 'value': np.float64(0.9), 'effect': 'multiply prob by 0.460 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.84), 'effect': 'multiply prob by 1.760 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.37), 'effect': 'multiply prob by 0.741 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': 1e-09, 'effect': 'multiply prob by 1.000 (higher recent wins -> lower prob)'}]}"
0.9,0.84,0.37,0.05,0.002999568,"{'timestamp': 1760866780.2588935, 'inputs': {'network_load': np.float64(0.9), 'relay_reputation': np.float64(0.84), 'budget_utilization': np.float64(0.37), 'recent_win_rate': np.float64(0.05)}, 'base_prob': 0.01, 'final_prob': np.float64(0.002999568), 'steps': [{'feature': 'network_load', 'value': np.float64(0.9), 'effect': 'multiply prob by 0.460 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.84), 'effect': 'multiply prob by 1.760 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.37), 'effect': 'multiply prob by 0.741 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.05), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.9,0.84,0.37,0.1,0.002999568,"{'timestamp': 1760866780.2589192, 'inputs': {'network_load': np.float64(0.9), 'relay_reputation': np.float64(0.84), 'budget_utilization': np.float64(0.37), 'recent_win_rate': np.float64(0.1)}, 'base_prob': 0.01, 'final_prob': np.float64(0.002999568), 'steps': [{'feature': 'network_load', 'value': np.float64(0.9), 'effect': 'multiply prob by 0.460 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.84), 'effect': 'multiply prob by 1.760 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.37), 'effect': 'multiply prob by 0.741 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.1), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.9,0.84,0.37,0.15,0.002999568,"{'timestamp': 1760866780.2589443, 'inputs': {'network_load': np.float64(0.9), 'relay_reputation': np.float64(0.84), 'budget_utilization': np.float64(0.37), 'recent_win_rate': np.float64(0.15)}, 'base_prob': 0.01, 'final_prob': np.float64(0.002999568), 'steps': [{'feature': 'network_load', 'value': np.float64(0.9), 'effect': 'multiply prob by 0.460 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.84), 'effect': 'multiply prob by 1.760 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.37), 'effect': 'multiply prob by 0.741 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.15), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.9,0.84,0.37,0.2,0.002999568,"{'timestamp': 1760866780.2589695, 'inputs': {'network_load': np.float64(0.9), 'relay_reputation': np.float64(0.84), 'budget_utilization': np.float64(0.37), 'recent_win_rate': np.float64(0.2)}, 'base_prob': 0.01, 'final_prob': np.float64(0.002999568), 'steps': [{'feature': 'network_load', 'value': np.float64(0.9), 'effect': 'multiply prob by 0.460 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.84), 'effect': 'multiply prob by 1.760 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.37), 'effect': 'multiply prob by 0.741 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.2), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.9,0.84,0.37,0.25,0.002999568,"{'timestamp': 1760866780.2589977, 'inputs': {'network_load': np.float64(0.9), 'relay_reputation': np.float64(0.84), 'budget_utilization': np.float64(0.37), 'recent_win_rate': np.float64(0.25)}, 'base_prob': 0.01, 'final_prob': np.float64(0.002999568), 'steps': [{'feature': 'network_load', 'value': np.float64(0.9), 'effect': 'multiply prob by 0.460 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.84), 'effect': 'multiply prob by 1.760 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.37), 'effect': 'multiply prob by 0.741 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.25), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.9,0.84,0.37,0.3,0.002999568,"{'timestamp': 1760866780.259023, 'inputs': {'network_load': np.float64(0.9), 'relay_reputation': np.float64(0.84), 'budget_utilization': np.float64(0.37), 'recent_win_rate': np.float64(0.3)}, 'base_prob': 0.01, 'final_prob': np.float64(0.002999568), 'steps': [{'feature': 'network_load', 'value': np.float64(0.9), 'effect': 'multiply prob by 0.460 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.84), 'effect': 'multiply prob by 1.760 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.37), 'effect': 'multiply prob by 0.741 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.3), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.9,0.84,0.48,0.0,0.0053757439462425605,"{'timestamp': 1760866780.2590497, 'inputs': {'network_load': np.float64(0.9), 'relay_reputation': np.float64(0.84), 'budget_utilization': np.float64(0.48), 'recent_win_rate': 1e-09}, 'base_prob': 0.01, 'final_prob': np.float64(0.0053757439462425605), 'steps': [{'feature': 'network_load', 'value': np.float64(0.9), 'effect': 'multiply prob by 0.460 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.84), 'effect': 'multiply prob by 1.760 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.48), 'effect': 'multiply prob by 0.664 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': 1e-09, 'effect': 'multiply prob by 1.000 (higher recent wins -> lower prob)'}]}"
0.9,0.84,0.48,0.05,0.0026878720000000004,"{'timestamp': 1760866780.259075, 'inputs': {'network_load': np.float64(0.9), 'relay_reputation': np.float64(0.84), 'budget_utilization': np.float64(0.48), 'recent_win_rate': np.float64(0.05)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0026878720000000004), 'steps': [{'feature': 'network_load', 'value': np.float64(0.9), 'effect': 'multiply prob by 0.460 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.84), 'effect': 'multiply prob by 1.760 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.48), 'effect': 'multiply prob by 0.664 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.05), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.9,0.84,0.48,0.1,0.0026878720000000004,"{'timestamp': 1760866780.2591307, 'inputs': {'network_load': np.float64(0.9), 'relay_reputation': np.float64(0.84), 'budget_utilization': np.float64(0.48), 'recent_win_rate': np.float64(0.1)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0026878720000000004), 'steps': [{'feature': 'network_load', 'value': np.float64(0.9), 'effect': 'multiply prob by 0.460 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.84), 'effect': 'multiply prob by 1.760 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.48), 'effect': 'multiply prob by 0.664 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.1), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.9,0.84,0.48,0.15,0.0026878720000000004,"{'timestamp': 1760866780.259166, 'inputs': {'network_load': np.float64(0.9), 'relay_reputation': np.float64(0.84), 'budget_utilization': np.float64(0.48), 'recent_win_rate': np.float64(0.15)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0026878720000000004), 'steps': [{'feature': 'network_load', 'value': np.float64(0.9), 'effect': 'multiply prob by 0.460 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.84), 'effect': 'multiply prob by 1.760 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.48), 'effect': 'multiply prob by 0.664 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.15), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.9,0.84,0.48,0.2,0.0026878720000000004,"{'timestamp': 1760866780.2591915, 'inputs': {'network_load': np.float64(0.9), 'relay_reputation': np.float64(0.84), 'budget_utilization': np.float64(0.48), 'recent_win_rate': np.float64(0.2)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0026878720000000004), 'steps': [{'feature': 'network_load', 'value': np.float64(0.9), 'effect': 'multiply prob by 0.460 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.84), 'effect': 'multiply prob by 1.760 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.48), 'effect': 'multiply prob by 0.664 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.2), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.9,0.84,0.48,0.25,0.0026878720000000004,"{'timestamp': 1760866780.2592168, 'inputs': {'network_load': np.float64(0.9), 'relay_reputation': np.float64(0.84), 'budget_utilization': np.float64(0.48), 'recent_win_rate': np.float64(0.25)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0026878720000000004), 'steps': [{'feature': 'network_load', 'value': np.float64(0.9), 'effect': 'multiply prob by 0.460 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.84), 'effect': 'multiply prob by 1.760 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.48), 'effect': 'multiply prob by 0.664 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.25), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.9,0.84,0.48,0.3,0.0026878720000000004,"{'timestamp': 1760866780.2592423, 'inputs': {'network_load': np.float64(0.9), 'relay_reputation': np.float64(0.84), 'budget_utilization': np.float64(0.48), 'recent_win_rate': np.float64(0.3)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0026878720000000004), 'steps': [{'feature': 'network_load', 'value': np.float64(0.9), 'effect': 'multiply prob by 0.460 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.84), 'effect': 'multiply prob by 1.760 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.48), 'effect': 'multiply prob by 0.664 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.3), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.9,0.84,0.59,0.0,0.004752351952476481,"{'timestamp': 1760866780.2592735, 'inputs': {'network_load': np.float64(0.9), 'relay_reputation': np.float64(0.84), 'budget_utilization': np.float64(0.59), 'recent_win_rate': 1e-09}, 'base_prob': 0.01, 'final_prob': np.float64(0.004752351952476481), 'steps': [{'feature': 'network_load', 'value': np.float64(0.9), 'effect': 'multiply prob by 0.460 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.84), 'effect': 'multiply prob by 1.760 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.59), 'effect': 'multiply prob by 0.587 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': 1e-09, 'effect': 'multiply prob by 1.000 (higher recent wins -> lower prob)'}]}"
0.9,0.84,0.59,0.05,0.0023761760000000002,"{'timestamp': 1760866780.2593064, 'inputs': {'network_load': np.float64(0.9), 'relay_reputation': np.float64(0.84), 'budget_utilization': np.float64(0.59), 'recent_win_rate': np.float64(0.05)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0023761760000000002), 'steps': [{'feature': 'network_load', 'value': np.float64(0.9), 'effect': 'multiply prob by 0.460 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.84), 'effect': 'multiply prob by 1.760 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.59), 'effect': 'multiply prob by 0.587 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.05), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.9,0.84,0.59,0.1,0.0023761760000000002,"{'timestamp': 1760866780.2593358, 'inputs': {'network_load': np.float64(0.9), 'relay_reputation': np.float64(0.84), 'budget_utilization': np.float64(0.59), 'recent_win_rate': np.float64(0.1)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0023761760000000002), 'steps': [{'feature': 'network_load', 'value': np.float64(0.9), 'effect': 'multiply prob by 0.460 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.84), 'effect': 'multiply prob by 1.760 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.59), 'effect': 'multiply prob by 0.587 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.1), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.9,0.84,0.59,0.15,0.0023761760000000002,"{'timestamp': 1760866780.2593625, 'inputs': {'network_load': np.float64(0.9), 'relay_reputation': np.float64(0.84), 'budget_utilization': np.float64(0.59), 'recent_win_rate': np.float64(0.15)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0023761760000000002), 'steps': [{'feature': 'network_load', 'value': np.float64(0.9), 'effect': 'multiply prob by 0.460 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.84), 'effect': 'multiply prob by 1.760 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.59), 'effect': 'multiply prob by 0.587 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.15), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.9,0.84,0.59,0.2,0.0023761760000000002,"{'timestamp': 1760866780.2593877, 'inputs': {'network_load': np.float64(0.9), 'relay_reputation': np.float64(0.84), 'budget_utilization': np.float64(0.59), 'recent_win_rate': np.float64(0.2)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0023761760000000002), 'steps': [{'feature': 'network_load', 'value': np.float64(0.9), 'effect': 'multiply prob by 0.460 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.84), 'effect': 'multiply prob by 1.760 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.59), 'effect': 'multiply prob by 0.587 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.2), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.9,0.84,0.59,0.25,0.0023761760000000002,"{'timestamp': 1760866780.2594144, 'inputs': {'network_load': np.float64(0.9), 'relay_reputation': np.float64(0.84), 'budget_utilization': np.float64(0.59), 'recent_win_rate': np.float64(0.25)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0023761760000000002), 'steps': [{'feature': 'network_load', 'value': np.float64(0.9), 'effect': 'multiply prob by 0.460 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.84), 'effect': 'multiply prob by 1.760 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.59), 'effect': 'multiply prob by 0.587 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.25), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.9,0.84,0.59,0.3,0.0023761760000000002,"{'timestamp': 1760866780.25944, 'inputs': {'network_load': np.float64(0.9), 'relay_reputation': np.float64(0.84), 'budget_utilization': np.float64(0.59), 'recent_win_rate': np.float64(0.3)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0023761760000000002), 'steps': [{'feature': 'network_load', 'value': np.float64(0.9), 'effect': 'multiply prob by 0.460 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.84), 'effect': 'multiply prob by 1.760 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.59), 'effect': 'multiply prob by 0.587 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.3), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.9,0.84,0.69,0.0,0.004185631958143681,"{'timestamp': 1760866780.2594688, 'inputs': {'network_load': np.float64(0.9), 'relay_reputation': np.float64(0.84), 'budget_utilization': np.float64(0.69), 'recent_win_rate': 1e-09}, 'base_prob': 0.01, 'final_prob': np.float64(0.004185631958143681), 'steps': [{'feature': 'network_load', 'value': np.float64(0.9), 'effect': 'multiply prob by 0.460 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.84), 'effect': 'multiply prob by 1.760 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.69), 'effect': 'multiply prob by 0.517 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': 1e-09, 'effect': 'multiply prob by 1.000 (higher recent wins -> lower prob)'}]}"
0.9,0.84,0.69,0.05,0.002092816000000001,"{'timestamp': 1760866780.2594938, 'inputs': {'network_load': np.float64(0.9), 'relay_reputation': np.float64(0.84), 'budget_utilization': np.float64(0.69), 'recent_win_rate': np.float64(0.05)}, 'base_prob': 0.01, 'final_prob': np.float64(0.002092816000000001), 'steps': [{'feature': 'network_load', 'value': np.float64(0.9), 'effect': 'multiply prob by 0.460 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.84), 'effect': 'multiply prob by 1.760 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.69), 'effect': 'multiply prob by 0.517 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.05), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.9,0.84,0.69,0.1,0.002092816000000001,"{'timestamp': 1760866780.2595193, 'inputs': {'network_load': np.float64(0.9), 'relay_reputation': np.float64(0.84), 'budget_utilization': np.float64(0.69), 'recent_win_rate': np.float64(0.1)}, 'base_prob': 0.01, 'final_prob': np.float64(0.002092816000000001), 'steps': [{'feature': 'network_load', 'value': np.float64(0.9), 'effect': 'multiply prob by 0.460 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.84), 'effect': 'multiply prob by 1.760 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.69), 'effect': 'multiply prob by 0.517 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.1), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.9,0.84,0.69,0.15,0.002092816000000001,"{'timestamp': 1760866780.2595463, 'inputs': {'network_load': np.float64(0.9), 'relay_reputation': np.float64(0.84), 'budget_utilization': np.float64(0.69), 'recent_win_rate': np.float64(0.15)}, 'base_prob': 0.01, 'final_prob': np.float64(0.002092816000000001), 'steps': [{'feature': 'network_load', 'value': np.float64(0.9), 'effect': 'multiply prob by 0.460 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.84), 'effect': 'multiply prob by 1.760 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.69), 'effect': 'multiply prob by 0.517 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.15), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.9,0.84,0.69,0.2,0.002092816000000001,"{'timestamp': 1760866780.2595735, 'inputs': {'network_load': np.float64(0.9), 'relay_reputation': np.float64(0.84), 'budget_utilization': np.float64(0.69), 'recent_win_rate': np.float64(0.2)}, 'base_prob': 0.01, 'final_prob': np.float64(0.002092816000000001), 'steps': [{'feature': 'network_load', 'value': np.float64(0.9), 'effect': 'multiply prob by 0.460 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.84), 'effect': 'multiply prob by 1.760 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.69), 'effect': 'multiply prob by 0.517 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.2), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.9,0.84,0.69,0.25,0.002092816000000001,"{'timestamp': 1760866780.2596564, 'inputs': {'network_load': np.float64(0.9), 'relay_reputation': np.float64(0.84), 'budget_utilization': np.float64(0.69), 'recent_win_rate': np.float64(0.25)}, 'base_prob': 0.01, 'final_prob': np.float64(0.002092816000000001), 'steps': [{'feature': 'network_load', 'value': np.float64(0.9), 'effect': 'multiply prob by 0.460 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.84), 'effect': 'multiply prob by 1.760 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.69), 'effect': 'multiply prob by 0.517 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.25), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.9,0.84,0.69,0.3,0.002092816000000001,"{'timestamp': 1760866780.2596838, 'inputs': {'network_load': np.float64(0.9), 'relay_reputation': np.float64(0.84), 'budget_utilization': np.float64(0.69), 'recent_win_rate': np.float64(0.3)}, 'base_prob': 0.01, 'final_prob': np.float64(0.002092816000000001), 'steps': [{'feature': 'network_load', 'value': np.float64(0.9), 'effect': 'multiply prob by 0.460 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.84), 'effect': 'multiply prob by 1.760 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.69), 'effect': 'multiply prob by 0.517 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.3), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.9,0.84,0.8,0.0,0.003562239964377601,"{'timestamp': 1760866780.259713, 'inputs': {'network_load': np.float64(0.9), 'relay_reputation': np.float64(0.84), 'budget_utilization': np.float64(0.8), 'recent_win_rate': 1e-09}, 'base_prob': 0.01, 'final_prob': np.float64(0.003562239964377601), 'steps': [{'feature': 'network_load', 'value': np.float64(0.9), 'effect': 'multiply prob by 0.460 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.84), 'effect': 'multiply prob by 1.760 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.8), 'effect': 'multiply prob by 0.440 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': 1e-09, 'effect': 'multiply prob by 1.000 (higher recent wins -> lower prob)'}]}"
0.9,0.84,0.8,0.05,0.0017811200000000004,"{'timestamp': 1760866780.2597382, 'inputs': {'network_load': np.float64(0.9), 'relay_reputation': np.float64(0.84), 'budget_utilization': np.float64(0.8), 'recent_win_rate': np.float64(0.05)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0017811200000000004), 'steps': [{'feature': 'network_load', 'value': np.float64(0.9), 'effect': 'multiply prob by 0.460 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.84), 'effect': 'multiply prob by 1.760 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.8), 'effect': 'multiply prob by 0.440 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.05), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.9,0.84,0.8,0.1,0.0017811200000000004,"{'timestamp': 1760866780.2597632, 'inputs': {'network_load': np.float64(0.9), 'relay_reputation': np.float64(0.84), 'budget_utilization': np.float64(0.8), 'recent_win_rate': np.float64(0.1)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0017811200000000004), 'steps': [{'feature': 'network_load', 'value': np.float64(0.9), 'effect': 'multiply prob by 0.460 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.84), 'effect': 'multiply prob by 1.760 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.8), 'effect': 'multiply prob by 0.440 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.1), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.9,0.84,0.8,0.15,0.0017811200000000004,"{'timestamp': 1760866780.2597907, 'inputs': {'network_load': np.float64(0.9), 'relay_reputation': np.float64(0.84), 'budget_utilization': np.float64(0.8), 'recent_win_rate': np.float64(0.15)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0017811200000000004), 'steps': [{'feature': 'network_load', 'value': np.float64(0.9), 'effect': 'multiply prob by 0.460 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.84), 'effect': 'multiply prob by 1.760 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.8), 'effect': 'multiply prob by 0.440 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.15), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.9,0.84,0.8,0.2,0.0017811200000000004,"{'timestamp': 1760866780.2598917, 'inputs': {'network_load': np.float64(0.9), 'relay_reputation': np.float64(0.84), 'budget_utilization': np.float64(0.8), 'recent_win_rate': np.float64(0.2)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0017811200000000004), 'steps': [{'feature': 'network_load', 'value': np.float64(0.9), 'effect': 'multiply prob by 0.460 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.84), 'effect': 'multiply prob by 1.760 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.8), 'effect': 'multiply prob by 0.440 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.2), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.9,0.84,0.8,0.25,0.0017811200000000004,"{'timestamp': 1760866780.259923, 'inputs': {'network_load': np.float64(0.9), 'relay_reputation': np.float64(0.84), 'budget_utilization': np.float64(0.8), 'recent_win_rate': np.float64(0.25)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0017811200000000004), 'steps': [{'feature': 'network_load', 'value': np.float64(0.9), 'effect': 'multiply prob by 0.460 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.84), 'effect': 'multiply prob by 1.760 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.8), 'effect': 'multiply prob by 0.440 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.25), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.9,0.84,0.8,0.3,0.0017811200000000004,"{'timestamp': 1760866780.2599485, 'inputs': {'network_load': np.float64(0.9), 'relay_reputation': np.float64(0.84), 'budget_utilization': np.float64(0.8), 'recent_win_rate': np.float64(0.3)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0017811200000000004), 'steps': [{'feature': 'network_load', 'value': np.float64(0.9), 'effect': 'multiply prob by 0.460 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.84), 'effect': 'multiply prob by 1.760 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.8), 'effect': 'multiply prob by 0.440 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.3), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.9,0.95,0.05,0.0,0.008545074914549247,"{'timestamp': 1760866780.2599785, 'inputs': {'network_load': np.float64(0.9), 'relay_reputation': np.float64(0.95), 'budget_utilization': np.float64(0.05), 'recent_win_rate': 1e-09}, 'base_prob': 0.01, 'final_prob': np.float64(0.008545074914549247), 'steps': [{'feature': 'network_load', 'value': np.float64(0.9), 'effect': 'multiply prob by 0.460 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.95), 'effect': 'multiply prob by 1.925 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.05), 'effect': 'multiply prob by 0.965 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': 1e-09, 'effect': 'multiply prob by 1.000 (higher recent wins -> lower prob)'}]}"
0.9,0.95,0.05,0.05,0.004272537499999999,"{'timestamp': 1760866780.260007, 'inputs': {'network_load': np.float64(0.9), 'relay_reputation': np.float64(0.95), 'budget_utilization': np.float64(0.05), 'recent_win_rate': np.float64(0.05)}, 'base_prob': 0.01, 'final_prob': np.float64(0.004272537499999999), 'steps': [{'feature': 'network_load', 'value': np.float64(0.9), 'effect': 'multiply prob by 0.460 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.95), 'effect': 'multiply prob by 1.925 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.05), 'effect': 'multiply prob by 0.965 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.05), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.9,0.95,0.05,0.1,0.004272537499999999,"{'timestamp': 1760866780.2600353, 'inputs': {'network_load': np.float64(0.9), 'relay_reputation': np.float64(0.95), 'budget_utilization': np.float64(0.05), 'recent_win_rate': np.float64(0.1)}, 'base_prob': 0.01, 'final_prob': np.float64(0.004272537499999999), 'steps': [{'feature': 'network_load', 'value': np.float64(0.9), 'effect': 'multiply prob by 0.460 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.95), 'effect': 'multiply prob by 1.925 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.05), 'effect': 'multiply prob by 0.965 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.1), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.9,0.95,0.05,0.15,0.004272537499999999,"{'timestamp': 1760866780.2600608, 'inputs': {'network_load': np.float64(0.9), 'relay_reputation': np.float64(0.95), 'budget_utilization': np.float64(0.05), 'recent_win_rate': np.float64(0.15)}, 'base_prob': 0.01, 'final_prob': np.float64(0.004272537499999999), 'steps': [{'feature': 'network_load', 'value': np.float64(0.9), 'effect': 'multiply prob by 0.460 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.95), 'effect': 'multiply prob by 1.925 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.05), 'effect': 'multiply prob by 0.965 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.15), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.9,0.95,0.05,0.2,0.004272537499999999,"{'timestamp': 1760866780.2600858, 'inputs': {'network_load': np.float64(0.9), 'relay_reputation': np.float64(0.95), 'budget_utilization': np.float64(0.05), 'recent_win_rate': np.float64(0.2)}, 'base_prob': 0.01, 'final_prob': np.float64(0.004272537499999999), 'steps': [{'feature': 'network_load', 'value': np.float64(0.9), 'effect': 'multiply prob by 0.460 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.95), 'effect': 'multiply prob by 1.925 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.05), 'effect': 'multiply prob by 0.965 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.2), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.9,0.95,0.05,0.25,0.004272537499999999,"{'timestamp': 1760866780.2601109, 'inputs': {'network_load': np.float64(0.9), 'relay_reputation': np.float64(0.95), 'budget_utilization': np.float64(0.05), 'recent_win_rate': np.float64(0.25)}, 'base_prob': 0.01, 'final_prob': np.float64(0.004272537499999999), 'steps': [{'feature': 'network_load', 'value': np.float64(0.9), 'effect': 'multiply prob by 0.460 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.95), 'effect': 'multiply prob by 1.925 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.05), 'effect': 'multiply prob by 0.965 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.25), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.9,0.95,0.05,0.3,0.004272537499999999,"{'timestamp': 1760866780.2601378, 'inputs': {'network_load': np.float64(0.9), 'relay_reputation': np.float64(0.95), 'budget_utilization': np.float64(0.05), 'recent_win_rate': np.float64(0.3)}, 'base_prob': 0.01, 'final_prob': np.float64(0.004272537499999999), 'steps': [{'feature': 'network_load', 'value': np.float64(0.9), 'effect': 'multiply prob by 0.460 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.95), 'effect': 'multiply prob by 1.925 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.05), 'effect': 'multiply prob by 0.965 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.3), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.9,0.95,0.16,0.0,0.007863239921367598,"{'timestamp': 1760866780.2601686, 'inputs': {'network_load': np.float64(0.9), 'relay_reputation': np.float64(0.95), 'budget_utilization': np.float64(0.16), 'recent_win_rate': 1e-09}, 'base_prob': 0.01, 'final_prob': np.float64(0.007863239921367598), 'steps': [{'feature': 'network_load', 'value': np.float64(0.9), 'effect': 'multiply prob by 0.460 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.95), 'effect': 'multiply prob by 1.925 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.16), 'effect': 'multiply prob by 0.888 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': 1e-09, 'effect': 'multiply prob by 1.000 (higher recent wins -> lower prob)'}]}"
0.9,0.95,0.16,0.05,0.003931619999999999,"{'timestamp': 1760866780.2601938, 'inputs': {'network_load': np.float64(0.9), 'relay_reputation': np.float64(0.95), 'budget_utilization': np.float64(0.16), 'recent_win_rate': np.float64(0.05)}, 'base_prob': 0.01, 'final_prob': np.float64(0.003931619999999999), 'steps': [{'feature': 'network_load', 'value': np.float64(0.9), 'effect': 'multiply prob by 0.460 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.95), 'effect': 'multiply prob by 1.925 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.16), 'effect': 'multiply prob by 0.888 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.05), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.9,0.95,0.16,0.1,0.003931619999999999,"{'timestamp': 1760866780.260221, 'inputs': {'network_load': np.float64(0.9), 'relay_reputation': np.float64(0.95), 'budget_utilization': np.float64(0.16), 'recent_win_rate': np.float64(0.1)}, 'base_prob': 0.01, 'final_prob': np.float64(0.003931619999999999), 'steps': [{'feature': 'network_load', 'value': np.float64(0.9), 'effect': 'multiply prob by 0.460 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.95), 'effect': 'multiply prob by 1.925 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.16), 'effect': 'multiply prob by 0.888 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.1), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.9,0.95,0.16,0.15,0.003931619999999999,"{'timestamp': 1760866780.260246, 'inputs': {'network_load': np.float64(0.9), 'relay_reputation': np.float64(0.95), 'budget_utilization': np.float64(0.16), 'recent_win_rate': np.float64(0.15)}, 'base_prob': 0.01, 'final_prob': np.float64(0.003931619999999999), 'steps': [{'feature': 'network_load', 'value': np.float64(0.9), 'effect': 'multiply prob by 0.460 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.95), 'effect': 'multiply prob by 1.925 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.16), 'effect': 'multiply prob by 0.888 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.15), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.9,0.95,0.16,0.2,0.003931619999999999,"{'timestamp': 1760866780.260271, 'inputs': {'network_load': np.float64(0.9), 'relay_reputation': np.float64(0.95), 'budget_utilization': np.float64(0.16), 'recent_win_rate': np.float64(0.2)}, 'base_prob': 0.01, 'final_prob': np.float64(0.003931619999999999), 'steps': [{'feature': 'network_load', 'value': np.float64(0.9), 'effect': 'multiply prob by 0.460 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.95), 'effect': 'multiply prob by 1.925 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.16), 'effect': 'multiply prob by 0.888 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.2), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.9,0.95,0.16,0.25,0.003931619999999999,"{'timestamp': 1760866780.2603025, 'inputs': {'network_load': np.float64(0.9), 'relay_reputation': np.float64(0.95), 'budget_utilization': np.float64(0.16), 'recent_win_rate': np.float64(0.25)}, 'base_prob': 0.01, 'final_prob': np.float64(0.003931619999999999), 'steps': [{'feature': 'network_load', 'value': np.float64(0.9), 'effect': 'multiply prob by 0.460 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.95), 'effect': 'multiply prob by 1.925 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.16), 'effect': 'multiply prob by 0.888 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.25), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.9,0.95,0.16,0.3,0.003931619999999999,"{'timestamp': 1760866780.2603338, 'inputs': {'network_load': np.float64(0.9), 'relay_reputation': np.float64(0.95), 'budget_utilization': np.float64(0.16), 'recent_win_rate': np.float64(0.3)}, 'base_prob': 0.01, 'final_prob': np.float64(0.003931619999999999), 'steps': [{'feature': 'network_load', 'value': np.float64(0.9), 'effect': 'multiply prob by 0.460 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.95), 'effect': 'multiply prob by 1.925 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.16), 'effect': 'multiply prob by 0.888 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.3), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.9,0.95,0.26,0.0,0.007243389927566099,"{'timestamp': 1760866780.260364, 'inputs': {'network_load': np.float64(0.9), 'relay_reputation': np.float64(0.95), 'budget_utilization': np.float64(0.26), 'recent_win_rate': 1e-09}, 'base_prob': 0.01, 'final_prob': np.float64(0.007243389927566099), 'steps': [{'feature': 'network_load', 'value': np.float64(0.9), 'effect': 'multiply prob by 0.460 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.95), 'effect': 'multiply prob by 1.925 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.26), 'effect': 'multiply prob by 0.818 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': 1e-09, 'effect': 'multiply prob by 1.000 (higher recent wins -> lower prob)'}]}"
0.9,0.95,0.26,0.05,0.0036216949999999994,"{'timestamp': 1760866780.2603893, 'inputs': {'network_load': np.float64(0.9), 'relay_reputation': np.float64(0.95), 'budget_utilization': np.float64(0.26), 'recent_win_rate': np.float64(0.05)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0036216949999999994), 'steps': [{'feature': 'network_load', 'value': np.float64(0.9), 'effect': 'multiply prob by 0.460 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.95), 'effect': 'multiply prob by 1.925 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.26), 'effect': 'multiply prob by 0.818 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.05), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.9,0.95,0.26,0.1,0.0036216949999999994,"{'timestamp': 1760866780.2604144, 'inputs': {'network_load': np.float64(0.9), 'relay_reputation': np.float64(0.95), 'budget_utilization': np.float64(0.26), 'recent_win_rate': np.float64(0.1)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0036216949999999994), 'steps': [{'feature': 'network_load', 'value': np.float64(0.9), 'effect': 'multiply prob by 0.460 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.95), 'effect': 'multiply prob by 1.925 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.26), 'effect': 'multiply prob by 0.818 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.1), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.9,0.95,0.26,0.15,0.0036216949999999994,"{'timestamp': 1760866780.2604413, 'inputs': {'network_load': np.float64(0.9), 'relay_reputation': np.float64(0.95), 'budget_utilization': np.float64(0.26), 'recent_win_rate': np.float64(0.15)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0036216949999999994), 'steps': [{'feature': 'network_load', 'value': np.float64(0.9), 'effect': 'multiply prob by 0.460 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.95), 'effect': 'multiply prob by 1.925 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.26), 'effect': 'multiply prob by 0.818 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.15), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.9,0.95,0.26,0.2,0.0036216949999999994,"{'timestamp': 1760866780.260467, 'inputs': {'network_load': np.float64(0.9), 'relay_reputation': np.float64(0.95), 'budget_utilization': np.float64(0.26), 'recent_win_rate': np.float64(0.2)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0036216949999999994), 'steps': [{'feature': 'network_load', 'value': np.float64(0.9), 'effect': 'multiply prob by 0.460 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.95), 'effect': 'multiply prob by 1.925 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.26), 'effect': 'multiply prob by 0.818 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.2), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.9,0.95,0.26,0.25,0.0036216949999999994,"{'timestamp': 1760866780.2604918, 'inputs': {'network_load': np.float64(0.9), 'relay_reputation': np.float64(0.95), 'budget_utilization': np.float64(0.26), 'recent_win_rate': np.float64(0.25)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0036216949999999994), 'steps': [{'feature': 'network_load', 'value': np.float64(0.9), 'effect': 'multiply prob by 0.460 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.95), 'effect': 'multiply prob by 1.925 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.26), 'effect': 'multiply prob by 0.818 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.25), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.9,0.95,0.26,0.3,0.0036216949999999994,"{'timestamp': 1760866780.2605321, 'inputs': {'network_load': np.float64(0.9), 'relay_reputation': np.float64(0.95), 'budget_utilization': np.float64(0.26), 'recent_win_rate': np.float64(0.3)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0036216949999999994), 'steps': [{'feature': 'network_load', 'value': np.float64(0.9), 'effect': 'multiply prob by 0.460 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.95), 'effect': 'multiply prob by 1.925 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.26), 'effect': 'multiply prob by 0.818 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.3), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.9,0.95,0.37,0.0,0.006561554934384448,"{'timestamp': 1760866780.2605596, 'inputs': {'network_load': np.float64(0.9), 'relay_reputation': np.float64(0.95), 'budget_utilization': np.float64(0.37), 'recent_win_rate': 1e-09}, 'base_prob': 0.01, 'final_prob': np.float64(0.006561554934384448), 'steps': [{'feature': 'network_load', 'value': np.float64(0.9), 'effect': 'multiply prob by 0.460 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.95), 'effect': 'multiply prob by 1.925 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.37), 'effect': 'multiply prob by 0.741 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': 1e-09, 'effect': 'multiply prob by 1.000 (higher recent wins -> lower prob)'}]}"
0.9,0.95,0.37,0.05,0.003280777499999999,"{'timestamp': 1760866780.2606435, 'inputs': {'network_load': np.float64(0.9), 'relay_reputation': np.float64(0.95), 'budget_utilization': np.float64(0.37), 'recent_win_rate': np.float64(0.05)}, 'base_prob': 0.01, 'final_prob': np.float64(0.003280777499999999), 'steps': [{'feature': 'network_load', 'value': np.float64(0.9), 'effect': 'multiply prob by 0.460 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.95), 'effect': 'multiply prob by 1.925 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.37), 'effect': 'multiply prob by 0.741 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.05), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.9,0.95,0.37,0.1,0.003280777499999999,"{'timestamp': 1760866780.2606754, 'inputs': {'network_load': np.float64(0.9), 'relay_reputation': np.float64(0.95), 'budget_utilization': np.float64(0.37), 'recent_win_rate': np.float64(0.1)}, 'base_prob': 0.01, 'final_prob': np.float64(0.003280777499999999), 'steps': [{'feature': 'network_load', 'value': np.float64(0.9), 'effect': 'multiply prob by 0.460 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.95), 'effect': 'multiply prob by 1.925 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.37), 'effect': 'multiply prob by 0.741 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.1), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.9,0.95,0.37,0.15,0.003280777499999999,"{'timestamp': 1760866780.2607007, 'inputs': {'network_load': np.float64(0.9), 'relay_reputation': np.float64(0.95), 'budget_utilization': np.float64(0.37), 'recent_win_rate': np.float64(0.15)}, 'base_prob': 0.01, 'final_prob': np.float64(0.003280777499999999), 'steps': [{'feature': 'network_load', 'value': np.float64(0.9), 'effect': 'multiply prob by 0.460 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.95), 'effect': 'multiply prob by 1.925 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.37), 'effect': 'multiply prob by 0.741 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.15), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.9,0.95,0.37,0.2,0.003280777499999999,"{'timestamp': 1760866780.2607257, 'inputs': {'network_load': np.float64(0.9), 'relay_reputation': np.float64(0.95), 'budget_utilization': np.float64(0.37), 'recent_win_rate': np.float64(0.2)}, 'base_prob': 0.01, 'final_prob': np.float64(0.003280777499999999), 'steps': [{'feature': 'network_load', 'value': np.float64(0.9), 'effect': 'multiply prob by 0.460 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.95), 'effect': 'multiply prob by 1.925 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.37), 'effect': 'multiply prob by 0.741 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.2), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.9,0.95,0.37,0.25,0.003280777499999999,"{'timestamp': 1760866780.260751, 'inputs': {'network_load': np.float64(0.9), 'relay_reputation': np.float64(0.95), 'budget_utilization': np.float64(0.37), 'recent_win_rate': np.float64(0.25)}, 'base_prob': 0.01, 'final_prob': np.float64(0.003280777499999999), 'steps': [{'feature': 'network_load', 'value': np.float64(0.9), 'effect': 'multiply prob by 0.460 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.95), 'effect': 'multiply prob by 1.925 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.37), 'effect': 'multiply prob by 0.741 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.25), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.9,0.95,0.37,0.3,0.003280777499999999,"{'timestamp': 1760866780.260776, 'inputs': {'network_load': np.float64(0.9), 'relay_reputation': np.float64(0.95), 'budget_utilization': np.float64(0.37), 'recent_win_rate': np.float64(0.3)}, 'base_prob': 0.01, 'final_prob': np.float64(0.003280777499999999), 'steps': [{'feature': 'network_load', 'value': np.float64(0.9), 'effect': 'multiply prob by 0.460 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.95), 'effect': 'multiply prob by 1.925 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.37), 'effect': 'multiply prob by 0.741 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.3), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.9,0.95,0.48,0.0,0.005879719941202798,"{'timestamp': 1760866780.2608128, 'inputs': {'network_load': np.float64(0.9), 'relay_reputation': np.float64(0.95), 'budget_utilization': np.float64(0.48), 'recent_win_rate': 1e-09}, 'base_prob': 0.01, 'final_prob': np.float64(0.005879719941202798), 'steps': [{'feature': 'network_load', 'value': np.float64(0.9), 'effect': 'multiply prob by 0.460 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.95), 'effect': 'multiply prob by 1.925 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.48), 'effect': 'multiply prob by 0.664 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': 1e-09, 'effect': 'multiply prob by 1.000 (higher recent wins -> lower prob)'}]}"
0.9,0.95,0.48,0.05,0.0029398599999999994,"{'timestamp': 1760866780.2608387, 'inputs': {'network_load': np.float64(0.9), 'relay_reputation': np.float64(0.95), 'budget_utilization': np.float64(0.48), 'recent_win_rate': np.float64(0.05)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0029398599999999994), 'steps': [{'feature': 'network_load', 'value': np.float64(0.9), 'effect': 'multiply prob by 0.460 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.95), 'effect': 'multiply prob by 1.925 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.48), 'effect': 'multiply prob by 0.664 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.05), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.9,0.95,0.48,0.1,0.0029398599999999994,"{'timestamp': 1760866780.2608662, 'inputs': {'network_load': np.float64(0.9), 'relay_reputation': np.float64(0.95), 'budget_utilization': np.float64(0.48), 'recent_win_rate': np.float64(0.1)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0029398599999999994), 'steps': [{'feature': 'network_load', 'value': np.float64(0.9), 'effect': 'multiply prob by 0.460 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.95), 'effect': 'multiply prob by 1.925 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.48), 'effect': 'multiply prob by 0.664 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.1), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.9,0.95,0.48,0.15,0.0029398599999999994,"{'timestamp': 1760866780.2608917, 'inputs': {'network_load': np.float64(0.9), 'relay_reputation': np.float64(0.95), 'budget_utilization': np.float64(0.48), 'recent_win_rate': np.float64(0.15)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0029398599999999994), 'steps': [{'feature': 'network_load', 'value': np.float64(0.9), 'effect': 'multiply prob by 0.460 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.95), 'effect': 'multiply prob by 1.925 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.48), 'effect': 'multiply prob by 0.664 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.15), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.9,0.95,0.48,0.2,0.0029398599999999994,"{'timestamp': 1760866780.2609165, 'inputs': {'network_load': np.float64(0.9), 'relay_reputation': np.float64(0.95), 'budget_utilization': np.float64(0.48), 'recent_win_rate': np.float64(0.2)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0029398599999999994), 'steps': [{'feature': 'network_load', 'value': np.float64(0.9), 'effect': 'multiply prob by 0.460 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.95), 'effect': 'multiply prob by 1.925 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.48), 'effect': 'multiply prob by 0.664 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.2), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.9,0.95,0.48,0.25,0.0029398599999999994,"{'timestamp': 1760866780.2609437, 'inputs': {'network_load': np.float64(0.9), 'relay_reputation': np.float64(0.95), 'budget_utilization': np.float64(0.48), 'recent_win_rate': np.float64(0.25)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0029398599999999994), 'steps': [{'feature': 'network_load', 'value': np.float64(0.9), 'effect': 'multiply prob by 0.460 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.95), 'effect': 'multiply prob by 1.925 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.48), 'effect': 'multiply prob by 0.664 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.25), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.9,0.95,0.48,0.3,0.0029398599999999994,"{'timestamp': 1760866780.260969, 'inputs': {'network_load': np.float64(0.9), 'relay_reputation': np.float64(0.95), 'budget_utilization': np.float64(0.48), 'recent_win_rate': np.float64(0.3)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0029398599999999994), 'steps': [{'feature': 'network_load', 'value': np.float64(0.9), 'effect': 'multiply prob by 0.460 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.95), 'effect': 'multiply prob by 1.925 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.48), 'effect': 'multiply prob by 0.664 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.3), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.9,0.95,0.59,0.0,0.005197884948021148,"{'timestamp': 1760866780.2609959, 'inputs': {'network_load': np.float64(0.9), 'relay_reputation': np.float64(0.95), 'budget_utilization': np.float64(0.59), 'recent_win_rate': 1e-09}, 'base_prob': 0.01, 'final_prob': np.float64(0.005197884948021148), 'steps': [{'feature': 'network_load', 'value': np.float64(0.9), 'effect': 'multiply prob by 0.460 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.95), 'effect': 'multiply prob by 1.925 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.59), 'effect': 'multiply prob by 0.587 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': 1e-09, 'effect': 'multiply prob by 1.000 (higher recent wins -> lower prob)'}]}"
0.9,0.95,0.59,0.05,0.0025989424999999992,"{'timestamp': 1760866780.261021, 'inputs': {'network_load': np.float64(0.9), 'relay_reputation': np.float64(0.95), 'budget_utilization': np.float64(0.59), 'recent_win_rate': np.float64(0.05)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0025989424999999992), 'steps': [{'feature': 'network_load', 'value': np.float64(0.9), 'effect': 'multiply prob by 0.460 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.95), 'effect': 'multiply prob by 1.925 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.59), 'effect': 'multiply prob by 0.587 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.05), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.9,0.95,0.59,0.1,0.0025989424999999992,"{'timestamp': 1760866780.2610462, 'inputs': {'network_load': np.float64(0.9), 'relay_reputation': np.float64(0.95), 'budget_utilization': np.float64(0.59), 'recent_win_rate': np.float64(0.1)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0025989424999999992), 'steps': [{'feature': 'network_load', 'value': np.float64(0.9), 'effect': 'multiply prob by 0.460 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.95), 'effect': 'multiply prob by 1.925 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.59), 'effect': 'multiply prob by 0.587 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.1), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.9,0.95,0.59,0.15,0.0025989424999999992,"{'timestamp': 1760866780.2610753, 'inputs': {'network_load': np.float64(0.9), 'relay_reputation': np.float64(0.95), 'budget_utilization': np.float64(0.59), 'recent_win_rate': np.float64(0.15)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0025989424999999992), 'steps': [{'feature': 'network_load', 'value': np.float64(0.9), 'effect': 'multiply prob by 0.460 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.95), 'effect': 'multiply prob by 1.925 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.59), 'effect': 'multiply prob by 0.587 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.15), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.9,0.95,0.59,0.2,0.0025989424999999992,"{'timestamp': 1760866780.2611248, 'inputs': {'network_load': np.float64(0.9), 'relay_reputation': np.float64(0.95), 'budget_utilization': np.float64(0.59), 'recent_win_rate': np.float64(0.2)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0025989424999999992), 'steps': [{'feature': 'network_load', 'value': np.float64(0.9), 'effect': 'multiply prob by 0.460 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.95), 'effect': 'multiply prob by 1.925 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.59), 'effect': 'multiply prob by 0.587 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.2), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.9,0.95,0.59,0.25,0.0025989424999999992,"{'timestamp': 1760866780.2611613, 'inputs': {'network_load': np.float64(0.9), 'relay_reputation': np.float64(0.95), 'budget_utilization': np.float64(0.59), 'recent_win_rate': np.float64(0.25)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0025989424999999992), 'steps': [{'feature': 'network_load', 'value': np.float64(0.9), 'effect': 'multiply prob by 0.460 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.95), 'effect': 'multiply prob by 1.925 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.59), 'effect': 'multiply prob by 0.587 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.25), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.9,0.95,0.59,0.3,0.0025989424999999992,"{'timestamp': 1760866780.261187, 'inputs': {'network_load': np.float64(0.9), 'relay_reputation': np.float64(0.95), 'budget_utilization': np.float64(0.59), 'recent_win_rate': np.float64(0.3)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0025989424999999992), 'steps': [{'feature': 'network_load', 'value': np.float64(0.9), 'effect': 'multiply prob by 0.460 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.95), 'effect': 'multiply prob by 1.925 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.59), 'effect': 'multiply prob by 0.587 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.3), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.9,0.95,0.69,0.0,0.00457803495421965,"{'timestamp': 1760866780.2612157, 'inputs': {'network_load': np.float64(0.9), 'relay_reputation': np.float64(0.95), 'budget_utilization': np.float64(0.69), 'recent_win_rate': 1e-09}, 'base_prob': 0.01, 'final_prob': np.float64(0.00457803495421965), 'steps': [{'feature': 'network_load', 'value': np.float64(0.9), 'effect': 'multiply prob by 0.460 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.95), 'effect': 'multiply prob by 1.925 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.69), 'effect': 'multiply prob by 0.517 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': 1e-09, 'effect': 'multiply prob by 1.000 (higher recent wins -> lower prob)'}]}"
0.9,0.95,0.69,0.05,0.0022890175,"{'timestamp': 1760866780.2612455, 'inputs': {'network_load': np.float64(0.9), 'relay_reputation': np.float64(0.95), 'budget_utilization': np.float64(0.69), 'recent_win_rate': np.float64(0.05)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0022890175), 'steps': [{'feature': 'network_load', 'value': np.float64(0.9), 'effect': 'multiply prob by 0.460 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.95), 'effect': 'multiply prob by 1.925 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.69), 'effect': 'multiply prob by 0.517 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.05), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.9,0.95,0.69,0.1,0.0022890175,"{'timestamp': 1760866780.2612727, 'inputs': {'network_load': np.float64(0.9), 'relay_reputation': np.float64(0.95), 'budget_utilization': np.float64(0.69), 'recent_win_rate': np.float64(0.1)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0022890175), 'steps': [{'feature': 'network_load', 'value': np.float64(0.9), 'effect': 'multiply prob by 0.460 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.95), 'effect': 'multiply prob by 1.925 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.69), 'effect': 'multiply prob by 0.517 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.1), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.9,0.95,0.69,0.15,0.0022890175,"{'timestamp': 1760866780.2613022, 'inputs': {'network_load': np.float64(0.9), 'relay_reputation': np.float64(0.95), 'budget_utilization': np.float64(0.69), 'recent_win_rate': np.float64(0.15)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0022890175), 'steps': [{'feature': 'network_load', 'value': np.float64(0.9), 'effect': 'multiply prob by 0.460 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.95), 'effect': 'multiply prob by 1.925 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.69), 'effect': 'multiply prob by 0.517 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.15), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.9,0.95,0.69,0.2,0.0022890175,"{'timestamp': 1760866780.2613337, 'inputs': {'network_load': np.float64(0.9), 'relay_reputation': np.float64(0.95), 'budget_utilization': np.float64(0.69), 'recent_win_rate': np.float64(0.2)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0022890175), 'steps': [{'feature': 'network_load', 'value': np.float64(0.9), 'effect': 'multiply prob by 0.460 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.95), 'effect': 'multiply prob by 1.925 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.69), 'effect': 'multiply prob by 0.517 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.2), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.9,0.95,0.69,0.25,0.0022890175,"{'timestamp': 1760866780.2613587, 'inputs': {'network_load': np.float64(0.9), 'relay_reputation': np.float64(0.95), 'budget_utilization': np.float64(0.69), 'recent_win_rate': np.float64(0.25)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0022890175), 'steps': [{'feature': 'network_load', 'value': np.float64(0.9), 'effect': 'multiply prob by 0.460 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.95), 'effect': 'multiply prob by 1.925 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.69), 'effect': 'multiply prob by 0.517 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.25), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.9,0.95,0.69,0.3,0.0022890175,"{'timestamp': 1760866780.2613878, 'inputs': {'network_load': np.float64(0.9), 'relay_reputation': np.float64(0.95), 'budget_utilization': np.float64(0.69), 'recent_win_rate': np.float64(0.3)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0022890175), 'steps': [{'feature': 'network_load', 'value': np.float64(0.9), 'effect': 'multiply prob by 0.460 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.95), 'effect': 'multiply prob by 1.925 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.69), 'effect': 'multiply prob by 0.517 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.3), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.9,0.95,0.8,0.0,0.0038961999610379995,"{'timestamp': 1760866780.261417, 'inputs': {'network_load': np.float64(0.9), 'relay_reputation': np.float64(0.95), 'budget_utilization': np.float64(0.8), 'recent_win_rate': 1e-09}, 'base_prob': 0.01, 'final_prob': np.float64(0.0038961999610379995), 'steps': [{'feature': 'network_load', 'value': np.float64(0.9), 'effect': 'multiply prob by 0.460 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.95), 'effect': 'multiply prob by 1.925 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.8), 'effect': 'multiply prob by 0.440 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': 1e-09, 'effect': 'multiply prob by 1.000 (higher recent wins -> lower prob)'}]}"
0.9,0.95,0.8,0.05,0.0019481,"{'timestamp': 1760866780.2614424, 'inputs': {'network_load': np.float64(0.9), 'relay_reputation': np.float64(0.95), 'budget_utilization': np.float64(0.8), 'recent_win_rate': np.float64(0.05)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0019481), 'steps': [{'feature': 'network_load', 'value': np.float64(0.9), 'effect': 'multiply prob by 0.460 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.95), 'effect': 'multiply prob by 1.925 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.8), 'effect': 'multiply prob by 0.440 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.05), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.9,0.95,0.8,0.1,0.0019481,"{'timestamp': 1760866780.2614675, 'inputs': {'network_load': np.float64(0.9), 'relay_reputation': np.float64(0.95), 'budget_utilization': np.float64(0.8), 'recent_win_rate': np.float64(0.1)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0019481), 'steps': [{'feature': 'network_load', 'value': np.float64(0.9), 'effect': 'multiply prob by 0.460 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.95), 'effect': 'multiply prob by 1.925 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.8), 'effect': 'multiply prob by 0.440 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.1), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.9,0.95,0.8,0.15,0.0019481,"{'timestamp': 1760866780.2614927, 'inputs': {'network_load': np.float64(0.9), 'relay_reputation': np.float64(0.95), 'budget_utilization': np.float64(0.8), 'recent_win_rate': np.float64(0.15)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0019481), 'steps': [{'feature': 'network_load', 'value': np.float64(0.9), 'effect': 'multiply prob by 0.460 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.95), 'effect': 'multiply prob by 1.925 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.8), 'effect': 'multiply prob by 0.440 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.15), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.9,0.95,0.8,0.2,0.0019481,"{'timestamp': 1760866780.2615178, 'inputs': {'network_load': np.float64(0.9), 'relay_reputation': np.float64(0.95), 'budget_utilization': np.float64(0.8), 'recent_win_rate': np.float64(0.2)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0019481), 'steps': [{'feature': 'network_load', 'value': np.float64(0.9), 'effect': 'multiply prob by 0.460 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.95), 'effect': 'multiply prob by 1.925 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.8), 'effect': 'multiply prob by 0.440 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.2), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.9,0.95,0.8,0.25,0.0019481,"{'timestamp': 1760866780.2615974, 'inputs': {'network_load': np.float64(0.9), 'relay_reputation': np.float64(0.95), 'budget_utilization': np.float64(0.8), 'recent_win_rate': np.float64(0.25)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0019481), 'steps': [{'feature': 'network_load', 'value': np.float64(0.9), 'effect': 'multiply prob by 0.460 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.95), 'effect': 'multiply prob by 1.925 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.8), 'effect': 'multiply prob by 0.440 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.25), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
0.9,0.95,0.8,0.3,0.0019481,"{'timestamp': 1760866780.2616286, 'inputs': {'network_load': np.float64(0.9), 'relay_reputation': np.float64(0.95), 'budget_utilization': np.float64(0.8), 'recent_win_rate': np.float64(0.3)}, 'base_prob': 0.01, 'final_prob': np.float64(0.0019481), 'steps': [{'feature': 'network_load', 'value': np.float64(0.9), 'effect': 'multiply prob by 0.460 (higher load -> lower prob)'}, {'feature': 'relay_reputation', 'value': np.float64(0.95), 'effect': 'multiply prob by 1.925 (higher rep -> higher prob)'}, {'feature': 'budget_utilization', 'value': np.float64(0.8), 'effect': 'multiply prob by 0.440 (higher utilization -> lower prob)'}, {'feature': 'recent_win_rate', 'value': np.float64(0.3), 'effect': 'multiply prob by 0.500 (higher recent wins -> lower prob)'}]}"
